# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import mkdocs.structure.nav as module_0
import urllib.parse as module_1
import mkdocs.structure.files as module_2
import mkdocs.utils as module_3
import click.exceptions as module_4
import mkdocs.exceptions as module_5
import mkdocs.structure.pages as module_6
import builtins as module_7


def test_case_0():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None


def test_case_1():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"


def test_case_2():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'


def test_case_3():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_1, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_1 = link_0.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_2, none_type_1)
    str_3 = var_1.__str__()
    assert str_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"


def test_case_4():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    bytes_0 = b"\x802c35Z\xf8"
    link_1 = module_0.Link(link_0, bytes_0)


def test_case_5():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    var_1 = var_0.__repr__()
    assert var_1 == "'Section(title=\" Use \\'\")'"


def test_case_6():
    dict_0 = {}
    str_0 = 'y\x0c[fN"W:2&:SWyz~W'
    link_0 = module_0.Link(dict_0, str_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == {}
    assert link_0.url == 'y\x0c[fN"W:2&:SWyz~W'


def test_case_7():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    dict_0 = {}
    str_1 = 'y\x0c[fN"W:2&:SWyz~W'
    link_1 = module_0.Link(dict_0, str_1)
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_2 = module_0.Link(str_2, none_type_1)
    bytes_0 = b"\x802c35Z\xf8"
    link_3 = module_0.Link(link_2, bytes_0)
    str_3 = " Use '"
    section_0 = module_0.Section(str_3, str_3)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    iterator_0 = var_0.__iter__()


def test_case_8():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    bytes_0 = b"\x802c35Z\xf8"
    link_1 = module_0.Link(link_0, bytes_0)
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_2 = module_0.Link(str_1, none_type_1)
    dict_0 = {}
    str_2 = 'y\x0c[fN"W:2&:SWyz~W'
    link_3 = module_0.Link(dict_0, str_2)
    str_3 = " Use '"
    section_0 = module_0.Section(str_3, str_3)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    var_1 = var_0.__repr__()
    assert var_1 == "'Section(title=\" Use \\'\")'"
    str_4 = " Use '"
    section_1 = module_0.Section(str_4, str_4)
    var_2 = section_1.__repr__()
    assert var_2 == 'Section(title=" Use \'")'
    var_3 = link_3.__repr__()
    assert var_3 == "Link(title={}, url='y\\x0c[fN\"W:2&:SWyz~W')"


def test_case_9():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_1, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_2, none_type_1)
    bytes_0 = b"\x802c35Z\xf8"
    link_2 = module_0.Link(link_1, bytes_0)
    str_3 = " Use '"
    section_1 = module_0.Section(str_3, str_3)
    var_1 = section_1.__repr__()
    assert var_1 == 'Section(title=" Use \'")'
    var_2 = var_1.__repr__()
    assert var_2 == "'Section(title=\" Use \\'\")'"
    str_4 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_3 = module_0.Link(str_4, none_type_2)
    var_3 = link_3.__repr__()
    assert var_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_4 = var_0.__repr__()
    assert var_4 == "'Section(title=\" Use \\'\")'"


def test_case_10():
    dict_0 = {}
    str_0 = 'y\x0c[fN"W:2&:SWyz~W'
    link_0 = module_0.Link(dict_0, str_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == {}
    assert link_0.url == 'y\x0c[fN"W:2&:SWyz~W'
    str_1 = " Use '"
    section_0 = module_0.Section(str_1, str_1)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    var_1 = var_0.__repr__()
    assert var_1 == "'Section(title=\" Use \\'\")'"
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_1 = module_0.Link(str_2, none_type_0)
    var_2 = link_1.__repr__()
    assert var_2 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_3 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_2 = module_0.Link(str_3, none_type_1)
    bytes_0 = b"\x802c35Z\xf8"
    link_3 = module_0.Link(link_2, bytes_0)
    str_4 = " Use '"
    section_1 = module_0.Section(str_4, str_4)
    var_3 = section_1.__repr__()
    assert var_3 == 'Section(title=" Use \'")'
    section_2 = module_0.Section(str_0, var_0)
    assert section_2.children == 'Section(title=" Use \'")'


def test_case_11():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    var_1 = var_0.__repr__()
    assert var_1 == "'Section(title=\" Use \\'\")'"
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_1, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    bytes_0 = b"\x802c35Z\xf8"
    link_1 = module_0.Link(link_0, bytes_0)
    iterator_0 = var_1.__iter__()


def test_case_12():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""


def test_case_13():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    var_1 = var_0.__repr__()
    assert var_1 == "'Section(title=\" Use \\'\")'"
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_1, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_2 = link_0.__repr__()
    assert var_2 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_3 = var_2.__repr__()
    assert var_3 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    dict_0 = {}
    str_2 = 'y\x0c[fN"W:2&:SWyz~W'
    link_1 = module_0.Link(dict_0, str_2)
    str_3 = " Use '"
    section_1 = module_0.Section(str_3, str_3)
    var_4 = section_1.__repr__()
    assert var_4 == 'Section(title=" Use \'")'
    str_4 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_2 = module_0.Link(str_4, none_type_1)
    bytes_0 = b"\x802c35Z\xf8"
    link_3 = module_0.Link(link_2, bytes_0)
    str_5 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_4 = module_0.Link(str_5, none_type_2)
    var_5 = link_4.__repr__()
    assert var_5 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_6 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_5 = module_0.Link(str_6, none_type_3)
    var_6 = var_5.__repr__()
    assert var_6 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""


def test_case_14():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    var_1 = var_0.__repr__()
    assert var_1 == "'Section(title=\" Use \\'\")'"
    dict_0 = {}
    str_1 = 'y\x0c[fN"W:2&:SWyz~W'
    link_0 = module_0.Link(dict_0, str_1)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == {}
    assert link_0.url == 'y\x0c[fN"W:2&:SWyz~W'
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_1 = module_0.Link(str_2, none_type_0)
    bytes_0 = b"\x802c35Z\xf8"
    link_2 = module_0.Link(link_1, bytes_0)
    str_3 = " Use '"
    section_1 = module_0.Section(str_3, str_3)
    var_2 = section_1.__repr__()
    assert var_2 == 'Section(title=" Use \'")'
    str_4 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_3 = module_0.Link(str_4, none_type_1)
    var_3 = link_3.__repr__()
    assert var_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_5 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_4 = module_0.Link(str_5, none_type_2)
    iterator_0 = var_3.__iter__()


def test_case_15():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_1 = " Use '"
    section_0 = module_0.Section(str_1, str_1)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_2 = section_0.__repr__()
    assert var_2 == 'Section(title=" Use \'")'
    var_3 = var_2.__repr__()
    assert var_3 == "'Section(title=\" Use \\'\")'"
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_2, none_type_1)
    var_4 = link_1.__repr__()
    assert var_4 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_3 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_2 = module_0.Link(str_3, none_type_2)
    dict_0 = {}
    str_4 = 'y\x0c[fN"W:2&:SWyz~W'
    link_3 = module_0.Link(dict_0, str_4)
    str_5 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_4 = module_0.Link(str_5, none_type_3)
    bytes_0 = b"\x802c35Z\xf8"
    link_5 = module_0.Link(link_4, bytes_0)
    str_6 = " Use '"
    section_1 = module_0.Section(str_6, str_6)
    var_5 = section_1.__repr__()
    assert var_5 == 'Section(title=" Use \'")'
    iterator_0 = var_0.__iter__()


def test_case_16():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_1 = " Use '"
    section_0 = module_0.Section(str_1, str_1)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_2 = section_0.__repr__()
    assert var_2 == 'Section(title=" Use \'")'
    var_3 = var_2.__repr__()
    assert var_3 == "'Section(title=\" Use \\'\")'"
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_2, none_type_1)
    str_3 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_2 = module_0.Link(str_3, none_type_2)
    bytes_0 = b"\x802c35Z\xf8"
    link_3 = module_0.Link(link_2, bytes_0)
    str_4 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_4 = module_0.Link(str_4, none_type_3)
    var_4 = link_4.__repr__()
    assert var_4 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_5 = " Use '"
    section_1 = module_0.Section(str_5, str_5)
    var_5 = section_1.__repr__()
    assert var_5 == 'Section(title=" Use \'")'
    dict_0 = {}
    str_6 = 'y\x0c[fN"W:2&:SWyz~W'
    link_5 = module_0.Link(dict_0, str_6)
    int_0 = var_5.__len__()
    assert int_0 == 23


def test_case_17():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_1, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_1 = link_0.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_2 = var_1.__repr__()
    assert var_2 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_2, none_type_1)
    var_3 = var_1.__repr__()
    assert var_3 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""


def test_case_18():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    var_1 = var_0.__repr__()
    assert var_1 == "'Section(title=\" Use \\'\")'"
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_1, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    bytes_0 = b"\x802c35Z\xf8"
    link_1 = module_0.Link(link_0, bytes_0)
    str_2 = var_0.__str__()
    assert str_2 == 'Section(title=" Use \'")'


def test_case_19():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    bytes_0 = b"\x802c35Z\xf8"
    link_1 = module_0.Link(link_0, bytes_0)
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_2 = module_0.Link(str_1, none_type_1)
    str_2 = " Use '"
    section_0 = module_0.Section(str_2, str_2)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    var_1 = var_0.__repr__()
    assert var_1 == "'Section(title=\" Use \\'\")'"
    str_3 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_3 = module_0.Link(str_3, none_type_2)
    var_2 = link_3.__repr__()
    assert var_2 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_4 = " Use '"
    section_1 = module_0.Section(str_4, str_4)
    var_3 = section_1.__repr__()
    assert var_3 == 'Section(title=" Use \'")'
    iterator_0 = var_0.__iter__()


def test_case_20():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    dict_0 = {}
    str_1 = 'y\x0c[fN"W:2&:SWyz~W'
    link_1 = module_0.Link(dict_0, str_1)
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_2 = module_0.Link(str_2, none_type_1)
    bytes_0 = b"\x802c35Z\xf8"
    link_3 = module_0.Link(link_2, bytes_0)
    str_3 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_4 = module_0.Link(str_3, none_type_2)
    var_0 = link_4.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_4 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_5 = module_0.Link(str_4, none_type_3)
    var_2 = link_5.__repr__()
    assert var_2 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_5 = " Use '"
    section_0 = module_0.Section(str_5, str_5)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_3 = section_0.__repr__()
    assert var_3 == 'Section(title=" Use \'")'
    str_6 = " Use '"
    section_1 = module_0.Section(str_6, str_6)
    var_4 = section_1.__repr__()
    assert var_4 == 'Section(title=" Use \'")'
    var_5 = var_4.__repr__()
    assert var_5 == "'Section(title=\" Use \\'\")'"
    iterator_0 = var_1.__iter__()


def test_case_21():
    dict_0 = {}
    str_0 = 'y\x0c[fN"W:2&:SWyz~W'
    link_0 = module_0.Link(dict_0, str_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == {}
    assert link_0.url == 'y\x0c[fN"W:2&:SWyz~W'
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_1 = module_0.Link(str_1, none_type_0)
    bytes_0 = b"\x802c35Z\xf8"
    link_2 = module_0.Link(link_1, bytes_0)
    str_2 = " Use '"
    section_0 = module_0.Section(str_2, str_2)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    var_1 = var_0.__repr__()
    assert var_1 == "'Section(title=\" Use \\'\")'"
    link_3 = module_0.Link(var_1, none_type_0)
    assert link_3.title == "'Section(title=\" Use \\'\")'"


def test_case_22():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    bytes_0 = b"\x802c35Z\xf8"
    link_1 = module_0.Link(link_0, bytes_0)
    dict_0 = {}
    str_1 = 'y\x0c[fN"W:2&:SWyz~W'
    link_2 = module_0.Link(dict_0, str_1)
    var_0 = link_1.__repr__()
    assert (
        var_0
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )


def test_case_23():
    dict_0 = {}
    str_0 = 'y\x0c[fN"W:2&:SWyz~W'
    link_0 = module_0.Link(dict_0, str_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == {}
    assert link_0.url == 'y\x0c[fN"W:2&:SWyz~W'
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_1 = module_0.Link(str_1, none_type_0)
    bytes_0 = b"\x802c35Z\xf8"
    link_2 = module_0.Link(link_1, bytes_0)
    dict_1 = {}
    str_2 = 'y\x0c[fN"W:2&:SWyz~W'
    link_3 = module_0.Link(dict_1, str_2)
    var_0 = link_2.__repr__()
    assert (
        var_0
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )
    str_3 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_4 = module_0.Link(str_3, none_type_1)
    var_1 = link_4.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_4 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_5 = module_0.Link(str_4, none_type_2)
    bytes_1 = b"\x802c35Z\xf8"
    link_6 = module_0.Link(link_5, bytes_1)
    int_0 = var_1.__len__()
    assert int_0 == 42


def test_case_24():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    bytes_0 = b"\x802c35Z\xf8"
    link_1 = module_0.Link(link_0, bytes_0)
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"


def test_case_25():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    bytes_0 = b"\x802c35Z\xf8"
    link_1 = module_0.Link(link_0, bytes_0)
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_1 = " Use '"
    section_0 = module_0.Section(str_1, str_1)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_1 = section_0.__repr__()
    assert var_1 == 'Section(title=" Use \'")'
    dict_0 = {}
    str_2 = 'y\x0c[fN"W:2&:SWyz~W'
    link_2 = module_0.Link(dict_0, str_2)
    str_3 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_3 = module_0.Link(str_3, none_type_1)
    bytes_1 = b"\x802c35Z\xf8"
    link_4 = module_0.Link(link_3, bytes_1)
    dict_1 = {}
    str_4 = 'y\x0c[fN"W:2&:SWyz~W'
    link_5 = module_0.Link(dict_1, str_4)
    var_2 = link_4.__repr__()
    assert (
        var_2
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )
    str_5 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_6 = module_0.Link(str_5, none_type_2)
    bytes_2 = b"\x802c35Z\xf8"
    link_7 = module_0.Link(link_6, bytes_2)
    str_6 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_8 = module_0.Link(str_6, none_type_3)
    var_3 = link_8.__repr__()
    assert var_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_4 = var_3.__repr__()
    assert var_4 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_7 = "0_~6:m!(f5FgU,:rvz"
    none_type_4 = None
    link_9 = module_0.Link(str_7, none_type_4)
    str_8 = "%*d\r}Ga\x0b18"
    list_0 = [link_3, link_9]
    section_1 = module_0.Section(str_8, list_0)


def test_case_26():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    var_1 = var_0.__repr__()
    assert var_1 == "'Section(title=\" Use \\'\")'"
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_1, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    bytes_0 = b"\x802c35Z\xf8"
    link_1 = module_0.Link(link_0, bytes_0)
    dict_0 = {}
    str_2 = 'y\x0c[fN"W:2&:SWyz~W'
    link_2 = module_0.Link(dict_0, str_2)
    var_2 = link_1.__repr__()
    assert (
        var_2
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )
    str_3 = " Use '"
    section_1 = module_0.Section(str_3, str_3)
    var_3 = section_1.__repr__()
    assert var_3 == 'Section(title=" Use \'")'
    str_4 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_3 = module_0.Link(str_4, none_type_1)
    dict_1 = {}
    str_5 = 'y\x0c[fN"W:2&:SWyz~W'
    link_4 = module_0.Link(dict_1, str_5)
    str_6 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_5 = module_0.Link(str_6, none_type_2)
    var_4 = link_5.__repr__()
    assert var_4 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_5 = var_4.__repr__()
    assert var_5 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_7 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_6 = module_0.Link(str_7, none_type_3)
    bytes_1 = b"\x802c35Z\xf8"
    link_7 = module_0.Link(link_6, bytes_1)
    var_6 = link_6.__repr__()
    assert var_6 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_8 = "0_~6:m!(f5FgU,:rvz"
    none_type_4 = None
    link_8 = module_0.Link(str_8, none_type_4)
    var_7 = link_8.__repr__()
    assert var_7 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_9 = "0_~6:m!(f5FgU,:rvz"
    none_type_5 = None
    link_9 = module_0.Link(str_9, none_type_5)
    bytes_2 = b"\x802c35Z\xf8"
    link_10 = module_0.Link(link_9, bytes_2)
    link_11 = module_0.Link(link_0, none_type_3)


def test_case_27():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    bytes_0 = b"\x802c35Z\xf8"
    link_1 = module_0.Link(link_0, bytes_0)
    dict_0 = {}
    str_1 = 'y\x0c[fN"W:2&:SWyz~W'
    link_2 = module_0.Link(dict_0, str_1)
    var_0 = link_1.__repr__()
    assert (
        var_0
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_3 = module_0.Link(str_2, none_type_1)
    var_1 = link_3.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_3 = " Use '"
    section_0 = module_0.Section(str_3, str_3)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_2 = section_0.__repr__()
    assert var_2 == 'Section(title=" Use \'")'
    var_3 = var_2.__repr__()
    assert var_3 == "'Section(title=\" Use \\'\")'"
    dict_1 = {}
    str_4 = 'y\x0c[fN"W:2&:SWyz~W'
    link_4 = module_0.Link(dict_1, str_4)
    str_5 = var_0.__str__()
    assert (
        str_5
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )


def test_case_28():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    str_1 = " Use '"
    section_1 = module_0.Section(str_1, str_1)
    var_1 = section_1.__repr__()
    assert var_1 == 'Section(title=" Use \'")'
    var_2 = var_1.__repr__()
    assert var_2 == "'Section(title=\" Use \\'\")'"
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_2, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_3 = link_0.__repr__()
    assert var_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_3 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_3, none_type_1)
    bytes_0 = b"\x802c35Z\xf8"
    link_2 = module_0.Link(link_1, bytes_0)
    dict_0 = {}
    str_4 = 'y\x0c[fN"W:2&:SWyz~W'
    link_3 = module_0.Link(dict_0, str_4)
    var_4 = link_2.__repr__()
    assert (
        var_4
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )
    str_5 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_4 = module_0.Link(str_5, none_type_2)
    str_6 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_5 = module_0.Link(str_6, none_type_3)
    var_5 = link_5.__repr__()
    assert var_5 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_6 = var_5.__repr__()
    assert var_6 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_7 = "0_~6:m!(f5FgU,:rvz"
    none_type_4 = None
    link_6 = module_0.Link(str_7, none_type_4)
    bytes_1 = b"\x802c35Z\xf8"
    link_7 = module_0.Link(link_6, bytes_1)
    dict_1 = {}
    str_8 = 'y\x0c[fN"W:2&:SWyz~W'
    link_8 = module_0.Link(dict_1, str_8)
    var_7 = link_6.__repr__()
    assert var_7 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"


def test_case_29():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    bytes_0 = b"\x802c35Z\xf8"
    link_1 = module_0.Link(link_0, bytes_0)
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_2 = module_0.Link(str_1, none_type_1)
    bytes_1 = b"\x802c35Z\xf8"
    link_3 = module_0.Link(link_2, bytes_1)
    dict_0 = {}
    str_2 = 'y\x0c[fN"W:2&:SWyz~W'
    link_4 = module_0.Link(dict_0, str_2)
    var_0 = link_3.__repr__()
    assert (
        var_0
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )
    str_3 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_5 = module_0.Link(str_3, none_type_2)
    var_1 = link_5.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_4 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_6 = module_0.Link(str_4, none_type_3)
    bytes_2 = b"\x802c35Z\xf8"
    link_7 = module_0.Link(link_6, bytes_2)
    var_2 = link_6.__repr__()
    assert var_2 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_5 = " Use '"
    section_0 = module_0.Section(str_5, str_5)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_3 = section_0.__repr__()
    assert var_3 == 'Section(title=" Use \'")'
    var_4 = var_3.__repr__()
    assert var_4 == "'Section(title=\" Use \\'\")'"
    str_6 = var_1.__str__()
    assert str_6 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"


def test_case_30():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_1, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_1 = link_0.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_2, none_type_1)
    var_2 = link_1.__repr__()
    assert var_2 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_3 = var_2.__repr__()
    assert var_3 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_3 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_2 = module_0.Link(str_3, none_type_2)
    bytes_0 = b"\x802c35Z\xf8"
    link_3 = module_0.Link(link_2, bytes_0)
    var_4 = link_2.__repr__()
    assert var_4 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_5 = var_0.__repr__()
    assert var_5 == "'Section(title=\" Use \\'\")'"


def test_case_31():
    dict_0 = {}
    str_0 = 'y\x0c[fN"W:2&:SWyz~W'
    link_0 = module_0.Link(dict_0, str_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == {}
    assert link_0.url == 'y\x0c[fN"W:2&:SWyz~W'
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_1 = module_0.Link(str_1, none_type_0)
    bytes_0 = b"\x802c35Z\xf8"
    link_2 = module_0.Link(link_1, bytes_0)
    var_0 = link_1.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    list_0 = [link_0, bytes_0, dict_0, link_0]
    section_0 = module_0.Section(list_0, var_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert (
        f"{type(section_0.title).__module__}.{type(section_0.title).__qualname__}"
        == "builtins.list"
    )
    assert len(section_0.title) == 4
    assert section_0.children == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )


def test_case_32():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_1 = " Use '"
    section_0 = module_0.Section(str_1, str_1)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_2 = section_0.__repr__()
    assert var_2 == 'Section(title=" Use \'")'
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_2, none_type_1)
    var_3 = link_1.__repr__()
    assert var_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_3 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_2 = module_0.Link(str_3, none_type_2)
    bytes_0 = b"\x802c35Z\xf8"
    link_3 = module_0.Link(link_2, bytes_0)
    var_4 = link_2.__repr__()
    assert var_4 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_4 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_4 = module_0.Link(str_4, none_type_3)
    bytes_1 = b"\x802c35Z\xf8"
    link_5 = module_0.Link(link_4, bytes_1)
    dict_0 = {}
    str_5 = 'y\x0c[fN"W:2&:SWyz~W'
    link_6 = module_0.Link(dict_0, str_5)
    var_5 = link_5.__repr__()
    assert (
        var_5
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )
    str_6 = " Use '"
    section_1 = module_0.Section(str_6, str_6)
    var_6 = section_1.__repr__()
    assert var_6 == 'Section(title=" Use \'")'
    var_7 = var_6.__repr__()
    assert var_7 == "'Section(title=\" Use \\'\")'"
    str_7 = "0_~6:m!(f5FgU,:rvz"
    none_type_4 = None
    link_7 = module_0.Link(str_7, none_type_4)
    bytes_2 = b"\x802c35Z\xf8"
    link_8 = module_0.Link(link_7, bytes_2)
    dict_1 = {}
    str_8 = 'y\x0c[fN"W:2&:SWyz~W'
    link_9 = module_0.Link(dict_1, str_8)
    str_9 = "0_~6:m!(f5FgU,:rvz"
    none_type_5 = None
    link_10 = module_0.Link(str_9, none_type_5)
    section_2 = module_0.Section(str_9, var_3)
    assert section_2.children == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"


def test_case_33():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    str_1 = " Use '"
    section_0 = module_0.Section(str_1, str_1)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    var_1 = var_0.__repr__()
    assert var_1 == "'Section(title=\" Use \\'\")'"
    str_2 = " Use '"
    section_1 = module_0.Section(str_2, str_2)
    var_2 = section_1.__repr__()
    assert var_2 == 'Section(title=" Use \'")'
    str_3 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_3, none_type_1)
    bytes_0 = b"\x802c35Z\xf8"
    link_2 = module_0.Link(link_1, bytes_0)
    dict_0 = {}
    str_4 = 'y\x0c[fN"W:2&:SWyz~W'
    link_3 = module_0.Link(dict_0, str_4)
    var_3 = link_2.__repr__()
    assert (
        var_3
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )
    int_0 = var_1.__len__()
    assert int_0 == 26


def test_case_34():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    int_0 = var_0.__len__()
    assert int_0 == 23


def test_case_35():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    var_1 = var_0.__repr__()
    assert var_1 == "'Section(title=\" Use \\'\")'"
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_1, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_2 = link_0.__repr__()
    assert var_2 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_2, none_type_1)
    var_3 = link_1.__repr__()
    assert var_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_4 = var_3.__repr__()
    assert var_4 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_3 = " Use '"
    section_1 = module_0.Section(str_3, str_3)
    var_5 = section_1.__repr__()
    assert var_5 == 'Section(title=" Use \'")'
    str_4 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_2 = module_0.Link(str_4, none_type_2)
    bytes_0 = b"\x802c35Z\xf8"
    link_3 = module_0.Link(link_2, bytes_0)
    dict_0 = {}
    str_5 = 'y\x0c[fN"W:2&:SWyz~W'
    link_4 = module_0.Link(dict_0, str_5)
    var_6 = link_3.__repr__()
    assert (
        var_6
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )
    str_6 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_5 = module_0.Link(str_6, none_type_3)
    bytes_1 = b"\x802c35Z\xf8"
    link_6 = module_0.Link(link_5, bytes_1)
    var_7 = link_5.__repr__()
    assert var_7 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_7 = "0_~6:m!(f5FgU,:rvz"
    none_type_4 = None
    link_7 = module_0.Link(str_7, none_type_4)
    bytes_2 = b"\x802c35Z\xf8"
    link_8 = module_0.Link(link_7, bytes_2)
    dict_1 = {}
    str_8 = 'y\x0c[fN"W:2&:SWyz~W'
    link_9 = module_0.Link(dict_1, str_8)
    str_9 = " Use '"
    section_2 = module_0.Section(str_9, str_9)
    var_8 = section_2.__repr__()
    assert var_8 == 'Section(title=" Use \'")'
    int_0 = var_8.__len__()
    assert int_0 == 23
    str_10 = var_1.__str__()
    assert str_10 == "'Section(title=\" Use \\'\")'"


def test_case_36():
    str_0 = "page_context"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )


def test_case_37():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    bytes_0 = b"\x802c35Z\xf8"
    link_1 = module_0.Link(link_0, bytes_0)
    dict_0 = {}
    str_1 = 'y\x0c[fN"W:2&:SWyz~W'
    link_2 = module_0.Link(dict_0, str_1)
    var_0 = link_1.__repr__()
    assert (
        var_0
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_3 = module_0.Link(str_2, none_type_1)
    var_1 = link_3.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_3 = var_0.__str__()
    assert (
        str_3
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )


def test_case_38():
    dict_0 = {}
    str_0 = 'y\x0c[fN"W:2&:SWyz~W'
    link_0 = module_0.Link(dict_0, str_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == {}
    assert link_0.url == 'y\x0c[fN"W:2&:SWyz~W'
    str_1 = " Use '"
    section_0 = module_0.Section(str_1, str_1)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    str_2 = "page_context"
    section_1 = module_0.Section(str_2, str_2)
    str_3 = " Use '"
    section_2 = module_0.Section(str_3, str_3)
    var_1 = section_2.__repr__()
    assert var_1 == 'Section(title=" Use \'")'
    int_0 = var_1.__len__()
    assert int_0 == 23
    str_4 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_1 = module_0.Link(str_4, none_type_0)
    bytes_0 = b"\x802c35Z\xf8"
    link_2 = module_0.Link(link_1, bytes_0)
    str_5 = " Use '"
    section_3 = module_0.Section(str_5, str_5)
    var_2 = section_3.__repr__()
    assert var_2 == 'Section(title=" Use \'")'
    var_3 = var_2.__repr__()
    assert var_3 == "'Section(title=\" Use \\'\")'"
    str_6 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_3 = module_0.Link(str_6, none_type_1)
    var_4 = link_3.__repr__()
    assert var_4 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_5 = var_1.__repr__()
    assert var_5 == "'Section(title=\" Use \\'\")'"


def test_case_39():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_1 = var_0.__str__()
    assert str_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"


def test_case_40():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    bytes_0 = b"\x802c35Z\xf8"
    link_1 = module_0.Link(link_0, bytes_0)
    dict_0 = {}
    str_1 = 'y\x0c[fN"W:2&:SWyz~W'
    link_2 = module_0.Link(dict_0, str_1)
    var_0 = link_1.__repr__()
    assert (
        var_0
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_3 = module_0.Link(str_2, none_type_1)
    var_1 = link_3.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_2 = var_1.__repr__()
    assert var_2 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_3 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_4 = module_0.Link(str_3, none_type_2)
    var_3 = link_4.__repr__()
    assert var_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_4 = var_3.__repr__()
    assert var_4 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_4 = var_3.__str__()
    assert str_4 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_5 = link_4.__repr__()
    assert var_5 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"


def test_case_41():
    str_0 = "page_context"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = "' from the site because it conflicts with '"
    list_0 = []
    section_1 = module_0.Section(str_1, list_0)


def test_case_42():
    str_0 = "page_context"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = "' from the site because it conflicts with '"
    list_0 = []
    section_1 = module_0.Section(str_1, list_0)
    str_2 = "page_context"
    section_2 = module_0.Section(str_2, str_2)
    str_3 = " Use '"
    section_3 = module_0.Section(str_3, str_3)
    var_0 = section_3.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    dict_0 = {}
    str_4 = 'y\x0c[fN"W:2&:SWyz~W'
    link_0 = module_0.Link(dict_0, str_4)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == {}
    assert link_0.url == 'y\x0c[fN"W:2&:SWyz~W'
    var_1 = var_0.__repr__()
    assert var_1 == "'Section(title=\" Use \\'\")'"
    list_1 = [var_0, section_0, link_0, var_1]
    section_4 = module_0.Section(section_3, list_1)


def test_case_43():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    var_1 = var_0.__repr__()
    assert var_1 == "'Section(title=\" Use \\'\")'"
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_1, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    bytes_0 = b"\x802c35Z\xf8"
    link_1 = module_0.Link(link_0, bytes_0)
    dict_0 = {}
    str_2 = 'y\x0c[fN"W:2&:SWyz~W'
    link_2 = module_0.Link(dict_0, str_2)
    var_2 = link_1.__repr__()
    assert (
        var_2
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )
    str_3 = " Use '"
    section_1 = module_0.Section(str_3, str_3)
    var_3 = section_1.__repr__()
    assert var_3 == 'Section(title=" Use \'")'
    str_4 = " Use '"
    section_2 = module_0.Section(str_4, str_4)
    var_4 = section_2.__repr__()
    assert var_4 == 'Section(title=" Use \'")'
    int_0 = var_4.__len__()
    assert int_0 == 23
    str_5 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_3 = module_0.Link(str_5, none_type_1)
    bytes_1 = b"\x802c35Z\xf8"
    link_4 = module_0.Link(link_3, bytes_1)
    var_5 = link_3.__repr__()
    assert var_5 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_6 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_5 = module_0.Link(str_6, none_type_2)
    var_6 = link_5.__repr__()
    assert var_6 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_7 = var_6.__str__()
    assert str_7 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"


def test_case_44():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_1, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    bytes_0 = b"\x802c35Z\xf8"
    link_1 = module_0.Link(link_0, bytes_0)
    dict_0 = {}
    str_2 = 'y\x0c[fN"W:2&:SWyz~W'
    link_2 = module_0.Link(dict_0, str_2)
    var_1 = link_1.__repr__()
    assert (
        var_1
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )
    str_3 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_3 = module_0.Link(str_3, none_type_1)
    var_2 = link_3.__repr__()
    assert var_2 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_3 = var_2.__repr__()
    assert var_3 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_4 = var_2.__str__()
    assert str_4 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_5 = " Use '"
    section_1 = module_0.Section(str_5, str_5)
    var_4 = section_1.__repr__()
    assert var_4 == 'Section(title=" Use \'")'
    var_5 = var_4.__repr__()
    assert var_5 == "'Section(title=\" Use \\'\")'"
    str_6 = "page_context"
    section_2 = module_0.Section(str_6, str_6)
    str_7 = "' from the site because it conflicts with '"
    list_0 = []
    section_3 = module_0.Section(str_7, list_0)
    str_8 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_4 = module_0.Link(str_8, none_type_2)
    var_6 = link_4.__repr__()
    assert var_6 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_7 = var_6.__repr__()
    assert var_7 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    int_0 = var_4.__len__()
    assert int_0 == 23


def test_case_45():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_1, none_type_1)
    var_0 = link_1.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_2 = var_0.__str__()
    assert str_2 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_3 = " Use '"
    section_0 = module_0.Section(str_3, str_3)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_2 = section_0.__repr__()
    assert var_2 == 'Section(title=" Use \'")'
    str_4 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_2 = module_0.Link(str_4, none_type_2)
    bytes_0 = b"\x802c35Z\xf8"
    link_3 = module_0.Link(link_2, bytes_0)
    str_5 = " Use '"
    section_1 = module_0.Section(str_5, str_5)
    var_3 = section_1.__repr__()
    assert var_3 == 'Section(title=" Use \'")'
    var_4 = var_3.__repr__()
    assert var_4 == "'Section(title=\" Use \\'\")'"
    int_0 = var_1.__len__()
    assert int_0 == 44


def test_case_46():
    str_0 = "page_context"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = "' from the site because it conflicts with '"
    list_0 = []
    section_1 = module_0.Section(str_1, list_0)
    dict_0 = {}
    str_2 = 'y\x0c[fN"W:2&:SWyz~W'
    link_0 = module_0.Link(dict_0, str_2)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == {}
    assert link_0.url == 'y\x0c[fN"W:2&:SWyz~W'
    str_3 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_1 = module_0.Link(str_3, none_type_0)
    str_4 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_2 = module_0.Link(str_4, none_type_1)
    bytes_0 = b"\x802c35Z\xf8"
    link_3 = module_0.Link(link_2, bytes_0)
    var_0 = link_2.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_5 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_4 = module_0.Link(str_5, none_type_2)
    var_1 = link_4.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_2 = var_1.__repr__()
    assert var_2 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_6 = var_1.__str__()
    assert str_6 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_7 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_5 = module_0.Link(str_7, none_type_3)
    var_3 = link_5.__repr__()
    assert var_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_4 = var_3.__repr__()
    assert var_4 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    int_0 = var_3.__len__()
    assert int_0 == 42


def test_case_47():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    var_1 = var_0.__repr__()
    assert var_1 == "'Section(title=\" Use \\'\")'"
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_1, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    bytes_0 = b"\x802c35Z\xf8"
    link_1 = module_0.Link(link_0, bytes_0)
    str_2 = " Use '"
    section_1 = module_0.Section(str_2, str_2)
    var_2 = section_1.__repr__()
    assert var_2 == 'Section(title=" Use \'")'
    str_3 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_2 = module_0.Link(str_3, none_type_1)
    var_3 = link_2.__repr__()
    assert var_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_4 = var_3.__repr__()
    assert var_4 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_4 = var_3.__str__()
    assert str_4 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    section_2 = module_0.Section(link_2, none_type_1)


def test_case_48():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_1, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_1 = link_0.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_2 = var_1.__repr__()
    assert var_2 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_2 = var_1.__str__()
    assert str_2 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_3 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_3, none_type_1)
    bytes_0 = b"\x802c35Z\xf8"
    link_2 = module_0.Link(link_1, bytes_0)
    dict_0 = {}
    str_4 = 'y\x0c[fN"W:2&:SWyz~W'
    link_3 = module_0.Link(dict_0, str_4)
    var_3 = link_2.__repr__()
    assert (
        var_3
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )
    dict_1 = {}
    str_5 = 'y\x0c[fN"W:2&:SWyz~W'
    link_4 = module_0.Link(dict_1, str_5)
    str_6 = "page_context"
    section_1 = module_0.Section(str_6, str_6)
    str_7 = "' from the site because it conflicts with '"
    list_0 = []
    section_2 = module_0.Section(str_7, list_0)
    str_8 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_5 = module_0.Link(str_8, none_type_2)
    bytes_1 = b"\x802c35Z\xf8"
    link_6 = module_0.Link(link_5, bytes_1)
    str_9 = "page_context"
    section_3 = module_0.Section(str_9, str_9)
    str_10 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_7 = module_0.Link(str_10, none_type_3)
    var_4 = link_7.__repr__()
    assert var_4 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_11 = " Use '"
    section_4 = module_0.Section(str_11, str_11)
    var_5 = section_4.__repr__()
    assert var_5 == 'Section(title=" Use \'")'
    var_6 = var_5.__repr__()
    assert var_6 == "'Section(title=\" Use \\'\")'"
    str_12 = "0_~6:m!(f5FgU,:rvz"
    none_type_4 = None
    link_8 = module_0.Link(str_12, none_type_4)
    bytes_2 = b"\x802c35Z\xf8"
    link_9 = module_0.Link(link_8, bytes_2)
    var_7 = link_8.__repr__()
    assert var_7 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_8 = link_0.__repr__()
    assert var_8 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"


def test_case_49():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_1, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_1 = link_0.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_2, none_type_1)
    bytes_0 = b"\x802c35Z\xf8"
    link_2 = module_0.Link(link_1, bytes_0)
    dict_0 = {}
    str_3 = 'y\x0c[fN"W:2&:SWyz~W'
    link_3 = module_0.Link(dict_0, str_3)
    var_2 = link_2.__repr__()
    assert (
        var_2
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )
    str_4 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_4 = module_0.Link(str_4, none_type_2)
    str_5 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_5 = module_0.Link(str_5, none_type_3)
    bytes_1 = b"\x802c35Z\xf8"
    link_6 = module_0.Link(link_5, bytes_1)
    str_6 = "0_~6:m!(f5FgU,:rvz"
    none_type_4 = None
    link_7 = module_0.Link(str_6, none_type_4)
    var_3 = link_7.__repr__()
    assert var_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_4 = var_3.__repr__()
    assert var_4 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_7 = var_3.__str__()
    assert str_7 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    dict_1 = {}
    str_8 = 'y\x0c[fN"W:2&:SWyz~W'
    link_8 = module_0.Link(dict_1, str_8)
    str_9 = " Use '"
    section_1 = module_0.Section(str_9, str_9)
    var_5 = section_1.__repr__()
    assert var_5 == 'Section(title=" Use \'")'
    var_6 = var_5.__repr__()
    assert var_6 == "'Section(title=\" Use \\'\")'"
    var_7 = section_1.__repr__()
    assert var_7 == 'Section(title=" Use \'")'


def test_case_50():
    str_0 = "page_context"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = "' from the site because it conflicts with '"
    list_0 = []
    section_1 = module_0.Section(str_1, list_0)
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_2, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    iterator_0 = var_0.__iter__()


def test_case_51():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    str_1 = " Use '"
    section_1 = module_0.Section(str_1, str_1)
    var_1 = section_1.__repr__()
    assert var_1 == 'Section(title=" Use \'")'
    var_2 = var_1.__repr__()
    assert var_2 == "'Section(title=\" Use \\'\")'"
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_2, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    bytes_0 = b"\x802c35Z\xf8"
    link_1 = module_0.Link(link_0, bytes_0)
    var_3 = link_0.__repr__()
    assert var_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_3 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_2 = module_0.Link(str_3, none_type_1)
    var_4 = link_2.__repr__()
    assert var_4 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_4 = "page_context"
    section_2 = module_0.Section(str_4, str_4)
    var_5 = link_1.__repr__()
    assert (
        var_5
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )


def test_case_52():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    var_1 = var_0.__repr__()
    assert var_1 == "'Section(title=\" Use \\'\")'"
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_1, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_2 = link_0.__repr__()
    assert var_2 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_3 = var_2.__repr__()
    assert var_3 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_2, none_type_1)
    str_3 = " Use '"
    section_1 = module_0.Section(str_3, str_3)
    var_4 = section_1.__repr__()
    assert var_4 == 'Section(title=" Use \'")'
    str_4 = "page_context"
    section_2 = module_0.Section(str_4, str_4)
    str_5 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_2 = module_0.Link(str_5, none_type_2)
    var_5 = link_2.__repr__()
    assert var_5 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_6 = var_5.__repr__()
    assert var_6 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_6 = var_5.__str__()
    assert str_6 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_7 = "page_context"
    section_3 = module_0.Section(str_7, str_7)
    str_8 = "' from the site because it conflicts with '"
    list_0 = []
    section_4 = module_0.Section(str_8, list_0)
    str_9 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_3 = module_0.Link(str_9, none_type_3)
    var_7 = link_3.__repr__()
    assert var_7 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    iterator_0 = var_0.__iter__()


def test_case_53():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    dict_0 = {}
    str_1 = 'y\x0c[fN"W:2&:SWyz~W'
    link_1 = module_0.Link(dict_0, str_1)
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_2 = module_0.Link(str_2, none_type_1)
    bytes_0 = b"\x802c35Z\xf8"
    link_3 = module_0.Link(link_2, bytes_0)
    var_0 = link_2.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_3 = "page_context"
    section_0 = module_0.Section(str_3, str_3)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_4 = "' from the site because it conflicts with '"
    list_0 = []
    section_1 = module_0.Section(str_4, list_0)
    var_1 = link_1.__repr__()
    assert var_1 == "Link(title={}, url='y\\x0c[fN\"W:2&:SWyz~W')"


def test_case_54():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_1, none_type_1)
    bytes_0 = b"\x802c35Z\xf8"
    link_2 = module_0.Link(link_1, bytes_0)
    var_1 = link_1.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_3 = module_0.Link(str_2, none_type_2)
    var_2 = link_3.__repr__()
    assert var_2 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_3 = var_2.__repr__()
    assert var_3 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_4 = var_1.__repr__()
    assert var_4 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""


def test_case_55():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_1, none_type_1)
    var_2 = link_1.__repr__()
    assert var_2 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    dict_0 = {}
    str_2 = 'y\x0c[fN"W:2&:SWyz~W'
    link_2 = module_0.Link(dict_0, str_2)
    str_3 = " Use '"
    section_0 = module_0.Section(str_3, str_3)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_3 = section_0.__repr__()
    assert var_3 == 'Section(title=" Use \'")'
    str_4 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_3 = module_0.Link(str_4, none_type_2)
    var_4 = link_3.__repr__()
    assert var_4 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_5 = var_4.__repr__()
    assert var_5 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_5 = var_4.__str__()
    assert str_5 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_6 = var_1.__repr__()
    assert var_6 == "'\"Link(title=\\'0_~6:m!(f5FgU,:rvz\\', url=None)\"'"


def test_case_56():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    bytes_0 = b"\x802c35Z\xf8"
    link_1 = module_0.Link(link_0, bytes_0)
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_2 = module_0.Link(str_1, none_type_1)
    bytes_1 = b"\x802c35Z\xf8"
    link_3 = module_0.Link(link_2, bytes_1)
    var_0 = link_2.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_2 = var_0.__str__()
    assert str_2 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"


def test_case_57():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    bytes_0 = b"\x802c35Z\xf8"
    link_1 = module_0.Link(link_0, bytes_0)
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_2 = module_0.Link(str_1, none_type_1)
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_3 = module_0.Link(str_2, none_type_2)
    bytes_1 = b"\x802c35Z\xf8"
    link_4 = module_0.Link(link_3, bytes_1)
    dict_0 = {}
    str_3 = 'y\x0c[fN"W:2&:SWyz~W'
    link_5 = module_0.Link(dict_0, str_3)
    var_1 = link_4.__repr__()
    assert (
        var_1
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )
    str_4 = " Use '"
    section_0 = module_0.Section(str_4, str_4)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_2 = section_0.__repr__()
    assert var_2 == 'Section(title=" Use \'")'
    int_0 = var_2.__len__()
    assert int_0 == 23
    str_5 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_6 = module_0.Link(str_5, none_type_3)
    var_3 = link_6.__repr__()
    assert var_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_4 = var_3.__repr__()
    assert var_4 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_6 = "0_~6:m!(f5FgU,:rvz"
    none_type_4 = None
    link_7 = module_0.Link(str_6, none_type_4)
    var_5 = link_7.__repr__()
    assert var_5 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_6 = var_5.__repr__()
    assert var_6 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_7 = var_5.__str__()
    assert str_7 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    dict_1 = {}
    str_8 = 'y\x0c[fN"W:2&:SWyz~W'
    link_8 = module_0.Link(dict_1, str_8)
    str_9 = "0_~6:m!(f5FgU,:rvz"
    none_type_5 = None
    link_9 = module_0.Link(str_9, none_type_5)
    bytes_2 = b"\x802c35Z\xf8"
    link_10 = module_0.Link(link_9, bytes_2)
    str_10 = "locales"
    section_1 = module_0.Section(str_10, var_4)
    assert section_1.children == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""


def test_case_58():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    bytes_0 = b"\x802c35Z\xf8"
    link_1 = module_0.Link(link_0, bytes_0)
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_2 = module_0.Link(str_1, none_type_1)
    bytes_1 = b"\x802c35Z\xf8"
    link_3 = module_0.Link(link_2, bytes_1)
    var_0 = link_2.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_2 = " Use '"
    section_0 = module_0.Section(str_2, str_2)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_1 = section_0.__repr__()
    assert var_1 == 'Section(title=" Use \'")'
    int_0 = var_1.__len__()
    assert int_0 == 23
    str_3 = " Use '"
    section_1 = module_0.Section(str_3, str_3)
    var_2 = section_1.__repr__()
    assert var_2 == 'Section(title=" Use \'")'
    var_3 = var_2.__repr__()
    assert var_3 == "'Section(title=\" Use \\'\")'"
    str_4 = "page_context"
    section_2 = module_0.Section(str_4, str_4)
    str_5 = "' from the site because it conflicts with '"
    list_0 = []
    section_3 = module_0.Section(str_5, list_0)
    str_6 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_4 = module_0.Link(str_6, none_type_2)
    dict_0 = {}
    str_7 = 'y\x0c[fN"W:2&:SWyz~W'
    link_5 = module_0.Link(dict_0, str_7)
    section_4 = module_0.Section(link_4, var_0)
    assert section_4.children == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"


def test_case_59():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    bytes_0 = b"\x802c35Z\xf8"
    link_1 = module_0.Link(link_0, bytes_0)
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_1 = " Use '"
    section_0 = module_0.Section(str_1, str_1)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_1 = section_0.__repr__()
    assert var_1 == 'Section(title=" Use \'")'
    int_0 = var_1.__len__()
    assert int_0 == 23
    str_2 = "page_context"
    section_1 = module_0.Section(str_2, str_2)
    str_3 = "' from the site because it conflicts with '"
    list_0 = []
    section_2 = module_0.Section(str_3, list_0)
    str_4 = " Use '"
    section_3 = module_0.Section(str_4, str_4)
    var_2 = section_3.__repr__()
    assert var_2 == 'Section(title=" Use \'")'
    str_5 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_2 = module_0.Link(str_5, none_type_1)
    str_6 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_3 = module_0.Link(str_6, none_type_2)
    var_3 = link_3.__repr__()
    assert var_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_4 = var_3.__repr__()
    assert var_4 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_7 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_4 = module_0.Link(str_7, none_type_3)
    var_5 = link_4.__repr__()
    assert var_5 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_6 = var_5.__repr__()
    assert var_6 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_8 = var_5.__str__()
    assert str_8 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    dict_0 = {str_2: section_3, str_6: section_1}
    str_9 = "e.(-s$lH,"
    tuple_0 = (str_7, dict_0, str_9)
    link_5 = module_0.Link(tuple_0, str_9)


def test_case_60():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_1, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    bytes_0 = b"\x802c35Z\xf8"
    link_1 = module_0.Link(link_0, bytes_0)
    var_1 = link_0.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_2 = module_0.Link(str_2, none_type_1)
    bytes_1 = b"\x802c35Z\xf8"
    link_3 = module_0.Link(link_2, bytes_1)
    dict_0 = {}
    str_3 = 'y\x0c[fN"W:2&:SWyz~W'
    link_4 = module_0.Link(dict_0, str_3)
    var_2 = link_3.__repr__()
    assert (
        var_2
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )
    str_4 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_5 = module_0.Link(str_4, none_type_2)
    var_3 = link_5.__repr__()
    assert var_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_4 = var_3.__repr__()
    assert var_4 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_5 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_6 = module_0.Link(str_5, none_type_3)
    str_6 = "page_context"
    section_1 = module_0.Section(str_6, str_6)
    str_7 = "' from the site because it conflicts with '"
    list_0 = []
    section_2 = module_0.Section(str_7, list_0)
    str_8 = " Use '"
    section_3 = module_0.Section(str_8, str_8)
    var_5 = section_3.__repr__()
    assert var_5 == 'Section(title=" Use \'")'
    var_6 = var_5.__repr__()
    assert var_6 == "'Section(title=\" Use \\'\")'"
    str_9 = "0_~6:m!(f5FgU,:rvz"
    none_type_4 = None
    link_7 = module_0.Link(str_9, none_type_4)
    var_7 = link_7.__repr__()
    assert var_7 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_8 = var_3.__repr__()
    assert var_8 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_9 = var_8.__repr__()
    assert var_9 == "'\"Link(title=\\'0_~6:m!(f5FgU,:rvz\\', url=None)\"'"


def test_case_61():
    str_0 = "page_context"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = "' from the site because it conflicts with '"
    list_0 = []
    section_1 = module_0.Section(str_1, list_0)
    str_2 = "localhost"
    link_0 = module_0.Link(str_1, str_2)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "' from the site because it conflicts with '"
    assert link_0.url == "localhost"


def test_case_62():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_1 = " Use '"
    section_0 = module_0.Section(str_1, str_1)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_1 = section_0.__repr__()
    assert var_1 == 'Section(title=" Use \'")'
    dict_0 = {}
    str_2 = 'y\x0c[fN"W:2&:SWyz~W'
    link_1 = module_0.Link(dict_0, str_2)
    str_3 = "page_context"
    section_1 = module_0.Section(str_3, str_3)
    str_4 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_2 = module_0.Link(str_4, none_type_1)
    var_2 = link_2.__repr__()
    assert var_2 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_3 = var_2.__repr__()
    assert var_3 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_5 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_3 = module_0.Link(str_5, none_type_2)
    bytes_0 = b"\x802c35Z\xf8"
    link_4 = module_0.Link(link_3, bytes_0)
    var_4 = link_3.__repr__()
    assert var_4 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_6 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_5 = module_0.Link(str_6, none_type_3)
    bytes_1 = b"\x802c35Z\xf8"
    link_6 = module_0.Link(link_5, bytes_1)
    str_7 = "0_~6:m!(f5FgU,:rvz"
    none_type_4 = None
    link_7 = module_0.Link(str_7, none_type_4)
    var_5 = link_7.__repr__()
    assert var_5 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_6 = var_5.__repr__()
    assert var_6 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_8 = var_5.__str__()
    assert str_8 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_9 = "0_~6:m!(f5FgU,:rvz"
    none_type_5 = None
    link_8 = module_0.Link(str_9, none_type_5)
    bytes_2 = b"\x802c35Z\xf8"
    link_9 = module_0.Link(link_8, bytes_2)
    dict_1 = {}
    str_10 = 'y\x0c[fN"W:2&:SWyz~W'
    link_10 = module_0.Link(dict_1, str_10)
    var_7 = link_9.__repr__()
    assert (
        var_7
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )
    iterator_0 = var_3.__iter__()


def test_case_63():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_1 = "page_context"
    section_0 = module_0.Section(str_1, str_1)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_2 = "' from the site because it conflicts with '"
    list_0 = []
    section_1 = module_0.Section(str_2, list_0)
    dict_0 = {}
    str_3 = 'y\x0c[fN"W:2&:SWyz~W'
    link_1 = module_0.Link(dict_0, str_3)
    str_4 = " Use '"
    section_2 = module_0.Section(str_4, str_4)
    var_1 = section_2.__repr__()
    assert var_1 == 'Section(title=" Use \'")'
    str_5 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_2 = module_0.Link(str_5, none_type_1)
    bytes_0 = b"\x802c35Z\xf8"
    link_3 = module_0.Link(link_2, bytes_0)
    var_2 = link_2.__repr__()
    assert var_2 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_6 = "page_context"
    section_3 = module_0.Section(str_6, str_6)
    str_7 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_4 = module_0.Link(str_7, none_type_2)
    bytes_1 = b"\x802c35Z\xf8"
    link_5 = module_0.Link(link_4, bytes_1)
    str_8 = " Use '"
    section_4 = module_0.Section(str_8, str_8)
    var_3 = section_4.__repr__()
    assert var_3 == 'Section(title=" Use \'")'
    int_0 = var_3.__len__()
    assert int_0 == 23
    str_9 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_6 = module_0.Link(str_9, none_type_3)
    str_10 = "page_context"
    section_5 = module_0.Section(str_10, str_10)
    str_11 = "' from the site because it conflicts with '"
    list_1 = []
    section_6 = module_0.Section(str_11, list_1)
    str_12 = "localhost"
    link_7 = module_0.Link(str_11, str_12)
    link_8 = module_0.Link(str_3, str_11)


def test_case_64():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    str_1 = "page_context"
    section_1 = module_0.Section(str_1, str_1)
    str_2 = "page_context"
    section_2 = module_0.Section(str_2, str_2)
    str_3 = "' from the site because it conflicts with '"
    list_0 = []
    section_3 = module_0.Section(str_3, list_0)
    str_4 = "localhost"
    link_0 = module_0.Link(str_3, str_4)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "' from the site because it conflicts with '"
    assert link_0.url == "localhost"
    str_5 = "M(gnu?Xo hE\tHPlLrz"
    section_4 = module_0.Section(str_5, var_0)
    assert section_4.children == 'Section(title=" Use \'")'


def test_case_65():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_1, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_1 = link_0.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_2 = var_1.__repr__()
    assert var_2 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_2 = var_1.__str__()
    assert str_2 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_3 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_3, none_type_1)
    var_3 = link_1.__repr__()
    assert var_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    dict_0 = {}
    str_4 = 'y\x0c[fN"W:2&:SWyz~W'
    link_2 = module_0.Link(dict_0, str_4)
    str_5 = "page_context"
    section_1 = module_0.Section(str_5, str_5)
    str_6 = "' from the site because it conflicts with '"
    list_0 = []
    section_2 = module_0.Section(str_6, list_0)
    str_7 = "page_context"
    section_3 = module_0.Section(str_7, str_7)
    str_8 = "' from the site because it conflicts with '"
    list_1 = []
    section_4 = module_0.Section(str_8, list_1)
    str_9 = "localhost"
    link_3 = module_0.Link(str_8, str_9)
    int_0 = var_2.__len__()
    assert int_0 == 44


def test_case_66():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    bytes_0 = b"\x802c35Z\xf8"
    link_1 = module_0.Link(link_0, bytes_0)
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_1 = " Use '"
    section_0 = module_0.Section(str_1, str_1)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_1 = section_0.__repr__()
    assert var_1 == 'Section(title=" Use \'")'
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_2 = module_0.Link(str_2, none_type_1)
    var_2 = link_2.__repr__()
    assert var_2 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_3 = var_2.__repr__()
    assert var_3 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_4 = var_1.__repr__()
    assert var_4 == "'Section(title=\" Use \\'\")'"


def test_case_67():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    bytes_0 = b"\x802c35Z\xf8"
    link_1 = module_0.Link(link_0, bytes_0)
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_2 = module_0.Link(str_1, none_type_1)
    var_1 = link_2.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_2 = var_1.__repr__()
    assert var_2 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_2 = var_1.__str__()
    assert str_2 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_3 = " Use '"
    section_0 = module_0.Section(str_3, str_3)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_3 = section_0.__repr__()
    assert var_3 == 'Section(title=" Use \'")'
    var_4 = var_3.__repr__()
    assert var_4 == "'Section(title=\" Use \\'\")'"
    str_4 = " Use '"
    section_1 = module_0.Section(str_4, str_4)
    var_5 = section_1.__repr__()
    assert var_5 == 'Section(title=" Use \'")'
    int_0 = var_5.__len__()
    assert int_0 == 23
    str_5 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_3 = module_0.Link(str_5, none_type_2)
    bytes_1 = b"\x802c35Z\xf8"
    link_4 = module_0.Link(link_3, bytes_1)
    dict_0 = {}
    str_6 = 'y\x0c[fN"W:2&:SWyz~W'
    link_5 = module_0.Link(dict_0, str_6)
    var_6 = link_4.__repr__()
    assert (
        var_6
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )
    str_7 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_6 = module_0.Link(str_7, none_type_3)
    bytes_2 = b"\x802c35Z\xf8"
    link_7 = module_0.Link(link_6, bytes_2)
    dict_1 = {}
    str_8 = 'y\x0c[fN"W:2&:SWyz~W'
    link_8 = module_0.Link(dict_1, str_8)
    str_9 = "page_context"
    section_2 = module_0.Section(str_9, str_9)
    str_10 = "' from the site because it conflicts with '"
    list_0 = []
    section_3 = module_0.Section(str_10, list_0)
    int_1 = var_2.__len__()
    assert int_1 == 44


def test_case_68():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    int_0 = var_0.__len__()
    assert int_0 == 23
    str_1 = " Use '"
    section_1 = module_0.Section(str_1, str_1)
    var_1 = section_1.__repr__()
    assert var_1 == 'Section(title=" Use \'")'
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_2, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    bytes_0 = b"\x802c35Z\xf8"
    link_1 = module_0.Link(link_0, bytes_0)
    dict_0 = {}
    str_3 = 'y\x0c[fN"W:2&:SWyz~W'
    link_2 = module_0.Link(dict_0, str_3)
    var_2 = link_1.__repr__()
    assert (
        var_2
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )
    str_4 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_3 = module_0.Link(str_4, none_type_1)
    var_3 = link_3.__repr__()
    assert var_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_5 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_4 = module_0.Link(str_5, none_type_2)
    bytes_1 = b"\x802c35Z\xf8"
    link_5 = module_0.Link(link_4, bytes_1)
    str_6 = "page_context"
    section_2 = module_0.Section(str_6, str_6)
    str_7 = " Use '"
    section_3 = module_0.Section(str_7, str_7)
    var_4 = section_3.__repr__()
    assert var_4 == 'Section(title=" Use \'")'
    var_5 = var_4.__repr__()
    assert var_5 == "'Section(title=\" Use \\'\")'"
    str_8 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_6 = module_0.Link(str_8, none_type_3)
    str_9 = "0_~6:m!(f5FgU,:rvz"
    none_type_4 = None
    link_7 = module_0.Link(str_9, none_type_4)
    bytes_2 = b"\x802c35Z\xf8"
    link_8 = module_0.Link(link_7, bytes_2)
    var_6 = link_7.__repr__()
    assert var_6 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_10 = "page_context"
    section_4 = module_0.Section(str_10, str_10)
    str_11 = "' from the site because it conflicts with '"
    list_0 = []
    section_5 = module_0.Section(str_11, list_0)
    var_7 = var_5.__repr__()
    assert var_7 == "'\\'Section(title=\" Use \\\\\\'\")\\''"


def test_case_69():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    bytes_0 = b"\x802c35Z\xf8"
    link_1 = module_0.Link(link_0, bytes_0)
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_2 = module_0.Link(str_1, none_type_1)
    var_0 = link_2.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_2 = " Use '"
    section_0 = module_0.Section(str_2, str_2)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_2 = section_0.__repr__()
    assert var_2 == 'Section(title=" Use \'")'
    int_0 = var_2.__len__()
    assert int_0 == 23
    str_3 = " Use '"
    section_1 = module_0.Section(str_3, str_3)
    var_3 = section_1.__repr__()
    assert var_3 == 'Section(title=" Use \'")'
    str_4 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_3 = module_0.Link(str_4, none_type_2)
    bytes_1 = b"\x802c35Z\xf8"
    link_4 = module_0.Link(link_3, bytes_1)
    var_4 = link_3.__repr__()
    assert var_4 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    iterator_0 = var_3.__iter__()


def test_case_70():
    dict_0 = {}
    str_0 = 'y\x0c[fN"W:2&:SWyz~W'
    link_0 = module_0.Link(dict_0, str_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == {}
    assert link_0.url == 'y\x0c[fN"W:2&:SWyz~W'
    str_1 = " Use '"
    section_0 = module_0.Section(str_1, str_1)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_1 = module_0.Link(str_2, none_type_0)
    var_1 = link_1.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_3 = "page_context"
    section_1 = module_0.Section(str_3, str_3)
    str_4 = "' from the site because it conflicts with '"
    list_0 = []
    section_2 = module_0.Section(str_4, list_0)
    str_5 = "localhost"
    link_2 = module_0.Link(str_4, str_5)
    str_6 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_3 = module_0.Link(str_6, none_type_1)
    bytes_0 = b"\x802c35Z\xf8"
    link_4 = module_0.Link(link_3, bytes_0)
    var_2 = link_3.__repr__()
    assert var_2 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_7 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_5 = module_0.Link(str_7, none_type_2)
    bytes_1 = b"\x802c35Z\xf8"
    link_6 = module_0.Link(link_5, bytes_1)
    var_3 = link_1.__repr__()
    assert var_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"


def test_case_71():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_1 = "page_context"
    section_0 = module_0.Section(str_1, str_1)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_2 = " Use '"
    section_1 = module_0.Section(str_2, str_2)
    var_1 = section_1.__repr__()
    assert var_1 == 'Section(title=" Use \'")'
    str_3 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_3, none_type_1)
    bytes_0 = b"\x802c35Z\xf8"
    link_2 = module_0.Link(link_1, bytes_0)
    dict_0 = {}
    str_4 = 'y\x0c[fN"W:2&:SWyz~W'
    link_3 = module_0.Link(dict_0, str_4)
    var_2 = link_2.__repr__()
    assert (
        var_2
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )
    iterator_0 = var_0.__iter__()


def test_case_72():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    var_1 = var_0.__repr__()
    assert var_1 == "'Section(title=\" Use \\'\")'"
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_1, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_2 = link_0.__repr__()
    assert var_2 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_2, none_type_1)
    bytes_0 = b"\x802c35Z\xf8"
    link_2 = module_0.Link(link_1, bytes_0)
    var_3 = link_1.__repr__()
    assert var_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_3 = " Use '"
    section_1 = module_0.Section(str_3, str_3)
    var_4 = section_1.__repr__()
    assert var_4 == 'Section(title=" Use \'")'
    int_0 = var_4.__len__()
    assert int_0 == 23
    str_4 = "page_context"
    section_2 = module_0.Section(str_4, str_4)
    str_5 = "' from the site because it conflicts with '"
    list_0 = []
    section_3 = module_0.Section(str_5, list_0)
    str_6 = "localhost"
    link_3 = module_0.Link(str_5, str_6)
    str_7 = " Use '"
    section_4 = module_0.Section(str_7, str_7)
    var_5 = section_4.__repr__()
    assert var_5 == 'Section(title=" Use \'")'
    dict_0 = {}
    str_8 = 'y\x0c[fN"W:2&:SWyz~W'
    link_4 = module_0.Link(dict_0, str_8)
    str_9 = "page_context"
    section_5 = module_0.Section(str_9, str_9)
    str_10 = var_0.__str__()
    assert str_10 == 'Section(title=" Use \'")'


def test_case_73():
    dict_0 = {}
    str_0 = 'y\x0c[fN"W:2&:SWyz~W'
    link_0 = module_0.Link(dict_0, str_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == {}
    assert link_0.url == 'y\x0c[fN"W:2&:SWyz~W'
    str_1 = " Use '"
    section_0 = module_0.Section(str_1, str_1)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_1 = module_0.Link(str_2, none_type_0)
    bytes_0 = b"\x802c35Z\xf8"
    link_2 = module_0.Link(link_1, bytes_0)
    str_3 = "page_context"
    section_1 = module_0.Section(str_3, str_3)
    str_4 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_3 = module_0.Link(str_4, none_type_1)
    str_5 = "page_context"
    section_2 = module_0.Section(str_5, str_5)
    str_6 = "' from the site because it conflicts with '"
    list_0 = []
    section_3 = module_0.Section(str_6, list_0)
    str_7 = "localhost"
    link_4 = module_0.Link(str_6, str_7)
    str_8 = "page_context"
    section_4 = module_0.Section(str_8, str_8)
    str_9 = "' from the site because it conflicts with '"
    list_1 = []
    section_5 = module_0.Section(str_9, list_1)
    str_10 = " Use '"
    section_6 = module_0.Section(str_10, str_10)
    var_1 = section_6.__repr__()
    assert var_1 == 'Section(title=" Use \'")'
    var_2 = var_1.__repr__()
    assert var_2 == "'Section(title=\" Use \\'\")'"
    str_11 = var_1.__str__()
    assert str_11 == 'Section(title=" Use \'")'


def test_case_74():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    bytes_0 = b"\x802c35Z\xf8"
    link_1 = module_0.Link(link_0, bytes_0)
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_1 = "page_context"
    section_0 = module_0.Section(str_1, str_1)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_2 = "' from the site because it conflicts with '"
    list_0 = []
    section_1 = module_0.Section(str_2, list_0)
    str_3 = " Use '"
    section_2 = module_0.Section(str_3, str_3)
    var_1 = section_2.__repr__()
    assert var_1 == 'Section(title=" Use \'")'
    var_2 = var_1.__repr__()
    assert var_2 == "'Section(title=\" Use \\'\")'"
    str_4 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_2 = module_0.Link(str_4, none_type_1)
    var_3 = link_2.__repr__()
    assert var_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_5 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_3 = module_0.Link(str_5, none_type_2)
    str_6 = var_3.__str__()
    assert str_6 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"


def test_case_75():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    bytes_0 = b"\x802c35Z\xf8"
    link_1 = module_0.Link(link_0, bytes_0)
    dict_0 = {}
    str_1 = 'y\x0c[fN"W:2&:SWyz~W'
    link_2 = module_0.Link(dict_0, str_1)
    var_0 = link_1.__repr__()
    assert (
        var_0
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )
    str_2 = "page_context"
    section_0 = module_0.Section(str_2, str_2)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_3 = "' from the site because it conflicts with '"
    list_0 = []
    section_1 = module_0.Section(str_3, list_0)
    str_4 = "localhost"
    link_3 = module_0.Link(str_3, str_4)
    str_5 = " Use '"
    section_2 = module_0.Section(str_5, str_5)
    var_1 = section_2.__repr__()
    assert var_1 == 'Section(title=" Use \'")'
    var_2 = var_1.__repr__()
    assert var_2 == "'Section(title=\" Use \\'\")'"
    str_6 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_4 = module_0.Link(str_6, none_type_1)
    var_3 = link_4.__repr__()
    assert var_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_4 = var_3.__repr__()
    assert var_4 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_7 = var_3.__str__()
    assert str_7 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    dict_1 = {}
    str_8 = 'y\x0c[fN"W:2&:SWyz~W'
    link_5 = module_0.Link(dict_1, str_8)
    str_9 = "page_context"
    section_3 = module_0.Section(str_9, str_9)
    str_10 = "' from the site because it conflicts with '"
    list_1 = []
    section_4 = module_0.Section(str_10, list_1)
    str_11 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_6 = module_0.Link(str_11, none_type_2)
    link_7 = module_0.Link(link_0, section_4)


def test_case_76():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_1 = var_0.__str__()
    assert str_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_2, none_type_1)
    bytes_0 = b"\x802c35Z\xf8"
    link_2 = module_0.Link(link_1, bytes_0)
    dict_0 = {}
    str_3 = 'y\x0c[fN"W:2&:SWyz~W'
    link_3 = module_0.Link(dict_0, str_3)
    str_4 = " Use '"
    section_0 = module_0.Section(str_4, str_4)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_2 = section_0.__repr__()
    assert var_2 == 'Section(title=" Use \'")'
    var_3 = var_2.__repr__()
    assert var_3 == "'Section(title=\" Use \\'\")'"
    str_5 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_4 = module_0.Link(str_5, none_type_2)
    bytes_1 = b"\x802c35Z\xf8"
    link_5 = module_0.Link(link_4, bytes_1)
    dict_1 = {}
    str_6 = 'y\x0c[fN"W:2&:SWyz~W'
    link_6 = module_0.Link(dict_1, str_6)
    var_4 = link_5.__repr__()
    assert (
        var_4
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )
    str_7 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_7 = module_0.Link(str_7, none_type_3)
    str_8 = "0_~6:m!(f5FgU,:rvz"
    none_type_4 = None
    link_8 = module_0.Link(str_8, none_type_4)
    bytes_2 = b"\x802c35Z\xf8"
    link_9 = module_0.Link(link_8, bytes_2)
    var_5 = link_8.__repr__()
    assert var_5 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_9 = "0_~6:m!(f5FgU,:rvz"
    none_type_5 = None
    link_10 = module_0.Link(str_9, none_type_5)
    var_6 = link_10.__repr__()
    assert var_6 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_7 = var_6.__repr__()
    assert var_7 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_10 = "page_context"
    section_1 = module_0.Section(str_10, str_10)
    str_11 = "' from the site because it conflicts with '"
    list_0 = []
    section_2 = module_0.Section(str_11, list_0)
    str_12 = "localhost"
    link_11 = module_0.Link(str_11, str_12)
    str_13 = "page_context"
    section_3 = module_0.Section(str_13, str_13)
    str_14 = "' from the site because it conflicts with '"
    list_1 = []
    section_4 = module_0.Section(str_14, list_1)
    int_0 = var_0.__len__()
    assert int_0 == 42


def test_case_77():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_1, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_2, none_type_1)
    bytes_0 = b"\x802c35Z\xf8"
    link_2 = module_0.Link(link_1, bytes_0)
    str_3 = " Use '"
    section_1 = module_0.Section(str_3, str_3)
    var_1 = section_1.__repr__()
    assert var_1 == 'Section(title=" Use \'")'
    var_2 = var_1.__repr__()
    assert var_2 == "'Section(title=\" Use \\'\")'"
    str_4 = "page_context"
    section_2 = module_0.Section(str_4, str_4)
    str_5 = "' from the site because it conflicts with '"
    list_0 = []
    section_3 = module_0.Section(str_5, list_0)
    str_6 = "localhost"
    link_3 = module_0.Link(str_5, str_6)
    str_7 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_4 = module_0.Link(str_7, none_type_2)
    bytes_1 = b"\x802c35Z\xf8"
    link_5 = module_0.Link(link_4, bytes_1)
    var_3 = link_4.__repr__()
    assert var_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_8 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_6 = module_0.Link(str_8, none_type_3)
    var_4 = link_6.__repr__()
    assert var_4 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_5 = var_4.__repr__()
    assert var_5 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_9 = "page_context"
    section_4 = module_0.Section(str_9, str_9)
    str_10 = "' from the site because it conflicts with '"
    list_1 = []
    section_5 = module_0.Section(str_10, list_1)
    int_0 = var_3.__len__()
    assert int_0 == 42


def test_case_78():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    int_0 = var_0.__len__()
    assert int_0 == 23
    str_1 = "page_context"
    section_1 = module_0.Section(str_1, str_1)
    str_2 = "' from the site because it conflicts with '"
    list_0 = []
    section_2 = module_0.Section(str_2, list_0)
    str_3 = "localhost"
    link_0 = module_0.Link(str_2, str_3)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "' from the site because it conflicts with '"
    assert link_0.url == "localhost"
    var_1 = link_0.__repr__()
    assert (
        var_1
        == "Link(title=\"' from the site because it conflicts with '\", url='localhost')"
    )


def test_case_79():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    bytes_0 = b"\x802c35Z\xf8"
    link_1 = module_0.Link(link_0, bytes_0)
    dict_0 = {}
    str_1 = 'y\x0c[fN"W:2&:SWyz~W'
    link_2 = module_0.Link(dict_0, str_1)
    var_0 = link_1.__repr__()
    assert (
        var_0
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )
    dict_1 = {}
    str_2 = 'y\x0c[fN"W:2&:SWyz~W'
    link_3 = module_0.Link(dict_1, str_2)
    str_3 = " Use '"
    section_0 = module_0.Section(str_3, str_3)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_1 = section_0.__repr__()
    assert var_1 == 'Section(title=" Use \'")'
    var_2 = var_1.__repr__()
    assert var_2 == "'Section(title=\" Use \\'\")'"
    str_4 = " Use '"
    section_1 = module_0.Section(str_4, str_4)
    var_3 = section_1.__repr__()
    assert var_3 == 'Section(title=" Use \'")'
    int_0 = var_3.__len__()
    assert int_0 == 23
    str_5 = " Use '"
    section_2 = module_0.Section(str_5, str_5)
    var_4 = section_2.__repr__()
    assert var_4 == 'Section(title=" Use \'")'
    str_6 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_4 = module_0.Link(str_6, none_type_1)
    var_5 = link_4.__repr__()
    assert var_5 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_6 = var_5.__repr__()
    assert var_6 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_7 = var_5.__str__()
    assert str_7 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_7 = section_2.__repr__()
    assert var_7 == 'Section(title=" Use \'")'


def test_case_80():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    bytes_0 = b"\x802c35Z\xf8"
    link_1 = module_0.Link(link_0, bytes_0)
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_2 = module_0.Link(str_1, none_type_1)
    iterator_0 = var_0.__iter__()


def test_case_81():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_1, none_type_1)
    bytes_0 = b"\x802c35Z\xf8"
    link_2 = module_0.Link(link_1, bytes_0)
    var_1 = link_1.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_2 = "page_context"
    section_0 = module_0.Section(str_2, str_2)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_3 = "' from the site because it conflicts with '"
    list_0 = []
    section_1 = module_0.Section(str_3, list_0)
    section_2 = module_0.Section(str_1, str_0)


def test_case_82():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    bytes_0 = b"\x802c35Z\xf8"
    link_1 = module_0.Link(link_0, bytes_0)
    dict_0 = {}
    str_1 = 'y\x0c[fN"W:2&:SWyz~W'
    link_2 = module_0.Link(dict_0, str_1)
    var_0 = link_1.__repr__()
    assert (
        var_0
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )
    str_2 = "page_context"
    section_0 = module_0.Section(str_2, str_2)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_3 = "' from the site because it conflicts with '"
    list_0 = []
    section_1 = module_0.Section(str_3, list_0)
    str_4 = "localhost"
    link_3 = module_0.Link(str_3, str_4)
    str_5 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_4 = module_0.Link(str_5, none_type_1)
    var_1 = link_4.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_6 = " Use '"
    section_2 = module_0.Section(str_6, str_6)
    var_2 = section_2.__repr__()
    assert var_2 == 'Section(title=" Use \'")'
    int_0 = var_2.__len__()
    assert int_0 == 23
    dict_1 = {}
    str_7 = 'y\x0c[fN"W:2&:SWyz~W'
    link_5 = module_0.Link(dict_1, str_7)
    str_8 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_6 = module_0.Link(str_8, none_type_2)
    bytes_1 = b"\x802c35Z\xf8"
    link_7 = module_0.Link(link_6, bytes_1)
    var_3 = link_6.__repr__()
    assert var_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_9 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_8 = module_0.Link(str_9, none_type_3)
    var_4 = link_8.__repr__()
    assert var_4 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_5 = var_4.__repr__()
    assert var_5 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_10 = var_4.__str__()
    assert str_10 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_11 = "page_context"
    section_3 = module_0.Section(str_11, str_11)
    str_12 = "' from the site because it conflicts with '"
    list_1 = []
    section_4 = module_0.Section(str_12, list_1)
    var_6 = var_5.__repr__()
    assert var_6 == "'\"Link(title=\\'0_~6:m!(f5FgU,:rvz\\', url=None)\"'"


def test_case_83():
    str_0 = "page_context"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = "' from the site because it conflicts with '"
    list_0 = []
    section_1 = module_0.Section(str_1, list_0)
    var_0 = section_1.__repr__()
    assert var_0 == "Section(title=\"' from the site because it conflicts with '\")"


def test_case_84():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_1 = "page_context"
    section_0 = module_0.Section(str_1, str_1)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_2 = "' from the site because it conflicts with '"
    list_0 = []
    section_1 = module_0.Section(str_2, list_0)
    str_3 = "localhost"
    link_1 = module_0.Link(str_2, str_3)
    str_4 = "page_context"
    section_2 = module_0.Section(str_4, str_4)
    str_5 = " Use '"
    section_3 = module_0.Section(str_5, str_5)
    var_2 = section_3.__repr__()
    assert var_2 == 'Section(title=" Use \'")'
    str_6 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_2 = module_0.Link(str_6, none_type_1)
    bytes_0 = b"\x802c35Z\xf8"
    link_3 = module_0.Link(link_2, bytes_0)
    dict_0 = {}
    str_7 = 'y\x0c[fN"W:2&:SWyz~W'
    link_4 = module_0.Link(dict_0, str_7)
    var_3 = link_3.__repr__()
    assert (
        var_3
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )
    str_8 = var_0.__str__()
    assert str_8 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"


def test_case_85():
    dict_0 = {}
    str_0 = 'y\x0c[fN"W:2&:SWyz~W'
    link_0 = module_0.Link(dict_0, str_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == {}
    assert link_0.url == 'y\x0c[fN"W:2&:SWyz~W'
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_1 = module_0.Link(str_1, none_type_0)
    bytes_0 = b"\x802c35Z\xf8"
    link_2 = module_0.Link(link_1, bytes_0)
    str_2 = "page_context"
    section_0 = module_0.Section(str_2, str_2)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_3 = "' from the site because it conflicts with '"
    list_0 = []
    section_1 = module_0.Section(str_3, list_0)
    str_4 = "localhost"
    link_3 = module_0.Link(str_3, str_4)
    var_0 = link_1.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"


def test_case_86():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    var_1 = var_0.__repr__()
    assert var_1 == "'Section(title=\" Use \\'\")'"
    str_1 = "page_context"
    section_1 = module_0.Section(str_1, str_1)
    str_2 = "' from the site because it conflicts with '"
    list_0 = []
    section_2 = module_0.Section(str_2, list_0)
    str_3 = " Use '"
    section_3 = module_0.Section(str_3, str_3)
    var_2 = section_3.__repr__()
    assert var_2 == 'Section(title=" Use \'")'
    int_0 = var_2.__len__()
    assert int_0 == 23
    str_4 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_4, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    str_5 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_5, none_type_1)
    bytes_0 = b"\x802c35Z\xf8"
    link_2 = module_0.Link(link_1, bytes_0)
    dict_0 = {}
    str_6 = 'y\x0c[fN"W:2&:SWyz~W'
    link_3 = module_0.Link(dict_0, str_6)
    var_3 = link_2.__repr__()
    assert (
        var_3
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )
    dict_1 = {}
    str_7 = 'y\x0c[fN"W:2&:SWyz~W'
    link_4 = module_0.Link(dict_1, str_7)
    str_8 = "page_context"
    section_4 = module_0.Section(str_8, str_8)
    str_9 = "' from the site because it conflicts with '"
    list_1 = []
    section_5 = module_0.Section(str_9, list_1)
    var_4 = section_5.__repr__()
    assert var_4 == "Section(title=\"' from the site because it conflicts with '\")"
    str_10 = "page_context"
    section_6 = module_0.Section(str_10, str_10)
    int_1 = var_0.__len__()
    assert int_1 == 23


def test_case_87():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_1 = var_0.__str__()
    assert str_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_2 = "page_context"
    section_0 = module_0.Section(str_2, str_2)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_3 = "' from the site because it conflicts with '"
    list_0 = []
    section_1 = module_0.Section(str_3, list_0)
    var_2 = section_1.__repr__()
    assert var_2 == "Section(title=\"' from the site because it conflicts with '\")"
    var_3 = var_1.__repr__()
    assert var_3 == "'\"Link(title=\\'0_~6:m!(f5FgU,:rvz\\', url=None)\"'"


def test_case_88():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    bytes_0 = b"\x802c35Z\xf8"
    link_1 = module_0.Link(link_0, bytes_0)
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_2 = module_0.Link(str_1, none_type_1)
    var_0 = link_2.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_3 = module_0.Link(str_2, none_type_2)
    var_2 = link_3.__repr__()
    assert var_2 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_3 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_4 = module_0.Link(str_3, none_type_3)
    bytes_1 = b"\x802c35Z\xf8"
    link_5 = module_0.Link(link_4, bytes_1)
    var_3 = link_4.__repr__()
    assert var_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    dict_0 = {}
    str_4 = 'y\x0c[fN"W:2&:SWyz~W'
    link_6 = module_0.Link(dict_0, str_4)
    str_5 = " Use '"
    section_0 = module_0.Section(str_5, str_5)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_4 = section_0.__repr__()
    assert var_4 == 'Section(title=" Use \'")'
    int_0 = var_4.__len__()
    assert int_0 == 23
    str_6 = "page_context"
    section_1 = module_0.Section(str_6, str_6)
    str_7 = "' from the site because it conflicts with '"
    list_0 = []
    section_2 = module_0.Section(str_7, list_0)
    str_8 = "0_~6:m!(f5FgU,:rvz"
    none_type_4 = None
    link_7 = module_0.Link(str_8, none_type_4)
    link_8 = module_0.Link(none_type_4, dict_0)


def test_case_89():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_1, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_1 = link_0.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_2 = "page_context"
    section_1 = module_0.Section(str_2, str_2)
    var_2 = var_1.__repr__()
    assert var_2 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    list_0 = [link_0, var_2]
    section_2 = module_0.Section(var_1, list_0)
    assert section_2.title == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"


def test_case_90():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_1 = var_0.__str__()
    assert str_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_2 = "page_context"
    section_0 = module_0.Section(str_2, str_2)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_3 = "' from the site because it conflicts with '"
    list_0 = []
    section_1 = module_0.Section(str_3, list_0)
    str_4 = "localhost"
    link_1 = module_0.Link(str_3, str_4)
    str_5 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_2 = module_0.Link(str_5, none_type_1)
    bytes_0 = b"\x802c35Z\xf8"
    link_3 = module_0.Link(link_2, bytes_0)
    var_2 = link_2.__repr__()
    assert var_2 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_6 = "page_context"
    section_2 = module_0.Section(str_6, str_6)
    str_7 = "' from the site because it conflicts with '"
    list_1 = []
    section_3 = module_0.Section(str_7, list_1)
    iterator_0 = var_0.__iter__()


def test_case_91():
    str_0 = "page_context"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = "' from the site because it conflicts with '"
    list_0 = []
    section_1 = module_0.Section(str_1, list_0)
    var_0 = section_1.__repr__()
    assert var_0 == "Section(title=\"' from the site because it conflicts with '\")"
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_2, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_1 = link_0.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_2 = var_1.__repr__()
    assert var_2 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_3 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_3, none_type_1)
    var_3 = link_1.__repr__()
    assert var_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_4 = "page_context"
    section_2 = module_0.Section(str_4, str_4)
    str_5 = "' from the site because it conflicts with '"
    list_1 = []
    section_3 = module_0.Section(str_5, list_1)
    str_6 = "localhost"
    link_2 = module_0.Link(str_5, str_6)
    str_7 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_3 = module_0.Link(str_7, none_type_2)
    bytes_0 = b"\x802c35Z\xf8"
    link_4 = module_0.Link(link_3, bytes_0)
    var_4 = link_3.__repr__()
    assert var_4 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_8 = "+?:| $N[?$|."
    section_4 = module_0.Section(str_8, var_1)
    assert section_4.children == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"


def test_case_92():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    bytes_0 = b"\x802c35Z\xf8"
    link_1 = module_0.Link(link_0, bytes_0)
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_1 = " Use '"
    section_0 = module_0.Section(str_1, str_1)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_1 = section_0.__repr__()
    assert var_1 == 'Section(title=" Use \'")'
    var_2 = var_1.__repr__()
    assert var_2 == "'Section(title=\" Use \\'\")'"
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_2 = module_0.Link(str_2, none_type_1)
    bytes_1 = b"\x802c35Z\xf8"
    link_3 = module_0.Link(link_2, bytes_1)
    dict_0 = {}
    str_3 = 'y\x0c[fN"W:2&:SWyz~W'
    link_4 = module_0.Link(dict_0, str_3)
    str_4 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_5 = module_0.Link(str_4, none_type_2)
    bytes_2 = b"\x802c35Z\xf8"
    link_6 = module_0.Link(link_5, bytes_2)
    dict_1 = {}
    str_5 = 'y\x0c[fN"W:2&:SWyz~W'
    link_7 = module_0.Link(dict_1, str_5)
    var_3 = link_6.__repr__()
    assert (
        var_3
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )
    str_6 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_8 = module_0.Link(str_6, none_type_3)
    var_4 = link_8.__repr__()
    assert var_4 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_5 = var_4.__repr__()
    assert var_5 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_7 = var_4.__str__()
    assert str_7 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    iterator_0 = var_4.__iter__()


def test_case_93():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_1 = var_0.__str__()
    assert str_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_2 = " Use '"
    section_0 = module_0.Section(str_2, str_2)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_2 = section_0.__repr__()
    assert var_2 == 'Section(title=" Use \'")'
    str_3 = " Use '"
    section_1 = module_0.Section(str_3, str_3)
    var_3 = section_1.__repr__()
    assert var_3 == 'Section(title=" Use \'")'
    var_4 = var_3.__repr__()
    assert var_4 == "'Section(title=\" Use \\'\")'"
    str_4 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_4, none_type_1)
    bytes_0 = b"\x802c35Z\xf8"
    link_2 = module_0.Link(link_1, bytes_0)
    str_5 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_3 = module_0.Link(str_5, none_type_2)
    var_5 = link_3.__repr__()
    assert var_5 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_6 = var_5.__repr__()
    assert var_6 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_6 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_4 = module_0.Link(str_6, none_type_3)
    bytes_1 = b"\x802c35Z\xf8"
    link_5 = module_0.Link(link_4, bytes_1)
    var_7 = link_4.__repr__()
    assert var_7 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_7 = "0_~6:m!(f5FgU,:rvz"
    none_type_4 = None
    link_6 = module_0.Link(str_7, none_type_4)
    str_8 = "0_~6:m!(f5FgU,:rvz"
    none_type_5 = None
    link_7 = module_0.Link(str_8, none_type_5)
    var_8 = link_7.__repr__()
    assert var_8 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    dict_0 = {}
    str_9 = 'y\x0c[fN"W:2&:SWyz~W'
    link_8 = module_0.Link(dict_0, str_9)
    var_9 = link_6.__repr__()
    assert var_9 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"


def test_case_94():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    str_1 = "page_context"
    section_0 = module_0.Section(str_1, str_1)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_2 = "' from the site because it conflicts with '"
    list_0 = []
    section_1 = module_0.Section(str_2, list_0)
    str_3 = "localhost"
    link_1 = module_0.Link(str_2, str_3)
    str_4 = "page_context"
    section_2 = module_0.Section(str_4, str_4)
    str_5 = "' from the site because it conflicts with '"
    list_1 = []
    section_3 = module_0.Section(str_5, list_1)
    var_0 = section_3.__repr__()
    assert var_0 == "Section(title=\"' from the site because it conflicts with '\")"
    str_6 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_2 = module_0.Link(str_6, none_type_1)
    bytes_0 = b"\x802c35Z\xf8"
    link_3 = module_0.Link(link_2, bytes_0)
    dict_0 = {}
    str_7 = 'y\x0c[fN"W:2&:SWyz~W'
    link_4 = module_0.Link(dict_0, str_7)
    var_1 = link_3.__repr__()
    assert (
        var_1
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )
    str_8 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_5 = module_0.Link(str_8, none_type_2)
    var_2 = link_5.__repr__()
    assert var_2 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_3 = var_2.__repr__()
    assert var_3 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_9 = "mkdocs_"
    link_6 = module_0.Link(var_1, str_9)
    assert (
        link_6.title
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )


def test_case_95():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    int_0 = var_0.__len__()
    assert int_0 == 23
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_1, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_1 = link_0.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_2, none_type_1)
    bytes_0 = b"\x802c35Z\xf8"
    link_2 = module_0.Link(link_1, bytes_0)
    var_2 = link_1.__repr__()
    assert var_2 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_3 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_3 = module_0.Link(str_3, none_type_2)
    str_4 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_4 = module_0.Link(str_4, none_type_3)
    bytes_1 = b"\x802c35Z\xf8"
    link_5 = module_0.Link(link_4, bytes_1)
    str_5 = "page_context"
    section_1 = module_0.Section(str_5, str_5)
    str_6 = "' from the site because it conflicts with '"
    list_0 = []
    section_2 = module_0.Section(str_6, list_0)
    var_3 = section_2.__repr__()
    assert var_3 == "Section(title=\"' from the site because it conflicts with '\")"
    str_7 = " Use '"
    section_3 = module_0.Section(str_7, str_7)
    var_4 = section_3.__repr__()
    assert var_4 == 'Section(title=" Use \'")'
    var_5 = var_4.__repr__()
    assert var_5 == "'Section(title=\" Use \\'\")'"
    str_8 = "0_~6:m!(f5FgU,:rvz"
    none_type_4 = None
    link_6 = module_0.Link(str_8, none_type_4)
    bytes_2 = b"\x802c35Z\xf8"
    link_7 = module_0.Link(link_6, bytes_2)
    dict_0 = {}
    str_9 = 'y\x0c[fN"W:2&:SWyz~W'
    link_8 = module_0.Link(dict_0, str_9)
    var_6 = link_7.__repr__()
    assert (
        var_6
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )
    str_10 = "0_~6:m!(f5FgU,:rvz"
    none_type_5 = None
    link_9 = module_0.Link(str_10, none_type_5)
    var_7 = link_9.__repr__()
    assert var_7 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_8 = var_7.__repr__()
    assert var_8 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_11 = "page_context"
    section_4 = module_0.Section(str_11, str_11)
    str_12 = "' from the site because it conflicts with '"
    list_1 = []
    section_5 = module_0.Section(str_12, list_1)
    str_13 = "localhost"
    link_10 = module_0.Link(str_12, str_13)
    link_11 = module_0.Link(none_type_1, var_1)
    assert link_11.url == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"


def test_case_96():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_1, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_1 = link_0.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    dict_0 = {}
    str_2 = 'y\x0c[fN"W:2&:SWyz~W'
    link_1 = module_0.Link(dict_0, str_2)
    str_3 = " Use '"
    section_1 = module_0.Section(str_3, str_3)
    var_2 = section_1.__repr__()
    assert var_2 == 'Section(title=" Use \'")'
    int_0 = var_2.__len__()
    assert int_0 == 23
    str_4 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_2 = module_0.Link(str_4, none_type_1)
    bytes_0 = b"\x802c35Z\xf8"
    link_3 = module_0.Link(link_2, bytes_0)
    var_3 = link_2.__repr__()
    assert var_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_5 = "page_context"
    section_2 = module_0.Section(str_5, str_5)
    str_6 = "' from the site because it conflicts with '"
    list_0 = []
    section_3 = module_0.Section(str_6, list_0)
    str_7 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_4 = module_0.Link(str_7, none_type_2)
    var_4 = link_4.__repr__()
    assert var_4 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_5 = var_4.__repr__()
    assert var_5 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_8 = " Use '"
    section_4 = module_0.Section(str_8, str_8)
    var_6 = section_4.__repr__()
    assert var_6 == 'Section(title=" Use \'")'
    var_7 = var_6.__repr__()
    assert var_7 == "'Section(title=\" Use \\'\")'"
    link_5 = module_0.Link(var_4, var_6)
    assert link_5.title == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    assert link_5.url == 'Section(title=" Use \'")'


def test_case_97():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    bytes_0 = b"\x802c35Z\xf8"
    link_1 = module_0.Link(link_0, bytes_0)
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_2 = module_0.Link(str_1, none_type_1)
    bytes_1 = b"\x802c35Z\xf8"
    link_3 = module_0.Link(link_2, bytes_1)
    dict_0 = {}
    str_2 = 'y\x0c[fN"W:2&:SWyz~W'
    link_4 = module_0.Link(dict_0, str_2)
    var_0 = link_3.__repr__()
    assert (
        var_0
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )
    str_3 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_5 = module_0.Link(str_3, none_type_2)
    bytes_2 = b"\x802c35Z\xf8"
    link_6 = module_0.Link(link_5, bytes_2)
    var_1 = link_5.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    iterator_0 = var_1.__iter__()


def test_case_98():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_1 = var_0.__str__()
    assert str_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_2, none_type_1)
    bytes_0 = b"\x802c35Z\xf8"
    link_2 = module_0.Link(link_1, bytes_0)
    var_2 = link_1.__repr__()
    assert var_2 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_3 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_3 = module_0.Link(str_3, none_type_2)
    bytes_1 = b"\x802c35Z\xf8"
    link_4 = module_0.Link(link_3, bytes_1)
    dict_0 = {}
    str_4 = 'y\x0c[fN"W:2&:SWyz~W'
    link_5 = module_0.Link(dict_0, str_4)
    var_3 = link_4.__repr__()
    assert (
        var_3
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )
    str_5 = " Use '"
    section_0 = module_0.Section(str_5, str_5)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_4 = section_0.__repr__()
    assert var_4 == 'Section(title=" Use \'")'
    int_0 = var_4.__len__()
    assert int_0 == 23
    str_6 = "page_context"
    section_1 = module_0.Section(str_6, str_6)
    str_7 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_6 = module_0.Link(str_7, none_type_3)
    bytes_2 = b"\x802c35Z\xf8"
    link_7 = module_0.Link(link_6, bytes_2)
    str_8 = "page_context"
    section_2 = module_0.Section(str_8, str_8)
    str_9 = "' from the site because it conflicts with '"
    list_0 = []
    section_3 = module_0.Section(str_9, list_0)
    var_5 = section_3.__repr__()
    assert var_5 == "Section(title=\"' from the site because it conflicts with '\")"
    var_6 = var_2.__repr__()
    assert var_6 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""


def test_case_99():
    str_0 = "page_context"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_1, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    bytes_0 = b"\x802c35Z\xf8"
    link_1 = module_0.Link(link_0, bytes_0)
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_2 = module_0.Link(str_2, none_type_1)
    var_1 = link_2.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_3 = "page_context"
    section_1 = module_0.Section(str_3, str_3)
    str_4 = "' from the site because it conflicts with '"
    list_0 = []
    section_2 = module_0.Section(str_4, list_0)
    str_5 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_3 = module_0.Link(str_5, none_type_2)
    str_6 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_4 = module_0.Link(str_6, none_type_3)
    var_2 = link_4.__repr__()
    assert var_2 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_3 = var_2.__repr__()
    assert var_3 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_7 = "0_~6:m!(f5FgU,:rvz"
    none_type_4 = None
    link_5 = module_0.Link(str_7, none_type_4)
    var_4 = link_5.__repr__()
    assert var_4 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_5 = var_4.__repr__()
    assert var_5 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_8 = var_4.__str__()
    assert str_8 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    dict_0 = {}
    str_9 = 'y\x0c[fN"W:2&:SWyz~W'
    link_6 = module_0.Link(dict_0, str_9)
    str_10 = "0_~6:m!(f5FgU,:rvz"
    none_type_5 = None
    link_7 = module_0.Link(str_10, none_type_5)
    bytes_1 = b"\x802c35Z\xf8"
    link_8 = module_0.Link(link_7, bytes_1)
    section_3 = module_0.Section(dict_0, none_type_5)


def test_case_100():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    bytes_0 = b"\x802c35Z\xf8"
    link_1 = module_0.Link(link_0, bytes_0)
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_2 = module_0.Link(str_1, none_type_1)
    var_0 = link_2.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_2 = "page_context"
    section_0 = module_0.Section(str_2, str_2)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_3 = " Use '"
    section_1 = module_0.Section(str_3, str_3)
    var_1 = section_1.__repr__()
    assert var_1 == 'Section(title=" Use \'")'
    str_4 = "KK0_N G(#3ztoo0"
    section_2 = module_0.Section(str_4, var_1)
    assert section_2.children == 'Section(title=" Use \'")'


def test_case_101():
    str_0 = "page_context"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = "' from the site because it conflicts with '"
    list_0 = []
    section_1 = module_0.Section(str_1, list_0)
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_2, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    bytes_0 = b"\x802c35Z\xf8"
    link_1 = module_0.Link(link_0, bytes_0)
    section_2 = module_0.Section(none_type_0, list_0)


def test_case_102():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    bytes_0 = b"\x802c35Z\xf8"
    link_1 = module_0.Link(link_0, bytes_0)
    str_1 = " Use '"
    section_0 = module_0.Section(str_1, str_1)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    str_2 = "page_context"
    section_1 = module_0.Section(str_2, str_2)
    str_3 = " Use '"
    section_2 = module_0.Section(str_3, str_3)
    var_1 = section_2.__repr__()
    assert var_1 == 'Section(title=" Use \'")'
    var_2 = var_1.__repr__()
    assert var_2 == "'Section(title=\" Use \\'\")'"
    var_3 = link_0.__repr__()
    assert var_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_4 = var_3.__repr__()
    assert var_4 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""


def test_case_103():
    str_0 = "page_context"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = "' from the site because it conflicts with '"
    list_0 = []
    section_1 = module_0.Section(str_1, list_0)
    var_0 = section_1.__repr__()
    assert var_0 == "Section(title=\"' from the site because it conflicts with '\")"
    str_2 = " Use '"
    section_2 = module_0.Section(str_2, str_2)
    var_1 = section_2.__repr__()
    assert var_1 == 'Section(title=" Use \'")'
    int_0 = var_1.__len__()
    assert int_0 == 23
    str_3 = "page_context"
    section_3 = module_0.Section(str_3, str_3)
    str_4 = "' from the site because it conflicts with '"
    list_1 = []
    section_4 = module_0.Section(str_4, list_1)
    str_5 = "page_context"
    section_5 = module_0.Section(str_5, str_5)
    str_6 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_6, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    bytes_0 = b"\x802c35Z\xf8"
    link_1 = module_0.Link(link_0, bytes_0)
    dict_0 = {}
    str_7 = 'y\x0c[fN"W:2&:SWyz~W'
    link_2 = module_0.Link(dict_0, str_7)
    var_2 = link_1.__repr__()
    assert (
        var_2
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )
    str_8 = " Use '"
    section_6 = module_0.Section(str_8, str_8)
    var_3 = section_6.__repr__()
    assert var_3 == 'Section(title=" Use \'")'
    str_9 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_3 = module_0.Link(str_9, none_type_1)
    str_10 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_4 = module_0.Link(str_10, none_type_2)
    var_4 = link_4.__repr__()
    assert var_4 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    dict_1 = {}
    str_11 = 'y\x0c[fN"W:2&:SWyz~W'
    link_5 = module_0.Link(dict_1, str_11)
    str_12 = " Use '"
    section_7 = module_0.Section(str_12, str_12)
    var_5 = section_7.__repr__()
    assert var_5 == 'Section(title=" Use \'")'
    var_6 = var_5.__repr__()
    assert var_6 == "'Section(title=\" Use \\'\")'"
    var_7 = section_6.__repr__()
    assert var_7 == 'Section(title=" Use \'")'


def test_case_104():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_1 = " Use '"
    section_0 = module_0.Section(str_1, str_1)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_1 = section_0.__repr__()
    assert var_1 == 'Section(title=" Use \'")'
    int_0 = var_1.__len__()
    assert int_0 == 23
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_2, none_type_1)
    bytes_0 = b"\x802c35Z\xf8"
    link_2 = module_0.Link(link_1, bytes_0)
    dict_0 = {}
    str_3 = 'y\x0c[fN"W:2&:SWyz~W'
    link_3 = module_0.Link(dict_0, str_3)
    var_2 = link_2.__repr__()
    assert (
        var_2
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )
    str_4 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_4 = module_0.Link(str_4, none_type_2)
    str_5 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_5 = module_0.Link(str_5, none_type_3)
    bytes_1 = b"\x802c35Z\xf8"
    link_6 = module_0.Link(link_5, bytes_1)
    str_6 = "0_~6:m!(f5FgU,:rvz"
    none_type_4 = None
    link_7 = module_0.Link(str_6, none_type_4)
    var_3 = link_7.__repr__()
    assert var_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_4 = var_3.__repr__()
    assert var_4 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_7 = var_3.__str__()
    assert str_7 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_8 = "page_context"
    section_1 = module_0.Section(str_8, str_8)
    str_9 = "' from the site because it conflicts with '"
    list_0 = []
    section_2 = module_0.Section(str_9, list_0)
    str_10 = "localhost"
    link_8 = module_0.Link(str_9, str_10)
    str_11 = "0_~6:m!(f5FgU,:rvz"
    none_type_5 = None
    link_9 = module_0.Link(str_11, none_type_5)
    var_5 = link_9.__repr__()
    assert var_5 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_6 = var_5.__repr__()
    assert var_6 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    link_10 = module_0.Link(dict_0, var_4)
    assert link_10.url == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""


def test_case_105():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_1 = " Use '"
    section_0 = module_0.Section(str_1, str_1)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_1 = section_0.__repr__()
    assert var_1 == 'Section(title=" Use \'")'
    int_0 = var_1.__len__()
    assert int_0 == 23
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_2, none_type_1)
    var_2 = link_1.__repr__()
    assert var_2 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_3 = var_2.__repr__()
    assert var_3 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_3 = "Af[~\\bJ(,Qfto/=ds"
    list_0 = [var_1]
    section_1 = module_0.Section(str_3, list_0)
    assert section_1.children == ['Section(title=" Use \'")']


def test_case_106():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    int_0 = var_0.__len__()
    assert int_0 == 23
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_1, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    int_1 = var_0.__len__()
    assert int_1 == 23


def test_case_107():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_1 = var_0.__str__()
    assert str_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_2 = var_0.__repr__()
    assert var_2 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""


def test_case_108():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    int_0 = var_0.__len__()
    assert int_0 == 23
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_1, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    int_1 = var_0.__len__()
    assert int_1 == 23
    dict_0 = {}
    str_2 = 'y\x0c[fN"W:2&:SWyz~W'
    link_1 = module_0.Link(dict_0, str_2)
    str_3 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_2 = module_0.Link(str_3, none_type_1)
    var_1 = link_2.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_2 = var_1.__repr__()
    assert var_2 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_4 = var_1.__str__()
    assert str_4 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_5 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_3 = module_0.Link(str_5, none_type_2)
    bytes_0 = b"\x802c35Z\xf8"
    link_4 = module_0.Link(link_3, bytes_0)
    var_3 = link_3.__repr__()
    assert var_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_4 = link_2.__repr__()
    assert var_4 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"


def test_case_109():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    int_0 = var_0.__len__()
    assert int_0 == 23
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_1, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_1 = link_0.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_2 = var_1.__repr__()
    assert var_2 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_2 = var_1.__str__()
    assert str_2 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_3 = "page_context"
    section_1 = module_0.Section(str_3, str_3)
    str_4 = "' from the site because it conflicts with '"
    list_0 = []
    section_2 = module_0.Section(str_4, list_0)
    str_5 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_5, none_type_1)
    bytes_0 = b"\x802c35Z\xf8"
    link_2 = module_0.Link(link_1, bytes_0)
    dict_0 = {}
    str_6 = 'y\x0c[fN"W:2&:SWyz~W'
    link_3 = module_0.Link(dict_0, str_6)
    var_3 = link_2.__repr__()
    assert (
        var_3
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )
    str_7 = "page_context"
    section_3 = module_0.Section(str_7, str_7)
    str_8 = "' from the site because it conflicts with '"
    list_1 = []
    section_4 = module_0.Section(str_8, list_1)
    var_4 = section_4.__repr__()
    assert var_4 == "Section(title=\"' from the site because it conflicts with '\")"
    dict_1 = {}
    str_9 = 'y\x0c[fN"W:2&:SWyz~W'
    link_4 = module_0.Link(dict_1, str_9)
    str_10 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_5 = module_0.Link(str_10, none_type_2)
    str_11 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_6 = module_0.Link(str_11, none_type_3)
    var_5 = link_6.__repr__()
    assert var_5 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_6 = var_5.__repr__()
    assert var_6 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_12 = "0_~6:m!(f5FgU,:rvz"
    none_type_4 = None
    link_7 = module_0.Link(str_12, none_type_4)
    var_7 = link_7.__repr__()
    assert var_7 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_8 = var_7.__repr__()
    assert var_8 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_13 = var_7.__str__()
    assert str_13 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_9 = var_7.__repr__()
    assert var_9 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    section_5 = module_0.Section(str_0, var_6)
    assert section_5.children == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""


def test_case_110():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    str_1 = " Use '"
    section_1 = module_0.Section(str_1, str_1)
    var_1 = section_1.__repr__()
    assert var_1 == 'Section(title=" Use \'")'
    var_2 = var_1.__repr__()
    assert var_2 == "'Section(title=\" Use \\'\")'"
    str_2 = "page_context"
    section_2 = module_0.Section(str_2, str_2)
    str_3 = "' from the site because it conflicts with '"
    list_0 = []
    section_3 = module_0.Section(str_3, list_0)
    str_4 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_4, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_3 = link_0.__repr__()
    assert var_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_4 = var_1.__repr__()
    assert var_4 == "'Section(title=\" Use \\'\")'"


def test_case_111():
    dict_0 = {}
    str_0 = 'y\x0c[fN"W:2&:SWyz~W'
    link_0 = module_0.Link(dict_0, str_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == {}
    assert link_0.url == 'y\x0c[fN"W:2&:SWyz~W'
    str_1 = " Use '"
    section_0 = module_0.Section(str_1, str_1)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    str_2 = "page_context"
    section_1 = module_0.Section(str_2, str_2)
    str_3 = "' from the site because it conflicts with '"
    list_0 = []
    section_2 = module_0.Section(str_3, list_0)
    str_4 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_1 = module_0.Link(str_4, none_type_0)
    str_5 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_2 = module_0.Link(str_5, none_type_1)
    var_1 = link_2.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_2 = var_1.__repr__()
    assert var_2 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_6 = var_1.__str__()
    assert str_6 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_7 = " Use '"
    section_3 = module_0.Section(str_7, str_7)
    var_3 = section_3.__repr__()
    assert var_3 == 'Section(title=" Use \'")'
    int_0 = var_3.__len__()
    assert int_0 == 23
    str_8 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_3 = module_0.Link(str_8, none_type_2)
    bytes_0 = b"\x802c35Z\xf8"
    link_4 = module_0.Link(link_3, bytes_0)
    int_1 = var_0.__len__()
    assert int_1 == 23


def test_case_112():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_1 = "page_context"
    section_0 = module_0.Section(str_1, str_1)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_2 = " Use '"
    section_1 = module_0.Section(str_2, str_2)
    var_2 = section_1.__repr__()
    assert var_2 == 'Section(title=" Use \'")'
    int_0 = var_2.__len__()
    assert int_0 == 23
    str_3 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_3, none_type_1)
    int_1 = var_2.__len__()
    assert int_1 == 23
    str_4 = "page_context"
    section_2 = module_0.Section(str_4, str_4)
    str_5 = "' from the site because it conflicts with '"
    list_0 = []
    section_3 = module_0.Section(str_5, list_0)
    str_6 = "localhost"
    link_2 = module_0.Link(str_5, str_6)
    str_7 = "page_context"
    section_4 = module_0.Section(str_7, str_7)
    str_8 = "' from the site because it conflicts with '"
    list_1 = []
    section_5 = module_0.Section(str_8, list_1)
    str_9 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_3 = module_0.Link(str_9, none_type_2)
    bytes_0 = b"\x802c35Z\xf8"
    link_4 = module_0.Link(link_3, bytes_0)
    str_10 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_5 = module_0.Link(str_10, none_type_3)
    var_3 = link_5.__repr__()
    assert var_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_4 = var_3.__repr__()
    assert var_4 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_11 = var_3.__str__()
    assert str_11 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_5 = var_3.__repr__()
    assert var_5 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_12 = "0_~6:m!(f5FgU,:rvz"
    none_type_4 = None
    link_6 = module_0.Link(str_12, none_type_4)
    var_6 = link_6.__repr__()
    assert var_6 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_7 = var_6.__repr__()
    assert var_7 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_13 = var_6.__str__()
    assert str_13 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_14 = "page_context"
    section_6 = module_0.Section(str_14, str_14)
    str_15 = "' from the site because it conflicts with '"
    list_2 = []
    section_7 = module_0.Section(str_15, list_2)
    var_8 = section_7.__repr__()
    assert var_8 == "Section(title=\"' from the site because it conflicts with '\")"
    str_16 = "0_~6:m!(f5FgU,:rvz"
    none_type_5 = None
    link_7 = module_0.Link(str_16, none_type_5)
    bytes_1 = b"\x802c35Z\xf8"
    link_8 = module_0.Link(link_7, bytes_1)
    var_9 = link_7.__repr__()
    assert var_9 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    link_9 = module_0.Link(str_6, list_0)


def test_case_113():
    str_0 = "page_context"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = "' from the site because it conflicts with '"
    list_0 = []
    section_1 = module_0.Section(str_1, list_0)
    str_2 = " Use '"
    section_2 = module_0.Section(str_2, str_2)
    var_0 = section_2.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    int_0 = var_0.__len__()
    assert int_0 == 23
    str_3 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_3, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    int_1 = var_0.__len__()
    assert int_1 == 23
    str_4 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_4, none_type_1)
    var_1 = link_1.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_2 = var_1.__repr__()
    assert var_2 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_5 = var_1.__str__()
    assert str_5 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_6 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_2 = module_0.Link(str_6, none_type_2)
    bytes_0 = b"\x802c35Z\xf8"
    link_3 = module_0.Link(link_2, bytes_0)
    var_3 = link_2.__repr__()
    assert var_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_7 = " Use '"
    section_3 = module_0.Section(str_7, str_7)
    var_4 = section_3.__repr__()
    assert var_4 == 'Section(title=" Use \'")'
    int_2 = var_4.__len__()
    assert int_2 == 23
    int_3 = var_0.__len__()
    assert int_3 == 23


def test_case_114():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_1, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_1 = link_0.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_2 = var_1.__repr__()
    assert var_2 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_2, none_type_1)
    var_3 = link_1.__repr__()
    assert var_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_3 = " Use '"
    section_1 = module_0.Section(str_3, str_3)
    var_4 = section_1.__repr__()
    assert var_4 == 'Section(title=" Use \'")'
    int_0 = var_4.__len__()
    assert int_0 == 23
    str_4 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_2 = module_0.Link(str_4, none_type_2)
    int_1 = var_4.__len__()
    assert int_1 == 23
    str_5 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_3 = module_0.Link(str_5, none_type_3)
    var_5 = link_3.__repr__()
    assert var_5 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_6 = var_5.__repr__()
    assert var_6 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_6 = var_5.__str__()
    assert str_6 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    section_2 = module_0.Section(str_0, var_1)
    assert section_2.children == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"


def test_case_115():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_1 = var_0.__str__()
    assert str_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_2 = "page_context"
    section_0 = module_0.Section(str_2, str_2)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_3 = "' from the site because it conflicts with '"
    list_0 = []
    section_1 = module_0.Section(str_3, list_0)
    str_4 = "page_context"
    section_2 = module_0.Section(str_4, str_4)
    str_5 = " Use '"
    section_3 = module_0.Section(str_5, str_5)
    var_2 = section_3.__repr__()
    assert var_2 == 'Section(title=" Use \'")'
    var_3 = var_2.__repr__()
    assert var_3 == "'Section(title=\" Use \\'\")'"
    str_6 = "page_context"
    section_4 = module_0.Section(str_6, str_6)
    str_7 = "' from the site because it conflicts with '"
    list_1 = []
    section_5 = module_0.Section(str_7, list_1)
    str_8 = "localhost"
    link_1 = module_0.Link(str_7, str_8)
    str_9 = " Use '"
    section_6 = module_0.Section(str_9, str_9)
    var_4 = section_6.__repr__()
    assert var_4 == 'Section(title=" Use \'")'
    int_0 = var_4.__len__()
    assert int_0 == 23
    str_10 = "page_context"
    section_7 = module_0.Section(str_10, str_10)
    str_11 = "' from the site because it conflicts with '"
    list_2 = []
    section_8 = module_0.Section(str_11, list_2)
    var_5 = section_8.__repr__()
    assert var_5 == "Section(title=\"' from the site because it conflicts with '\")"
    str_12 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_2 = module_0.Link(str_12, none_type_1)
    var_6 = link_2.__repr__()
    assert var_6 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_7 = var_6.__repr__()
    assert var_7 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_13 = " Use '"
    section_9 = module_0.Section(str_13, str_13)
    var_8 = section_9.__repr__()
    assert var_8 == 'Section(title=" Use \'")'
    str_14 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_3 = module_0.Link(str_14, none_type_2)
    var_9 = link_3.__repr__()
    assert var_9 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_10 = var_9.__repr__()
    assert var_10 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_15 = var_9.__str__()
    assert str_15 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_11 = var_9.__repr__()
    assert var_11 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    iterator_0 = var_8.__iter__()
    link_4 = module_0.Link(iterator_0, str_3)


def test_case_116():
    str_0 = "page_context"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = "' from the site because it conflicts with '"
    list_0 = []
    section_1 = module_0.Section(str_1, list_0)
    var_0 = section_1.__repr__()
    assert var_0 == "Section(title=\"' from the site because it conflicts with '\")"
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_2, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    bytes_0 = b"\x802c35Z\xf8"
    link_1 = module_0.Link(link_0, bytes_0)
    var_1 = link_0.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_3 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_2 = module_0.Link(str_3, none_type_1)
    var_2 = link_2.__repr__()
    assert var_2 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_3 = var_2.__repr__()
    assert var_3 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_4 = var_2.__str__()
    assert str_4 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_5 = "page_context"
    section_2 = module_0.Section(str_5, str_5)
    str_6 = "' from the site because it conflicts with '"
    list_1 = []
    section_3 = module_0.Section(str_6, list_1)
    str_7 = " Use '"
    section_4 = module_0.Section(str_7, str_7)
    var_4 = section_4.__repr__()
    assert var_4 == 'Section(title=" Use \'")'
    int_0 = var_4.__len__()
    assert int_0 == 23
    str_8 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_3 = module_0.Link(str_8, none_type_2)
    int_1 = var_4.__len__()
    assert int_1 == 23
    str_9 = var_2.__str__()
    assert str_9 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"


def test_case_117():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_1 = var_0.__str__()
    assert str_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_2 = var_0.__repr__()
    assert var_2 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_2, none_type_1)
    var_3 = link_1.__repr__()
    assert var_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_4 = var_3.__repr__()
    assert var_4 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_3 = var_3.__str__()
    assert str_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_4 = "page_context"
    section_0 = module_0.Section(str_4, str_4)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_5 = "' from the site because it conflicts with '"
    list_0 = []
    section_1 = module_0.Section(str_5, list_0)
    str_6 = " Use '"
    section_2 = module_0.Section(str_6, str_6)
    var_5 = section_2.__repr__()
    assert var_5 == 'Section(title=" Use \'")'
    str_7 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_2 = module_0.Link(str_7, none_type_2)
    var_6 = link_2.__repr__()
    assert var_6 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_7 = var_6.__repr__()
    assert var_7 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_8 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_3 = module_0.Link(str_8, none_type_3)
    str_9 = "s?"
    link_4 = module_0.Link(str_9, str_8)


def test_case_118():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    int_0 = var_0.__len__()
    assert int_0 == 23
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_1, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    int_1 = var_0.__len__()
    assert int_1 == 23
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_2, none_type_1)
    bytes_0 = b"\x802c35Z\xf8"
    link_2 = module_0.Link(link_1, bytes_0)
    var_1 = link_1.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_3 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_3 = module_0.Link(str_3, none_type_2)
    bytes_1 = b"\x802c35Z\xf8"
    link_4 = module_0.Link(link_3, bytes_1)
    dict_0 = {}
    str_4 = 'y\x0c[fN"W:2&:SWyz~W'
    link_5 = module_0.Link(dict_0, str_4)
    var_2 = link_4.__repr__()
    assert (
        var_2
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )
    str_5 = var_0.__str__()
    assert str_5 == 'Section(title=" Use \'")'


def test_case_119():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    bytes_0 = b"\x802c35Z\xf8"
    link_1 = module_0.Link(link_0, bytes_0)
    dict_0 = {}
    str_1 = 'y\x0c[fN"W:2&:SWyz~W'
    link_2 = module_0.Link(dict_0, str_1)
    var_0 = link_1.__repr__()
    assert (
        var_0
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_3 = module_0.Link(str_2, none_type_1)
    var_1 = link_3.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_2 = var_1.__repr__()
    assert var_2 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_3 = var_1.__repr__()
    assert var_3 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""


def test_case_120():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    int_0 = var_0.__len__()
    assert int_0 == 23
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_1, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    int_1 = var_0.__len__()
    assert int_1 == 23
    str_2 = " Use '"
    section_1 = module_0.Section(str_2, str_2)
    var_1 = section_1.__repr__()
    assert var_1 == 'Section(title=" Use \'")'
    int_2 = var_1.__len__()
    assert int_2 == 23
    str_3 = " Use '"
    section_2 = module_0.Section(str_3, str_3)
    var_2 = section_2.__repr__()
    assert var_2 == 'Section(title=" Use \'")'
    int_3 = var_1.__len__()
    assert int_3 == 23


def test_case_121():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    bytes_0 = b"\x802c35Z\xf8"
    link_1 = module_0.Link(link_0, bytes_0)
    str_1 = " Use '"
    section_0 = module_0.Section(str_1, str_1)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    int_0 = var_0.__len__()
    assert int_0 == 23
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_2 = module_0.Link(str_2, none_type_1)
    int_1 = var_0.__len__()
    assert int_1 == 23
    str_3 = " Use '"
    section_1 = module_0.Section(str_3, str_3)
    var_1 = section_1.__repr__()
    assert var_1 == 'Section(title=" Use \'")'
    dict_0 = {}
    str_4 = 'y\x0c[fN"W:2&:SWyz~W'
    link_3 = module_0.Link(dict_0, str_4)
    str_5 = "page_context"
    section_2 = module_0.Section(str_5, str_5)
    str_6 = "' from the site because it conflicts with '"
    list_0 = []
    section_3 = module_0.Section(str_6, list_0)
    str_7 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_4 = module_0.Link(str_7, none_type_2)
    var_2 = link_1.__repr__()
    assert (
        var_2
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )


def test_case_122():
    str_0 = "page_context"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = " Use '"
    section_1 = module_0.Section(str_1, str_1)
    var_0 = section_1.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    int_0 = var_0.__len__()
    assert int_0 == 23
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_2, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_1 = link_0.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_2 = var_1.__repr__()
    assert var_2 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_3 = var_1.__str__()
    assert str_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_3 = var_1.__repr__()
    assert var_3 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_4 = " Use '"
    section_2 = module_0.Section(str_4, str_4)
    var_4 = section_2.__repr__()
    assert var_4 == 'Section(title=" Use \'")'
    int_1 = var_4.__len__()
    assert int_1 == 23
    str_5 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_5, none_type_1)
    int_2 = var_4.__len__()
    assert int_2 == 23
    str_6 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_2 = module_0.Link(str_6, none_type_2)
    bytes_0 = b"\x802c35Z\xf8"
    link_3 = module_0.Link(link_2, bytes_0)
    var_5 = link_2.__repr__()
    assert var_5 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_7 = " Use '"
    section_3 = module_0.Section(str_7, str_7)
    var_6 = section_3.__repr__()
    assert var_6 == 'Section(title=" Use \'")'
    str_8 = "page_context"
    section_4 = module_0.Section(str_8, str_8)
    str_9 = "' from the site because it conflicts with '"
    list_0 = []
    section_5 = module_0.Section(str_9, list_0)
    str_10 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_4 = module_0.Link(str_10, none_type_3)
    var_7 = link_4.__repr__()
    assert var_7 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_8 = var_7.__repr__()
    assert var_8 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_9 = var_3.__repr__()
    assert var_9 == "'\"Link(title=\\'0_~6:m!(f5FgU,:rvz\\', url=None)\"'"


def test_case_123():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    bytes_0 = b"\x802c35Z\xf8"
    link_1 = module_0.Link(link_0, bytes_0)
    str_1 = " Use '"
    section_0 = module_0.Section(str_1, str_1)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    int_0 = var_0.__len__()
    assert int_0 == 23
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_2 = module_0.Link(str_2, none_type_1)
    int_1 = var_0.__len__()
    assert int_1 == 23
    var_1 = var_0.__repr__()
    assert var_1 == "'Section(title=\" Use \\'\")'"


def test_case_124():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    section_1 = module_0.Section(str_0, var_0)
    assert section_1.children == 'Section(title=" Use \'")'


def test_case_125():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    int_0 = var_0.__len__()
    assert int_0 == 23
    var_1 = var_0.__repr__()
    assert var_1 == "'Section(title=\" Use \\'\")'"


def test_case_126():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    bytes_0 = b"\x802c35Z\xf8"
    link_1 = module_0.Link(link_0, bytes_0)
    dict_0 = {}
    str_1 = 'y\x0c[fN"W:2&:SWyz~W'
    link_2 = module_0.Link(dict_0, str_1)
    var_0 = link_1.__repr__()
    assert (
        var_0
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )
    str_2 = "page_context"
    section_0 = module_0.Section(str_2, str_2)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_3 = "' from the site because it conflicts with '"
    list_0 = []
    section_1 = module_0.Section(str_3, list_0)
    str_4 = " Use '"
    section_2 = module_0.Section(str_4, str_4)
    var_1 = section_2.__repr__()
    assert var_1 == 'Section(title=" Use \'")'
    int_0 = var_1.__len__()
    assert int_0 == 23
    str_5 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_3 = module_0.Link(str_5, none_type_1)
    var_2 = link_3.__repr__()
    assert var_2 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_3 = var_2.__repr__()
    assert var_3 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_6 = var_2.__str__()
    assert str_6 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_7 = "page_context"
    section_3 = module_0.Section(str_7, str_7)
    link_4 = module_0.Link(var_1, str_7)
    assert link_4.title == 'Section(title=" Use \'")'


def test_case_127():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    bytes_0 = b"\x802c35Z\xf8"
    link_1 = module_0.Link(link_0, bytes_0)
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_2 = module_0.Link(str_1, none_type_1)
    var_1 = link_2.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_3 = module_0.Link(str_2, none_type_2)
    bytes_1 = b"\x802c35Z\xf8"
    link_4 = module_0.Link(link_3, bytes_1)
    dict_0 = {}
    str_3 = 'y\x0c[fN"W:2&:SWyz~W'
    link_5 = module_0.Link(dict_0, str_3)
    var_2 = link_4.__repr__()
    assert (
        var_2
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )
    str_4 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_6 = module_0.Link(str_4, none_type_3)
    bytes_2 = b"\x802c35Z\xf8"
    link_7 = module_0.Link(link_6, bytes_2)
    str_5 = "page_context"
    section_0 = module_0.Section(str_5, str_5)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    dict_1 = {}
    str_6 = 'y\x0c[fN"W:2&:SWyz~W'
    link_8 = module_0.Link(dict_1, str_6)
    str_7 = " Use '"
    section_1 = module_0.Section(str_7, str_7)
    var_3 = section_1.__repr__()
    assert var_3 == 'Section(title=" Use \'")'
    int_0 = var_3.__len__()
    assert int_0 == 23
    str_8 = "0_~6:m!(f5FgU,:rvz"
    none_type_4 = None
    link_9 = module_0.Link(str_8, none_type_4)
    int_1 = var_3.__len__()
    assert int_1 == 23
    str_9 = "0_~6:m!(f5FgU,:rvz"
    none_type_5 = None
    link_10 = module_0.Link(str_9, none_type_5)
    var_4 = link_10.__repr__()
    assert var_4 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_5 = var_4.__repr__()
    assert var_5 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_10 = var_4.__str__()
    assert str_10 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_6 = var_4.__repr__()
    assert var_6 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    section_2 = module_0.Section(var_0, var_2)
    assert section_2.title == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    assert (
        section_2.children
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )


def test_case_128():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_1 = var_0.__str__()
    assert str_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_2 = var_0.__repr__()
    assert var_2 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_2 = "page_context"
    section_0 = module_0.Section(str_2, str_2)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_3 = "' from the site because it conflicts with '"
    list_0 = []
    section_1 = module_0.Section(str_3, list_0)
    var_3 = section_1.__repr__()
    assert var_3 == "Section(title=\"' from the site because it conflicts with '\")"
    str_4 = "page_context"
    section_2 = module_0.Section(str_4, str_4)
    str_5 = "' from the site because it conflicts with '"
    list_1 = []
    section_3 = module_0.Section(str_5, list_1)
    str_6 = "localhost"
    link_1 = module_0.Link(str_5, str_6)
    str_7 = "page_context"
    section_4 = module_0.Section(str_7, str_7)
    str_8 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_2 = module_0.Link(str_8, none_type_1)
    var_4 = link_2.__repr__()
    assert var_4 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_5 = var_4.__repr__()
    assert var_5 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_9 = var_4.__str__()
    assert str_9 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_10 = " Use '"
    section_5 = module_0.Section(str_10, str_10)
    var_6 = section_5.__repr__()
    assert var_6 == 'Section(title=" Use \'")'
    link_3 = module_0.Link(link_1, str_8)


def test_case_129():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    bytes_0 = b"\x802c35Z\xf8"
    link_1 = module_0.Link(link_0, bytes_0)
    str_1 = " Use '"
    section_0 = module_0.Section(str_1, str_1)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    section_1 = module_0.Section(str_1, var_0)
    assert section_1.children == 'Section(title=" Use \'")'
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_2 = module_0.Link(str_2, none_type_1)
    var_1 = link_2.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_2 = var_1.__repr__()
    assert var_2 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_3 = var_1.__str__()
    assert str_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    dict_0 = {}
    str_4 = 'y\x0c[fN"W:2&:SWyz~W'
    link_3 = module_0.Link(dict_0, str_4)
    str_5 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_4 = module_0.Link(str_5, none_type_2)
    str_6 = "page_context"
    section_2 = module_0.Section(str_6, str_6)
    str_7 = "' from the site because it conflicts with '"
    list_0 = []
    section_3 = module_0.Section(str_7, list_0)
    var_3 = section_3.__repr__()
    assert var_3 == "Section(title=\"' from the site because it conflicts with '\")"
    str_8 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_5 = module_0.Link(str_8, none_type_3)
    var_4 = link_5.__repr__()
    assert var_4 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_5 = var_4.__repr__()
    assert var_5 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_9 = " Use '"
    section_4 = module_0.Section(str_9, str_9)
    var_6 = section_4.__repr__()
    assert var_6 == 'Section(title=" Use \'")'
    int_0 = var_6.__len__()
    assert int_0 == 23
    var_7 = var_6.__repr__()
    assert var_7 == "'Section(title=\" Use \\'\")'"
    var_8 = section_2.__repr__()
    assert var_8 == "Section(title='page_context')"


def test_case_130():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    bytes_0 = b"\x802c35Z\xf8"
    link_1 = module_0.Link(link_0, bytes_0)
    dict_0 = {}
    str_1 = 'y\x0c[fN"W:2&:SWyz~W'
    link_2 = module_0.Link(dict_0, str_1)
    var_0 = link_1.__repr__()
    assert (
        var_0
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )
    str_2 = "page_context"
    section_0 = module_0.Section(str_2, str_2)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_3 = "' from the site because it conflicts with '"
    list_0 = []
    section_1 = module_0.Section(str_3, list_0)
    var_1 = section_1.__repr__()
    assert var_1 == "Section(title=\"' from the site because it conflicts with '\")"
    str_4 = " Use '"
    section_2 = module_0.Section(str_4, str_4)
    var_2 = section_2.__repr__()
    assert var_2 == 'Section(title=" Use \'")'
    int_0 = var_2.__len__()
    assert int_0 == 23
    var_3 = var_2.__repr__()
    assert var_3 == "'Section(title=\" Use \\'\")'"
    str_5 = " Use '"
    section_3 = module_0.Section(str_5, str_5)
    var_4 = section_3.__repr__()
    assert var_4 == 'Section(title=" Use \'")'
    int_1 = var_4.__len__()
    assert int_1 == 23
    str_6 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_3 = module_0.Link(str_6, none_type_1)
    bytes_1 = b"\x802c35Z\xf8"
    link_4 = module_0.Link(link_3, bytes_1)
    var_5 = link_3.__repr__()
    assert var_5 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_7 = "page_context"
    section_4 = module_0.Section(str_7, str_7)
    str_8 = "' from the site because it conflicts with '"
    list_1 = []
    section_5 = module_0.Section(str_8, list_1)
    str_9 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_5 = module_0.Link(str_9, none_type_2)
    var_6 = link_5.__repr__()
    assert var_6 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_7 = var_6.__repr__()
    assert var_7 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_10 = " Use '"
    section_6 = module_0.Section(str_10, str_10)
    var_8 = section_6.__repr__()
    assert var_8 == 'Section(title=" Use \'")'
    section_7 = module_0.Section(str_10, var_8)
    assert section_7.children == 'Section(title=" Use \'")'
    str_11 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_6 = module_0.Link(str_11, none_type_3)
    str_12 = "0_~6:m!(f5FgU,:rvz"
    none_type_4 = None
    link_7 = module_0.Link(str_12, none_type_4)
    var_9 = link_7.__repr__()
    assert var_9 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    section_8 = module_0.Section(section_2, str_6)


def test_case_131():
    str_0 = "page_context"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = "' from the site because it conflicts with '"
    list_0 = []
    section_1 = module_0.Section(str_1, list_0)
    var_0 = section_1.__repr__()
    assert var_0 == "Section(title=\"' from the site because it conflicts with '\")"
    str_2 = "page_context"
    section_2 = module_0.Section(str_2, str_2)
    str_3 = "' from the site because it conflicts with '"
    list_1 = []
    section_3 = module_0.Section(str_3, list_1)
    str_4 = "localhost"
    link_0 = module_0.Link(str_3, str_4)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "' from the site because it conflicts with '"
    assert link_0.url == "localhost"
    str_5 = "page_context"
    section_4 = module_0.Section(str_5, str_5)
    str_6 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_1 = module_0.Link(str_6, none_type_0)
    var_1 = link_1.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_2 = var_1.__repr__()
    assert var_2 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    iterator_0 = var_2.__iter__()


def test_case_132():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    section_1 = module_0.Section(str_0, var_0)
    assert section_1.children == 'Section(title=" Use \'")'
    str_1 = " Use '"
    section_2 = module_0.Section(str_1, str_1)
    var_1 = section_2.__repr__()
    assert var_1 == 'Section(title=" Use \'")'
    int_0 = var_1.__len__()
    assert int_0 == 23
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_2, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_2 = link_0.__repr__()
    assert var_2 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_3 = var_2.__repr__()
    assert var_3 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_3 = var_2.__str__()
    assert str_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_4 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_4, none_type_1)
    bytes_0 = b"\x802c35Z\xf8"
    link_2 = module_0.Link(link_1, bytes_0)
    var_4 = link_1.__repr__()
    assert var_4 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_5 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_3 = module_0.Link(str_5, none_type_2)
    bytes_1 = b"\x802c35Z\xf8"
    link_4 = module_0.Link(link_3, bytes_1)
    str_6 = "page_context"
    section_3 = module_0.Section(str_6, str_6)
    str_7 = " Use '"
    section_4 = module_0.Section(str_7, str_7)
    var_5 = section_4.__repr__()
    assert var_5 == 'Section(title=" Use \'")'
    str_8 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_5 = module_0.Link(str_8, none_type_3)
    var_6 = link_5.__repr__()
    assert var_6 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"


def test_case_133():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    int_0 = var_0.__len__()
    assert int_0 == 23
    var_1 = var_0.__repr__()
    assert var_1 == "'Section(title=\" Use \\'\")'"
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_1, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_2 = link_0.__repr__()
    assert var_2 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_3 = var_2.__repr__()
    assert var_3 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_2 = var_2.__str__()
    assert str_2 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_3 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_3, none_type_1)
    str_4 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_2 = module_0.Link(str_4, none_type_2)
    bytes_0 = b"\x802c35Z\xf8"
    link_3 = module_0.Link(link_2, bytes_0)
    dict_0 = {}
    str_5 = 'y\x0c[fN"W:2&:SWyz~W'
    link_4 = module_0.Link(dict_0, str_5)
    var_4 = link_3.__repr__()
    assert (
        var_4
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )
    dict_1 = {}
    str_6 = 'y\x0c[fN"W:2&:SWyz~W'
    link_5 = module_0.Link(dict_1, str_6)
    str_7 = " Use '"
    section_1 = module_0.Section(str_7, str_7)
    var_5 = section_1.__repr__()
    assert var_5 == 'Section(title=" Use \'")'
    section_2 = module_0.Section(str_7, var_5)
    assert section_2.children == 'Section(title=" Use \'")'
    var_6 = var_5.__repr__()
    assert var_6 == "'Section(title=\" Use \\'\")'"


def test_case_134():
    str_0 = "page_context"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = "' from the site because it conflicts with '"
    list_0 = []
    section_1 = module_0.Section(str_1, list_0)
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_2, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_3 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_3, none_type_1)
    var_1 = link_1.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_2 = var_1.__repr__()
    assert var_2 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_4 = var_1.__str__()
    assert str_4 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_3 = var_1.__repr__()
    assert var_3 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_5 = " Use '"
    section_2 = module_0.Section(str_5, str_5)
    var_4 = section_2.__repr__()
    assert var_4 == 'Section(title=" Use \'")'
    section_3 = module_0.Section(str_5, var_4)
    assert section_3.children == 'Section(title=" Use \'")'
    str_6 = " Use '"
    section_4 = module_0.Section(str_6, str_6)
    var_5 = section_4.__repr__()
    assert var_5 == 'Section(title=" Use \'")'
    int_0 = var_5.__len__()
    assert int_0 == 23
    str_7 = "page_context"
    section_5 = module_0.Section(str_7, str_7)
    str_8 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_2 = module_0.Link(str_8, none_type_2)
    bytes_0 = b"\x802c35Z\xf8"
    link_3 = module_0.Link(link_2, bytes_0)
    dict_0 = {}
    str_9 = 'y\x0c[fN"W:2&:SWyz~W'
    link_4 = module_0.Link(dict_0, str_9)
    str_10 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_5 = module_0.Link(str_10, none_type_3)
    str_11 = "0_~6:m!(f5FgU,:rvz"
    none_type_4 = None
    link_6 = module_0.Link(str_11, none_type_4)
    var_6 = link_6.__repr__()
    assert var_6 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_7 = var_6.__repr__()
    assert var_7 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_12 = var_6.__str__()
    assert str_12 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_8 = var_2.__repr__()
    assert var_8 == "'\"Link(title=\\'0_~6:m!(f5FgU,:rvz\\', url=None)\"'"


def test_case_135():
    str_0 = "gfRsC:6&{;|"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "gfRsC:6&{;|"
    assert section_0.children == "gfRsC:6&{;|"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )


def test_case_136():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_1 = var_0.__str__()
    assert str_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_2 = var_0.__repr__()
    assert var_2 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_2, none_type_1)
    bytes_0 = b"\x802c35Z\xf8"
    link_2 = module_0.Link(link_1, bytes_0)
    str_3 = " Use '"
    section_0 = module_0.Section(str_3, str_3)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_3 = section_0.__repr__()
    assert var_3 == 'Section(title=" Use \'")'
    var_4 = var_3.__repr__()
    assert var_4 == "'Section(title=\" Use \\'\")'"
    iterator_0 = var_2.__iter__()


def test_case_137():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_1, none_type_1)
    str_2 = " Use '"
    section_0 = module_0.Section(str_2, str_2)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_1 = section_0.__repr__()
    assert var_1 == 'Section(title=" Use \'")'
    var_2 = var_1.__repr__()
    assert var_2 == "'Section(title=\" Use \\'\")'"
    str_3 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_2 = module_0.Link(str_3, none_type_2)
    bytes_0 = b"\x802c35Z\xf8"
    link_3 = module_0.Link(link_2, bytes_0)
    dict_0 = {}
    str_4 = 'y\x0c[fN"W:2&:SWyz~W'
    link_4 = module_0.Link(dict_0, str_4)
    var_3 = link_3.__repr__()
    assert (
        var_3
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )
    iterator_0 = var_2.__iter__()


def test_case_138():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    str_1 = "gfRsC:6&{;|"
    section_1 = module_0.Section(str_1, str_1)
    str_2 = "relative_to_docs"
    link_0 = module_0.Link(str_2, section_1)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "relative_to_docs"
    assert (
        f"{type(link_0.url).__module__}.{type(link_0.url).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )


def test_case_139():
    str_0 = "page_context"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = "' from the site because it conflicts with '"
    list_0 = []
    section_1 = module_0.Section(str_1, list_0)
    var_0 = section_1.__repr__()
    assert var_0 == "Section(title=\"' from the site because it conflicts with '\")"
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_2, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_1 = link_0.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_2 = var_1.__repr__()
    assert var_2 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_3 = var_1.__str__()
    assert str_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_3 = var_1.__repr__()
    assert var_3 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_4 = "page_context"
    section_2 = module_0.Section(str_4, str_4)
    str_5 = "' from the site because it conflicts with '"
    list_1 = []
    section_3 = module_0.Section(str_5, list_1)
    str_6 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_6, none_type_1)
    str_7 = " Use '"
    section_4 = module_0.Section(str_7, str_7)
    var_4 = section_4.__repr__()
    assert var_4 == 'Section(title=" Use \'")'
    int_0 = var_4.__len__()
    assert int_0 == 23
    var_5 = var_4.__repr__()
    assert var_5 == "'Section(title=\" Use \\'\")'"
    str_8 = var_2.__str__()
    assert str_8 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""


def test_case_140():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    bytes_0 = b"\x802c35Z\xf8"
    link_1 = module_0.Link(link_0, bytes_0)
    dict_0 = {}
    str_1 = 'y\x0c[fN"W:2&:SWyz~W'
    link_2 = module_0.Link(dict_0, str_1)
    var_0 = link_1.__repr__()
    assert (
        var_0
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )
    str_2 = " Use '"
    section_0 = module_0.Section(str_2, str_2)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_1 = section_0.__repr__()
    assert var_1 == 'Section(title=" Use \'")'
    str_3 = "gfRsC:6&{;|"
    section_1 = module_0.Section(str_3, str_3)
    str_4 = "relative_to_docs"
    link_3 = module_0.Link(str_4, section_1)
    str_5 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_4 = module_0.Link(str_5, none_type_1)
    var_2 = link_4.__repr__()
    assert var_2 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_3 = var_2.__repr__()
    assert var_3 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    dict_1 = {}
    str_6 = 'y\x0c[fN"W:2&:SWyz~W'
    link_5 = module_0.Link(dict_1, str_6)
    str_7 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_6 = module_0.Link(str_7, none_type_2)
    var_4 = link_6.__repr__()
    assert var_4 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_5 = var_4.__repr__()
    assert var_5 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_8 = var_4.__str__()
    assert str_8 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_6 = var_4.__repr__()
    assert var_6 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_9 = "gfRsC:6&{;|"
    section_2 = module_0.Section(str_9, str_9)
    str_10 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_7 = module_0.Link(str_10, none_type_3)
    var_7 = link_7.__repr__()
    assert var_7 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    iterator_0 = var_1.__iter__()


def test_case_141():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_1, none_type_1)
    bytes_0 = b"\x802c35Z\xf8"
    link_2 = module_0.Link(link_1, bytes_0)
    var_2 = link_1.__repr__()
    assert var_2 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_2 = " Use '"
    section_0 = module_0.Section(str_2, str_2)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_3 = section_0.__repr__()
    assert var_3 == 'Section(title=" Use \'")'
    section_1 = module_0.Section(str_2, var_3)
    assert section_1.children == 'Section(title=" Use \'")'
    str_3 = " Use '"
    section_2 = module_0.Section(str_3, str_3)
    var_4 = section_2.__repr__()
    assert var_4 == 'Section(title=" Use \'")'
    int_0 = var_4.__len__()
    assert int_0 == 23
    var_5 = var_4.__repr__()
    assert var_5 == "'Section(title=\" Use \\'\")'"
    str_4 = " Use '"
    section_3 = module_0.Section(str_4, str_4)
    var_6 = section_3.__repr__()
    assert var_6 == 'Section(title=" Use \'")'
    str_5 = "gfRsC:6&{;|"
    section_4 = module_0.Section(str_5, str_5)
    str_6 = "relative_to_docs"
    link_3 = module_0.Link(str_6, section_4)
    dict_0 = {}
    str_7 = 'y\x0c[fN"W:2&:SWyz~W'
    link_4 = module_0.Link(dict_0, str_7)
    str_8 = " Use '"
    section_5 = module_0.Section(str_8, str_8)
    var_7 = section_5.__repr__()
    assert var_7 == 'Section(title=" Use \'")'
    str_9 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_5 = module_0.Link(str_9, none_type_2)
    bytes_1 = b"\x802c35Z\xf8"
    link_6 = module_0.Link(link_5, bytes_1)
    dict_1 = {}
    str_10 = 'y\x0c[fN"W:2&:SWyz~W'
    link_7 = module_0.Link(dict_1, str_10)
    var_8 = link_6.__repr__()
    assert (
        var_8
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )
    str_11 = var_6.__str__()
    assert str_11 == 'Section(title=" Use \'")'


def test_case_142():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    bytes_0 = b"\x802c35Z\xf8"
    link_1 = module_0.Link(link_0, bytes_0)
    dict_0 = {}
    str_1 = 'y\x0c[fN"W:2&:SWyz~W'
    link_2 = module_0.Link(dict_0, str_1)
    var_0 = link_1.__repr__()
    assert (
        var_0
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_3 = module_0.Link(str_2, none_type_1)
    bytes_1 = b"\x802c35Z\xf8"
    link_4 = module_0.Link(link_3, bytes_1)
    var_1 = link_3.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_3 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_5 = module_0.Link(str_3, none_type_2)
    var_2 = link_5.__repr__()
    assert var_2 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_3 = var_2.__repr__()
    assert var_3 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_4 = "gfRsC:6&{;|"
    section_0 = module_0.Section(str_4, str_4)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "gfRsC:6&{;|"
    assert section_0.children == "gfRsC:6&{;|"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_5 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_6 = module_0.Link(str_5, none_type_3)
    var_4 = link_6.__repr__()
    assert var_4 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_6 = "page_context"
    section_1 = module_0.Section(str_6, str_6)
    iterator_0 = var_2.__iter__()


def test_case_143():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_1 = var_0.__str__()
    assert str_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_2 = "page_context"
    section_0 = module_0.Section(str_2, str_2)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_3 = "gfRsC:6&{;|"
    section_1 = module_0.Section(str_3, str_3)
    str_4 = " Use '"
    section_2 = module_0.Section(str_4, str_4)
    var_2 = section_2.__repr__()
    assert var_2 == 'Section(title=" Use \'")'
    int_0 = var_2.__len__()
    assert int_0 == 23
    str_5 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_5, none_type_1)
    int_1 = var_2.__len__()
    assert int_1 == 23
    str_6 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_2 = module_0.Link(str_6, none_type_2)
    var_3 = link_2.__repr__()
    assert var_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_7 = "page_context"
    section_3 = module_0.Section(str_7, str_7)
    str_8 = "' from the site because it conflicts with '"
    list_0 = []
    section_4 = module_0.Section(str_8, list_0)
    str_9 = "localhost"
    link_3 = module_0.Link(str_8, str_9)
    dict_0 = {}
    str_10 = 'y\x0c[fN"W:2&:SWyz~W'
    link_4 = module_0.Link(dict_0, str_10)
    str_11 = "page_context"
    section_5 = module_0.Section(str_11, str_11)
    str_12 = "' from the site because it conflicts with '"
    list_1 = []
    section_6 = module_0.Section(str_12, list_1)
    var_4 = var_1.__repr__()
    assert var_4 == "'\"Link(title=\\'0_~6:m!(f5FgU,:rvz\\', url=None)\"'"


def test_case_144():
    str_0 = "gfRsC:6&{;|"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "gfRsC:6&{;|"
    assert section_0.children == "gfRsC:6&{;|"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == "Section(title='gfRsC:6&{;|')"


def test_case_145():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    int_0 = var_0.__len__()
    assert int_0 == 23
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_1, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    int_1 = var_0.__len__()
    assert int_1 == 23
    str_2 = " Use '"
    section_1 = module_0.Section(str_2, str_2)
    var_1 = section_1.__repr__()
    assert var_1 == 'Section(title=" Use \'")'
    var_2 = var_1.__repr__()
    assert var_2 == "'Section(title=\" Use \\'\")'"
    str_3 = "page_context"
    section_2 = module_0.Section(str_3, str_3)
    str_4 = "' from the site because it conflicts with '"
    list_0 = []
    section_3 = module_0.Section(str_4, list_0)
    var_3 = section_3.__repr__()
    assert var_3 == "Section(title=\"' from the site because it conflicts with '\")"
    str_5 = "page_context"
    section_4 = module_0.Section(str_5, str_5)
    str_6 = "' from the site because it conflicts with '"
    list_1 = []
    section_5 = module_0.Section(str_6, list_1)
    str_7 = "localhost"
    link_1 = module_0.Link(str_6, str_7)
    str_8 = " Use '"
    section_6 = module_0.Section(str_8, str_8)
    var_4 = section_6.__repr__()
    assert var_4 == 'Section(title=" Use \'")'
    int_2 = var_4.__len__()
    assert int_2 == 23
    str_9 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_2 = module_0.Link(str_9, none_type_1)
    bytes_0 = b"\x802c35Z\xf8"
    link_3 = module_0.Link(link_2, bytes_0)
    var_5 = link_2.__repr__()
    assert var_5 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_10 = "gfRsC:6&{;|"
    section_7 = module_0.Section(str_10, str_10)
    str_11 = "gfRsC:6&{;|"
    section_8 = module_0.Section(str_11, str_11)
    var_6 = section_8.__repr__()
    assert var_6 == "Section(title='gfRsC:6&{;|')"
    dict_0 = {}
    str_12 = 'y\x0c[fN"W:2&:SWyz~W'
    link_4 = module_0.Link(dict_0, str_12)
    str_13 = " Use '"
    section_9 = module_0.Section(str_13, str_13)
    var_7 = section_9.__repr__()
    assert var_7 == 'Section(title=" Use \'")'
    str_14 = "gfRsC:6&{;|"
    section_10 = module_0.Section(str_14, str_14)
    str_15 = "relative_to_docs"
    link_5 = module_0.Link(str_15, section_10)
    var_8 = var_6.__repr__()
    assert var_8 == "\"Section(title='gfRsC:6&{;|')\""
    iterator_0 = var_8.__iter__()


def test_case_146():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    str_1 = " Use '"
    section_0 = module_0.Section(str_1, str_1)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    int_0 = var_0.__len__()
    assert int_0 == 23
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_2, none_type_1)
    bytes_0 = b"\x802c35Z\xf8"
    link_2 = module_0.Link(link_1, bytes_0)
    dict_0 = {}
    str_3 = 'y\x0c[fN"W:2&:SWyz~W'
    link_3 = module_0.Link(dict_0, str_3)
    var_1 = link_2.__repr__()
    assert (
        var_1
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )
    str_4 = " Use '"
    section_1 = module_0.Section(str_4, str_4)
    var_2 = section_1.__repr__()
    assert var_2 == 'Section(title=" Use \'")'
    int_1 = var_2.__len__()
    assert int_1 == 23
    var_3 = var_2.__repr__()
    assert var_3 == "'Section(title=\" Use \\'\")'"
    str_5 = " Use '"
    section_2 = module_0.Section(str_5, str_5)
    var_4 = section_2.__repr__()
    assert var_4 == 'Section(title=" Use \'")'
    str_6 = "page_context"
    section_3 = module_0.Section(str_6, str_6)
    iterator_0 = var_2.__iter__()


def test_case_147():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_1, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_1 = link_0.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_2 = var_1.__repr__()
    assert var_2 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_2 = var_1.__str__()
    assert str_2 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_3 = var_1.__repr__()
    assert var_3 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_3 = "page_context"
    section_1 = module_0.Section(str_3, str_3)
    str_4 = "' from the site because it conflicts with '"
    list_0 = []
    section_2 = module_0.Section(str_4, list_0)
    str_5 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_5, none_type_1)
    bytes_0 = b"\x802c35Z\xf8"
    link_2 = module_0.Link(link_1, bytes_0)
    var_4 = link_1.__repr__()
    assert var_4 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_6 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_3 = module_0.Link(str_6, none_type_2)
    var_5 = link_3.__repr__()
    assert var_5 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    link_4 = module_0.Link(none_type_1, var_4)
    assert link_4.url == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"


def test_case_148():
    str_0 = "page_context"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = "' from the site because it conflicts with '"
    list_0 = []
    section_1 = module_0.Section(str_1, list_0)
    str_2 = "gfRsC:6&{;|"
    section_2 = module_0.Section(str_2, str_2)
    var_0 = section_2.__repr__()
    assert var_0 == "Section(title='gfRsC:6&{;|')"
    str_3 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_3, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_1 = link_0.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_2 = var_1.__repr__()
    assert var_2 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_4 = " Use '"
    section_3 = module_0.Section(str_4, str_4)
    var_3 = section_3.__repr__()
    assert var_3 == 'Section(title=" Use \'")'
    section_4 = module_0.Section(str_4, var_3)
    assert section_4.children == 'Section(title=" Use \'")'
    str_5 = " Use '"
    section_5 = module_0.Section(str_5, str_5)
    var_4 = section_5.__repr__()
    assert var_4 == 'Section(title=" Use \'")'
    str_6 = "gfRsC:6&{;|"
    section_6 = module_0.Section(str_6, str_6)
    str_7 = "relative_to_docs"
    link_1 = module_0.Link(str_7, section_6)
    str_8 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_2 = module_0.Link(str_8, none_type_1)
    str_9 = "page_context"
    section_7 = module_0.Section(str_9, str_9)
    str_10 = "' from the site because it conflicts with '"
    list_1 = []
    section_8 = module_0.Section(str_10, list_1)
    str_11 = "localhost"
    link_3 = module_0.Link(str_10, str_11)
    str_12 = "page_context"
    section_9 = module_0.Section(str_12, str_12)
    str_13 = "' from the site because it conflicts with '"
    list_2 = []
    section_10 = module_0.Section(str_13, list_2)
    var_5 = section_10.__repr__()
    assert var_5 == "Section(title=\"' from the site because it conflicts with '\")"
    var_6 = section_3.__repr__()
    assert var_6 == 'Section(title=" Use \'")'


def test_case_149():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    str_1 = "gfRsC:6&{;|"
    section_1 = module_0.Section(str_1, str_1)
    str_2 = "relative_to_docs"
    link_0 = module_0.Link(str_2, section_1)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "relative_to_docs"
    assert (
        f"{type(link_0.url).__module__}.{type(link_0.url).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    str_3 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_1 = module_0.Link(str_3, none_type_0)
    var_1 = link_1.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_2 = var_1.__repr__()
    assert var_2 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_4 = var_1.__str__()
    assert str_4 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_3 = var_1.__repr__()
    assert var_3 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_5 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_2 = module_0.Link(str_5, none_type_1)
    bytes_0 = b"\x802c35Z\xf8"
    link_3 = module_0.Link(link_2, bytes_0)
    dict_0 = {}
    str_6 = 'y\x0c[fN"W:2&:SWyz~W'
    link_4 = module_0.Link(dict_0, str_6)
    var_4 = link_3.__repr__()
    assert (
        var_4
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )
    str_7 = "page_context"
    section_2 = module_0.Section(str_7, str_7)
    str_8 = "' from the site because it conflicts with '"
    list_0 = []
    section_3 = module_0.Section(str_8, list_0)
    var_5 = section_3.__repr__()
    assert var_5 == "Section(title=\"' from the site because it conflicts with '\")"
    str_9 = "page_context"
    section_4 = module_0.Section(str_9, str_9)
    str_10 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_5 = module_0.Link(str_10, none_type_2)
    var_6 = link_5.__repr__()
    assert var_6 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_7 = var_6.__repr__()
    assert var_7 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    iterator_0 = var_6.__iter__()


def test_case_150():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_1 = var_0.__str__()
    assert str_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    dict_0 = {}
    str_2 = 'y\x0c[fN"W:2&:SWyz~W'
    link_1 = module_0.Link(dict_0, str_2)
    str_3 = " Use '"
    section_0 = module_0.Section(str_3, str_3)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_2 = section_0.__repr__()
    assert var_2 == 'Section(title=" Use \'")'
    var_3 = var_2.__repr__()
    assert var_3 == "'Section(title=\" Use \\'\")'"


def test_case_151():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    var_1 = var_0.__repr__()
    assert var_1 == "'Section(title=\" Use \\'\")'"
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_1, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_2 = link_0.__repr__()
    assert var_2 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_3 = var_2.__repr__()
    assert var_3 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_2 = "page_context"
    section_1 = module_0.Section(str_2, str_2)
    str_3 = "gfRsC:6&{;|"
    section_2 = module_0.Section(str_3, str_3)
    str_4 = var_2.__str__()
    assert str_4 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"


def test_case_152():
    str_0 = "page_context"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = "' from the site because it conflicts with '"
    list_0 = []
    section_1 = module_0.Section(str_1, list_0)
    str_2 = "localhost"
    link_0 = module_0.Link(str_1, str_2)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "' from the site because it conflicts with '"
    assert link_0.url == "localhost"
    str_3 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_1 = module_0.Link(str_3, none_type_0)
    var_0 = link_1.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_4 = var_0.__str__()
    assert str_4 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_2 = var_0.__repr__()
    assert var_2 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_5 = " Use '"
    section_2 = module_0.Section(str_5, str_5)
    var_3 = section_2.__repr__()
    assert var_3 == 'Section(title=" Use \'")'
    var_4 = var_3.__repr__()
    assert var_4 == "'Section(title=\" Use \\'\")'"
    link_2 = module_0.Link(var_4, str_3)
    assert link_2.title == "'Section(title=\" Use \\'\")'"


def test_case_153():
    str_0 = "page_context"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = "' from the site because it conflicts with '"
    list_0 = []
    section_1 = module_0.Section(str_1, list_0)
    var_0 = section_1.__repr__()
    assert var_0 == "Section(title=\"' from the site because it conflicts with '\")"
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_2, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_1 = link_0.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_3 = " Use '"
    section_2 = module_0.Section(str_3, str_3)
    var_2 = section_2.__repr__()
    assert var_2 == 'Section(title=" Use \'")'
    var_3 = var_2.__repr__()
    assert var_3 == "'Section(title=\" Use \\'\")'"
    str_4 = " Use '"
    section_3 = module_0.Section(str_4, str_4)
    var_4 = section_3.__repr__()
    assert var_4 == 'Section(title=" Use \'")'
    str_5 = "gfRsC:6&{;|"
    section_4 = module_0.Section(str_5, str_5)
    str_6 = "relative_to_docs"
    link_1 = module_0.Link(str_6, section_4)
    str_7 = "gfRsC:6&{;|"
    section_5 = module_0.Section(str_7, str_7)
    var_5 = section_5.__repr__()
    assert var_5 == "Section(title='gfRsC:6&{;|')"
    dict_0 = {}
    str_8 = 'y\x0c[fN"W:2&:SWyz~W'
    link_2 = module_0.Link(dict_0, str_8)
    str_9 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_3 = module_0.Link(str_9, none_type_1)
    bytes_0 = b"\x802c35Z\xf8"
    link_4 = module_0.Link(link_3, bytes_0)
    var_6 = link_3.__repr__()
    assert var_6 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_10 = var_5.__str__()
    assert str_10 == "Section(title='gfRsC:6&{;|')"


def test_case_154():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_1 = var_0.__str__()
    assert str_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_2 = var_0.__repr__()
    assert var_2 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_2 = " Use '"
    section_0 = module_0.Section(str_2, str_2)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_3 = section_0.__repr__()
    assert var_3 == 'Section(title=" Use \'")'
    int_0 = var_3.__len__()
    assert int_0 == 23
    var_4 = var_3.__repr__()
    assert var_4 == "'Section(title=\" Use \\'\")'"
    str_3 = "!tT6m+oQTaRQ^/3|G0"
    section_1 = module_0.Section(str_3, var_1)
    assert section_1.children == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""


def test_case_155():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    var_1 = var_0.__repr__()
    assert var_1 == "'Section(title=\" Use \\'\")'"
    str_1 = "gfRsC:6&{;|"
    section_1 = module_0.Section(str_1, str_1)
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_2, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    bytes_0 = b"\x802c35Z\xf8"
    link_1 = module_0.Link(link_0, bytes_0)
    str_3 = "page_context"
    section_2 = module_0.Section(str_3, str_3)
    str_4 = "' from the site because it conflicts with '"
    list_0 = []
    section_3 = module_0.Section(str_4, list_0)
    var_2 = section_3.__repr__()
    assert var_2 == "Section(title=\"' from the site because it conflicts with '\")"
    dict_0 = {}
    str_5 = 'y\x0c[fN"W:2&:SWyz~W'
    link_2 = module_0.Link(dict_0, str_5)
    str_6 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_3 = module_0.Link(str_6, none_type_1)
    bytes_1 = b"\x802c35Z\xf8"
    link_4 = module_0.Link(link_3, bytes_1)
    dict_1 = {}
    str_7 = 'y\x0c[fN"W:2&:SWyz~W'
    link_5 = module_0.Link(dict_1, str_7)
    var_3 = link_4.__repr__()
    assert (
        var_3
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )
    str_8 = " Use '"
    section_4 = module_0.Section(str_8, str_8)
    var_4 = section_4.__repr__()
    assert var_4 == 'Section(title=" Use \'")'
    str_9 = "gfRsC:6&{;|"
    section_5 = module_0.Section(str_9, str_9)
    str_10 = "relative_to_docs"
    link_6 = module_0.Link(str_10, section_5)
    str_11 = " Use '"
    section_6 = module_0.Section(str_11, str_11)
    var_5 = section_6.__repr__()
    assert var_5 == 'Section(title=" Use \'")'
    int_0 = var_5.__len__()
    assert int_0 == 23
    str_12 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_7 = module_0.Link(str_12, none_type_2)
    var_6 = link_7.__repr__()
    assert var_6 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_7 = var_6.__repr__()
    assert var_7 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_13 = var_6.__str__()
    assert str_13 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_8 = var_6.__repr__()
    assert var_8 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    iterator_0 = var_3.__iter__()


def test_case_156():
    dict_0 = {}
    str_0 = 'y\x0c[fN"W:2&:SWyz~W'
    link_0 = module_0.Link(dict_0, str_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == {}
    assert link_0.url == 'y\x0c[fN"W:2&:SWyz~W'
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == 'y\x0c[fN"W:2&:SWyz~W'
    assert section_0.children == 'y\x0c[fN"W:2&:SWyz~W'
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )


def test_case_157():
    dict_0 = {}
    str_0 = 'y\x0c[fN"W:2&:SWyz~W'
    link_0 = module_0.Link(dict_0, str_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == {}
    assert link_0.url == 'y\x0c[fN"W:2&:SWyz~W'
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == 'y\x0c[fN"W:2&:SWyz~W'
    assert section_0.children == 'y\x0c[fN"W:2&:SWyz~W'
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = " Use '"
    section_1 = module_0.Section(str_1, str_1)
    var_0 = section_1.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    int_0 = var_0.__len__()
    assert int_0 == 23
    str_2 = " Use '"
    section_2 = module_0.Section(str_2, str_2)
    var_1 = section_2.__repr__()
    assert var_1 == 'Section(title=" Use \'")'
    str_3 = "gfRsC:6&{;|"
    section_3 = module_0.Section(str_3, str_3)
    str_4 = "relative_to_docs"
    link_1 = module_0.Link(str_4, section_3)
    str_5 = " Use '"
    section_4 = module_0.Section(str_5, str_5)
    var_2 = section_4.__repr__()
    assert var_2 == 'Section(title=" Use \'")'
    var_3 = var_2.__repr__()
    assert var_3 == "'Section(title=\" Use \\'\")'"
    str_6 = " Use '"
    section_5 = module_0.Section(str_6, str_6)
    var_4 = section_5.__repr__()
    assert var_4 == 'Section(title=" Use \'")'
    int_1 = var_4.__len__()
    assert int_1 == 23
    var_5 = var_4.__repr__()
    assert var_5 == "'Section(title=\" Use \\'\")'"
    str_7 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_2 = module_0.Link(str_7, none_type_0)
    bytes_0 = b"\x802c35Z\xf8"
    link_3 = module_0.Link(link_2, bytes_0)
    var_6 = link_2.__repr__()
    assert var_6 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    dict_1 = {}
    str_8 = 'y\x0c[fN"W:2&:SWyz~W'
    link_4 = module_0.Link(dict_1, str_8)
    str_9 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_5 = module_0.Link(str_9, none_type_1)
    var_7 = link_5.__repr__()
    assert var_7 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_8 = var_7.__repr__()
    assert var_8 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_10 = var_7.__str__()
    assert str_10 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_9 = var_7.__repr__()
    assert var_9 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_10 = var_6.__repr__()
    assert var_10 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""


def test_case_158():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    int_0 = var_0.__len__()
    assert int_0 == 23
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_1, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    dict_0 = {}
    str_2 = 'y\x0c[fN"W:2&:SWyz~W'
    link_1 = module_0.Link(dict_0, str_2)
    str_3 = "gfRsC:6&{;|"
    section_1 = module_0.Section(str_3, str_3)
    var_1 = section_1.__repr__()
    assert var_1 == "Section(title='gfRsC:6&{;|')"
    str_4 = " Use '"
    section_2 = module_0.Section(str_4, str_4)
    var_2 = section_2.__repr__()
    assert var_2 == 'Section(title=" Use \'")'
    str_5 = "gfRsC:6&{;|"
    section_3 = module_0.Section(str_5, str_5)
    str_6 = "relative_to_docs"
    link_2 = module_0.Link(str_6, section_3)
    str_7 = "page_context"
    section_4 = module_0.Section(str_7, str_7)
    str_8 = " Use '"
    section_5 = module_0.Section(str_8, str_8)
    var_3 = section_5.__repr__()
    assert var_3 == 'Section(title=" Use \'")'
    str_9 = " Use '"
    section_6 = module_0.Section(str_9, str_9)
    var_4 = section_6.__repr__()
    assert var_4 == 'Section(title=" Use \'")'
    int_1 = var_4.__len__()
    assert int_1 == 23
    var_5 = var_4.__repr__()
    assert var_5 == "'Section(title=\" Use \\'\")'"
    str_10 = " Use '"
    section_7 = module_0.Section(str_10, str_10)
    var_6 = section_7.__repr__()
    assert var_6 == 'Section(title=" Use \'")'
    section_8 = module_0.Section(str_10, var_6)
    assert section_8.children == 'Section(title=" Use \'")'
    str_11 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_3 = module_0.Link(str_11, none_type_1)
    bytes_0 = b"\x802c35Z\xf8"
    link_4 = module_0.Link(link_3, bytes_0)
    var_7 = link_3.__repr__()
    assert var_7 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    iterator_0 = var_4.__iter__()


def test_case_159():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_1, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_1 = link_0.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    int_0 = var_1.__len__()
    assert int_0 == 42


def test_case_160():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    section_1 = module_0.Section(str_0, var_0)
    assert section_1.children == 'Section(title=" Use \'")'
    str_1 = "page_context"
    section_2 = module_0.Section(str_1, str_1)
    str_2 = "' from the site because it conflicts with '"
    list_0 = []
    section_3 = module_0.Section(str_2, list_0)
    str_3 = "page_context"
    section_4 = module_0.Section(str_3, str_3)
    str_4 = "' from the site because it conflicts with '"
    list_1 = []
    section_5 = module_0.Section(str_4, list_1)
    var_1 = section_5.__repr__()
    assert var_1 == "Section(title=\"' from the site because it conflicts with '\")"
    str_5 = var_0.__str__()
    assert str_5 == 'Section(title=" Use \'")'


def test_case_161():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_1, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_1 = link_0.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    int_0 = var_1.__len__()
    assert int_0 == 42
    str_2 = "gfRsC:6&{;|"
    section_1 = module_0.Section(str_2, str_2)
    str_3 = " Use '"
    section_2 = module_0.Section(str_3, str_3)
    var_2 = section_2.__repr__()
    assert var_2 == 'Section(title=" Use \'")'
    int_1 = var_2.__len__()
    assert int_1 == 23
    var_3 = var_2.__repr__()
    assert var_3 == "'Section(title=\" Use \\'\")'"
    str_4 = " Use '"
    section_3 = module_0.Section(str_4, str_4)
    var_4 = section_3.__repr__()
    assert var_4 == 'Section(title=" Use \'")'
    int_2 = var_4.__len__()
    assert int_2 == 23
    str_5 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_5, none_type_1)
    var_5 = link_1.__repr__()
    assert var_5 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_6 = "page_context"
    section_4 = module_0.Section(str_6, str_6)
    dict_0 = {}
    str_7 = 'y\x0c[fN"W:2&:SWyz~W'
    link_2 = module_0.Link(dict_0, str_7)
    section_5 = module_0.Section(str_7, str_7)
    str_8 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_3 = module_0.Link(str_8, none_type_2)
    bytes_0 = b"\x802c35Z\xf8"
    link_4 = module_0.Link(link_3, bytes_0)
    var_6 = link_3.__repr__()
    assert var_6 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_9 = "The OS path of the destination directory (top-level site_dir) that the file should be copied to."
    link_5 = module_0.Link(str_9, var_0)
    assert link_5.url == 'Section(title=" Use \'")'


def test_case_162():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    section_1 = module_0.Section(str_0, var_0)
    assert section_1.children == 'Section(title=" Use \'")'
    dict_0 = {}
    str_1 = 'y\x0c[fN"W:2&:SWyz~W'
    link_0 = module_0.Link(dict_0, str_1)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == {}
    assert link_0.url == 'y\x0c[fN"W:2&:SWyz~W'
    str_2 = "gfRsC:6&{;|"
    section_2 = module_0.Section(str_2, str_2)
    var_1 = section_2.__repr__()
    assert var_1 == "Section(title='gfRsC:6&{;|')"
    str_3 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_1 = module_0.Link(str_3, none_type_0)
    var_2 = section_0.__repr__()
    assert var_2 == 'Section(title=" Use \'")'


def test_case_163():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_1, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_1 = link_0.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    int_0 = var_1.__len__()
    assert int_0 == 42
    dict_0 = {}
    str_2 = 'y\x0c[fN"W:2&:SWyz~W'
    link_1 = module_0.Link(dict_0, str_2)
    section_1 = module_0.Section(str_2, str_2)
    str_3 = " Use '"
    section_2 = module_0.Section(str_3, str_3)
    var_2 = section_2.__repr__()
    assert var_2 == 'Section(title=" Use \'")'
    int_1 = var_2.__len__()
    assert int_1 == 23
    str_4 = "page_context"
    section_3 = module_0.Section(str_4, str_4)
    str_5 = "' from the site because it conflicts with '"
    list_0 = []
    section_4 = module_0.Section(str_5, list_0)
    var_3 = section_4.__repr__()
    assert var_3 == "Section(title=\"' from the site because it conflicts with '\")"
    str_6 = " Use '"
    section_5 = module_0.Section(str_6, str_6)
    var_4 = section_5.__repr__()
    assert var_4 == 'Section(title=" Use \'")'
    str_7 = "gfRsC:6&{;|"
    section_6 = module_0.Section(str_7, str_7)
    str_8 = "relative_to_docs"
    link_2 = module_0.Link(str_8, section_6)
    str_9 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_3 = module_0.Link(str_9, none_type_1)
    bytes_0 = b"\x802c35Z\xf8"
    link_4 = module_0.Link(link_3, bytes_0)
    dict_1 = {}
    str_10 = 'y\x0c[fN"W:2&:SWyz~W'
    link_5 = module_0.Link(dict_1, str_10)
    var_5 = link_4.__repr__()
    assert (
        var_5
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )
    var_6 = link_4.__repr__()
    assert (
        var_6
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )


def test_case_164():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_1, none_type_1)
    bytes_0 = b"\x802c35Z\xf8"
    link_2 = module_0.Link(link_1, bytes_0)
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_3 = module_0.Link(str_2, none_type_2)
    var_2 = link_3.__repr__()
    assert var_2 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_3 = var_2.__repr__()
    assert var_3 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_3 = var_2.__str__()
    assert str_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_4 = var_2.__repr__()
    assert var_4 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_4 = " Use '"
    section_0 = module_0.Section(str_4, str_4)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_5 = section_0.__repr__()
    assert var_5 == 'Section(title=" Use \'")'
    int_0 = var_5.__len__()
    assert int_0 == 23
    var_6 = var_5.__repr__()
    assert var_6 == "'Section(title=\" Use \\'\")'"
    str_5 = "gfRsC:6&{;|"
    section_1 = module_0.Section(str_5, str_5)
    var_7 = section_1.__repr__()
    assert var_7 == "Section(title='gfRsC:6&{;|')"
    str_6 = " Use '"
    section_2 = module_0.Section(str_6, str_6)
    var_8 = section_2.__repr__()
    assert var_8 == 'Section(title=" Use \'")'
    int_1 = var_8.__len__()
    assert int_1 == 23
    str_7 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_4 = module_0.Link(str_7, none_type_3)
    int_2 = var_8.__len__()
    assert int_2 == 23
    str_8 = var_3.__str__()
    assert str_8 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""


def test_case_165():
    str_0 = "page_context"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_1, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = section_0.__repr__()
    assert var_1 == "Section(title='page_context')"


def test_case_166():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    section_1 = module_0.Section(str_0, var_0)
    assert section_1.children == 'Section(title=" Use \'")'
    str_1 = "gfRsC:6&{;|"
    section_2 = module_0.Section(str_1, str_1)
    str_2 = " Use '"
    section_3 = module_0.Section(str_2, str_2)
    var_1 = section_3.__repr__()
    assert var_1 == 'Section(title=" Use \'")'
    int_0 = var_1.__len__()
    assert int_0 == 23
    str_3 = " Use '"
    section_4 = module_0.Section(str_3, str_3)
    var_2 = section_4.__repr__()
    assert var_2 == 'Section(title=" Use \'")'
    var_3 = var_2.__repr__()
    assert var_3 == "'Section(title=\" Use \\'\")'"
    str_4 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_4, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_4 = link_0.__repr__()
    assert var_4 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_5 = var_4.__repr__()
    assert var_5 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_5 = var_4.__str__()
    assert str_5 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_6 = var_4.__repr__()
    assert var_6 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_6 = " Use '"
    section_5 = module_0.Section(str_6, str_6)
    var_7 = section_5.__repr__()
    assert var_7 == 'Section(title=" Use \'")'
    str_7 = "gfRsC:6&{;|"
    section_6 = module_0.Section(str_7, str_7)
    str_8 = "relative_to_docs"
    link_1 = module_0.Link(str_8, section_6)
    str_9 = "gfRsC:6&{;|"
    section_7 = module_0.Section(str_9, str_9)
    var_8 = section_7.__repr__()
    assert var_8 == "Section(title='gfRsC:6&{;|')"
    str_10 = " Use '"
    section_8 = module_0.Section(str_10, str_10)
    var_9 = section_8.__repr__()
    assert var_9 == 'Section(title=" Use \'")'
    str_11 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_2 = module_0.Link(str_11, none_type_1)
    var_10 = link_2.__repr__()
    assert var_10 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    int_1 = var_10.__len__()
    assert int_1 == 42
    str_12 = " Use '"
    section_9 = module_0.Section(str_12, str_12)
    var_11 = section_9.__repr__()
    assert var_11 == 'Section(title=" Use \'")'
    str_13 = " Use '"
    section_10 = module_0.Section(str_13, str_13)
    var_12 = section_10.__repr__()
    assert var_12 == 'Section(title=" Use \'")'
    int_2 = var_12.__len__()
    assert int_2 == 23
    var_13 = var_12.__repr__()
    assert var_13 == "'Section(title=\" Use \\'\")'"
    int_3 = var_10.__len__()
    assert int_3 == 42


def test_case_167():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    int_0 = var_0.__len__()
    assert int_0 == 23
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_1, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    int_1 = var_0.__len__()
    assert int_1 == 23
    str_2 = "gfRsC:6&{;|"
    section_1 = module_0.Section(str_2, str_2)
    str_3 = "page_context"
    section_2 = module_0.Section(str_3, str_3)
    str_4 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_4, none_type_1)
    var_1 = link_1.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_2 = section_2.__repr__()
    assert var_2 == "Section(title='page_context')"
    str_5 = " Use '"
    section_3 = module_0.Section(str_5, str_5)
    var_3 = section_3.__repr__()
    assert var_3 == 'Section(title=" Use \'")'
    var_4 = section_0.__repr__()
    assert var_4 == 'Section(title=" Use \'")'


def test_case_168():
    str_0 = "gfRsC:6&{;|"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "gfRsC:6&{;|"
    assert section_0.children == "gfRsC:6&{;|"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = " Use '"
    section_1 = module_0.Section(str_1, str_1)
    var_0 = section_1.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_2, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_1 = link_0.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    int_0 = var_1.__len__()
    assert int_0 == 42
    str_3 = "page_context"
    section_2 = module_0.Section(str_3, str_3)
    str_4 = "' from the site because it conflicts with '"
    list_0 = []
    section_3 = module_0.Section(str_4, list_0)
    var_2 = section_3.__repr__()
    assert var_2 == "Section(title=\"' from the site because it conflicts with '\")"
    str_5 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_5, none_type_1)
    str_6 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_2 = module_0.Link(str_6, none_type_2)
    var_3 = link_2.__repr__()
    assert var_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_7 = "page_context"
    section_4 = module_0.Section(str_7, str_7)
    str_8 = var_1.__str__()
    assert str_8 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"


def test_case_169():
    str_0 = "page_context"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = "' from the site because it conflicts with '"
    list_0 = []
    section_1 = module_0.Section(str_1, list_0)
    str_2 = "localhost"
    link_0 = module_0.Link(str_1, str_2)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "' from the site because it conflicts with '"
    assert link_0.url == "localhost"
    str_3 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_1 = module_0.Link(str_3, none_type_0)
    var_0 = link_1.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_4 = var_0.__str__()
    assert str_4 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_2 = var_0.__repr__()
    assert var_2 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_5 = " Use '"
    section_2 = module_0.Section(str_5, str_5)
    var_3 = section_2.__repr__()
    assert var_3 == 'Section(title=" Use \'")'
    str_6 = "gfRsC:6&{;|"
    section_3 = module_0.Section(str_6, str_6)
    str_7 = "relative_to_docs"
    link_2 = module_0.Link(str_7, section_3)
    str_8 = " Use '"
    section_4 = module_0.Section(str_8, str_8)
    var_4 = section_4.__repr__()
    assert var_4 == 'Section(title=" Use \'")'
    int_0 = var_4.__len__()
    assert int_0 == 23
    str_9 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_3 = module_0.Link(str_9, none_type_1)
    bytes_0 = b"\x802c35Z\xf8"
    link_4 = module_0.Link(link_3, bytes_0)
    dict_0 = {}
    str_10 = 'y\x0c[fN"W:2&:SWyz~W'
    link_5 = module_0.Link(dict_0, str_10)
    var_5 = link_4.__repr__()
    assert (
        var_5
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )
    str_11 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_6 = module_0.Link(str_11, none_type_2)
    var_6 = link_6.__repr__()
    assert var_6 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_12 = " Use '"
    section_5 = module_0.Section(str_12, str_12)
    var_7 = section_5.__repr__()
    assert var_7 == 'Section(title=" Use \'")'
    section_6 = module_0.Section(str_12, var_7)
    assert section_6.children == 'Section(title=" Use \'")'
    dict_1 = {}
    str_13 = 'y\x0c[fN"W:2&:SWyz~W'
    link_7 = module_0.Link(dict_1, str_13)
    section_7 = module_0.Section(str_13, str_13)
    str_14 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_8 = module_0.Link(str_14, none_type_3)
    var_8 = link_8.__repr__()
    assert var_8 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_9 = var_8.__repr__()
    assert var_9 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    section_8 = module_0.Section(str_9, section_7)


def test_case_170():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    bytes_0 = b"\x802c35Z\xf8"
    link_1 = module_0.Link(link_0, bytes_0)
    dict_0 = {}
    str_1 = 'y\x0c[fN"W:2&:SWyz~W'
    link_2 = module_0.Link(dict_0, str_1)
    var_0 = link_1.__repr__()
    assert (
        var_0
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_3 = module_0.Link(str_2, none_type_1)
    var_1 = link_3.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_2 = var_1.__repr__()
    assert var_2 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_3 = var_1.__str__()
    assert str_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_4 = "gfRsC:6&{;|"
    section_0 = module_0.Section(str_4, str_4)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "gfRsC:6&{;|"
    assert section_0.children == "gfRsC:6&{;|"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_5 = var_1.__str__()
    assert str_5 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"


def test_case_171():
    str_0 = "gfRsC:6&{;|"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "gfRsC:6&{;|"
    assert section_0.children == "gfRsC:6&{;|"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = "page_context"
    section_1 = module_0.Section(str_1, str_1)
    str_2 = "page_context"
    section_2 = module_0.Section(str_2, str_2)
    str_3 = "' from the site because it conflicts with '"
    list_0 = []
    section_3 = module_0.Section(str_3, list_0)
    var_0 = section_3.__repr__()
    assert var_0 == "Section(title=\"' from the site because it conflicts with '\")"
    str_4 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_4, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_1 = link_0.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_5 = "page_context"
    section_4 = module_0.Section(str_5, str_5)
    str_6 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_6, none_type_1)
    var_2 = link_1.__repr__()
    assert var_2 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_3 = section_4.__repr__()
    assert var_3 == "Section(title='page_context')"
    str_7 = " Use '"
    section_5 = module_0.Section(str_7, str_7)
    var_4 = section_5.__repr__()
    assert var_4 == 'Section(title=" Use \'")'
    str_8 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_2 = module_0.Link(str_8, none_type_2)
    bytes_0 = b"\x802c35Z\xf8"
    link_3 = module_0.Link(link_2, bytes_0)
    dict_0 = {}
    str_9 = 'y\x0c[fN"W:2&:SWyz~W'
    link_4 = module_0.Link(dict_0, str_9)
    var_5 = link_3.__repr__()
    assert (
        var_5
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )
    dict_1 = {}
    str_10 = 'y\x0c[fN"W:2&:SWyz~W'
    link_5 = module_0.Link(dict_1, str_10)
    section_6 = module_0.Section(str_10, str_10)
    iterator_0 = var_1.__iter__()


def test_case_172():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_2 = var_1.__repr__()
    assert var_2 == "'\"Link(title=\\'0_~6:m!(f5FgU,:rvz\\', url=None)\"'"


def test_case_173():
    str_0 = "page_context"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    dict_0 = {}
    str_1 = 'y\x0c[fN"W:2&:SWyz~W'
    link_0 = module_0.Link(dict_0, str_1)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == {}
    assert link_0.url == 'y\x0c[fN"W:2&:SWyz~W'
    section_1 = module_0.Section(str_1, str_1)
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_1 = module_0.Link(str_2, none_type_0)
    var_0 = link_1.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_3 = var_0.__str__()
    assert str_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_2 = var_0.__repr__()
    assert var_2 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    int_0 = var_2.__len__()
    assert int_0 == 44


def test_case_174():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_2 = var_1.__repr__()
    assert var_2 == "'\"Link(title=\\'0_~6:m!(f5FgU,:rvz\\', url=None)\"'"
    str_1 = "page_context"
    section_0 = module_0.Section(str_1, str_1)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_2 = "' from the site because it conflicts with '"
    list_0 = []
    section_1 = module_0.Section(str_2, list_0)
    var_3 = section_1.__repr__()
    assert var_3 == "Section(title=\"' from the site because it conflicts with '\")"
    str_3 = "gfRsC:6&{;|"
    section_2 = module_0.Section(str_3, str_3)
    str_4 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_4, none_type_1)
    var_4 = link_1.__repr__()
    assert var_4 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_5 = var_4.__repr__()
    assert var_5 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_5 = var_4.__str__()
    assert str_5 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_6 = "page_context"
    section_3 = module_0.Section(str_6, str_6)
    str_7 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_2 = module_0.Link(str_7, none_type_2)
    var_6 = link_2.__repr__()
    assert var_6 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_7 = section_3.__repr__()
    assert var_7 == "Section(title='page_context')"
    str_8 = " Use '"
    section_4 = module_0.Section(str_8, str_8)
    var_8 = section_4.__repr__()
    assert var_8 == 'Section(title=" Use \'")'
    int_0 = var_8.__len__()
    assert int_0 == 23
    str_9 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_3 = module_0.Link(str_9, none_type_3)
    var_9 = link_3.__repr__()
    assert var_9 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_10 = "0_~6:m!(f5FgU,:rvz"
    none_type_4 = None
    link_4 = module_0.Link(str_10, none_type_4)
    bytes_0 = b"\x802c35Z\xf8"
    link_5 = module_0.Link(link_4, bytes_0)
    dict_0 = {}
    str_11 = 'y\x0c[fN"W:2&:SWyz~W'
    link_6 = module_0.Link(dict_0, str_11)
    var_10 = link_5.__repr__()
    assert (
        var_10
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )
    str_12 = " Use '"
    section_5 = module_0.Section(str_12, str_12)
    var_11 = section_5.__repr__()
    assert var_11 == 'Section(title=" Use \'")'
    int_1 = var_11.__len__()
    assert int_1 == 23
    str_13 = "0_~6:m!(f5FgU,:rvz"
    none_type_5 = None
    link_7 = module_0.Link(str_13, none_type_5)
    int_2 = var_11.__len__()
    assert int_2 == 23
    var_12 = var_3.__repr__()
    assert (
        var_12 == "'Section(title=\"\\' from the site because it conflicts with \\'\")'"
    )


def test_case_175():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    int_0 = var_0.__len__()
    assert int_0 == 23
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_1, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    int_1 = var_0.__len__()
    assert int_1 == 23
    str_2 = "gfRsC:6&{;|"
    section_1 = module_0.Section(str_2, str_2)
    var_1 = section_1.__repr__()
    assert var_1 == "Section(title='gfRsC:6&{;|')"
    str_3 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_3, none_type_1)
    var_2 = link_1.__repr__()
    assert var_2 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_3 = var_2.__repr__()
    assert var_3 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_4 = var_2.__str__()
    assert str_4 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_5 = "page_context"
    section_2 = module_0.Section(str_5, str_5)
    str_6 = " Use '"
    section_3 = module_0.Section(str_6, str_6)
    var_4 = section_3.__repr__()
    assert var_4 == 'Section(title=" Use \'")'
    int_2 = var_4.__len__()
    assert int_2 == 23
    var_5 = var_4.__repr__()
    assert var_5 == "'Section(title=\" Use \\'\")'"
    str_7 = " Use '"
    section_4 = module_0.Section(str_7, str_7)
    var_6 = section_4.__repr__()
    assert var_6 == 'Section(title=" Use \'")'
    section_5 = module_0.Section(str_7, var_6)
    assert section_5.children == 'Section(title=" Use \'")'
    str_8 = "gfRsC:6&{;|"
    section_6 = module_0.Section(str_8, str_8)
    dict_0 = {}
    str_9 = 'y\x0c[fN"W:2&:SWyz~W'
    link_2 = module_0.Link(dict_0, str_9)
    section_7 = module_0.Section(str_9, str_9)
    str_10 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_3 = module_0.Link(str_10, none_type_2)
    var_7 = link_3.__repr__()
    assert var_7 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_8 = var_7.__repr__()
    assert var_8 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_9 = var_8.__repr__()
    assert var_9 == "'\"Link(title=\\'0_~6:m!(f5FgU,:rvz\\', url=None)\"'"
    str_11 = "\\:Ma^uY\\u{G$I"
    str_12 = "?H~-\r0Vd\r+%F"
    link_4 = module_0.Link(str_11, str_12)


def test_case_176():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    bytes_0 = b"\x802c35Z\xf8"
    link_1 = module_0.Link(link_0, bytes_0)
    str_1 = " Use '"
    section_0 = module_0.Section(str_1, str_1)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_2 = module_0.Link(str_2, none_type_1)
    var_1 = link_2.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_2 = var_1.__repr__()
    assert var_2 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_3 = var_2.__repr__()
    assert var_3 == "'\"Link(title=\\'0_~6:m!(f5FgU,:rvz\\', url=None)\"'"
    str_3 = " Use '"
    section_1 = module_0.Section(str_3, str_3)
    var_4 = section_1.__repr__()
    assert var_4 == 'Section(title=" Use \'")'
    str_4 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_3 = module_0.Link(str_4, none_type_2)
    var_5 = link_3.__repr__()
    assert var_5 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    int_0 = var_5.__len__()
    assert int_0 == 42
    str_5 = "page_context"
    section_2 = module_0.Section(str_5, str_5)
    str_6 = "' from the site because it conflicts with '"
    list_0 = []
    section_3 = module_0.Section(str_6, list_0)
    str_7 = "localhost"
    link_4 = module_0.Link(str_6, str_7)
    str_8 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_5 = module_0.Link(str_8, none_type_3)
    var_6 = link_5.__repr__()
    assert var_6 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_7 = var_6.__repr__()
    assert var_7 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_9 = var_6.__str__()
    assert str_9 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_8 = var_6.__repr__()
    assert var_8 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_10 = " Use '"
    section_4 = module_0.Section(str_10, str_10)
    var_9 = section_4.__repr__()
    assert var_9 == 'Section(title=" Use \'")'
    int_1 = var_9.__len__()
    assert int_1 == 23
    str_11 = " Use '"
    section_5 = module_0.Section(str_11, str_11)
    var_10 = section_5.__repr__()
    assert var_10 == 'Section(title=" Use \'")'
    int_2 = var_10.__len__()
    assert int_2 == 23
    var_11 = var_10.__repr__()
    assert var_11 == "'Section(title=\" Use \\'\")'"
    str_12 = " Use '"
    section_6 = module_0.Section(str_12, str_12)
    var_12 = section_6.__repr__()
    assert var_12 == 'Section(title=" Use \'")'
    section_7 = module_0.Section(str_12, var_12)
    assert section_7.children == 'Section(title=" Use \'")'
    str_13 = " Use '"
    section_8 = module_0.Section(str_13, str_13)
    var_13 = section_8.__repr__()
    assert var_13 == 'Section(title=" Use \'")'
    int_3 = var_13.__len__()
    assert int_3 == 23
    str_14 = "0_~6:m!(f5FgU,:rvz"
    none_type_4 = None
    link_6 = module_0.Link(str_14, none_type_4)
    int_4 = var_13.__len__()
    assert int_4 == 23
    var_14 = var_13.__repr__()
    assert var_14 == "'Section(title=\" Use \\'\")'"


def test_case_177():
    str_0 = "page_context"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = "' from the site because it conflicts with '"
    list_0 = []
    section_1 = module_0.Section(str_1, list_0)
    var_0 = section_1.__repr__()
    assert var_0 == "Section(title=\"' from the site because it conflicts with '\")"
    str_2 = " Use '"
    section_2 = module_0.Section(str_2, str_2)
    var_1 = section_2.__repr__()
    assert var_1 == 'Section(title=" Use \'")'
    var_2 = var_1.__repr__()
    assert var_2 == "'Section(title=\" Use \\'\")'"
    dict_0 = {}
    str_3 = 'y\x0c[fN"W:2&:SWyz~W'
    link_0 = module_0.Link(dict_0, str_3)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == {}
    assert link_0.url == 'y\x0c[fN"W:2&:SWyz~W'
    section_3 = module_0.Section(str_3, str_3)
    str_4 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_1 = module_0.Link(str_4, none_type_0)
    var_3 = link_1.__repr__()
    assert var_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_4 = var_3.__repr__()
    assert var_4 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_5 = var_3.__str__()
    assert str_5 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_5 = var_3.__repr__()
    assert var_5 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_6 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_2 = module_0.Link(str_6, none_type_1)
    bytes_0 = b"\x802c35Z\xf8"
    link_3 = module_0.Link(link_2, bytes_0)
    dict_1 = {}
    str_7 = 'y\x0c[fN"W:2&:SWyz~W'
    link_4 = module_0.Link(dict_1, str_7)
    var_6 = link_3.__repr__()
    assert (
        var_6
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )
    str_8 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_5 = module_0.Link(str_8, none_type_2)
    bytes_1 = b"\x802c35Z\xf8"
    link_6 = module_0.Link(link_5, bytes_1)
    str_9 = "^x\x0cc+0@e#wI4OWQ|ZH"
    section_4 = module_0.Section(str_9, str_4)


def test_case_178():
    dict_0 = {}
    str_0 = 'y\x0c[fN"W:2&:SWyz~W'
    link_0 = module_0.Link(dict_0, str_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == {}
    assert link_0.url == 'y\x0c[fN"W:2&:SWyz~W'
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == 'y\x0c[fN"W:2&:SWyz~W'
    assert section_0.children == 'y\x0c[fN"W:2&:SWyz~W'
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = " Use '"
    section_1 = module_0.Section(str_1, str_1)
    var_0 = section_1.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    str_2 = "gfRsC:6&{;|"
    section_2 = module_0.Section(str_2, str_2)
    str_3 = "relative_to_docs"
    link_1 = module_0.Link(str_3, section_2)
    str_4 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_2 = module_0.Link(str_4, none_type_0)
    var_1 = link_2.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_2 = var_1.__repr__()
    assert var_2 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_5 = var_1.__str__()
    assert str_5 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_3 = var_1.__repr__()
    assert var_3 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_6 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_3 = module_0.Link(str_6, none_type_1)
    bytes_0 = b"\x802c35Z\xf8"
    link_4 = module_0.Link(link_3, bytes_0)
    var_4 = link_3.__repr__()
    assert var_4 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    int_0 = var_0.__len__()
    assert int_0 == 23


def test_case_179():
    str_0 = "page_context"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = "' from the site because it conflicts with '"
    list_0 = []
    section_1 = module_0.Section(str_1, list_0)
    var_0 = section_1.__repr__()
    assert var_0 == "Section(title=\"' from the site because it conflicts with '\")"
    str_2 = " Use '"
    section_2 = module_0.Section(str_2, str_2)
    var_1 = section_2.__repr__()
    assert var_1 == 'Section(title=" Use \'")'
    str_3 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_3, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    bytes_0 = b"\x802c35Z\xf8"
    link_1 = module_0.Link(link_0, bytes_0)
    dict_0 = {}
    str_4 = 'y\x0c[fN"W:2&:SWyz~W'
    link_2 = module_0.Link(dict_0, str_4)
    var_2 = link_1.__repr__()
    assert (
        var_2
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )
    str_5 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_3 = module_0.Link(str_5, none_type_1)
    var_3 = link_3.__repr__()
    assert var_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    iterator_0 = var_3.__iter__()


def test_case_180():
    str_0 = "page_context"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = "' from the site because it conflicts with '"
    list_0 = []
    section_1 = module_0.Section(str_1, list_0)
    var_0 = section_1.__repr__()
    assert var_0 == "Section(title=\"' from the site because it conflicts with '\")"
    str_2 = " Use '"
    section_2 = module_0.Section(str_2, str_2)
    var_1 = section_2.__repr__()
    assert var_1 == 'Section(title=" Use \'")'
    int_0 = var_1.__len__()
    assert int_0 == 23
    str_3 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_3, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    int_1 = var_1.__len__()
    assert int_1 == 23
    str_4 = " Use '"
    section_3 = module_0.Section(str_4, str_4)
    var_2 = section_3.__repr__()
    assert var_2 == 'Section(title=" Use \'")'
    int_2 = var_0.__len__()
    assert int_2 == 60


def test_case_181():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    var_1 = var_0.__repr__()
    assert var_1 == "'Section(title=\" Use \\'\")'"
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_1, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_2 = link_0.__repr__()
    assert var_2 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_3 = var_2.__repr__()
    assert var_3 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_4 = var_3.__repr__()
    assert var_4 == "'\"Link(title=\\'0_~6:m!(f5FgU,:rvz\\', url=None)\"'"
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_2, none_type_1)
    str_3 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_2 = module_0.Link(str_3, none_type_2)
    var_5 = link_2.__repr__()
    assert var_5 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_6 = var_5.__repr__()
    assert var_6 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_7 = var_2.__repr__()
    assert var_7 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""


def test_case_182():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_1 = var_0.__str__()
    assert str_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_2 = var_0.__repr__()
    assert var_2 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_2 = "gfRsC:6&{;|"
    section_0 = module_0.Section(str_2, str_2)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "gfRsC:6&{;|"
    assert section_0.children == "gfRsC:6&{;|"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_3 = " Use '"
    section_1 = module_0.Section(str_3, str_3)
    var_3 = section_1.__repr__()
    assert var_3 == 'Section(title=" Use \'")'
    int_0 = var_3.__len__()
    assert int_0 == 23
    str_4 = " Use '"
    section_2 = module_0.Section(str_4, str_4)
    var_4 = section_2.__repr__()
    assert var_4 == 'Section(title=" Use \'")'
    var_5 = var_4.__repr__()
    assert var_5 == "'Section(title=\" Use \\'\")'"
    str_5 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_5, none_type_1)
    var_6 = link_1.__repr__()
    assert var_6 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_7 = var_6.__repr__()
    assert var_7 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_6 = " Use '"
    section_3 = module_0.Section(str_6, str_6)
    var_8 = section_3.__repr__()
    assert var_8 == 'Section(title=" Use \'")'
    int_1 = 3367
    link_2 = module_0.Link(int_1, str_5)


def test_case_183():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_2 = var_1.__repr__()
    assert var_2 == "'\"Link(title=\\'0_~6:m!(f5FgU,:rvz\\', url=None)\"'"
    str_1 = " Use '"
    section_0 = module_0.Section(str_1, str_1)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_3 = section_0.__repr__()
    assert var_3 == 'Section(title=" Use \'")'
    str_2 = "gfRsC:6&{;|"
    section_1 = module_0.Section(str_2, str_2)
    str_3 = "relative_to_docs"
    link_1 = module_0.Link(str_3, section_1)
    str_4 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_2 = module_0.Link(str_4, none_type_1)
    bytes_0 = b"\x802c35Z\xf8"
    link_3 = module_0.Link(link_2, bytes_0)
    dict_0 = {}
    str_5 = 'y\x0c[fN"W:2&:SWyz~W'
    link_4 = module_0.Link(dict_0, str_5)
    var_4 = link_3.__repr__()
    assert (
        var_4
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )
    str_6 = " Use '"
    section_2 = module_0.Section(str_6, str_6)
    var_5 = section_2.__repr__()
    assert var_5 == 'Section(title=" Use \'")'
    int_0 = var_5.__len__()
    assert int_0 == 23
    str_7 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_5 = module_0.Link(str_7, none_type_2)
    int_1 = var_5.__len__()
    assert int_1 == 23
    str_8 = " Use '"
    section_3 = module_0.Section(str_8, str_8)
    var_6 = section_3.__repr__()
    assert var_6 == 'Section(title=" Use \'")'
    int_2 = var_6.__len__()
    assert int_2 == 23
    var_7 = var_6.__repr__()
    assert var_7 == "'Section(title=\" Use \\'\")'"
    str_9 = "page_context"
    section_4 = module_0.Section(str_9, str_9)
    dict_1 = {}
    str_10 = 'y\x0c[fN"W:2&:SWyz~W'
    link_6 = module_0.Link(dict_1, str_10)
    section_5 = module_0.Section(str_10, str_10)
    int_3 = var_5.__len__()
    assert int_3 == 23


def test_case_184():
    dict_0 = {}
    str_0 = 'y\x0c[fN"W:2&:SWyz~W'
    link_0 = module_0.Link(dict_0, str_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == {}
    assert link_0.url == 'y\x0c[fN"W:2&:SWyz~W'
    str_1 = " Use '"
    section_0 = module_0.Section(str_1, str_1)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    str_2 = "gfRsC:6&{;|"
    section_1 = module_0.Section(str_2, str_2)
    str_3 = "relative_to_docs"
    link_1 = module_0.Link(str_3, section_1)
    str_4 = " Use '"
    section_2 = module_0.Section(str_4, str_4)
    var_1 = section_2.__repr__()
    assert var_1 == 'Section(title=" Use \'")'
    int_0 = var_1.__len__()
    assert int_0 == 23
    dict_1 = {}
    str_5 = 'y\x0c[fN"W:2&:SWyz~W'
    link_2 = module_0.Link(dict_1, str_5)
    section_3 = module_0.Section(str_5, str_5)
    str_6 = "page_context"
    section_4 = module_0.Section(str_6, str_6)
    str_7 = "' from the site because it conflicts with '"
    list_0 = []
    section_5 = module_0.Section(str_7, list_0)
    var_2 = section_5.__repr__()
    assert var_2 == "Section(title=\"' from the site because it conflicts with '\")"
    str_8 = " Use '"
    section_6 = module_0.Section(str_8, str_8)
    var_3 = section_6.__repr__()
    assert var_3 == 'Section(title=" Use \'")'
    int_1 = var_3.__len__()
    assert int_1 == 23
    str_9 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_3 = module_0.Link(str_9, none_type_0)
    int_2 = var_3.__len__()
    assert int_2 == 23
    var_4 = section_2.__repr__()
    assert var_4 == 'Section(title=" Use \'")'


def test_case_185():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    str_1 = "page_context"
    section_1 = module_0.Section(str_1, str_1)
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_2, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_1 = link_0.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_2 = var_1.__repr__()
    assert var_2 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_3 = var_1.__str__()
    assert str_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_4 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_4, none_type_1)
    var_3 = link_1.__repr__()
    assert var_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    dict_0 = {}
    str_5 = 'y\x0c[fN"W:2&:SWyz~W'
    link_2 = module_0.Link(dict_0, str_5)
    section_2 = module_0.Section(str_5, str_5)
    str_6 = " Use '"
    section_3 = module_0.Section(str_6, str_6)
    var_4 = section_3.__repr__()
    assert var_4 == 'Section(title=" Use \'")'
    section_4 = module_0.Section(str_6, var_4)
    assert section_4.children == 'Section(title=" Use \'")'
    str_7 = "MwN/My5V\n'Dx3\"y\x0b\x0bqS|"
    str_8 = '@%}"}dj?++nf>Mie|iMN'
    link_3 = module_0.Link(str_7, str_8)


def test_case_186():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    bytes_0 = b"\x802c35Z\xf8"
    link_1 = module_0.Link(link_0, bytes_0)
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_2 = module_0.Link(str_1, none_type_1)
    var_1 = link_2.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_2 = var_1.__repr__()
    assert var_2 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_2 = var_1.__str__()
    assert str_2 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    dict_0 = {}
    str_3 = 'y\x0c[fN"W:2&:SWyz~W'
    link_3 = module_0.Link(dict_0, str_3)
    str_4 = " Use '"
    section_0 = module_0.Section(str_4, str_4)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_3 = section_0.__repr__()
    assert var_3 == 'Section(title=" Use \'")'
    int_0 = var_3.__len__()
    assert int_0 == 23
    str_5 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_4 = module_0.Link(str_5, none_type_2)
    int_1 = var_3.__len__()
    assert int_1 == 23
    str_6 = "gfRsC:6&{;|"
    section_1 = module_0.Section(str_6, str_6)
    var_4 = section_1.__repr__()
    assert var_4 == "Section(title='gfRsC:6&{;|')"
    str_7 = "page_context"
    section_2 = module_0.Section(str_7, str_7)
    str_8 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_5 = module_0.Link(str_8, none_type_3)
    var_5 = link_5.__repr__()
    assert var_5 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_6 = var_5.__repr__()
    assert var_6 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_9 = " Use '"
    section_3 = module_0.Section(str_9, str_9)
    var_7 = section_3.__repr__()
    assert var_7 == 'Section(title=" Use \'")'
    str_10 = "gfRsC:6&{;|"
    section_4 = module_0.Section(str_10, str_10)
    str_11 = var_3.__str__()
    assert str_11 == 'Section(title=" Use \'")'


def test_case_187():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_1, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_1 = link_0.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    int_0 = var_1.__len__()
    assert int_0 == 42
    str_2 = "page_context"
    section_1 = module_0.Section(str_2, str_2)
    str_3 = "' from the site because it conflicts with '"
    list_0 = []
    section_2 = module_0.Section(str_3, list_0)
    str_4 = "localhost"
    link_1 = module_0.Link(str_3, str_4)
    str_5 = " Use '"
    section_3 = module_0.Section(str_5, str_5)
    var_2 = section_3.__repr__()
    assert var_2 == 'Section(title=" Use \'")'
    section_4 = module_0.Section(str_5, var_2)
    assert section_4.children == 'Section(title=" Use \'")'
    str_6 = "gfRsC:6&{;|"
    section_5 = module_0.Section(str_6, str_6)
    str_7 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_2 = module_0.Link(str_7, none_type_1)
    bytes_0 = b"\x802c35Z\xf8"
    link_3 = module_0.Link(link_2, bytes_0)
    str_8 = "page_context"
    section_6 = module_0.Section(str_8, str_8)
    str_9 = "' from the site because it conflicts with '"
    list_1 = []
    section_7 = module_0.Section(str_9, list_1)
    str_10 = " Use '"
    section_8 = module_0.Section(str_10, str_10)
    var_3 = section_8.__repr__()
    assert var_3 == 'Section(title=" Use \'")'
    dict_0 = {}
    str_11 = 'y\x0c[fN"W:2&:SWyz~W'
    link_4 = module_0.Link(dict_0, str_11)
    section_9 = module_0.Section(str_11, str_11)
    iterator_0 = var_1.__iter__()


def test_case_188():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    bytes_0 = b"\x802c35Z\xf8"
    link_1 = module_0.Link(link_0, bytes_0)
    str_1 = " Use '"
    section_0 = module_0.Section(str_1, str_1)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    section_1 = module_0.Section(str_1, var_0)
    assert section_1.children == 'Section(title=" Use \'")'
    str_2 = " Use '"
    section_2 = module_0.Section(str_2, str_2)
    var_1 = section_2.__repr__()
    assert var_1 == 'Section(title=" Use \'")'
    int_0 = var_1.__len__()
    assert int_0 == 23
    str_3 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_2 = module_0.Link(str_3, none_type_1)
    int_1 = var_1.__len__()
    assert int_1 == 23
    str_4 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_3 = module_0.Link(str_4, none_type_2)
    str_5 = " Use '"
    section_3 = module_0.Section(str_5, str_5)
    var_2 = section_3.__repr__()
    assert var_2 == 'Section(title=" Use \'")'
    str_6 = "gfRsC:6&{;|"
    section_4 = module_0.Section(str_6, str_6)
    str_7 = "relative_to_docs"
    link_4 = module_0.Link(str_7, section_4)
    str_8 = "page_context"
    section_5 = module_0.Section(str_8, str_8)
    str_9 = "' from the site because it conflicts with '"
    list_0 = []
    section_6 = module_0.Section(str_9, list_0)
    str_10 = "'*@>+&}g,|o|@YrS8%_o"
    link_5 = module_0.Link(var_2, str_10)
    assert link_5.title == 'Section(title=" Use \'")'


def test_case_189():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    str_1 = "gfRsC:6&{;|"
    section_1 = module_0.Section(str_1, str_1)
    str_2 = "relative_to_docs"
    link_0 = module_0.Link(str_2, section_1)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "relative_to_docs"
    assert (
        f"{type(link_0.url).__module__}.{type(link_0.url).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    str_3 = "page_context"
    section_2 = module_0.Section(str_3, str_3)
    str_4 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_1 = module_0.Link(str_4, none_type_0)
    bytes_0 = b"\x802c35Z\xf8"
    link_2 = module_0.Link(link_1, bytes_0)
    dict_0 = {}
    str_5 = 'y\x0c[fN"W:2&:SWyz~W'
    link_3 = module_0.Link(dict_0, str_5)
    var_1 = link_2.__repr__()
    assert (
        var_1
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )
    str_6 = " Use '"
    section_3 = module_0.Section(str_6, str_6)
    var_2 = section_3.__repr__()
    assert var_2 == 'Section(title=" Use \'")'
    str_7 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_4 = module_0.Link(str_7, none_type_1)
    var_3 = link_4.__repr__()
    assert var_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    int_0 = var_3.__len__()
    assert int_0 == 42
    str_8 = " Use '"
    section_4 = module_0.Section(str_8, str_8)
    var_4 = section_4.__repr__()
    assert var_4 == 'Section(title=" Use \'")'
    int_1 = var_4.__len__()
    assert int_1 == 23
    var_5 = var_4.__repr__()
    assert var_5 == "'Section(title=\" Use \\'\")'"
    int_2 = var_1.__len__()
    assert int_2 == 76


def test_case_190():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    bytes_0 = b"\x802c35Z\xf8"
    link_1 = module_0.Link(link_0, bytes_0)
    dict_0 = {}
    str_1 = 'y\x0c[fN"W:2&:SWyz~W'
    link_2 = module_0.Link(dict_0, str_1)
    var_0 = link_1.__repr__()
    assert (
        var_0
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_3 = module_0.Link(str_2, none_type_1)
    var_1 = link_3.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_3 = " Use '"
    section_0 = module_0.Section(str_3, str_3)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_2 = section_0.__repr__()
    assert var_2 == 'Section(title=" Use \'")'
    var_3 = var_2.__repr__()
    assert var_3 == "'Section(title=\" Use \\'\")'"
    str_4 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_4 = module_0.Link(str_4, none_type_2)
    var_4 = link_4.__repr__()
    assert var_4 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_5 = var_4.__repr__()
    assert var_5 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_6 = var_5.__repr__()
    assert var_6 == "'\"Link(title=\\'0_~6:m!(f5FgU,:rvz\\', url=None)\"'"
    dict_1 = {}
    str_5 = 'y\x0c[fN"W:2&:SWyz~W'
    link_5 = module_0.Link(dict_1, str_5)
    str_6 = "page_context"
    section_1 = module_0.Section(str_6, str_6)
    str_7 = "' from the site because it conflicts with '"
    list_0 = []
    section_2 = module_0.Section(str_7, list_0)
    str_8 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_6 = module_0.Link(str_8, none_type_3)
    var_7 = link_6.__repr__()
    assert var_7 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_8 = var_7.__repr__()
    assert var_8 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_9 = section_2.__repr__()
    assert var_9 == "Section(title=\"' from the site because it conflicts with '\")"


def test_case_191():
    str_0 = "page_context"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = "' from the site because it conflicts with '"
    list_0 = []
    section_1 = module_0.Section(str_1, list_0)
    str_2 = "localhost"
    link_0 = module_0.Link(str_1, str_2)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "' from the site because it conflicts with '"
    assert link_0.url == "localhost"
    dict_0 = {}
    str_3 = 'y\x0c[fN"W:2&:SWyz~W'
    link_1 = module_0.Link(dict_0, str_3)
    str_4 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_2 = module_0.Link(str_4, none_type_0)
    bytes_0 = b"\x802c35Z\xf8"
    link_3 = module_0.Link(link_2, bytes_0)
    str_5 = " Use '"
    section_2 = module_0.Section(str_5, str_5)
    var_0 = section_2.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    int_0 = var_0.__len__()
    assert int_0 == 23
    var_1 = var_0.__repr__()
    assert var_1 == "'Section(title=\" Use \\'\")'"
    str_6 = " Use '"
    section_3 = module_0.Section(str_6, str_6)
    var_2 = section_3.__repr__()
    assert var_2 == 'Section(title=" Use \'")'
    str_7 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_4 = module_0.Link(str_7, none_type_1)
    var_3 = link_4.__repr__()
    assert var_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    int_1 = var_3.__len__()
    assert int_1 == 42
    str_8 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_5 = module_0.Link(str_8, none_type_2)
    bytes_1 = b"\x802c35Z\xf8"
    link_6 = module_0.Link(link_5, bytes_1)
    var_4 = link_5.__repr__()
    assert var_4 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    int_2 = var_1.__len__()
    assert int_2 == 26


def test_case_192():
    str_0 = "page_context"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = "' from the site because it conflicts with '"
    list_0 = []
    section_1 = module_0.Section(str_1, list_0)
    str_2 = "localhost"
    link_0 = module_0.Link(str_1, str_2)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "' from the site because it conflicts with '"
    assert link_0.url == "localhost"
    str_3 = " Use '"
    section_2 = module_0.Section(str_3, str_3)
    var_0 = section_2.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    str_4 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_1 = module_0.Link(str_4, none_type_0)
    var_1 = link_1.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    int_0 = var_1.__len__()
    assert int_0 == 42
    str_5 = " Use '"
    section_3 = module_0.Section(str_5, str_5)
    var_2 = section_3.__repr__()
    assert var_2 == 'Section(title=" Use \'")'
    str_6 = "gfRsC:6&{;|"
    section_4 = module_0.Section(str_6, str_6)
    str_7 = "relative_to_docs"
    link_2 = module_0.Link(str_7, section_4)
    str_8 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_3 = module_0.Link(str_8, none_type_1)
    var_3 = link_3.__repr__()
    assert var_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_4 = var_3.__repr__()
    assert var_4 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_9 = var_3.__str__()
    assert str_9 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_5 = var_3.__repr__()
    assert var_5 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_10 = " Use '"
    section_5 = module_0.Section(str_10, str_10)
    var_6 = section_5.__repr__()
    assert var_6 == 'Section(title=" Use \'")'
    str_11 = "page_context"
    section_6 = module_0.Section(str_11, str_11)
    str_12 = "' from the site because it conflicts with '"
    list_1 = []
    section_7 = module_0.Section(str_12, list_1)
    str_13 = " Use '"
    section_8 = module_0.Section(str_13, str_13)
    var_7 = section_8.__repr__()
    assert var_7 == 'Section(title=" Use \'")'
    int_1 = var_7.__len__()
    assert int_1 == 23
    str_14 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_4 = module_0.Link(str_14, none_type_2)
    int_2 = var_7.__len__()
    assert int_2 == 23
    section_9 = module_0.Section(var_1, int_2)
    assert section_9.title == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    assert section_9.children == 23


def test_case_193():
    str_0 = "gfRsC:6&{;|"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "gfRsC:6&{;|"
    assert section_0.children == "gfRsC:6&{;|"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_1, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    bytes_0 = b"\x802c35Z\xf8"
    link_1 = module_0.Link(link_0, bytes_0)
    dict_0 = {}
    str_2 = 'y\x0c[fN"W:2&:SWyz~W'
    link_2 = module_0.Link(dict_0, str_2)
    var_0 = link_1.__repr__()
    assert (
        var_0
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )
    str_3 = "page_context"
    section_1 = module_0.Section(str_3, str_3)
    str_4 = "' from the site because it conflicts with '"
    list_0 = []
    section_2 = module_0.Section(str_4, list_0)
    var_1 = section_2.__repr__()
    assert var_1 == "Section(title=\"' from the site because it conflicts with '\")"
    str_5 = " Use '"
    section_3 = module_0.Section(str_5, str_5)
    var_2 = section_3.__repr__()
    assert var_2 == 'Section(title=" Use \'")'
    int_0 = var_2.__len__()
    assert int_0 == 23
    var_3 = var_2.__repr__()
    assert var_3 == "'Section(title=\" Use \\'\")'"
    str_6 = "page_context"
    section_4 = module_0.Section(str_6, str_6)
    str_7 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_3 = module_0.Link(str_7, none_type_1)
    var_4 = link_3.__repr__()
    assert var_4 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_5 = section_4.__repr__()
    assert var_5 == "Section(title='page_context')"
    str_8 = " Use '"
    section_5 = module_0.Section(str_8, str_8)
    var_6 = section_5.__repr__()
    assert var_6 == 'Section(title=" Use \'")'
    str_9 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_4 = module_0.Link(str_9, none_type_2)
    var_7 = link_4.__repr__()
    assert var_7 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    int_1 = var_7.__len__()
    assert int_1 == 42
    str_10 = " Use '"
    section_6 = module_0.Section(str_10, str_10)
    var_8 = section_6.__repr__()
    assert var_8 == 'Section(title=" Use \'")'
    int_2 = var_8.__len__()
    assert int_2 == 23
    int_3 = var_4.__len__()
    assert int_3 == 42


def test_case_194():
    dict_0 = {}
    str_0 = 'y\x0c[fN"W:2&:SWyz~W'
    link_0 = module_0.Link(dict_0, str_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == {}
    assert link_0.url == 'y\x0c[fN"W:2&:SWyz~W'
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == 'y\x0c[fN"W:2&:SWyz~W'
    assert section_0.children == 'y\x0c[fN"W:2&:SWyz~W'
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_1 = module_0.Link(str_1, none_type_0)
    var_0 = link_1.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_2 = var_1.__repr__()
    assert var_2 == "'\"Link(title=\\'0_~6:m!(f5FgU,:rvz\\', url=None)\"'"
    str_2 = "page_context"
    section_1 = module_0.Section(str_2, str_2)
    str_3 = "' from the site because it conflicts with '"
    list_0 = []
    section_2 = module_0.Section(str_3, list_0)
    str_4 = "localhost"
    link_2 = module_0.Link(str_3, str_4)
    str_5 = "page_context"
    section_3 = module_0.Section(str_5, str_5)
    str_6 = "' from the site because it conflicts with '"
    list_1 = []
    section_4 = module_0.Section(str_6, list_1)
    var_3 = section_4.__repr__()
    assert var_3 == "Section(title=\"' from the site because it conflicts with '\")"
    str_7 = " Use '"
    section_5 = module_0.Section(str_7, str_7)
    var_4 = section_5.__repr__()
    assert var_4 == 'Section(title=" Use \'")'
    int_0 = var_4.__len__()
    assert int_0 == 23
    var_5 = var_4.__repr__()
    assert var_5 == "'Section(title=\" Use \\'\")'"
    str_8 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_3 = module_0.Link(str_8, none_type_1)
    var_6 = link_3.__repr__()
    assert var_6 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_7 = var_6.__repr__()
    assert var_7 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_9 = var_6.__str__()
    assert str_9 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_8 = var_6.__repr__()
    assert var_8 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_10 = " Use '"
    section_6 = module_0.Section(str_10, str_10)
    var_9 = section_6.__repr__()
    assert var_9 == 'Section(title=" Use \'")'
    section_7 = module_0.Section(str_10, var_9)
    assert section_7.children == 'Section(title=" Use \'")'
    str_11 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_4 = module_0.Link(str_11, none_type_2)
    str_12 = "u)>)t\nHH\x0b)E''"
    section_8 = module_0.Section(str_12, section_0)


def test_case_195():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    int_0 = var_0.__len__()
    assert int_0 == 23
    var_1 = var_0.__repr__()
    assert var_1 == "'Section(title=\" Use \\'\")'"
    str_1 = " Use '"
    section_1 = module_0.Section(str_1, str_1)
    var_2 = section_1.__repr__()
    assert var_2 == 'Section(title=" Use \'")'
    section_2 = module_0.Section(str_1, var_2)
    assert section_2.children == 'Section(title=" Use \'")'
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_2, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    bytes_0 = b"\x802c35Z\xf8"
    link_1 = module_0.Link(link_0, bytes_0)
    dict_0 = {}
    str_3 = 'y\x0c[fN"W:2&:SWyz~W'
    link_2 = module_0.Link(dict_0, str_3)
    var_3 = link_1.__repr__()
    assert (
        var_3
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )
    str_4 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_3 = module_0.Link(str_4, none_type_1)
    var_4 = link_3.__repr__()
    assert var_4 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_5 = var_4.__repr__()
    assert var_5 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_5 = var_4.__str__()
    assert str_5 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    dict_1 = {}
    str_6 = 'y\x0c[fN"W:2&:SWyz~W'
    link_4 = module_0.Link(dict_1, str_6)
    str_7 = "gfRsC:6&{;|"
    section_3 = module_0.Section(str_7, str_7)
    var_6 = section_3.__repr__()
    assert var_6 == "Section(title='gfRsC:6&{;|')"
    str_8 = " Use '"
    section_4 = module_0.Section(str_8, str_8)
    var_7 = section_4.__repr__()
    assert var_7 == 'Section(title=" Use \'")'
    var_8 = var_7.__repr__()
    assert var_8 == "'Section(title=\" Use \\'\")'"
    str_9 = " Use '"
    section_5 = module_0.Section(str_9, str_9)
    var_9 = section_5.__repr__()
    assert var_9 == 'Section(title=" Use \'")'
    int_1 = var_9.__len__()
    assert int_1 == 23
    str_10 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_5 = module_0.Link(str_10, none_type_2)
    int_2 = var_9.__len__()
    assert int_2 == 23
    str_11 = " Use '"
    section_6 = module_0.Section(str_11, str_11)
    var_10 = section_6.__repr__()
    assert var_10 == 'Section(title=" Use \'")'
    var_11 = var_1.__repr__()
    assert var_11 == "'\\'Section(title=\" Use \\\\\\'\")\\''"


def test_case_196():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    int_0 = var_0.__len__()
    assert int_0 == 23
    var_1 = var_0.__repr__()
    assert var_1 == "'Section(title=\" Use \\'\")'"
    str_1 = " Use '"
    section_1 = module_0.Section(str_1, str_1)
    var_2 = section_1.__repr__()
    assert var_2 == 'Section(title=" Use \'")'
    int_1 = var_2.__len__()
    assert int_1 == 23
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_2, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    int_2 = var_2.__len__()
    assert int_2 == 23
    str_3 = "gfRsC:6&{;|"
    section_2 = module_0.Section(str_3, str_3)
    var_3 = section_2.__repr__()
    assert var_3 == "Section(title='gfRsC:6&{;|')"
    str_4 = " Use '"
    section_3 = module_0.Section(str_4, str_4)
    var_4 = section_3.__repr__()
    assert var_4 == 'Section(title=" Use \'")'
    str_5 = "gfRsC:6&{;|"
    section_4 = module_0.Section(str_5, str_5)
    str_6 = "relative_to_docs"
    link_1 = module_0.Link(str_6, section_4)
    str_7 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_2 = module_0.Link(str_7, none_type_1)
    var_5 = link_2.__repr__()
    assert var_5 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_6 = var_5.__repr__()
    assert var_6 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_8 = var_5.__str__()
    assert str_8 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_7 = var_5.__repr__()
    assert var_7 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_9 = "gfRsC:6&{;|"
    section_5 = module_0.Section(str_9, str_9)
    str_10 = " Use '"
    section_6 = module_0.Section(str_10, str_10)
    var_8 = section_6.__repr__()
    assert var_8 == 'Section(title=" Use \'")'
    int_3 = var_8.__len__()
    assert int_3 == 23
    str_11 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_3 = module_0.Link(str_11, none_type_2)
    var_9 = link_3.__repr__()
    assert var_9 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_12 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_4 = module_0.Link(str_12, none_type_3)
    bytes_0 = b"\x802c35Z\xf8"
    link_5 = module_0.Link(link_4, bytes_0)
    str_13 = "0_~6:m!(f5FgU,:rvz"
    none_type_4 = None
    link_6 = module_0.Link(str_13, none_type_4)
    link_7 = module_0.Link(str_1, var_7)
    assert link_7.url == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""


def test_case_197():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    str_1 = " Use '"
    section_0 = module_0.Section(str_1, str_1)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    int_0 = var_0.__len__()
    assert int_0 == 23
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_2, none_type_1)
    var_1 = link_1.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_2 = var_1.__repr__()
    assert var_2 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_3 = var_1.__str__()
    assert str_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_4 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_2 = module_0.Link(str_4, none_type_2)
    bytes_0 = b"\x802c35Z\xf8"
    link_3 = module_0.Link(link_2, bytes_0)
    str_5 = "gfRsC:6&{;|"
    section_1 = module_0.Section(str_5, str_5)
    str_6 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_4 = module_0.Link(str_6, none_type_3)
    var_3 = link_4.__repr__()
    assert var_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_4 = var_3.__repr__()
    assert var_4 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    dict_0 = {}
    str_7 = 'y\x0c[fN"W:2&:SWyz~W'
    link_5 = module_0.Link(dict_0, str_7)
    section_2 = module_0.Section(str_7, str_7)
    str_8 = " Use '"
    section_3 = module_0.Section(str_8, str_8)
    var_5 = section_3.__repr__()
    assert var_5 == 'Section(title=" Use \'")'
    str_9 = "gfRsC:6&{;|"
    section_4 = module_0.Section(str_9, str_9)
    str_10 = "relative_to_docs"
    link_6 = module_0.Link(str_10, section_4)
    var_6 = link_5.__repr__()
    assert var_6 == "Link(title={}, url='y\\x0c[fN\"W:2&:SWyz~W')"


def test_case_198():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_1 = var_0.__str__()
    assert str_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_2 = var_0.__repr__()
    assert var_2 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_2 = " Use '"
    section_0 = module_0.Section(str_2, str_2)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_3 = section_0.__repr__()
    assert var_3 == 'Section(title=" Use \'")'
    int_0 = var_3.__len__()
    assert int_0 == 23
    var_4 = var_3.__repr__()
    assert var_4 == "'Section(title=\" Use \\'\")'"
    iterator_0 = var_1.__iter__()


def test_case_199():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    bytes_0 = b"\x802c35Z\xf8"
    link_1 = module_0.Link(link_0, bytes_0)
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    dict_0 = {}
    str_1 = 'y\x0c[fN"W:2&:SWyz~W'
    link_2 = module_0.Link(dict_0, str_1)
    section_0 = module_0.Section(str_1, str_1)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == 'y\x0c[fN"W:2&:SWyz~W'
    assert section_0.children == 'y\x0c[fN"W:2&:SWyz~W'
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_2 = "gfRsC:6&{;|"
    section_1 = module_0.Section(str_2, str_2)
    str_3 = "page_context"
    section_2 = module_0.Section(str_3, str_3)
    str_4 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_3 = module_0.Link(str_4, none_type_1)
    var_1 = link_3.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_2 = section_2.__repr__()
    assert var_2 == "Section(title='page_context')"
    str_5 = "page_context"
    section_3 = module_0.Section(str_5, str_5)
    str_6 = "' from the site because it conflicts with '"
    list_0 = []
    section_4 = module_0.Section(str_6, list_0)
    var_3 = section_4.__repr__()
    assert var_3 == "Section(title=\"' from the site because it conflicts with '\")"
    str_7 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_4 = module_0.Link(str_7, none_type_2)
    var_4 = link_4.__repr__()
    assert var_4 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_5 = var_4.__repr__()
    assert var_5 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_8 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_5 = module_0.Link(str_8, none_type_3)
    bytes_1 = b"\x802c35Z\xf8"
    link_6 = module_0.Link(link_5, bytes_1)
    dict_1 = {}
    str_9 = 'y\x0c[fN"W:2&:SWyz~W'
    link_7 = module_0.Link(dict_1, str_9)
    var_6 = link_6.__repr__()
    assert (
        var_6
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )
    str_10 = "0_~6:m!(f5FgU,:rvz"
    none_type_4 = None
    link_8 = module_0.Link(str_10, none_type_4)
    var_7 = link_8.__repr__()
    assert var_7 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_8 = var_7.__repr__()
    assert var_8 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_9 = var_8.__repr__()
    assert var_9 == "'\"Link(title=\\'0_~6:m!(f5FgU,:rvz\\', url=None)\"'"
    str_11 = var_7.__str__()
    assert str_11 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"


def test_case_200():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    bytes_0 = b"\x802c35Z\xf8"
    link_1 = module_0.Link(link_0, bytes_0)
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_1 = "page_context"
    section_0 = module_0.Section(str_1, str_1)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_2 = module_0.Link(str_2, none_type_1)
    var_1 = link_2.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_2 = section_0.__repr__()
    assert var_2 == "Section(title='page_context')"
    str_3 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_3 = module_0.Link(str_3, none_type_2)
    bytes_1 = b"\x802c35Z\xf8"
    link_4 = module_0.Link(link_3, bytes_1)
    dict_0 = {}
    str_4 = 'y\x0c[fN"W:2&:SWyz~W'
    link_5 = module_0.Link(dict_0, str_4)
    var_3 = link_4.__repr__()
    assert (
        var_3
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )
    str_5 = "gfRsC:6&{;|"
    section_1 = module_0.Section(str_5, str_5)
    var_4 = section_1.__repr__()
    assert var_4 == "Section(title='gfRsC:6&{;|')"
    var_5 = link_2.__repr__()
    assert var_5 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"


def test_case_201():
    str_0 = "page_context"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_1, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = section_0.__repr__()
    assert var_1 == "Section(title='page_context')"
    str_2 = " Use '"
    section_1 = module_0.Section(str_2, str_2)
    var_2 = section_1.__repr__()
    assert var_2 == 'Section(title=" Use \'")'
    int_0 = var_2.__len__()
    assert int_0 == 23
    var_3 = var_2.__repr__()
    assert var_3 == "'Section(title=\" Use \\'\")'"
    str_3 = "page_context"
    section_2 = module_0.Section(str_3, str_3)
    str_4 = "' from the site because it conflicts with '"
    list_0 = []
    section_3 = module_0.Section(str_4, list_0)
    str_5 = "localhost"
    link_1 = module_0.Link(str_4, str_5)
    dict_0 = {}
    str_6 = 'y\x0c[fN"W:2&:SWyz~W'
    link_2 = module_0.Link(dict_0, str_6)
    section_4 = module_0.Section(str_6, str_6)
    str_7 = " Use '"
    section_5 = module_0.Section(str_7, str_7)
    var_4 = section_5.__repr__()
    assert var_4 == 'Section(title=" Use \'")'
    int_1 = var_4.__len__()
    assert int_1 == 23
    str_8 = "page_context"
    section_6 = module_0.Section(str_8, str_8)
    str_9 = "' from the site because it conflicts with '"
    list_1 = []
    section_7 = module_0.Section(str_9, list_1)
    var_5 = section_7.__repr__()
    assert var_5 == "Section(title=\"' from the site because it conflicts with '\")"
    str_10 = " Use '"
    section_8 = module_0.Section(str_10, str_10)
    var_6 = section_8.__repr__()
    assert var_6 == 'Section(title=" Use \'")'
    str_11 = "gfRsC:6&{;|"
    section_9 = module_0.Section(str_11, str_11)
    str_12 = "relative_to_docs"
    link_3 = module_0.Link(str_12, section_9)
    str_13 = "gfRsC:6&{;|"
    section_10 = module_0.Section(str_13, str_13)
    var_7 = section_10.__repr__()
    assert var_7 == "Section(title='gfRsC:6&{;|')"
    str_14 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_4 = module_0.Link(str_14, none_type_1)
    var_8 = link_4.__repr__()
    assert var_8 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_15 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_5 = module_0.Link(str_15, none_type_2)
    var_9 = link_5.__repr__()
    assert var_9 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_10 = var_9.__repr__()
    assert var_10 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_16 = var_9.__str__()
    assert str_16 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_11 = var_9.__repr__()
    assert var_11 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_12 = var_9.__repr__()
    assert var_12 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""


def test_case_202():
    str_0 = "page_context"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_1, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_2 = var_0.__str__()
    assert str_2 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_3 = "page_context"
    section_1 = module_0.Section(str_3, str_3)
    str_4 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_4, none_type_1)
    var_2 = link_1.__repr__()
    assert var_2 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_3 = section_1.__repr__()
    assert var_3 == "Section(title='page_context')"
    str_5 = " Use '"
    section_2 = module_0.Section(str_5, str_5)
    var_4 = section_2.__repr__()
    assert var_4 == 'Section(title=" Use \'")'
    section_3 = module_0.Section(str_5, var_4)
    assert section_3.children == 'Section(title=" Use \'")'
    str_6 = " Use '"
    section_4 = module_0.Section(str_6, str_6)
    var_5 = section_4.__repr__()
    assert var_5 == 'Section(title=" Use \'")'
    var_6 = var_5.__repr__()
    assert var_6 == "'Section(title=\" Use \\'\")'"
    str_7 = " Use '"
    section_5 = module_0.Section(str_7, str_7)
    var_7 = section_5.__repr__()
    assert var_7 == 'Section(title=" Use \'")'
    int_0 = var_7.__len__()
    assert int_0 == 23
    str_8 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_2 = module_0.Link(str_8, none_type_2)
    int_1 = var_7.__len__()
    assert int_1 == 23
    str_9 = "gfRsC:6&{;|"
    section_6 = module_0.Section(str_9, str_9)
    var_8 = section_0.__repr__()
    assert var_8 == "Section(title='page_context')"


def test_case_203():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    bytes_0 = b"\x802c35Z\xf8"
    link_1 = module_0.Link(link_0, bytes_0)
    str_1 = " Use '"
    section_0 = module_0.Section(str_1, str_1)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    int_0 = var_0.__len__()
    assert int_0 == 23
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_2 = module_0.Link(str_2, none_type_1)
    var_1 = link_2.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_2 = var_1.__repr__()
    assert var_2 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_3 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_3 = module_0.Link(str_3, none_type_2)
    str_4 = " Use '"
    section_1 = module_0.Section(str_4, str_4)
    var_3 = section_1.__repr__()
    assert var_3 == 'Section(title=" Use \'")'
    int_1 = var_3.__len__()
    assert int_1 == 23
    var_4 = var_3.__repr__()
    assert var_4 == "'Section(title=\" Use \\'\")'"
    str_5 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_4 = module_0.Link(str_5, none_type_3)
    bytes_1 = b"\x802c35Z\xf8"
    link_5 = module_0.Link(link_4, bytes_1)
    var_5 = link_4.__repr__()
    assert var_5 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_6 = "0_~6:m!(f5FgU,:rvz"
    none_type_4 = None
    link_6 = module_0.Link(str_6, none_type_4)
    var_6 = link_6.__repr__()
    assert var_6 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_7 = "page_context"
    section_2 = module_0.Section(str_7, str_7)
    str_8 = "' from the site because it conflicts with '"
    list_0 = []
    section_3 = module_0.Section(str_8, list_0)
    var_7 = section_3.__repr__()
    assert var_7 == "Section(title=\"' from the site because it conflicts with '\")"
    str_9 = " Use '"
    section_4 = module_0.Section(str_9, str_9)
    var_8 = section_4.__repr__()
    assert var_8 == 'Section(title=" Use \'")'
    var_9 = var_6.__repr__()
    assert var_9 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_10 = var_9.__repr__()
    assert var_10 == "'\"Link(title=\\'0_~6:m!(f5FgU,:rvz\\', url=None)\"'"


def test_case_204():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    var_1 = var_0.__repr__()
    assert var_1 == "'Section(title=\" Use \\'\")'"
    str_1 = " Use '"
    section_1 = module_0.Section(str_1, str_1)
    var_2 = section_1.__repr__()
    assert var_2 == 'Section(title=" Use \'")'
    section_2 = module_0.Section(str_1, var_2)
    assert section_2.children == 'Section(title=" Use \'")'
    str_2 = " Use '"
    section_3 = module_0.Section(str_2, str_2)
    var_3 = section_3.__repr__()
    assert var_3 == 'Section(title=" Use \'")'
    int_0 = var_3.__len__()
    assert int_0 == 23
    str_3 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_3, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    int_1 = var_3.__len__()
    assert int_1 == 23
    str_4 = "gfRsC:6&{;|"
    section_4 = module_0.Section(str_4, str_4)
    str_5 = "page_context"
    section_5 = module_0.Section(str_5, str_5)
    str_6 = "' from the site because it conflicts with '"
    list_0 = []
    section_6 = module_0.Section(str_6, list_0)
    str_7 = " Use '"
    section_7 = module_0.Section(str_7, str_7)
    var_4 = section_7.__repr__()
    assert var_4 == 'Section(title=" Use \'")'
    var_5 = var_3.__repr__()
    assert var_5 == "'Section(title=\" Use \\'\")'"


def test_case_205():
    str_0 = "page_context"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = "' from the site because it conflicts with '"
    list_0 = []
    section_1 = module_0.Section(str_1, list_0)
    var_0 = section_1.__repr__()
    assert var_0 == "Section(title=\"' from the site because it conflicts with '\")"
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_2, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    str_3 = " Use '"
    section_2 = module_0.Section(str_3, str_3)
    var_1 = section_2.__repr__()
    assert var_1 == 'Section(title=" Use \'")'
    section_3 = module_0.Section(str_3, var_1)
    assert section_3.children == 'Section(title=" Use \'")'
    str_4 = " Use '"
    section_4 = module_0.Section(str_4, str_4)
    var_2 = section_4.__repr__()
    assert var_2 == 'Section(title=" Use \'")'
    str_5 = "gfRsC:6&{;|"
    section_5 = module_0.Section(str_5, str_5)
    str_6 = "relative_to_docs"
    link_1 = module_0.Link(str_6, section_5)
    str_7 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_2 = module_0.Link(str_7, none_type_1)
    var_3 = link_2.__repr__()
    assert var_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_4 = var_3.__repr__()
    assert var_4 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_5 = var_4.__repr__()
    assert var_5 == "'\"Link(title=\\'0_~6:m!(f5FgU,:rvz\\', url=None)\"'"
    var_6 = link_2.__repr__()
    assert var_6 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"


def test_case_206():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    bytes_0 = b"\x802c35Z\xf8"
    link_1 = module_0.Link(link_0, bytes_0)
    dict_0 = {}
    str_1 = 'y\x0c[fN"W:2&:SWyz~W'
    link_2 = module_0.Link(dict_0, str_1)
    var_0 = link_1.__repr__()
    assert (
        var_0
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_3 = module_0.Link(str_2, none_type_1)
    var_1 = link_3.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_3 = "page_context"
    section_0 = module_0.Section(str_3, str_3)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_4 = "' from the site because it conflicts with '"
    list_0 = []
    section_1 = module_0.Section(str_4, list_0)
    var_2 = section_1.__repr__()
    assert var_2 == "Section(title=\"' from the site because it conflicts with '\")"
    str_5 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_4 = module_0.Link(str_5, none_type_2)
    bytes_1 = b"\x802c35Z\xf8"
    link_5 = module_0.Link(link_4, bytes_1)
    var_3 = link_4.__repr__()
    assert var_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_6 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_6 = module_0.Link(str_6, none_type_3)
    bytes_2 = b"\x802c35Z\xf8"
    link_7 = module_0.Link(link_6, bytes_2)
    str_7 = "0_~6:m!(f5FgU,:rvz"
    none_type_4 = None
    link_8 = module_0.Link(str_7, none_type_4)
    var_4 = link_8.__repr__()
    assert var_4 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_5 = var_4.__repr__()
    assert var_5 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_6 = var_5.__repr__()
    assert var_6 == "'\"Link(title=\\'0_~6:m!(f5FgU,:rvz\\', url=None)\"'"
    str_8 = "0_~6:m!(f5FgU,:rvz"
    none_type_5 = None
    link_9 = module_0.Link(str_8, none_type_5)
    var_7 = link_9.__repr__()
    assert var_7 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_8 = var_7.__repr__()
    assert var_8 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    iterator_0 = var_7.__iter__()


def test_case_207():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    str_1 = "gfRsC:6&{;|"
    section_1 = module_0.Section(str_1, str_1)
    str_2 = "relative_to_docs"
    link_0 = module_0.Link(str_2, section_1)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "relative_to_docs"
    assert (
        f"{type(link_0.url).__module__}.{type(link_0.url).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    section_2 = module_0.Section(section_0, var_0)
    assert section_2.children == 'Section(title=" Use \'")'


def test_case_208():
    str_0 = "gfRsC:6&{;|"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "gfRsC:6&{;|"
    assert section_0.children == "gfRsC:6&{;|"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_1, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_2 = var_1.__repr__()
    assert var_2 == "'\"Link(title=\\'0_~6:m!(f5FgU,:rvz\\', url=None)\"'"
    dict_0 = {}
    str_2 = 'y\x0c[fN"W:2&:SWyz~W'
    link_1 = module_0.Link(dict_0, str_2)
    str_3 = "page_context"
    section_1 = module_0.Section(str_3, str_3)
    str_4 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_2 = module_0.Link(str_4, none_type_1)
    var_3 = link_2.__repr__()
    assert var_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_4 = section_1.__repr__()
    assert var_4 == "Section(title='page_context')"
    str_5 = " Use '"
    section_2 = module_0.Section(str_5, str_5)
    var_5 = section_2.__repr__()
    assert var_5 == 'Section(title=" Use \'")'
    str_6 = "gfRsC:6&{;|"
    section_3 = module_0.Section(str_6, str_6)
    str_7 = "relative_to_docs"
    link_3 = module_0.Link(str_7, section_3)
    section_4 = module_0.Section(section_2, var_5)
    assert section_4.children == 'Section(title=" Use \'")'
    str_8 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_4 = module_0.Link(str_8, none_type_2)
    var_6 = link_4.__repr__()
    assert var_6 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_7 = var_6.__repr__()
    assert var_7 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_9 = " Use '"
    section_5 = module_0.Section(str_9, str_9)
    var_8 = section_5.__repr__()
    assert var_8 == 'Section(title=" Use \'")'
    int_0 = var_8.__len__()
    assert int_0 == 23
    var_9 = var_8.__repr__()
    assert var_9 == "'Section(title=\" Use \\'\")'"
    str_10 = "gfRsC:6&{;|"
    section_6 = module_0.Section(str_10, str_10)
    var_10 = section_6.__repr__()
    assert var_10 == "Section(title='gfRsC:6&{;|')"
    iterator_0 = var_8.__iter__()


def test_case_209():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    str_1 = "gfRsC:6&{;|"
    section_1 = module_0.Section(str_1, str_1)
    str_2 = "relative_to_docs"
    link_0 = module_0.Link(str_2, section_1)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "relative_to_docs"
    assert (
        f"{type(link_0.url).__module__}.{type(link_0.url).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    str_3 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_1 = module_0.Link(str_3, none_type_0)
    bytes_0 = b"\x802c35Z\xf8"
    link_2 = module_0.Link(link_1, bytes_0)
    dict_0 = {}
    str_4 = 'y\x0c[fN"W:2&:SWyz~W'
    link_3 = module_0.Link(dict_0, str_4)
    var_1 = link_2.__repr__()
    assert (
        var_1
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )
    str_5 = " Use '"
    section_2 = module_0.Section(str_5, str_5)
    var_2 = section_2.__repr__()
    assert var_2 == 'Section(title=" Use \'")'
    int_0 = var_2.__len__()
    assert int_0 == 23
    str_6 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_4 = module_0.Link(str_6, none_type_1)
    int_1 = var_2.__len__()
    assert int_1 == 23
    str_7 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_5 = module_0.Link(str_7, none_type_2)
    var_3 = link_5.__repr__()
    assert var_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_4 = var_3.__repr__()
    assert var_4 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_8 = var_3.__str__()
    assert str_8 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_9 = "' from the site because it conflicts with '"
    link_6 = module_0.Link(str_4, str_9)


def test_case_210():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    int_0 = var_0.__len__()
    assert int_0 == 23
    section_1 = module_0.Section(var_0, int_0)
    assert section_1.title == 'Section(title=" Use \'")'
    assert section_1.children == 23


def test_case_211():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    int_0 = var_0.__len__()
    assert int_0 == 23
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_1, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    int_1 = var_0.__len__()
    assert int_1 == 23
    dict_0 = {}
    str_2 = 'y\x0c[fN"W:2&:SWyz~W'
    link_1 = module_0.Link(dict_0, str_2)
    str_3 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_2 = module_0.Link(str_3, none_type_1)
    var_1 = link_2.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_2 = var_1.__repr__()
    assert var_2 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_4 = var_1.__str__()
    assert str_4 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_5 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_3 = module_0.Link(str_5, none_type_2)
    bytes_0 = b"\x802c35Z\xf8"
    link_4 = module_0.Link(link_3, bytes_0)
    dict_1 = {}
    str_6 = 'y\x0c[fN"W:2&:SWyz~W'
    link_5 = module_0.Link(dict_1, str_6)
    var_3 = link_4.__repr__()
    assert (
        var_3
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )
    str_7 = " Use '"
    section_1 = module_0.Section(str_7, str_7)
    var_4 = section_1.__repr__()
    assert var_4 == 'Section(title=" Use \'")'
    section_2 = module_0.Section(str_7, var_4)
    assert section_2.children == 'Section(title=" Use \'")'
    str_8 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_6 = module_0.Link(str_8, none_type_3)
    var_5 = link_6.__repr__()
    assert var_5 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_9 = "page_context"
    section_3 = module_0.Section(str_9, str_9)
    str_10 = "0_~6:m!(f5FgU,:rvz"
    none_type_4 = None
    link_7 = module_0.Link(str_10, none_type_4)
    var_6 = link_7.__repr__()
    assert var_6 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_7 = section_3.__repr__()
    assert var_7 == "Section(title='page_context')"
    str_11 = "0_~6:m!(f5FgU,:rvz"
    none_type_5 = None
    link_8 = module_0.Link(str_11, none_type_5)
    var_8 = link_8.__repr__()
    assert var_8 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_9 = var_8.__repr__()
    assert var_9 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_12 = "0_~6:m!(f5FgU,:rvz"
    none_type_6 = None
    link_9 = module_0.Link(str_12, none_type_6)
    var_10 = link_9.__repr__()
    assert var_10 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_11 = var_10.__repr__()
    assert var_11 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_13 = var_10.__str__()
    assert str_13 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_12 = var_10.__repr__()
    assert var_12 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_14 = " Use '"
    section_4 = module_0.Section(str_14, str_14)
    var_13 = section_4.__repr__()
    assert var_13 == 'Section(title=" Use \'")'
    str_15 = "gfRsC:6&{;|"
    section_5 = module_0.Section(str_15, str_15)
    str_16 = "relative_to_docs"
    link_10 = module_0.Link(str_16, section_5)
    int_2 = var_7.__len__()
    assert int_2 == 29


def test_case_212():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    int_0 = var_0.__len__()
    assert int_0 == 23
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_1, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_1 = link_0.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_2 = var_1.__repr__()
    assert var_2 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_2 = "page_context"
    section_1 = module_0.Section(str_2, str_2)
    str_3 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_3, none_type_1)
    var_3 = link_1.__repr__()
    assert var_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_4 = var_3.__repr__()
    assert var_4 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_4 = var_3.__str__()
    assert str_4 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_5 = var_3.__repr__()
    assert var_5 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_5 = " Use '"
    section_2 = module_0.Section(str_5, str_5)
    var_6 = section_2.__repr__()
    assert var_6 == 'Section(title=" Use \'")'
    int_1 = var_6.__len__()
    assert int_1 == 23
    var_7 = var_6.__repr__()
    assert var_7 == "'Section(title=\" Use \\'\")'"
    iterator_0 = var_0.__iter__()


def test_case_213():
    str_0 = "gfRsC:6&{;|"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "gfRsC:6&{;|"
    assert section_0.children == "gfRsC:6&{;|"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_1, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    bytes_0 = b"\x802c35Z\xf8"
    link_1 = module_0.Link(link_0, bytes_0)
    str_2 = "page_context"
    section_1 = module_0.Section(str_2, str_2)
    str_3 = "' from the site because it conflicts with '"
    list_0 = []
    section_2 = module_0.Section(str_3, list_0)
    str_4 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_2 = module_0.Link(str_4, none_type_1)
    var_0 = link_2.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_5 = var_0.__str__()
    assert str_5 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_6 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_3 = module_0.Link(str_6, none_type_2)
    bytes_1 = b"\x802c35Z\xf8"
    link_4 = module_0.Link(link_3, bytes_1)
    var_2 = link_3.__repr__()
    assert var_2 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_7 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_5 = module_0.Link(str_7, none_type_3)
    var_3 = link_5.__repr__()
    assert var_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_4 = var_3.__repr__()
    assert var_4 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_5 = var_4.__repr__()
    assert var_5 == "'\"Link(title=\\'0_~6:m!(f5FgU,:rvz\\', url=None)\"'"
    var_6 = var_3.__repr__()
    assert var_6 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""


def test_case_214():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_1, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_1 = link_0.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    int_0 = var_1.__len__()
    assert int_0 == 42
    str_2 = "page_context"
    section_1 = module_0.Section(str_2, str_2)
    str_3 = "' from the site because it conflicts with '"
    list_0 = []
    section_2 = module_0.Section(str_3, list_0)
    str_4 = "localhost"
    link_1 = module_0.Link(str_3, str_4)
    str_5 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_2 = module_0.Link(str_5, none_type_1)
    bytes_0 = b"\x802c35Z\xf8"
    link_3 = module_0.Link(link_2, bytes_0)
    dict_0 = {}
    str_6 = 'y\x0c[fN"W:2&:SWyz~W'
    link_4 = module_0.Link(dict_0, str_6)
    var_2 = link_3.__repr__()
    assert (
        var_2
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )
    str_7 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_5 = module_0.Link(str_7, none_type_2)
    var_3 = link_5.__repr__()
    assert var_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_4 = var_3.__repr__()
    assert var_4 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_5 = var_4.__repr__()
    assert var_5 == "'\"Link(title=\\'0_~6:m!(f5FgU,:rvz\\', url=None)\"'"
    str_8 = "page_context"
    section_3 = module_0.Section(str_8, str_8)
    str_9 = " Use '"
    section_4 = module_0.Section(str_9, str_9)
    var_6 = section_4.__repr__()
    assert var_6 == 'Section(title=" Use \'")'
    str_10 = "page_context"
    section_5 = module_0.Section(str_10, str_10)
    str_11 = "' from the site because it conflicts with '"
    list_1 = []
    section_6 = module_0.Section(str_11, list_1)
    str_12 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_6 = module_0.Link(str_12, none_type_3)
    var_7 = link_6.__repr__()
    assert var_7 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_8 = var_7.__repr__()
    assert var_8 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_13 = var_7.__str__()
    assert str_13 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_9 = var_7.__repr__()
    assert var_9 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    iterator_0 = var_0.__iter__()


def test_case_215():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    str_1 = "gfRsC:6&{;|"
    section_1 = module_0.Section(str_1, str_1)
    str_2 = "relative_to_docs"
    link_0 = module_0.Link(str_2, section_1)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "relative_to_docs"
    assert (
        f"{type(link_0.url).__module__}.{type(link_0.url).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    str_3 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_1 = module_0.Link(str_3, none_type_0)
    bytes_0 = b"\x802c35Z\xf8"
    link_2 = module_0.Link(link_1, bytes_0)
    str_4 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_3 = module_0.Link(str_4, none_type_1)
    var_1 = link_3.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_2 = var_1.__repr__()
    assert var_2 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_3 = var_2.__repr__()
    assert var_3 == "'\"Link(title=\\'0_~6:m!(f5FgU,:rvz\\', url=None)\"'"
    str_5 = " Use '"
    section_2 = module_0.Section(str_5, str_5)
    var_4 = section_2.__repr__()
    assert var_4 == 'Section(title=" Use \'")'
    str_6 = "gfRsC:6&{;|"
    section_3 = module_0.Section(str_6, str_6)
    str_7 = "relative_to_docs"
    link_4 = module_0.Link(str_7, section_3)
    section_4 = module_0.Section(section_2, var_4)
    assert section_4.children == 'Section(title=" Use \'")'
    str_8 = " Use '"
    section_5 = module_0.Section(str_8, str_8)
    var_5 = section_5.__repr__()
    assert var_5 == 'Section(title=" Use \'")'
    str_9 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_5 = module_0.Link(str_9, none_type_2)
    var_6 = link_5.__repr__()
    assert var_6 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_7 = var_6.__repr__()
    assert var_7 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_10 = var_6.__str__()
    assert str_10 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_11 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_6 = module_0.Link(str_11, none_type_3)
    bytes_1 = b"\x802c35Z\xf8"
    link_7 = module_0.Link(link_6, bytes_1)
    var_8 = link_6.__repr__()
    assert var_8 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_12 = " Use '"
    section_6 = module_0.Section(str_12, str_12)
    var_9 = section_6.__repr__()
    assert var_9 == 'Section(title=" Use \'")'
    var_10 = var_9.__repr__()
    assert var_10 == "'Section(title=\" Use \\'\")'"
    str_13 = "page_context"
    section_7 = module_0.Section(str_13, str_13)
    str_14 = "' from the site because it conflicts with '"
    list_0 = []
    section_8 = module_0.Section(str_14, list_0)
    str_15 = " Use '"
    section_9 = module_0.Section(str_15, str_15)
    var_11 = section_9.__repr__()
    assert var_11 == 'Section(title=" Use \'")'
    int_0 = var_11.__len__()
    assert int_0 == 23
    str_16 = "0_~6:m!(f5FgU,:rvz"
    none_type_4 = None
    link_8 = module_0.Link(str_16, none_type_4)
    int_1 = var_11.__len__()
    assert int_1 == 23
    var_12 = link_4.__repr__()
    assert var_12 == "Link(title='relative_to_docs', url=Section(title='gfRsC:6&{;|'))"


def test_case_216():
    str_0 = "page_context"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = "' from the site because it conflicts with '"
    list_0 = []
    section_1 = module_0.Section(str_1, list_0)
    var_0 = section_1.__repr__()
    assert var_0 == "Section(title=\"' from the site because it conflicts with '\")"
    str_2 = " Use '"
    section_2 = module_0.Section(str_2, str_2)
    var_1 = section_2.__repr__()
    assert var_1 == 'Section(title=" Use \'")'
    str_3 = "gfRsC:6&{;|"
    section_3 = module_0.Section(str_3, str_3)
    str_4 = "relative_to_docs"
    link_0 = module_0.Link(str_4, section_3)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "relative_to_docs"
    assert (
        f"{type(link_0.url).__module__}.{type(link_0.url).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    str_5 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_1 = module_0.Link(str_5, none_type_0)
    bytes_0 = b"\x802c35Z\xf8"
    link_2 = module_0.Link(link_1, bytes_0)
    dict_0 = {}
    str_6 = 'y\x0c[fN"W:2&:SWyz~W'
    link_3 = module_0.Link(dict_0, str_6)
    var_2 = link_2.__repr__()
    assert (
        var_2
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )
    str_7 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_4 = module_0.Link(str_7, none_type_1)
    var_3 = link_4.__repr__()
    assert var_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_4 = var_3.__repr__()
    assert var_4 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_8 = var_3.__str__()
    assert str_8 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_9 = " Use '"
    section_4 = module_0.Section(str_9, str_9)
    var_5 = section_4.__repr__()
    assert var_5 == 'Section(title=" Use \'")'
    int_0 = var_5.__len__()
    assert int_0 == 23
    section_5 = module_0.Section(var_5, int_0)
    assert section_5.title == 'Section(title=" Use \'")'
    assert section_5.children == 23
    str_10 = "page_context"
    section_6 = module_0.Section(str_10, str_10)
    str_11 = " Use '"
    section_7 = module_0.Section(str_11, str_11)
    var_6 = section_7.__repr__()
    assert var_6 == 'Section(title=" Use \'")'
    section_8 = module_0.Section(str_11, var_6)
    assert section_8.children == 'Section(title=" Use \'")'
    str_12 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_5 = module_0.Link(str_12, none_type_2)
    bytes_1 = b"\x802c35Z\xf8"
    link_6 = module_0.Link(link_5, bytes_1)
    var_7 = var_3.__repr__()
    assert var_7 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""


def test_case_217():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_2 = var_1.__repr__()
    assert var_2 == "'\"Link(title=\\'0_~6:m!(f5FgU,:rvz\\', url=None)\"'"


def test_case_218():
    str_0 = "gfRsC:6&{;|"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "gfRsC:6&{;|"
    assert section_0.children == "gfRsC:6&{;|"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = " Use '"
    section_1 = module_0.Section(str_1, str_1)
    var_0 = section_1.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    int_0 = var_0.__len__()
    assert int_0 == 23
    var_1 = var_0.__repr__()
    assert var_1 == "'Section(title=\" Use \\'\")'"
    var_2 = var_1.__repr__()
    assert var_2 == "'\\'Section(title=\" Use \\\\\\'\")\\''"


def test_case_219():
    str_0 = "page_context"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = "' from the site because it conflicts with '"
    list_0 = []
    section_1 = module_0.Section(str_1, list_0)
    var_0 = section_0.__repr__()
    assert var_0 == "Section(title='page_context')"


def test_case_220():
    none_type_0 = None
    str_0 = "\n        Perform validation for a value.\n\n        The run_validation method should be implemented by subclasses.\n        "
    link_0 = module_0.Link(none_type_0, str_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title is None
    assert (
        link_0.url
        == "\n        Perform validation for a value.\n\n        The run_validation method should be implemented by subclasses.\n        "
    )
    var_0 = link_0.__repr__()
    assert (
        var_0
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    str_1 = var_0.__str__()
    assert (
        str_1
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )


def test_case_221():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_1, none_type_1)
    bytes_0 = b"\x802c35Z\xf8"
    link_2 = module_0.Link(link_1, bytes_0)
    str_2 = "page_context"
    section_0 = module_0.Section(str_2, str_2)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_3 = "page_context"
    section_1 = module_0.Section(str_3, str_3)
    str_4 = "' from the site because it conflicts with '"
    list_0 = []
    section_2 = module_0.Section(str_4, list_0)
    var_2 = section_1.__repr__()
    assert var_2 == "Section(title='page_context')"
    str_5 = " Use '"
    section_3 = module_0.Section(str_5, str_5)
    var_3 = section_3.__repr__()
    assert var_3 == 'Section(title=" Use \'")'
    int_0 = var_3.__len__()
    assert int_0 == 23
    none_type_2 = None
    str_6 = "\n        Perform validation for a value.\n\n        The run_validation method should be implemented by subclasses.\n        "
    link_3 = module_0.Link(none_type_2, str_6)
    var_4 = link_3.__repr__()
    assert (
        var_4
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    str_7 = var_4.__str__()
    assert (
        str_7
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    dict_0 = {}
    str_8 = 'y\x0c[fN"W:2&:SWyz~W'
    link_4 = module_0.Link(dict_0, str_8)
    section_4 = module_0.Section(str_8, str_8)
    str_9 = " Use '"
    section_5 = module_0.Section(str_9, str_9)
    var_5 = section_5.__repr__()
    assert var_5 == 'Section(title=" Use \'")'
    str_10 = "gfRsC:6&{;|"
    section_6 = module_0.Section(str_10, str_10)
    str_11 = "relative_to_docs"
    link_5 = module_0.Link(str_11, section_6)
    str_12 = "page_context"
    section_7 = module_0.Section(str_12, str_12)
    str_13 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_6 = module_0.Link(str_13, none_type_3)
    var_6 = link_6.__repr__()
    assert var_6 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_7 = section_7.__repr__()
    assert var_7 == "Section(title='page_context')"
    var_8 = link_3.__repr__()
    assert (
        var_8
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )


def test_case_222():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_1 = var_0.__str__()
    assert str_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_2 = var_0.__repr__()
    assert var_2 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_2 = "gfRsC:6&{;|"
    section_0 = module_0.Section(str_2, str_2)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "gfRsC:6&{;|"
    assert section_0.children == "gfRsC:6&{;|"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_3 = " Use '"
    section_1 = module_0.Section(str_3, str_3)
    var_3 = section_1.__repr__()
    assert var_3 == 'Section(title=" Use \'")'
    int_0 = var_3.__len__()
    assert int_0 == 23
    var_4 = var_3.__repr__()
    assert var_4 == "'Section(title=\" Use \\'\")'"
    var_5 = var_4.__repr__()
    assert var_5 == "'\\'Section(title=\" Use \\\\\\'\")\\''"
    dict_0 = {}
    str_4 = 'y\x0c[fN"W:2&:SWyz~W'
    link_1 = module_0.Link(dict_0, str_4)
    str_5 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_2 = module_0.Link(str_5, none_type_1)
    var_6 = link_2.__repr__()
    assert var_6 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_7 = var_6.__repr__()
    assert var_7 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_6 = var_6.__str__()
    assert str_6 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_7 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_3 = module_0.Link(str_7, none_type_2)
    bytes_0 = b"\x802c35Z\xf8"
    link_4 = module_0.Link(link_3, bytes_0)
    var_8 = link_3.__repr__()
    assert var_8 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_8 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_5 = module_0.Link(str_8, none_type_3)
    var_9 = link_5.__repr__()
    assert var_9 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_10 = var_9.__repr__()
    assert var_10 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_11 = var_10.__repr__()
    assert var_11 == "'\"Link(title=\\'0_~6:m!(f5FgU,:rvz\\', url=None)\"'"
    str_9 = "page_context"
    section_2 = module_0.Section(str_9, str_9)
    str_10 = "' from the site because it conflicts with '"
    list_0 = []
    section_3 = module_0.Section(str_10, list_0)
    var_12 = section_2.__repr__()
    assert var_12 == "Section(title='page_context')"
    var_13 = var_4.__repr__()
    assert var_13 == "'\\'Section(title=\" Use \\\\\\'\")\\''"


def test_case_223():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    int_0 = var_0.__len__()
    assert int_0 == 23
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_1, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    int_1 = var_0.__len__()
    assert int_1 == 23
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_2, none_type_1)
    bytes_0 = b"\x802c35Z\xf8"
    link_2 = module_0.Link(link_1, bytes_0)
    none_type_2 = None
    str_3 = "\n        Perform validation for a value.\n\n        The run_validation method should be implemented by subclasses.\n        "
    link_3 = module_0.Link(none_type_2, str_3)
    var_1 = link_3.__repr__()
    assert (
        var_1
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    str_4 = var_1.__str__()
    assert (
        str_4
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    str_5 = " Use '"
    section_1 = module_0.Section(str_5, str_5)
    var_2 = section_1.__repr__()
    assert var_2 == 'Section(title=" Use \'")'
    int_2 = var_2.__len__()
    assert int_2 == 23
    str_6 = "page_context"
    section_2 = module_0.Section(str_6, str_6)
    str_7 = "' from the site because it conflicts with '"
    list_0 = []
    section_3 = module_0.Section(str_7, list_0)
    var_3 = section_2.__repr__()
    assert var_3 == "Section(title='page_context')"
    str_8 = " Use '"
    section_4 = module_0.Section(str_8, str_8)
    var_4 = section_4.__repr__()
    assert var_4 == 'Section(title=" Use \'")'
    int_3 = var_4.__len__()
    assert int_3 == 23
    var_5 = var_4.__repr__()
    assert var_5 == "'Section(title=\" Use \\'\")'"
    str_9 = " Use '"
    section_5 = module_0.Section(str_9, str_9)
    var_6 = section_5.__repr__()
    assert var_6 == 'Section(title=" Use \'")'
    section_6 = module_0.Section(str_9, var_6)
    assert section_6.children == 'Section(title=" Use \'")'
    str_10 = " Use '"
    section_7 = module_0.Section(str_10, str_10)
    var_7 = section_7.__repr__()
    assert var_7 == 'Section(title=" Use \'")'
    int_4 = var_7.__len__()
    assert int_4 == 23
    section_8 = module_0.Section(var_7, int_4)
    assert section_8.title == 'Section(title=" Use \'")'
    assert section_8.children == 23
    str_11 = " Use '"
    section_9 = module_0.Section(str_11, str_11)
    var_8 = section_9.__repr__()
    assert var_8 == 'Section(title=" Use \'")'
    str_12 = "gfRsC:6&{;|"
    section_10 = module_0.Section(str_12, str_12)
    str_13 = "relative_to_docs"
    link_4 = module_0.Link(str_13, section_10)
    str_14 = "gfRsC:6&{;|"
    section_11 = module_0.Section(str_14, str_14)
    int_5 = var_2.__len__()
    assert int_5 == 23


def test_case_224():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    int_0 = var_0.__len__()
    assert int_0 == 23
    var_1 = var_0.__repr__()
    assert var_1 == "'Section(title=\" Use \\'\")'"
    str_1 = " Use '"
    section_1 = module_0.Section(str_1, str_1)
    var_2 = section_1.__repr__()
    assert var_2 == 'Section(title=" Use \'")'
    str_2 = "gfRsC:6&{;|"
    section_2 = module_0.Section(str_2, str_2)
    str_3 = "relative_to_docs"
    link_0 = module_0.Link(str_3, section_2)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "relative_to_docs"
    assert (
        f"{type(link_0.url).__module__}.{type(link_0.url).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    section_3 = module_0.Section(section_1, var_2)
    assert section_3.children == 'Section(title=" Use \'")'
    str_4 = var_1.__str__()
    assert str_4 == "'Section(title=\" Use \\'\")'"


def test_case_225():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_1 = var_0.__str__()
    assert str_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    dict_0 = {}
    str_2 = 'y\x0c[fN"W:2&:SWyz~W'
    link_1 = module_0.Link(dict_0, str_2)
    section_0 = module_0.Section(str_2, str_2)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == 'y\x0c[fN"W:2&:SWyz~W'
    assert section_0.children == 'y\x0c[fN"W:2&:SWyz~W'
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_2 = var_0.__repr__()
    assert var_2 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""


def test_case_226():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    int_0 = var_0.__len__()
    assert int_0 == 23
    section_1 = module_0.Section(var_0, int_0)
    assert section_1.title == 'Section(title=" Use \'")'
    assert section_1.children == 23
    str_1 = "page_context"
    section_2 = module_0.Section(str_1, str_1)
    str_2 = "' from the site because it conflicts with '"
    list_0 = []
    section_3 = module_0.Section(str_2, list_0)
    str_3 = "localhost"
    link_0 = module_0.Link(str_2, str_3)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "' from the site because it conflicts with '"
    assert link_0.url == "localhost"
    str_4 = " Use '"
    section_4 = module_0.Section(str_4, str_4)
    var_1 = section_4.__repr__()
    assert var_1 == 'Section(title=" Use \'")'
    str_5 = "gfRsC:6&{;|"
    section_5 = module_0.Section(str_5, str_5)
    str_6 = "relative_to_docs"
    link_1 = module_0.Link(str_6, section_5)
    str_7 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_2 = module_0.Link(str_7, none_type_0)
    var_2 = link_2.__repr__()
    assert var_2 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_3 = var_2.__repr__()
    assert var_3 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_8 = var_2.__str__()
    assert str_8 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_4 = var_2.__repr__()
    assert var_4 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_9 = " Use '"
    section_6 = module_0.Section(str_9, str_9)
    var_5 = section_6.__repr__()
    assert var_5 == 'Section(title=" Use \'")'
    section_7 = module_0.Section(str_9, var_5)
    assert section_7.children == 'Section(title=" Use \'")'
    navigation_0 = module_0.Navigation(str_3, list_0)


def test_case_227():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    int_0 = var_0.__len__()
    assert int_0 == 23
    section_1 = module_0.Section(var_0, int_0)
    assert section_1.title == 'Section(title=" Use \'")'
    assert section_1.children == 23
    str_1 = "page_context"
    section_2 = module_0.Section(str_1, str_1)
    str_2 = "' from the site because it conflicts with '"
    list_0 = []
    section_3 = module_0.Section(str_2, list_0)
    var_1 = section_3.__repr__()
    assert var_1 == "Section(title=\"' from the site because it conflicts with '\")"
    str_3 = "gfRsC:6&{;|"
    section_4 = module_0.Section(str_3, str_3)
    var_2 = section_4.__repr__()
    assert var_2 == "Section(title='gfRsC:6&{;|')"
    dict_0 = {}
    str_4 = 'y\x0c[fN"W:2&:SWyz~W'
    link_0 = module_0.Link(dict_0, str_4)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == {}
    assert link_0.url == 'y\x0c[fN"W:2&:SWyz~W'
    section_5 = module_0.Section(str_4, str_4)
    str_5 = "gfRsC:6&{;|"
    section_6 = module_0.Section(str_5, str_5)
    str_6 = " Use '"
    section_7 = module_0.Section(str_6, str_6)
    var_3 = section_7.__repr__()
    assert var_3 == 'Section(title=" Use \'")'
    int_1 = var_3.__len__()
    assert int_1 == 23
    str_7 = " Use '"
    section_8 = module_0.Section(str_7, str_7)
    var_4 = section_8.__repr__()
    assert var_4 == 'Section(title=" Use \'")'
    int_2 = var_4.__len__()
    assert int_2 == 23
    var_5 = var_4.__repr__()
    assert var_5 == "'Section(title=\" Use \\'\")'"
    str_8 = " Use '"
    section_9 = module_0.Section(str_8, str_8)
    var_6 = section_9.__repr__()
    assert var_6 == 'Section(title=" Use \'")'
    var_7 = var_6.__repr__()
    assert var_7 == "'Section(title=\" Use \\'\")'"
    str_9 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_1 = module_0.Link(str_9, none_type_0)
    bytes_0 = b"\x802c35Z\xf8"
    link_2 = module_0.Link(link_1, bytes_0)
    var_8 = link_1.__repr__()
    assert var_8 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    section_10 = module_0.Section(none_type_0, var_5)
    assert section_10.children == "'Section(title=\" Use \\'\")'"


def test_case_228():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_1, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_1 = link_0.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    int_0 = var_1.__len__()
    assert int_0 == 42
    str_2 = " Use '"
    section_1 = module_0.Section(str_2, str_2)
    var_2 = section_1.__repr__()
    assert var_2 == 'Section(title=" Use \'")'
    int_1 = var_2.__len__()
    assert int_1 == 23
    str_3 = " Use '"
    section_2 = module_0.Section(str_3, str_3)
    var_3 = section_2.__repr__()
    assert var_3 == 'Section(title=" Use \'")'
    int_2 = var_3.__len__()
    assert int_2 == 23
    var_4 = var_3.__repr__()
    assert var_4 == "'Section(title=\" Use \\'\")'"
    str_4 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_4, none_type_1)
    bytes_0 = b"\x802c35Z\xf8"
    link_2 = module_0.Link(link_1, bytes_0)
    var_5 = link_1.__repr__()
    assert var_5 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    iterator_0 = var_5.__iter__()


def test_case_229():
    str_0 = "page_context"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = "' from the site because it conflicts with '"
    list_0 = []
    section_1 = module_0.Section(str_1, list_0)
    str_2 = "localhost"
    link_0 = module_0.Link(str_1, str_2)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "' from the site because it conflicts with '"
    assert link_0.url == "localhost"
    str_3 = " Use '"
    section_2 = module_0.Section(str_3, str_3)
    var_0 = section_2.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    str_4 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_1 = module_0.Link(str_4, none_type_0)
    var_1 = link_1.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_5 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_2 = module_0.Link(str_5, none_type_1)
    var_2 = link_2.__repr__()
    assert var_2 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_3 = var_2.__repr__()
    assert var_3 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_4 = var_3.__repr__()
    assert var_4 == "'\"Link(title=\\'0_~6:m!(f5FgU,:rvz\\', url=None)\"'"
    str_6 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_3 = module_0.Link(str_6, none_type_2)
    bytes_0 = b"\x802c35Z\xf8"
    link_4 = module_0.Link(link_3, bytes_0)
    str_7 = " Use '"
    section_3 = module_0.Section(str_7, str_7)
    var_5 = section_3.__repr__()
    assert var_5 == 'Section(title=" Use \'")'
    int_0 = var_5.__len__()
    assert int_0 == 23
    section_4 = module_0.Section(var_5, int_0)
    assert section_4.title == 'Section(title=" Use \'")'
    assert section_4.children == 23
    link_5 = module_0.Link(section_4, str_2)


def test_case_230():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    int_0 = var_0.__len__()
    assert int_0 == 23
    section_1 = module_0.Section(var_0, int_0)
    assert section_1.title == 'Section(title=" Use \'")'
    assert section_1.children == 23
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_1, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_1 = link_0.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_2 = var_1.__repr__()
    assert var_2 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_2 = " Use '"
    section_2 = module_0.Section(str_2, str_2)
    var_3 = section_2.__repr__()
    assert var_3 == 'Section(title=" Use \'")'
    str_3 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_3, none_type_1)
    var_4 = link_1.__repr__()
    assert var_4 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    int_1 = var_4.__len__()
    assert int_1 == 42
    str_4 = " Use '"
    section_3 = module_0.Section(str_4, str_4)
    var_5 = section_3.__repr__()
    assert var_5 == 'Section(title=" Use \'")'
    str_5 = "gfRsC:6&{;|"
    section_4 = module_0.Section(str_5, str_5)
    str_6 = "relative_to_docs"
    link_2 = module_0.Link(str_6, section_4)
    section_5 = module_0.Section(section_3, var_5)
    assert section_5.children == 'Section(title=" Use \'")'
    str_7 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_3 = module_0.Link(str_7, none_type_2)
    var_6 = link_3.__repr__()
    assert var_6 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_7 = var_6.__repr__()
    assert var_7 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_8 = var_7.__repr__()
    assert var_8 == "'\"Link(title=\\'0_~6:m!(f5FgU,:rvz\\', url=None)\"'"
    int_2 = var_2.__len__()
    assert int_2 == 44


def test_case_231():
    none_type_0 = None
    str_0 = "\n        Perform validation for a value.\n\n        The run_validation method should be implemented by subclasses.\n        "
    link_0 = module_0.Link(none_type_0, str_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title is None
    assert (
        link_0.url
        == "\n        Perform validation for a value.\n\n        The run_validation method should be implemented by subclasses.\n        "
    )
    var_0 = link_0.__repr__()
    assert (
        var_0
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    str_1 = var_0.__str__()
    assert (
        str_1
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    str_2 = " Use '"
    section_0 = module_0.Section(str_2, str_2)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_1 = section_0.__repr__()
    assert var_1 == 'Section(title=" Use \'")'
    str_3 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_3, none_type_1)
    var_2 = link_1.__repr__()
    assert var_2 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    int_0 = var_2.__len__()
    assert int_0 == 42
    str_4 = " Use '"
    section_1 = module_0.Section(str_4, str_4)
    var_3 = section_1.__repr__()
    assert var_3 == 'Section(title=" Use \'")'
    int_1 = var_3.__len__()
    assert int_1 == 23
    str_5 = " Use '"
    section_2 = module_0.Section(str_5, str_5)
    var_4 = section_2.__repr__()
    assert var_4 == 'Section(title=" Use \'")'
    int_2 = var_4.__len__()
    assert int_2 == 23
    var_5 = var_4.__repr__()
    assert var_5 == "'Section(title=\" Use \\'\")'"
    str_6 = "gfRsC:6&{;|"
    section_3 = module_0.Section(str_6, str_6)
    str_7 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_2 = module_0.Link(str_7, none_type_2)
    bytes_0 = b"\x802c35Z\xf8"
    link_3 = module_0.Link(link_2, bytes_0)
    var_6 = link_2.__repr__()
    assert var_6 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_8 = "page_context"
    section_4 = module_0.Section(str_8, str_8)
    str_9 = " Use '"
    section_5 = module_0.Section(str_9, str_9)
    var_7 = section_5.__repr__()
    assert var_7 == 'Section(title=" Use \'")'
    int_3 = var_7.__len__()
    assert int_3 == 23
    section_6 = module_0.Section(var_7, int_3)
    assert section_6.title == 'Section(title=" Use \'")'
    assert section_6.children == 23
    str_10 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_4 = module_0.Link(str_10, none_type_3)
    var_8 = link_4.__repr__()
    assert var_8 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_9 = var_8.__repr__()
    assert var_9 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_11 = "0_~6:m!(f5FgU,:rvz"
    none_type_4 = None
    link_5 = module_0.Link(str_11, none_type_4)
    bytes_1 = b"\x802c35Z\xf8"
    link_6 = module_0.Link(link_5, bytes_1)
    section_7 = module_0.Section(var_8, var_4)
    assert section_7.title == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    assert section_7.children == 'Section(title=" Use \'")'


def test_case_232():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    section_1 = module_0.Section(str_0, var_0)
    assert section_1.children == 'Section(title=" Use \'")'
    str_1 = " Use '"
    section_2 = module_0.Section(str_1, str_1)
    var_1 = section_2.__repr__()
    assert var_1 == 'Section(title=" Use \'")'
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_2, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_2 = link_0.__repr__()
    assert var_2 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    int_0 = var_2.__len__()
    assert int_0 == 42
    int_1 = var_1.__len__()
    assert int_1 == 23


def test_case_233():
    str_0 = "page_context"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_1, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = section_0.__repr__()
    assert var_1 == "Section(title='page_context')"
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_2, none_type_1)
    var_2 = link_1.__repr__()
    assert var_2 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_3 = var_2.__repr__()
    assert var_3 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_4 = var_3.__repr__()
    assert var_4 == "'\"Link(title=\\'0_~6:m!(f5FgU,:rvz\\', url=None)\"'"
    str_3 = "page_context"
    section_1 = module_0.Section(str_3, str_3)
    str_4 = "' from the site because it conflicts with '"
    list_0 = []
    section_2 = module_0.Section(str_4, list_0)
    str_5 = "localhost"
    link_2 = module_0.Link(str_4, str_5)
    int_0 = -2166
    section_3 = module_0.Section(var_4, int_0)
    assert section_3.title == "'\"Link(title=\\'0_~6:m!(f5FgU,:rvz\\', url=None)\"'"


def test_case_234():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_2 = var_1.__repr__()
    assert var_2 == "'\"Link(title=\\'0_~6:m!(f5FgU,:rvz\\', url=None)\"'"
    dict_0 = {}
    str_1 = 'y\x0c[fN"W:2&:SWyz~W'
    link_1 = module_0.Link(dict_0, str_1)
    section_0 = module_0.Section(str_1, str_1)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == 'y\x0c[fN"W:2&:SWyz~W'
    assert section_0.children == 'y\x0c[fN"W:2&:SWyz~W'
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_2 = module_0.Link(str_2, none_type_1)
    var_3 = link_2.__repr__()
    assert var_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_4 = var_3.__repr__()
    assert var_4 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_3 = var_3.__str__()
    assert str_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_5 = var_3.__repr__()
    assert var_5 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_4 = "gfRsC:6&{;|"
    section_1 = module_0.Section(str_4, str_4)
    str_5 = " Use '"
    section_2 = module_0.Section(str_5, str_5)
    var_6 = section_2.__repr__()
    assert var_6 == 'Section(title=" Use \'")'
    str_6 = "gfRsC:6&{;|"
    section_3 = module_0.Section(str_6, str_6)
    str_7 = "relative_to_docs"
    link_3 = module_0.Link(str_7, section_3)
    str_8 = "gfRsC:6&{;|"
    section_4 = module_0.Section(str_8, str_8)
    var_7 = section_4.__repr__()
    assert var_7 == "Section(title='gfRsC:6&{;|')"
    str_9 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_4 = module_0.Link(str_9, none_type_2)
    var_8 = link_4.__repr__()
    assert var_8 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_9 = var_8.__repr__()
    assert var_9 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_10 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_5 = module_0.Link(str_10, none_type_3)
    var_10 = link_5.__repr__()
    assert var_10 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_11 = var_10.__repr__()
    assert var_11 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_11 = var_10.__str__()
    assert str_11 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_12 = var_3.__repr__()
    assert var_12 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""


def test_case_235():
    str_0 = "gfRsC:6&{;|"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "gfRsC:6&{;|"
    assert section_0.children == "gfRsC:6&{;|"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = " Use '"
    section_1 = module_0.Section(str_1, str_1)
    var_0 = section_1.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    var_1 = var_0.__repr__()
    assert var_1 == "'Section(title=\" Use \\'\")'"
    str_2 = " Use '"
    section_2 = module_0.Section(str_2, str_2)
    var_2 = section_2.__repr__()
    assert var_2 == 'Section(title=" Use \'")'
    str_3 = "gfRsC:6&{;|"
    section_3 = module_0.Section(str_3, str_3)
    str_4 = "relative_to_docs"
    link_0 = module_0.Link(str_4, section_3)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "relative_to_docs"
    assert (
        f"{type(link_0.url).__module__}.{type(link_0.url).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    var_3 = section_0.__repr__()
    assert var_3 == "Section(title='gfRsC:6&{;|')"


def test_case_236():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_2 = var_1.__repr__()
    assert var_2 == "'\"Link(title=\\'0_~6:m!(f5FgU,:rvz\\', url=None)\"'"
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_1, none_type_1)
    bytes_0 = b"\x802c35Z\xf8"
    link_2 = module_0.Link(link_1, bytes_0)
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_3 = module_0.Link(str_2, none_type_2)
    var_3 = link_3.__repr__()
    assert var_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_4 = var_3.__repr__()
    assert var_4 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_3 = var_3.__str__()
    assert str_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_5 = var_3.__repr__()
    assert var_5 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_4 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_4 = module_0.Link(str_4, none_type_3)
    bytes_1 = b"\x802c35Z\xf8"
    link_5 = module_0.Link(link_4, bytes_1)
    dict_0 = {}
    str_5 = 'y\x0c[fN"W:2&:SWyz~W'
    link_6 = module_0.Link(dict_0, str_5)
    var_6 = link_5.__repr__()
    assert (
        var_6
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )
    str_6 = "0_~6:m!(f5FgU,:rvz"
    none_type_4 = None
    link_7 = module_0.Link(str_6, none_type_4)
    var_7 = link_7.__repr__()
    assert var_7 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_7 = "page_context"
    section_0 = module_0.Section(str_7, str_7)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_8 = "0_~6:m!(f5FgU,:rvz"
    none_type_5 = None
    link_8 = module_0.Link(str_8, none_type_5)
    var_8 = link_8.__repr__()
    assert var_8 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_9 = section_0.__repr__()
    assert var_9 == "Section(title='page_context')"
    str_9 = " Use '"
    section_1 = module_0.Section(str_9, str_9)
    var_10 = section_1.__repr__()
    assert var_10 == 'Section(title=" Use \'")'
    str_10 = " Use '"
    section_2 = module_0.Section(str_10, str_10)
    var_11 = section_2.__repr__()
    assert var_11 == 'Section(title=" Use \'")'
    var_12 = var_11.__repr__()
    assert var_12 == "'Section(title=\" Use \\'\")'"
    str_11 = "page_context"
    section_3 = module_0.Section(str_11, str_11)
    str_12 = "' from the site because it conflicts with '"
    list_0 = []
    section_4 = module_0.Section(str_12, list_0)
    str_13 = "localhost"
    link_9 = module_0.Link(str_12, str_13)
    str_14 = var_2.__str__()
    assert str_14 == "'\"Link(title=\\'0_~6:m!(f5FgU,:rvz\\', url=None)\"'"


def test_case_237():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    bytes_0 = b"\x802c35Z\xf8"
    link_1 = module_0.Link(link_0, bytes_0)
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_2 = module_0.Link(str_1, none_type_1)
    bytes_1 = b"\x802c35Z\xf8"
    link_3 = module_0.Link(link_2, bytes_1)
    str_2 = "page_context"
    section_0 = module_0.Section(str_2, str_2)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_3 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_4 = module_0.Link(str_3, none_type_2)
    var_1 = link_4.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_2 = section_0.__repr__()
    assert var_2 == "Section(title='page_context')"
    str_4 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_5 = module_0.Link(str_4, none_type_3)
    var_3 = link_5.__repr__()
    assert var_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_4 = var_3.__repr__()
    assert var_4 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_5 = var_4.__repr__()
    assert var_5 == "'\"Link(title=\\'0_~6:m!(f5FgU,:rvz\\', url=None)\"'"
    int_0 = var_2.__len__()
    assert int_0 == 29


def test_case_238():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    bytes_0 = b"\x802c35Z\xf8"
    link_1 = module_0.Link(link_0, bytes_0)
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    none_type_1 = None
    str_1 = "\n        Perform validation for a value.\n\n        The run_validation method should be implemented by subclasses.\n        "
    link_2 = module_0.Link(none_type_1, str_1)
    var_1 = link_2.__repr__()
    assert (
        var_1
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    str_2 = var_1.__str__()
    assert (
        str_2
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    str_3 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_3 = module_0.Link(str_3, none_type_2)
    var_2 = link_3.__repr__()
    assert var_2 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_3 = var_2.__repr__()
    assert var_3 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_4 = var_2.__str__()
    assert str_4 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    int_0 = var_1.__len__()
    assert int_0 == 152


def test_case_239():
    str_0 = "page_context"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = "' from the site because it conflicts with '"
    list_0 = []
    section_1 = module_0.Section(str_1, list_0)
    var_0 = section_0.__repr__()
    assert var_0 == "Section(title='page_context')"
    str_2 = "page_context"
    section_2 = module_0.Section(str_2, str_2)
    str_3 = "' from the site because it conflicts with '"
    list_1 = []
    section_3 = module_0.Section(str_3, list_1)
    str_4 = " Use '"
    section_4 = module_0.Section(str_4, str_4)
    var_1 = section_4.__repr__()
    assert var_1 == 'Section(title=" Use \'")'
    str_5 = "gfRsC:6&{;|"
    section_5 = module_0.Section(str_5, str_5)
    str_6 = "relative_to_docs"
    link_0 = module_0.Link(str_6, section_5)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "relative_to_docs"
    assert (
        f"{type(link_0.url).__module__}.{type(link_0.url).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    str_7 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_1 = module_0.Link(str_7, none_type_0)
    var_2 = link_1.__repr__()
    assert var_2 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_3 = var_2.__repr__()
    assert var_3 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_8 = var_2.__str__()
    assert str_8 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_4 = var_2.__repr__()
    assert var_4 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    section_6 = module_0.Section(var_0, var_2)
    assert section_6.title == "Section(title='page_context')"
    assert section_6.children == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"


def test_case_240():
    str_0 = "page_context"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = "' from the site because it conflicts with '"
    list_0 = []
    section_1 = module_0.Section(str_1, list_0)
    var_0 = section_1.__repr__()
    assert var_0 == "Section(title=\"' from the site because it conflicts with '\")"
    section_2 = module_0.Section(str_1, section_0)


def test_case_241():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    section_1 = module_0.Section(str_0, var_0)
    assert section_1.children == 'Section(title=" Use \'")'
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_1, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_1 = link_0.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_2 = var_1.__repr__()
    assert var_2 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_2 = var_1.__str__()
    assert str_2 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_3 = "page_context"
    section_2 = module_0.Section(str_3, str_3)
    str_4 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_4, none_type_1)
    var_3 = link_1.__repr__()
    assert var_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_4 = section_2.__repr__()
    assert var_4 == "Section(title='page_context')"
    str_5 = "gfRsC:6&{;|"
    section_3 = module_0.Section(str_5, str_5)
    var_5 = section_3.__repr__()
    assert var_5 == "Section(title='gfRsC:6&{;|')"
    str_6 = "page_context"
    section_4 = module_0.Section(str_6, str_6)
    str_7 = "' from the site because it conflicts with '"
    list_0 = []
    section_5 = module_0.Section(str_7, list_0)
    str_8 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_2 = module_0.Link(str_8, none_type_2)
    bytes_0 = b"\x802c35Z\xf8"
    link_3 = module_0.Link(link_2, bytes_0)
    var_6 = link_2.__repr__()
    assert var_6 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_9 = "page_context"
    section_6 = module_0.Section(str_9, str_9)
    str_10 = "' from the site because it conflicts with '"
    list_1 = []
    section_7 = module_0.Section(str_10, list_1)
    var_7 = section_7.__repr__()
    assert var_7 == "Section(title=\"' from the site because it conflicts with '\")"
    section_8 = module_0.Section(str_10, section_6)
    str_11 = "page_context"
    section_9 = module_0.Section(str_11, str_11)
    str_12 = "' from the site because it conflicts with '"
    list_2 = []
    section_10 = module_0.Section(str_12, list_2)
    var_8 = section_9.__repr__()
    assert var_8 == "Section(title='page_context')"
    str_13 = " Use '"
    section_11 = module_0.Section(str_13, str_13)
    var_9 = section_11.__repr__()
    assert var_9 == 'Section(title=" Use \'")'
    str_14 = "gfRsC:6&{;|"
    section_12 = module_0.Section(str_14, str_14)
    str_15 = "relative_to_docs"
    link_4 = module_0.Link(str_15, section_12)
    section_13 = module_0.Section(section_11, var_9)
    assert section_13.children == 'Section(title=" Use \'")'
    iterator_0 = var_4.__iter__()


def test_case_242():
    str_0 = "gfRsC:6&{;|"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "gfRsC:6&{;|"
    assert section_0.children == "gfRsC:6&{;|"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = " Use '"
    section_1 = module_0.Section(str_1, str_1)
    var_0 = section_1.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    str_2 = "gfRsC:6&{;|"
    section_2 = module_0.Section(str_2, str_2)
    str_3 = "relative_to_docs"
    link_0 = module_0.Link(str_3, section_2)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "relative_to_docs"
    assert (
        f"{type(link_0.url).__module__}.{type(link_0.url).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    section_3 = module_0.Section(section_1, var_0)
    assert section_3.children == 'Section(title=" Use \'")'
    str_4 = " Use '"
    section_4 = module_0.Section(str_4, str_4)
    var_1 = section_4.__repr__()
    assert var_1 == 'Section(title=" Use \'")'
    section_5 = module_0.Section(str_4, var_1)
    assert section_5.children == 'Section(title=" Use \'")'
    int_0 = var_1.__len__()
    assert int_0 == 23


def test_case_243():
    str_0 = "page_context"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = "' from the site because it conflicts with '"
    list_0 = []
    section_1 = module_0.Section(str_1, list_0)
    var_0 = section_0.__repr__()
    assert var_0 == "Section(title='page_context')"
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_2, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_1 = link_0.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_2 = var_1.__repr__()
    assert var_2 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_3 = var_2.__repr__()
    assert var_3 == "'\"Link(title=\\'0_~6:m!(f5FgU,:rvz\\', url=None)\"'"
    iterator_0 = var_0.__iter__()


def test_case_244():
    str_0 = 'C5B_`:"E&+;Y['
    link_0 = module_0.Link(str_0, str_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == 'C5B_`:"E&+;Y['
    assert link_0.url == 'C5B_`:"E&+;Y['


def test_case_245():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    str_1 = 'C5B_`:"E&+;Y['
    link_0 = module_0.Link(str_1, str_1)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == 'C5B_`:"E&+;Y['
    assert link_0.url == 'C5B_`:"E&+;Y['
    int_0 = var_0.__len__()
    assert int_0 == 23


def test_case_246():
    str_0 = "gfRsC:6&{;|"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "gfRsC:6&{;|"
    assert section_0.children == "gfRsC:6&{;|"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == "Section(title='gfRsC:6&{;|')"
    str_1 = " Use '"
    section_1 = module_0.Section(str_1, str_1)
    var_1 = section_1.__repr__()
    assert var_1 == 'Section(title=" Use \'")'
    int_0 = var_1.__len__()
    assert int_0 == 23
    var_2 = var_1.__repr__()
    assert var_2 == "'Section(title=\" Use \\'\")'"
    str_2 = "page_context"
    section_2 = module_0.Section(str_2, str_2)
    str_3 = "page_context"
    section_3 = module_0.Section(str_3, str_3)
    str_4 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_4, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_3 = link_0.__repr__()
    assert var_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_4 = section_3.__repr__()
    assert var_4 == "Section(title='page_context')"
    str_5 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_5, none_type_1)
    bytes_0 = b"\x802c35Z\xf8"
    link_2 = module_0.Link(link_1, bytes_0)
    str_6 = "page_context"
    section_4 = module_0.Section(str_6, str_6)
    str_7 = "' from the site because it conflicts with '"
    list_0 = []
    section_5 = module_0.Section(str_7, list_0)
    var_5 = section_5.__repr__()
    assert var_5 == "Section(title=\"' from the site because it conflicts with '\")"
    section_6 = module_0.Section(str_7, section_4)
    str_8 = "gfRsC:6&{;|"
    section_7 = module_0.Section(str_8, str_8)
    str_9 = "5g_E]<%dZc'[0.M"
    link_3 = module_0.Link(str_9, var_1)
    assert link_3.url == 'Section(title=" Use \'")'


def test_case_247():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_1, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_1 = link_0.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_2 = var_1.__repr__()
    assert var_2 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_3 = var_2.__repr__()
    assert var_3 == "'\"Link(title=\\'0_~6:m!(f5FgU,:rvz\\', url=None)\"'"
    dict_0 = {}
    str_2 = 'y\x0c[fN"W:2&:SWyz~W'
    link_1 = module_0.Link(dict_0, str_2)
    str_3 = " Use '"
    section_1 = module_0.Section(str_3, str_3)
    var_4 = section_1.__repr__()
    assert var_4 == 'Section(title=" Use \'")'
    int_0 = var_4.__len__()
    assert int_0 == 23
    str_4 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_2 = module_0.Link(str_4, none_type_1)
    str_5 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_3 = module_0.Link(str_5, none_type_2)
    var_5 = link_3.__repr__()
    assert var_5 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_6 = var_5.__repr__()
    assert var_6 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_6 = var_5.__str__()
    assert str_6 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    link_4 = module_0.Link(var_4, link_1)
    assert link_4.title == 'Section(title=" Use \'")'


def test_case_248():
    str_0 = "gfRsC:6&{;|"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "gfRsC:6&{;|"
    assert section_0.children == "gfRsC:6&{;|"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = " Use '"
    section_1 = module_0.Section(str_1, str_1)
    var_0 = section_1.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    int_0 = var_0.__len__()
    assert int_0 == 23
    var_1 = var_0.__repr__()
    assert var_1 == "'Section(title=\" Use \\'\")'"
    var_2 = var_1.__repr__()
    assert var_2 == "'\\'Section(title=\" Use \\\\\\'\")\\''"
    str_2 = " Use '"
    section_2 = module_0.Section(str_2, str_2)
    var_3 = section_2.__repr__()
    assert var_3 == 'Section(title=" Use \'")'
    var_4 = var_3.__repr__()
    assert var_4 == "'Section(title=\" Use \\'\")'"
    none_type_0 = None
    str_3 = "\n        Perform validation for a value.\n\n        The run_validation method should be implemented by subclasses.\n        "
    link_0 = module_0.Link(none_type_0, str_3)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title is None
    assert (
        link_0.url
        == "\n        Perform validation for a value.\n\n        The run_validation method should be implemented by subclasses.\n        "
    )
    var_5 = link_0.__repr__()
    assert (
        var_5
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    str_4 = var_5.__str__()
    assert (
        str_4
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    str_5 = "page_context"
    section_3 = module_0.Section(str_5, str_5)
    str_6 = "' from the site because it conflicts with '"
    list_0 = []
    section_4 = module_0.Section(str_6, list_0)
    var_6 = section_4.__repr__()
    assert var_6 == "Section(title=\"' from the site because it conflicts with '\")"
    str_7 = "page_context"
    section_5 = module_0.Section(str_7, str_7)
    str_8 = " Use '"
    section_6 = module_0.Section(str_8, str_8)
    var_7 = section_6.__repr__()
    assert var_7 == 'Section(title=" Use \'")'
    str_9 = var_1.__str__()
    assert str_9 == "'Section(title=\" Use \\'\")'"


def test_case_249():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    str_1 = "gfRsC:6&{;|"
    section_1 = module_0.Section(str_1, str_1)
    str_2 = "relative_to_docs"
    link_0 = module_0.Link(str_2, section_1)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "relative_to_docs"
    assert (
        f"{type(link_0.url).__module__}.{type(link_0.url).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    str_3 = " Use '"
    section_2 = module_0.Section(str_3, str_3)
    var_1 = section_2.__repr__()
    assert var_1 == 'Section(title=" Use \'")'
    str_4 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_1 = module_0.Link(str_4, none_type_0)
    var_2 = link_1.__repr__()
    assert var_2 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    int_0 = var_2.__len__()
    assert int_0 == 42
    str_5 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_2 = module_0.Link(str_5, none_type_1)
    bytes_0 = b"\x802c35Z\xf8"
    link_3 = module_0.Link(link_2, bytes_0)
    dict_0 = {}
    str_6 = 'y\x0c[fN"W:2&:SWyz~W'
    link_4 = module_0.Link(dict_0, str_6)
    var_3 = link_3.__repr__()
    assert (
        var_3
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )
    str_7 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_5 = module_0.Link(str_7, none_type_2)
    var_4 = link_5.__repr__()
    assert var_4 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_5 = var_4.__repr__()
    assert var_5 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_8 = var_4.__str__()
    assert str_8 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_6 = var_4.__repr__()
    assert var_6 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_9 = "page_context"
    section_3 = module_0.Section(str_9, str_9)
    str_10 = "' from the site because it conflicts with '"
    list_0 = []
    section_4 = module_0.Section(str_10, list_0)
    var_7 = section_4.__repr__()
    assert var_7 == "Section(title=\"' from the site because it conflicts with '\")"
    section_5 = module_0.Section(str_10, section_3)
    int_1 = var_7.__len__()
    assert int_1 == 60


def test_case_250():
    str_0 = "page_context"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = "' from the site because it conflicts with '"
    list_0 = []
    section_1 = module_0.Section(str_1, list_0)
    var_0 = section_1.__repr__()
    assert var_0 == "Section(title=\"' from the site because it conflicts with '\")"
    section_2 = module_0.Section(str_1, section_0)
    int_0 = var_0.__len__()
    assert int_0 == 60


def test_case_251():
    str_0 = 'C5B_`:"E&+;Y['
    link_0 = module_0.Link(str_0, str_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == 'C5B_`:"E&+;Y['
    assert link_0.url == 'C5B_`:"E&+;Y['
    str_1 = " Use '"
    section_0 = module_0.Section(str_1, str_1)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    int_0 = var_0.__len__()
    assert int_0 == 23
    var_1 = var_0.__repr__()
    assert var_1 == "'Section(title=\" Use \\'\")'"
    str_2 = " Use '"
    section_1 = module_0.Section(str_2, str_2)
    var_2 = section_1.__repr__()
    assert var_2 == 'Section(title=" Use \'")'
    str_3 = "gfRsC:6&{;|"
    section_2 = module_0.Section(str_3, str_3)
    str_4 = "relative_to_docs"
    link_1 = module_0.Link(str_4, section_2)
    section_3 = module_0.Section(section_1, var_2)
    assert section_3.children == 'Section(title=" Use \'")'
    str_5 = "gfRsC:6&{;|"
    section_4 = module_0.Section(str_5, str_5)
    var_3 = section_4.__repr__()
    assert var_3 == "Section(title='gfRsC:6&{;|')"
    str_6 = "page_context"
    section_5 = module_0.Section(str_6, str_6)
    str_7 = "' from the site because it conflicts with '"
    list_0 = []
    section_6 = module_0.Section(str_7, list_0)
    str_8 = "localhost"
    link_2 = module_0.Link(str_7, str_8)
    str_9 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_3 = module_0.Link(str_9, none_type_0)
    bytes_0 = b"\x802c35Z\xf8"
    link_4 = module_0.Link(link_3, bytes_0)
    str_10 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_5 = module_0.Link(str_10, none_type_1)
    var_4 = link_5.__repr__()
    assert var_4 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_5 = var_4.__repr__()
    assert var_5 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_11 = var_4.__str__()
    assert str_11 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_6 = var_2.__repr__()
    assert var_6 == "'Section(title=\" Use \\'\")'"


def test_case_252():
    str_0 = "page_context"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = "' from the site because it conflicts with '"
    list_0 = []
    section_1 = module_0.Section(str_1, list_0)
    str_2 = "localhost"
    link_0 = module_0.Link(str_1, str_2)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "' from the site because it conflicts with '"
    assert link_0.url == "localhost"
    str_3 = " Use '"
    section_2 = module_0.Section(str_3, str_3)
    var_0 = section_2.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    int_0 = var_0.__len__()
    assert int_0 == 23
    str_4 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_1 = module_0.Link(str_4, none_type_0)
    int_1 = var_0.__len__()
    assert int_1 == 23
    str_5 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_2 = module_0.Link(str_5, none_type_1)
    var_1 = link_2.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_2 = var_1.__repr__()
    assert var_2 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_3 = var_2.__repr__()
    assert var_3 == "'\"Link(title=\\'0_~6:m!(f5FgU,:rvz\\', url=None)\"'"
    str_6 = "gfRsC:6&{;|"
    section_3 = module_0.Section(str_6, str_6)
    str_7 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_3 = module_0.Link(str_7, none_type_2)
    var_4 = link_3.__repr__()
    assert var_4 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    dict_0 = {}
    str_8 = 'y\x0c[fN"W:2&:SWyz~W'
    link_4 = module_0.Link(dict_0, str_8)
    str_9 = "page_context"
    section_4 = module_0.Section(str_9, str_9)
    str_10 = "' from the site because it conflicts with '"
    list_1 = []
    section_5 = module_0.Section(str_10, list_1)
    str_11 = "page_context"
    section_6 = module_0.Section(str_11, str_11)
    str_12 = "' from the site because it conflicts with '"
    list_2 = []
    section_7 = module_0.Section(str_12, list_2)
    var_5 = section_7.__repr__()
    assert var_5 == "Section(title=\"' from the site because it conflicts with '\")"
    section_8 = module_0.Section(str_12, section_6)
    int_2 = var_5.__len__()
    assert int_2 == 60
    str_13 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_5 = module_0.Link(str_13, none_type_3)
    var_6 = link_5.__repr__()
    assert var_6 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_7 = var_6.__repr__()
    assert var_7 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_14 = var_6.__str__()
    assert str_14 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_8 = var_6.__repr__()
    assert var_8 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    dict_1 = {int_0: link_1}
    section_9 = module_0.Section(dict_1, none_type_0)


def test_case_253():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    bytes_0 = b"\x802c35Z\xf8"
    link_1 = module_0.Link(link_0, bytes_0)
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_1 = "page_context"
    section_0 = module_0.Section(str_1, str_1)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_2 = "' from the site because it conflicts with '"
    list_0 = []
    section_1 = module_0.Section(str_2, list_0)
    var_1 = section_1.__repr__()
    assert var_1 == "Section(title=\"' from the site because it conflicts with '\")"
    section_2 = module_0.Section(str_2, section_0)
    str_3 = "gfRsC:6&{;|"
    section_3 = module_0.Section(str_3, str_3)
    str_4 = " Use '"
    section_4 = module_0.Section(str_4, str_4)
    var_2 = section_4.__repr__()
    assert var_2 == 'Section(title=" Use \'")'
    int_0 = var_2.__len__()
    assert int_0 == 23
    var_3 = var_2.__repr__()
    assert var_3 == "'Section(title=\" Use \\'\")'"
    var_4 = var_3.__repr__()
    assert var_4 == "'\\'Section(title=\" Use \\\\\\'\")\\''"
    str_5 = "page_context"
    section_5 = module_0.Section(str_5, str_5)
    str_6 = "' from the site because it conflicts with '"
    list_1 = []
    section_6 = module_0.Section(str_6, list_1)
    var_5 = section_5.__repr__()
    assert var_5 == "Section(title='page_context')"
    str_7 = "page_context"
    section_7 = module_0.Section(str_7, str_7)
    str_8 = var_1.__str__()
    assert str_8 == "Section(title=\"' from the site because it conflicts with '\")"


def test_case_254():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_1, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_1 = link_0.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    int_0 = var_1.__len__()
    assert int_0 == 42
    str_2 = " Use '"
    section_1 = module_0.Section(str_2, str_2)
    var_2 = section_1.__repr__()
    assert var_2 == 'Section(title=" Use \'")'
    int_1 = var_2.__len__()
    assert int_1 == 23
    var_3 = var_2.__repr__()
    assert var_3 == "'Section(title=\" Use \\'\")'"
    str_3 = 'C5B_`:"E&+;Y['
    link_1 = module_0.Link(str_3, str_3)
    str_4 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_2 = module_0.Link(str_4, none_type_1)
    var_4 = link_2.__repr__()
    assert var_4 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_5 = var_4.__repr__()
    assert var_5 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_5 = " Use '"
    section_2 = module_0.Section(str_5, str_5)
    var_6 = section_2.__repr__()
    assert var_6 == 'Section(title=" Use \'")'
    str_6 = "page_context"
    section_3 = module_0.Section(str_6, str_6)
    str_7 = "' from the site because it conflicts with '"
    list_0 = []
    section_4 = module_0.Section(str_7, list_0)
    str_8 = " Use '"
    section_5 = module_0.Section(str_8, str_8)
    var_7 = section_5.__repr__()
    assert var_7 == 'Section(title=" Use \'")'
    str_9 = 'C5B_`:"E&+;Y['
    link_3 = module_0.Link(str_9, str_9)
    int_2 = var_7.__len__()
    assert int_2 == 23
    var_8 = var_0.__repr__()
    assert var_8 == "'Section(title=\" Use \\'\")'"


def test_case_255():
    str_0 = "gfRsC:6&{;|"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "gfRsC:6&{;|"
    assert section_0.children == "gfRsC:6&{;|"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == "Section(title='gfRsC:6&{;|')"
    str_1 = "gfRsC:6&{;|"
    section_1 = module_0.Section(str_1, str_1)
    str_2 = " Use '"
    section_2 = module_0.Section(str_2, str_2)
    var_1 = section_2.__repr__()
    assert var_1 == 'Section(title=" Use \'")'
    var_2 = var_1.__repr__()
    assert var_2 == "'Section(title=\" Use \\'\")'"
    str_3 = "page_context"
    section_3 = module_0.Section(str_3, str_3)
    str_4 = "' from the site because it conflicts with '"
    list_0 = []
    section_4 = module_0.Section(str_4, list_0)
    var_3 = section_4.__repr__()
    assert var_3 == "Section(title=\"' from the site because it conflicts with '\")"
    section_5 = module_0.Section(str_4, section_3)
    str_5 = "page_context"
    section_6 = module_0.Section(str_5, str_5)
    str_6 = "' from the site because it conflicts with '"
    list_1 = []
    section_7 = module_0.Section(str_6, list_1)
    var_4 = section_7.__repr__()
    assert var_4 == "Section(title=\"' from the site because it conflicts with '\")"
    section_8 = module_0.Section(str_6, section_6)
    int_0 = var_4.__len__()
    assert int_0 == 60
    str_7 = "page_context"
    section_9 = module_0.Section(str_7, str_7)
    str_8 = "' from the site because it conflicts with '"
    list_2 = []
    section_10 = module_0.Section(str_8, list_2)
    section_11 = module_0.Section(section_2, str_1)


def test_case_256():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    bytes_0 = b"\x802c35Z\xf8"
    link_1 = module_0.Link(link_0, bytes_0)
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    iterator_0 = var_0.__iter__()


def test_case_257():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    section_1 = module_0.Section(str_0, var_0)
    assert section_1.children == 'Section(title=" Use \'")'
    str_1 = " Use '"
    section_2 = module_0.Section(str_1, str_1)
    var_1 = section_2.__repr__()
    assert var_1 == 'Section(title=" Use \'")'
    str_2 = "page_context"
    section_3 = module_0.Section(str_2, str_2)
    str_3 = "' from the site because it conflicts with '"
    list_0 = []
    section_4 = module_0.Section(str_3, list_0)
    var_2 = section_3.__repr__()
    assert var_2 == "Section(title='page_context')"
    str_4 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_4, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    bytes_0 = b"\x802c35Z\xf8"
    link_1 = module_0.Link(link_0, bytes_0)
    str_5 = "page_context"
    section_5 = module_0.Section(str_5, str_5)
    str_6 = " Use '"
    section_6 = module_0.Section(str_6, str_6)
    var_3 = section_6.__repr__()
    assert var_3 == 'Section(title=" Use \'")'
    str_7 = 'C5B_`:"E&+;Y['
    link_2 = module_0.Link(str_7, str_7)
    int_0 = var_3.__len__()
    assert int_0 == 23
    iterator_0 = var_1.__iter__()


def test_case_258():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    bytes_0 = b"\x802c35Z\xf8"
    link_1 = module_0.Link(link_0, bytes_0)
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    iterator_0 = var_0.__iter__()
    none_type_1 = None
    str_1 = "\n        Perform validation for a value.\n\n        The run_validation method should be implemented by subclasses.\n        "
    link_2 = module_0.Link(none_type_1, str_1)
    var_1 = link_2.__repr__()
    assert (
        var_1
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    str_2 = var_1.__str__()
    assert (
        str_2
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    str_3 = "page_context"
    section_0 = module_0.Section(str_3, str_3)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_4 = "' from the site because it conflicts with '"
    list_0 = []
    section_1 = module_0.Section(str_4, list_0)
    var_2 = section_1.__repr__()
    assert var_2 == "Section(title=\"' from the site because it conflicts with '\")"
    section_2 = module_0.Section(str_4, section_0)
    str_5 = "gfRsC:6&{;|"
    section_3 = module_0.Section(str_5, str_5)
    str_6 = " Use '"
    section_4 = module_0.Section(str_6, str_6)
    var_3 = section_4.__repr__()
    assert var_3 == 'Section(title=" Use \'")'
    int_0 = var_3.__len__()
    assert int_0 == 23
    var_4 = var_3.__repr__()
    assert var_4 == "'Section(title=\" Use \\'\")'"
    var_5 = var_4.__repr__()
    assert var_5 == "'\\'Section(title=\" Use \\\\\\'\")\\''"
    str_7 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_3 = module_0.Link(str_7, none_type_2)
    var_6 = link_3.__repr__()
    assert var_6 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_8 = "page_context"
    section_5 = module_0.Section(str_8, str_8)
    str_9 = "gfRsC:6&{;|"
    section_6 = module_0.Section(str_9, str_9)
    str_10 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_4 = module_0.Link(str_10, none_type_3)
    bytes_1 = b"\x802c35Z\xf8"
    link_5 = module_0.Link(link_4, bytes_1)
    dict_0 = {}
    str_11 = 'y\x0c[fN"W:2&:SWyz~W'
    link_6 = module_0.Link(dict_0, str_11)
    var_7 = link_5.__repr__()
    assert (
        var_7
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )
    var_8 = link_3.__repr__()
    assert var_8 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"


def test_case_259():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_2 = var_1.__repr__()
    assert var_2 == "'\"Link(title=\\'0_~6:m!(f5FgU,:rvz\\', url=None)\"'"
    str_1 = " Use '"
    section_0 = module_0.Section(str_1, str_1)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_3 = section_0.__repr__()
    assert var_3 == 'Section(title=" Use \'")'
    int_0 = var_3.__len__()
    assert int_0 == 23
    section_1 = module_0.Section(var_3, int_0)
    assert section_1.title == 'Section(title=" Use \'")'
    assert section_1.children == 23
    str_2 = "page_context"
    section_2 = module_0.Section(str_2, str_2)
    str_3 = "' from the site because it conflicts with '"
    list_0 = []
    section_3 = module_0.Section(str_3, list_0)
    str_4 = "localhost"
    link_1 = module_0.Link(str_3, str_4)
    str_5 = " Use '"
    section_4 = module_0.Section(str_5, str_5)
    var_4 = section_4.__repr__()
    assert var_4 == 'Section(title=" Use \'")'
    str_6 = 'C5B_`:"E&+;Y['
    link_2 = module_0.Link(str_6, str_6)
    int_1 = var_4.__len__()
    assert int_1 == 23
    str_7 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_3 = module_0.Link(str_7, none_type_1)
    bytes_0 = b"\x802c35Z\xf8"
    link_4 = module_0.Link(link_3, bytes_0)
    var_5 = link_3.__repr__()
    assert var_5 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_8 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_5 = module_0.Link(str_8, none_type_2)
    var_6 = link_5.__repr__()
    assert var_6 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_9 = " Use '"
    section_5 = module_0.Section(str_9, str_9)
    var_7 = section_5.__repr__()
    assert var_7 == 'Section(title=" Use \'")'
    str_10 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_6 = module_0.Link(str_10, none_type_3)
    var_8 = link_6.__repr__()
    assert var_8 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    int_2 = var_8.__len__()
    assert int_2 == 42
    section_6 = module_0.Section(none_type_3, str_3)


def test_case_260():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    str_1 = "gfRsC:6&{;|"
    section_1 = module_0.Section(str_1, str_1)
    str_2 = "relative_to_docs"
    link_0 = module_0.Link(str_2, section_1)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "relative_to_docs"
    assert (
        f"{type(link_0.url).__module__}.{type(link_0.url).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    section_2 = module_0.Section(section_0, var_0)
    assert section_2.children == 'Section(title=" Use \'")'
    str_3 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_1 = module_0.Link(str_3, none_type_0)
    bytes_0 = b"\x802c35Z\xf8"
    link_2 = module_0.Link(link_1, bytes_0)
    var_1 = link_1.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    iterator_0 = var_1.__iter__()
    str_4 = " Use '"
    section_3 = module_0.Section(str_4, str_4)
    var_2 = section_3.__repr__()
    assert var_2 == 'Section(title=" Use \'")'
    str_5 = "gfRsC:6&{;|"
    section_4 = module_0.Section(str_5, str_5)
    str_6 = "relative_to_docs"
    link_3 = module_0.Link(str_6, section_4)
    str_7 = "gfRsC:6&{;|"
    section_5 = module_0.Section(str_7, str_7)
    str_8 = "page_context"
    section_6 = module_0.Section(str_8, str_8)
    str_9 = "gfRsC:6&{;|"
    section_7 = module_0.Section(str_9, str_9)
    var_3 = section_7.__repr__()
    assert var_3 == "Section(title='gfRsC:6&{;|')"
    int_0 = var_1.__len__()
    assert int_0 == 42


def test_case_261():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    bytes_0 = b"\x802c35Z\xf8"
    link_1 = module_0.Link(link_0, bytes_0)
    dict_0 = {}
    str_1 = 'y\x0c[fN"W:2&:SWyz~W'
    link_2 = module_0.Link(dict_0, str_1)
    var_0 = link_1.__repr__()
    assert (
        var_0
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )
    str_2 = " Use '"
    section_0 = module_0.Section(str_2, str_2)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_1 = section_0.__repr__()
    assert var_1 == 'Section(title=" Use \'")'
    var_2 = var_0.__repr__()
    assert (
        var_2
        == "\"Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\\\x802c35Z\\\\xf8')\""
    )


def test_case_262():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    int_0 = var_0.__len__()
    assert int_0 == 23
    var_1 = var_0.__repr__()
    assert var_1 == "'Section(title=\" Use \\'\")'"
    str_1 = "page_context"
    section_1 = module_0.Section(str_1, str_1)
    str_2 = "' from the site because it conflicts with '"
    list_0 = []
    section_2 = module_0.Section(str_2, list_0)
    str_3 = " Use '"
    section_3 = module_0.Section(str_3, str_3)
    var_2 = section_3.__repr__()
    assert var_2 == 'Section(title=" Use \'")'
    int_1 = var_2.__len__()
    assert int_1 == 23
    str_4 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_4, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    int_2 = var_2.__len__()
    assert int_2 == 23
    str_5 = " Use '"
    section_4 = module_0.Section(str_5, str_5)
    var_3 = section_4.__repr__()
    assert var_3 == 'Section(title=" Use \'")'
    section_5 = module_0.Section(str_5, var_3)
    assert section_5.children == 'Section(title=" Use \'")'
    str_6 = " Use '"
    section_6 = module_0.Section(str_6, str_6)
    var_4 = section_6.__repr__()
    assert var_4 == 'Section(title=" Use \'")'
    int_3 = var_4.__len__()
    assert int_3 == 23
    section_7 = module_0.Section(var_4, int_3)
    assert section_7.title == 'Section(title=" Use \'")'
    assert section_7.children == 23
    str_7 = " Use '"
    section_8 = module_0.Section(str_7, str_7)
    var_5 = section_8.__repr__()
    assert var_5 == 'Section(title=" Use \'")'
    str_8 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_8, none_type_1)
    var_6 = link_1.__repr__()
    assert var_6 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    int_4 = var_6.__len__()
    assert int_4 == 42
    str_9 = "gfRsC:6&{;|"
    section_9 = module_0.Section(str_9, str_9)
    var_7 = section_9.__repr__()
    assert var_7 == "Section(title='gfRsC:6&{;|')"
    str_10 = " Use '"
    section_10 = module_0.Section(str_10, str_10)
    var_8 = section_10.__repr__()
    assert var_8 == 'Section(title=" Use \'")'
    var_9 = var_8.__repr__()
    assert var_9 == "'Section(title=\" Use \\'\")'"
    str_11 = var_1.__str__()
    assert str_11 == "'Section(title=\" Use \\'\")'"


def test_case_263():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_1 = var_0.__str__()
    assert str_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    dict_0 = {}
    str_2 = 'y\x0c[fN"W:2&:SWyz~W'
    link_1 = module_0.Link(dict_0, str_2)
    var_2 = link_1.__repr__()
    assert var_2 == "Link(title={}, url='y\\x0c[fN\"W:2&:SWyz~W')"


def test_case_264():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    str_1 = "gfRsC:6&{;|"
    section_1 = module_0.Section(str_1, str_1)
    str_2 = "relative_to_docs"
    link_0 = module_0.Link(str_2, section_1)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "relative_to_docs"
    assert (
        f"{type(link_0.url).__module__}.{type(link_0.url).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    str_3 = " Use '"
    section_2 = module_0.Section(str_3, str_3)
    var_1 = section_2.__repr__()
    assert var_1 == 'Section(title=" Use \'")'
    int_0 = var_1.__len__()
    assert int_0 == 23
    str_4 = " Use '"
    section_3 = module_0.Section(str_4, str_4)
    var_2 = section_3.__repr__()
    assert var_2 == 'Section(title=" Use \'")'
    str_5 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_1 = module_0.Link(str_5, none_type_0)
    var_3 = link_1.__repr__()
    assert var_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    int_1 = var_3.__len__()
    assert int_1 == 42
    str_6 = " Use '"
    section_4 = module_0.Section(str_6, str_6)
    var_4 = section_4.__repr__()
    assert var_4 == 'Section(title=" Use \'")'
    section_5 = module_0.Section(str_6, var_4)
    assert section_5.children == 'Section(title=" Use \'")'
    str_7 = "page_context"
    section_6 = module_0.Section(str_7, str_7)
    str_8 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_2 = module_0.Link(str_8, none_type_1)
    var_5 = link_2.__repr__()
    assert var_5 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_6 = section_6.__repr__()
    assert var_6 == "Section(title='page_context')"
    str_9 = " Use '"
    section_7 = module_0.Section(str_9, str_9)
    var_7 = section_7.__repr__()
    assert var_7 == 'Section(title=" Use \'")'
    int_2 = var_7.__len__()
    assert int_2 == 23
    str_10 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_3 = module_0.Link(str_10, none_type_2)
    int_3 = var_7.__len__()
    assert int_3 == 23
    var_8 = link_2.__repr__()
    assert var_8 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"


def test_case_265():
    str_0 = "page_context"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = "' from the site because it conflicts with '"
    list_0 = []
    section_1 = module_0.Section(str_1, list_0)
    var_0 = section_0.__repr__()
    assert var_0 == "Section(title='page_context')"
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_2, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    bytes_0 = b"\x802c35Z\xf8"
    link_1 = module_0.Link(link_0, bytes_0)
    var_1 = link_0.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    iterator_0 = var_1.__iter__()
    str_3 = "gfRsC:6&{;|"
    section_2 = module_0.Section(str_3, str_3)
    str_4 = " Use '"
    section_3 = module_0.Section(str_4, str_4)
    var_2 = section_3.__repr__()
    assert var_2 == 'Section(title=" Use \'")'
    str_5 = "page_context"
    section_4 = module_0.Section(str_5, str_5)
    str_6 = "' from the site because it conflicts with '"
    list_1 = []
    section_5 = module_0.Section(str_6, list_1)
    str_7 = "localhost"
    link_2 = module_0.Link(str_6, str_7)
    str_8 = "page_context"
    section_6 = module_0.Section(str_8, str_8)
    str_9 = "' from the site because it conflicts with '"
    list_2 = []
    section_7 = module_0.Section(str_9, list_2)
    var_3 = section_7.__repr__()
    assert var_3 == "Section(title=\"' from the site because it conflicts with '\")"
    section_8 = module_0.Section(str_9, section_6)
    str_10 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_3 = module_0.Link(str_10, none_type_1)
    var_4 = link_3.__repr__()
    assert var_4 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_5 = var_4.__repr__()
    assert var_5 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_11 = var_4.__str__()
    assert str_11 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_6 = var_4.__repr__()
    assert var_6 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_12 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_4 = module_0.Link(str_12, none_type_2)
    var_7 = link_4.__repr__()
    assert var_7 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_8 = var_7.__repr__()
    assert var_8 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_13 = var_7.__str__()
    assert str_13 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_14 = "page_context"
    section_9 = module_0.Section(str_14, str_14)
    str_15 = "' from the site because it conflicts with '"
    list_3 = []
    section_10 = module_0.Section(str_15, list_3)
    var_9 = section_10.__repr__()
    assert var_9 == "Section(title=\"' from the site because it conflicts with '\")"
    section_11 = module_0.Section(str_15, section_9)
    int_0 = var_9.__len__()
    assert int_0 == 60
    str_16 = "gfRsC:6&{;|"
    section_12 = module_0.Section(str_16, str_16)
    str_17 = " Use '"
    section_13 = module_0.Section(str_17, str_17)
    var_10 = section_13.__repr__()
    assert var_10 == 'Section(title=" Use \'")'
    int_1 = var_10.__len__()
    assert int_1 == 23
    var_11 = var_10.__repr__()
    assert var_11 == "'Section(title=\" Use \\'\")'"
    var_12 = var_11.__repr__()
    assert var_12 == "'\\'Section(title=\" Use \\\\\\'\")\\''"
    iterator_1 = var_3.__iter__()


def test_case_266():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    var_1 = var_0.__repr__()
    assert var_1 == "'Section(title=\" Use \\'\")'"
    str_1 = "gfRsC:6&{;|"
    section_1 = module_0.Section(str_1, str_1)
    var_2 = section_1.__repr__()
    assert var_2 == "Section(title='gfRsC:6&{;|')"
    str_2 = "page_context"
    section_2 = module_0.Section(str_2, str_2)
    str_3 = "' from the site because it conflicts with '"
    list_0 = []
    section_3 = module_0.Section(str_3, list_0)
    str_4 = "localhost"
    link_0 = module_0.Link(str_3, str_4)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "' from the site because it conflicts with '"
    assert link_0.url == "localhost"
    str_5 = var_0.__str__()
    assert str_5 == 'Section(title=" Use \'")'


def test_case_267():
    str_0 = "page_context"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = "' from the site because it conflicts with '"
    list_0 = []
    section_1 = module_0.Section(str_1, list_0)
    var_0 = section_1.__repr__()
    assert var_0 == "Section(title=\"' from the site because it conflicts with '\")"
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_2, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_1 = link_0.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_3 = 'C5B_`:"E&+;Y['
    link_1 = module_0.Link(str_3, str_3)
    str_4 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_2 = module_0.Link(str_4, none_type_1)
    var_2 = link_2.__repr__()
    assert var_2 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_3 = var_2.__repr__()
    assert var_3 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_4 = var_3.__repr__()
    assert var_4 == "'\"Link(title=\\'0_~6:m!(f5FgU,:rvz\\', url=None)\"'"
    str_5 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_3 = module_0.Link(str_5, none_type_2)
    var_5 = link_3.__repr__()
    assert var_5 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_6 = var_5.__repr__()
    assert var_6 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_6 = var_5.__str__()
    assert str_6 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_7 = var_5.__repr__()
    assert var_7 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_7 = " Use '"
    section_2 = module_0.Section(str_7, str_7)
    var_8 = section_2.__repr__()
    assert var_8 == 'Section(title=" Use \'")'
    section_3 = module_0.Section(str_7, var_8)
    assert section_3.children == 'Section(title=" Use \'")'
    str_8 = "gfRsC:6&{;|"
    section_4 = module_0.Section(str_8, str_8)
    str_9 = " Use '"
    section_5 = module_0.Section(str_9, str_9)
    var_9 = section_5.__repr__()
    assert var_9 == 'Section(title=" Use \'")'
    int_0 = var_9.__len__()
    assert int_0 == 23
    var_10 = var_9.__repr__()
    assert var_10 == "'Section(title=\" Use \\'\")'"
    var_11 = var_10.__repr__()
    assert var_11 == "'\\'Section(title=\" Use \\\\\\'\")\\''"
    str_10 = "page_context"
    section_6 = module_0.Section(str_10, str_10)
    str_11 = "' from the site because it conflicts with '"
    list_1 = []
    section_7 = module_0.Section(str_11, list_1)
    str_12 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_4 = module_0.Link(str_12, none_type_3)
    bytes_0 = b"\x802c35Z\xf8"
    link_5 = module_0.Link(link_4, bytes_0)
    str_13 = "page_context"
    section_8 = module_0.Section(str_13, str_13)
    str_14 = "' from the site because it conflicts with '"
    list_2 = []
    section_9 = module_0.Section(str_14, list_2)
    str_15 = "localhost"
    link_6 = module_0.Link(str_14, str_15)
    int_1 = var_7.__len__()
    assert int_1 == 44


def test_case_268():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    str_1 = "gfRsC:6&{;|"
    section_1 = module_0.Section(str_1, str_1)
    str_2 = "relative_to_docs"
    link_0 = module_0.Link(str_2, section_1)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "relative_to_docs"
    assert (
        f"{type(link_0.url).__module__}.{type(link_0.url).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    section_2 = module_0.Section(section_0, var_0)
    assert section_2.children == 'Section(title=" Use \'")'
    str_3 = 'C5B_`:"E&+;Y['
    link_1 = module_0.Link(str_3, str_3)
    str_4 = var_0.__str__()
    assert str_4 == 'Section(title=" Use \'")'


def test_case_269():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    int_0 = var_0.__len__()
    assert int_0 == 23
    section_1 = module_0.Section(var_0, int_0)
    assert section_1.title == 'Section(title=" Use \'")'
    assert section_1.children == 23
    str_1 = " Use '"
    section_2 = module_0.Section(str_1, str_1)
    var_1 = section_2.__repr__()
    assert var_1 == 'Section(title=" Use \'")'
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_2, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_2 = link_0.__repr__()
    assert var_2 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    int_1 = var_2.__len__()
    assert int_1 == 42
    str_3 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_3, none_type_1)
    link_2 = module_0.Link(section_2, int_0)
    assert link_2.url == 23


def test_case_270():
    str_0 = 'C5B_`:"E&+;Y['
    link_0 = module_0.Link(str_0, str_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == 'C5B_`:"E&+;Y['
    assert link_0.url == 'C5B_`:"E&+;Y['
    str_1 = "gfRsC:6&{;|"
    section_0 = module_0.Section(str_1, str_1)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "gfRsC:6&{;|"
    assert section_0.children == "gfRsC:6&{;|"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_2 = " Use '"
    section_1 = module_0.Section(str_2, str_2)
    var_0 = section_1.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    int_0 = var_0.__len__()
    assert int_0 == 23
    var_1 = var_0.__repr__()
    assert var_1 == "'Section(title=\" Use \\'\")'"
    var_2 = var_1.__repr__()
    assert var_2 == "'\\'Section(title=\" Use \\\\\\'\")\\''"
    str_3 = "gfRsC:6&{;|"
    section_2 = module_0.Section(str_3, str_3)
    str_4 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_1 = module_0.Link(str_4, none_type_0)
    bytes_0 = b"\x802c35Z\xf8"
    link_2 = module_0.Link(link_1, bytes_0)
    var_3 = link_1.__repr__()
    assert var_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    iterator_0 = var_3.__iter__()
    str_5 = "page_context"
    section_3 = module_0.Section(str_5, str_5)
    none_type_1 = None
    str_6 = "\n        Perform validation for a value.\n\n        The run_validation method should be implemented by subclasses.\n        "
    link_3 = module_0.Link(none_type_1, str_6)
    var_4 = link_3.__repr__()
    assert (
        var_4
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    str_7 = var_4.__str__()
    assert (
        str_7
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    str_8 = " Use '"
    section_4 = module_0.Section(str_8, str_8)
    var_5 = section_4.__repr__()
    assert var_5 == 'Section(title=" Use \'")'
    str_9 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_4 = module_0.Link(str_9, none_type_2)
    var_6 = link_4.__repr__()
    assert var_6 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    int_1 = var_6.__len__()
    assert int_1 == 42
    str_10 = " Use '"
    section_5 = module_0.Section(str_10, str_10)
    var_7 = section_5.__repr__()
    assert var_7 == 'Section(title=" Use \'")'
    var_8 = var_7.__repr__()
    assert var_8 == "'Section(title=\" Use \\'\")'"
    str_11 = var_6.__str__()
    assert str_11 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"


def test_case_271():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_1 = var_0.__str__()
    assert str_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_2 = " Use '"
    section_0 = module_0.Section(str_2, str_2)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_2 = section_0.__repr__()
    assert var_2 == 'Section(title=" Use \'")'
    str_3 = " Use '"
    section_1 = module_0.Section(str_3, str_3)
    var_3 = section_1.__repr__()
    assert var_3 == 'Section(title=" Use \'")'
    int_0 = var_3.__len__()
    assert int_0 == 23
    section_2 = module_0.Section(var_3, int_0)
    assert section_2.title == 'Section(title=" Use \'")'
    assert section_2.children == 23
    dict_0 = {}
    str_4 = 'y\x0c[fN"W:2&:SWyz~W'
    link_1 = module_0.Link(dict_0, str_4)
    section_3 = module_0.Section(str_4, str_4)
    str_5 = "page_context"
    section_4 = module_0.Section(str_5, str_5)
    str_6 = "' from the site because it conflicts with '"
    list_0 = []
    section_5 = module_0.Section(str_6, list_0)
    str_7 = "3ft"
    section_6 = module_0.Section(str_7, str_2)


def test_case_272():
    str_0 = 'C5B_`:"E&+;Y['
    link_0 = module_0.Link(str_0, str_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == 'C5B_`:"E&+;Y['
    assert link_0.url == 'C5B_`:"E&+;Y['
    none_type_0 = None
    str_1 = "\n        Perform validation for a value.\n\n        The run_validation method should be implemented by subclasses.\n        "
    link_1 = module_0.Link(none_type_0, str_1)
    var_0 = link_1.__repr__()
    assert (
        var_0
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    str_2 = var_0.__str__()
    assert (
        str_2
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    str_3 = "page_context"
    section_0 = module_0.Section(str_3, str_3)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_4 = "' from the site because it conflicts with '"
    list_0 = []
    section_1 = module_0.Section(str_4, list_0)
    str_5 = "page_context"
    section_2 = module_0.Section(str_5, str_5)
    dict_0 = {}
    str_6 = 'y\x0c[fN"W:2&:SWyz~W'
    link_2 = module_0.Link(dict_0, str_6)
    section_3 = module_0.Section(str_6, str_6)
    str_7 = " Use '"
    section_4 = module_0.Section(str_7, str_7)
    var_1 = section_4.__repr__()
    assert var_1 == 'Section(title=" Use \'")'
    section_5 = module_0.Section(str_7, var_1)
    assert section_5.children == 'Section(title=" Use \'")'
    str_8 = "page_context"
    section_6 = module_0.Section(str_8, str_8)
    str_9 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_3 = module_0.Link(str_9, none_type_1)
    var_2 = link_3.__repr__()
    assert var_2 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_3 = section_6.__repr__()
    assert var_3 == "Section(title='page_context')"
    str_10 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_4 = module_0.Link(str_10, none_type_2)
    bytes_0 = b"\x802c35Z\xf8"
    link_5 = module_0.Link(link_4, bytes_0)
    dict_1 = {}
    str_11 = 'y\x0c[fN"W:2&:SWyz~W'
    link_6 = module_0.Link(dict_1, str_11)
    var_4 = link_5.__repr__()
    assert (
        var_4
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )
    str_12 = "page_context"
    section_7 = module_0.Section(str_12, str_12)
    str_13 = "' from the site because it conflicts with '"
    list_1 = []
    section_8 = module_0.Section(str_13, list_1)
    var_5 = section_7.__repr__()
    assert var_5 == "Section(title='page_context')"
    str_14 = " Use '"
    section_9 = module_0.Section(str_14, str_14)
    var_6 = section_9.__repr__()
    assert var_6 == 'Section(title=" Use \'")'
    str_15 = "gfRsC:6&{;|"
    section_10 = module_0.Section(str_15, str_15)
    str_16 = "relative_to_docs"
    link_7 = module_0.Link(str_16, section_10)
    var_7 = link_0.__repr__()
    assert var_7 == "Link(title='C5B_`:\"E&+;Y[', url='C5B_`:\"E&+;Y[')"


def test_case_273():
    none_type_0 = None
    str_0 = "\n        Perform validation for a value.\n\n        The run_validation method should be implemented by subclasses.\n        "
    link_0 = module_0.Link(none_type_0, str_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title is None
    assert (
        link_0.url
        == "\n        Perform validation for a value.\n\n        The run_validation method should be implemented by subclasses.\n        "
    )
    var_0 = link_0.__repr__()
    assert (
        var_0
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    str_1 = var_0.__str__()
    assert (
        str_1
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_2, none_type_1)
    bytes_0 = b"\x802c35Z\xf8"
    link_2 = module_0.Link(link_1, bytes_0)
    var_1 = link_1.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    iterator_0 = var_1.__iter__()
    str_3 = "gfRsC:6&{;|"
    section_0 = module_0.Section(str_3, str_3)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "gfRsC:6&{;|"
    assert section_0.children == "gfRsC:6&{;|"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_4 = " Use '"
    section_1 = module_0.Section(str_4, str_4)
    var_2 = section_1.__repr__()
    assert var_2 == 'Section(title=" Use \'")'
    int_0 = var_2.__len__()
    assert int_0 == 23
    var_3 = var_2.__repr__()
    assert var_3 == "'Section(title=\" Use \\'\")'"
    var_4 = var_3.__repr__()
    assert var_4 == "'\\'Section(title=\" Use \\\\\\'\")\\''"
    str_5 = " Use '"
    section_2 = module_0.Section(str_5, str_5)
    var_5 = section_2.__repr__()
    assert var_5 == 'Section(title=" Use \'")'
    var_6 = var_5.__repr__()
    assert var_6 == "'Section(title=\" Use \\'\")'"
    str_6 = "gfRsC:6&{;|"
    section_3 = module_0.Section(str_6, str_6)
    var_7 = section_3.__repr__()
    assert var_7 == "Section(title='gfRsC:6&{;|')"
    str_7 = "page_context"
    section_4 = module_0.Section(str_7, str_7)
    dict_0 = {}
    str_8 = 'y\x0c[fN"W:2&:SWyz~W'
    link_3 = module_0.Link(dict_0, str_8)
    str_9 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_4 = module_0.Link(str_9, none_type_2)
    var_8 = link_4.__repr__()
    assert var_8 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_10 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_5 = module_0.Link(str_10, none_type_3)
    bytes_1 = b"\x802c35Z\xf8"
    link_6 = module_0.Link(link_5, bytes_1)
    dict_1 = {}
    str_11 = 'y\x0c[fN"W:2&:SWyz~W'
    link_7 = module_0.Link(dict_1, str_11)
    var_9 = link_6.__repr__()
    assert (
        var_9
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )
    str_12 = "0_~6:m!(f5FgU,:rvz"
    none_type_4 = None
    link_8 = module_0.Link(str_12, none_type_4)
    var_10 = link_8.__repr__()
    assert var_10 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_11 = var_10.__repr__()
    assert var_11 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_12 = var_11.__repr__()
    assert var_12 == "'\"Link(title=\\'0_~6:m!(f5FgU,:rvz\\', url=None)\"'"
    section_5 = module_0.Section(var_4, var_4)
    assert section_5.title == "'\\'Section(title=\" Use \\\\\\'\")\\''"
    assert section_5.children == "'\\'Section(title=\" Use \\\\\\'\")\\''"


def test_case_274():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    bytes_0 = b"\x802c35Z\xf8"
    link_1 = module_0.Link(link_0, bytes_0)
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    int_0 = var_0.__len__()
    assert int_0 == 42


def test_case_275():
    dict_0 = {}
    str_0 = 'y\x0c[fN"W:2&:SWyz~W'
    link_0 = module_0.Link(dict_0, str_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == {}
    assert link_0.url == 'y\x0c[fN"W:2&:SWyz~W'
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == 'y\x0c[fN"W:2&:SWyz~W'
    assert section_0.children == 'y\x0c[fN"W:2&:SWyz~W'
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = 'C5B_`:"E&+;Y['
    link_1 = module_0.Link(str_1, str_1)
    str_2 = "page_context"
    section_1 = module_0.Section(str_2, str_2)
    str_3 = "' from the site because it conflicts with '"
    list_0 = []
    section_2 = module_0.Section(str_3, list_0)
    var_0 = section_2.__repr__()
    assert var_0 == "Section(title=\"' from the site because it conflicts with '\")"
    section_3 = module_0.Section(str_3, section_1)
    int_0 = var_0.__len__()
    assert int_0 == 60
    section_4 = module_0.Section(str_3, var_0)
    assert (
        section_4.children
        == "Section(title=\"' from the site because it conflicts with '\")"
    )


def test_case_276():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_1, none_type_1)
    var_0 = link_1.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_2 = var_0.__str__()
    assert str_2 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_3 = " Use '"
    section_0 = module_0.Section(str_3, str_3)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_2 = section_0.__repr__()
    assert var_2 == 'Section(title=" Use \'")'
    int_0 = var_2.__len__()
    assert int_0 == 23
    section_1 = module_0.Section(var_2, int_0)
    assert section_1.title == 'Section(title=" Use \'")'
    assert section_1.children == 23
    str_4 = "page_context"
    section_2 = module_0.Section(str_4, str_4)
    str_5 = "' from the site because it conflicts with '"
    list_0 = []
    section_3 = module_0.Section(str_5, list_0)
    var_3 = section_3.__repr__()
    assert var_3 == "Section(title=\"' from the site because it conflicts with '\")"
    section_4 = module_0.Section(str_5, section_2)
    int_1 = var_3.__len__()
    assert int_1 == 60
    dict_0 = {}
    str_6 = 'y\x0c[fN"W:2&:SWyz~W'
    link_2 = module_0.Link(dict_0, str_6)
    str_7 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_3 = module_0.Link(str_7, none_type_2)
    var_4 = link_3.__repr__()
    assert var_4 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_5 = var_4.__repr__()
    assert var_5 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_8 = var_4.__str__()
    assert str_8 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_6 = var_4.__repr__()
    assert var_6 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    section_5 = module_0.Section(section_0, var_3)
    assert (
        section_5.children
        == "Section(title=\"' from the site because it conflicts with '\")"
    )


def test_case_277():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    int_0 = var_0.__len__()
    assert int_0 == 23
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_1, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    int_1 = var_0.__len__()
    assert int_1 == 23
    str_2 = " Use '"
    section_1 = module_0.Section(str_2, str_2)
    var_1 = section_1.__repr__()
    assert var_1 == 'Section(title=" Use \'")'
    str_3 = "gfRsC:6&{;|"
    section_2 = module_0.Section(str_3, str_3)
    str_4 = "relative_to_docs"
    link_1 = module_0.Link(str_4, section_2)
    str_5 = "page_context"
    section_3 = module_0.Section(str_5, str_5)
    str_6 = "' from the site because it conflicts with '"
    list_0 = []
    section_4 = module_0.Section(str_6, list_0)
    var_2 = section_4.__repr__()
    assert var_2 == "Section(title=\"' from the site because it conflicts with '\")"
    var_3 = link_0.__repr__()
    assert var_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"


def test_case_278():
    str_0 = "$9.}1Av5,.}"
    link_0 = module_0.Link(str_0, str_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "$9.}1Av5,.}"
    assert link_0.url == "$9.}1Av5,.}"


def test_case_279():
    str_0 = "page_context"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = "' from the site because it conflicts with '"
    list_0 = []
    section_1 = module_0.Section(str_1, list_0)
    var_0 = section_0.__repr__()
    assert var_0 == "Section(title='page_context')"
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_2, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_1 = link_0.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_2 = var_1.__repr__()
    assert var_2 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_3 = var_1.__str__()
    assert str_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_3 = var_1.__repr__()
    assert var_3 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_4 = "page_context"
    section_2 = module_0.Section(str_4, str_4)
    str_5 = "' from the site because it conflicts with '"
    list_1 = []
    section_3 = module_0.Section(str_5, list_1)
    var_4 = section_3.__repr__()
    assert var_4 == "Section(title=\"' from the site because it conflicts with '\")"
    str_6 = " Use '"
    section_4 = module_0.Section(str_6, str_6)
    var_5 = section_4.__repr__()
    assert var_5 == 'Section(title=" Use \'")'
    str_7 = "gfRsC:6&{;|"
    section_5 = module_0.Section(str_7, str_7)
    str_8 = "relative_to_docs"
    link_1 = module_0.Link(str_8, section_5)
    section_6 = module_0.Section(section_4, var_5)
    assert section_6.children == 'Section(title=" Use \'")'
    str_9 = "gfRsC:6&{;|"
    section_7 = module_0.Section(str_9, str_9)
    var_6 = section_7.__repr__()
    assert var_6 == "Section(title='gfRsC:6&{;|')"
    str_10 = " Use '"
    section_8 = module_0.Section(str_10, str_10)
    var_7 = section_8.__repr__()
    assert var_7 == 'Section(title=" Use \'")'
    var_8 = var_7.__repr__()
    assert var_8 == "'Section(title=\" Use \\'\")'"
    str_11 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_2 = module_0.Link(str_11, none_type_1)
    var_9 = link_2.__repr__()
    assert var_9 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_10 = var_9.__repr__()
    assert var_10 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_11 = var_10.__repr__()
    assert var_11 == "'\"Link(title=\\'0_~6:m!(f5FgU,:rvz\\', url=None)\"'"
    str_12 = var_0.__str__()
    assert str_12 == "Section(title='page_context')"


def test_case_280():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_2 = var_0.__repr__()
    assert var_2 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""


def test_case_281():
    str_0 = "gfRsC:6&{;|"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "gfRsC:6&{;|"
    assert section_0.children == "gfRsC:6&{;|"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = " Use '"
    section_1 = module_0.Section(str_1, str_1)
    var_0 = section_1.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    int_0 = var_0.__len__()
    assert int_0 == 23
    var_1 = var_0.__repr__()
    assert var_1 == "'Section(title=\" Use \\'\")'"
    var_2 = var_1.__repr__()
    assert var_2 == "'\\'Section(title=\" Use \\\\\\'\")\\''"
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_2, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_3 = link_0.__repr__()
    assert var_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_4 = var_3.__repr__()
    assert var_4 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_3 = " Use '"
    section_2 = module_0.Section(str_3, str_3)
    var_5 = section_2.__repr__()
    assert var_5 == 'Section(title=" Use \'")'
    int_1 = var_5.__len__()
    assert int_1 == 23
    var_6 = var_5.__repr__()
    assert var_6 == "'Section(title=\" Use \\'\")'"
    str_4 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_4, none_type_1)
    var_7 = link_1.__repr__()
    assert var_7 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_8 = var_7.__repr__()
    assert var_8 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_9 = var_8.__repr__()
    assert var_9 == "'\"Link(title=\\'0_~6:m!(f5FgU,:rvz\\', url=None)\"'"
    str_5 = "gfRsC:6&{;|"
    section_3 = module_0.Section(str_5, str_5)
    dict_0 = {}
    str_6 = 'y\x0c[fN"W:2&:SWyz~W'
    link_2 = module_0.Link(dict_0, str_6)
    str_7 = " Use '"
    section_4 = module_0.Section(str_7, str_7)
    var_10 = section_4.__repr__()
    assert var_10 == 'Section(title=" Use \'")'
    str_8 = 'C5B_`:"E&+;Y['
    link_3 = module_0.Link(str_8, str_8)
    int_2 = var_10.__len__()
    assert int_2 == 23
    str_9 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_4 = module_0.Link(str_9, none_type_2)
    bytes_0 = b"\x802c35Z\xf8"
    link_5 = module_0.Link(link_4, bytes_0)
    var_11 = link_4.__repr__()
    assert var_11 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    iterator_0 = var_11.__iter__()
    str_10 = " Use '"
    section_5 = module_0.Section(str_10, str_10)
    var_12 = section_5.__repr__()
    assert var_12 == 'Section(title=" Use \'")'
    var_13 = var_12.__repr__()
    assert var_13 == "'Section(title=\" Use \\'\")'"
    var_14 = var_11.__repr__()
    assert var_14 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""


def test_case_282():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    str_1 = "gfRsC:6&{;|"
    section_1 = module_0.Section(str_1, str_1)
    str_2 = "relative_to_docs"
    link_0 = module_0.Link(str_2, section_1)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "relative_to_docs"
    assert (
        f"{type(link_0.url).__module__}.{type(link_0.url).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    section_2 = module_0.Section(section_0, var_0)
    assert section_2.children == 'Section(title=" Use \'")'
    str_3 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_1 = module_0.Link(str_3, none_type_0)
    var_1 = link_1.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_4 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_2 = module_0.Link(str_4, none_type_1)
    bytes_0 = b"\x802c35Z\xf8"
    link_3 = module_0.Link(link_2, bytes_0)
    var_2 = link_2.__repr__()
    assert var_2 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    int_0 = var_2.__len__()
    assert int_0 == 42
    str_5 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_4 = module_0.Link(str_5, none_type_2)
    str_6 = "AM~e(5cHvdM"
    section_3 = module_0.Section(str_6, link_4)


def test_case_283():
    none_type_0 = None
    str_0 = "\n        Perform validation for a value.\n\n        The run_validation method should be implemented by subclasses.\n        "
    link_0 = module_0.Link(none_type_0, str_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title is None
    assert (
        link_0.url
        == "\n        Perform validation for a value.\n\n        The run_validation method should be implemented by subclasses.\n        "
    )
    var_0 = link_0.__repr__()
    assert (
        var_0
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    str_1 = var_0.__str__()
    assert (
        str_1
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    str_2 = " Use '"
    section_0 = module_0.Section(str_2, str_2)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_1 = section_0.__repr__()
    assert var_1 == 'Section(title=" Use \'")'
    int_0 = var_1.__len__()
    assert int_0 == 23
    section_1 = module_0.Section(var_1, int_0)
    assert section_1.title == 'Section(title=" Use \'")'
    assert section_1.children == 23
    str_3 = " Use '"
    section_2 = module_0.Section(str_3, str_3)
    var_2 = section_2.__repr__()
    assert var_2 == 'Section(title=" Use \'")'
    int_1 = var_2.__len__()
    assert int_1 == 23
    str_4 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_4, none_type_1)
    int_2 = var_2.__len__()
    assert int_2 == 23
    str_5 = " Use '"
    section_3 = module_0.Section(str_5, str_5)
    var_3 = section_3.__repr__()
    assert var_3 == 'Section(title=" Use \'")'
    str_6 = "page_context"
    section_4 = module_0.Section(str_6, str_6)
    str_7 = "' from the site because it conflicts with '"
    list_0 = []
    section_5 = module_0.Section(str_7, list_0)
    var_4 = section_5.__repr__()
    assert var_4 == "Section(title=\"' from the site because it conflicts with '\")"
    section_6 = module_0.Section(str_7, section_4)
    str_8 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_2 = module_0.Link(str_8, none_type_2)
    var_5 = link_2.__repr__()
    assert var_5 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_6 = var_5.__repr__()
    assert var_6 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_7 = var_6.__repr__()
    assert var_7 == "'\"Link(title=\\'0_~6:m!(f5FgU,:rvz\\', url=None)\"'"
    str_9 = "page_context"
    section_7 = module_0.Section(str_9, str_9)
    str_10 = " Use '"
    section_8 = module_0.Section(str_10, str_10)
    var_8 = section_8.__repr__()
    assert var_8 == 'Section(title=" Use \'")'
    str_11 = "gfRsC:6&{;|"
    section_9 = module_0.Section(str_11, str_11)
    str_12 = "relative_to_docs"
    link_3 = module_0.Link(str_12, section_9)
    section_10 = module_0.Section(section_8, var_8)
    assert section_10.children == 'Section(title=" Use \'")'
    str_13 = "gfRsC:6&{;|"
    section_11 = module_0.Section(str_13, str_13)
    var_9 = var_1.__repr__()
    assert var_9 == "'Section(title=\" Use \\'\")'"


def test_case_284():
    str_0 = "page_context"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_1, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = section_0.__repr__()
    assert var_1 == "Section(title='page_context')"
    str_2 = " Use '"
    section_1 = module_0.Section(str_2, str_2)
    var_2 = section_1.__repr__()
    assert var_2 == 'Section(title=" Use \'")'
    str_3 = 'C5B_`:"E&+;Y['
    link_1 = module_0.Link(str_3, str_3)
    int_0 = var_2.__len__()
    assert int_0 == 23
    str_4 = "page_context"
    section_2 = module_0.Section(str_4, str_4)
    str_5 = "' from the site because it conflicts with '"
    list_0 = []
    section_3 = module_0.Section(str_5, list_0)
    var_3 = section_3.__repr__()
    assert var_3 == "Section(title=\"' from the site because it conflicts with '\")"
    section_4 = module_0.Section(str_5, section_2)
    dict_0 = {}
    str_6 = 'y\x0c[fN"W:2&:SWyz~W'
    link_2 = module_0.Link(dict_0, str_6)
    section_5 = module_0.Section(str_6, str_6)
    str_7 = "gfRsC:6&{;|"
    section_6 = module_0.Section(str_7, str_7)
    str_8 = " Use '"
    section_7 = module_0.Section(str_8, str_8)
    var_4 = section_7.__repr__()
    assert var_4 == 'Section(title=" Use \'")'
    int_1 = var_4.__len__()
    assert int_1 == 23
    var_5 = var_4.__repr__()
    assert var_5 == "'Section(title=\" Use \\'\")'"
    var_6 = var_5.__repr__()
    assert var_6 == "'\\'Section(title=\" Use \\\\\\'\")\\''"
    str_9 = " Use '"
    section_8 = module_0.Section(str_9, str_9)
    var_7 = section_8.__repr__()
    assert var_7 == 'Section(title=" Use \'")'
    var_8 = var_7.__repr__()
    assert var_8 == "'Section(title=\" Use \\'\")'"
    section_9 = module_0.Section(str_4, var_3)
    assert (
        section_9.children
        == "Section(title=\"' from the site because it conflicts with '\")"
    )


def test_case_285():
    str_0 = "page_context"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_1, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = section_0.__repr__()
    assert var_1 == "Section(title='page_context')"
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_2, none_type_1)
    var_2 = link_1.__repr__()
    assert var_2 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_3 = var_2.__repr__()
    assert var_3 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_4 = var_3.__repr__()
    assert var_4 == "'\"Link(title=\\'0_~6:m!(f5FgU,:rvz\\', url=None)\"'"
    str_3 = "page_context"
    section_1 = module_0.Section(str_3, str_3)
    str_4 = "' from the site because it conflicts with '"
    list_0 = []
    section_2 = module_0.Section(str_4, list_0)
    var_5 = section_2.__repr__()
    assert var_5 == "Section(title=\"' from the site because it conflicts with '\")"
    section_3 = module_0.Section(str_4, section_1)
    int_0 = var_5.__len__()
    assert int_0 == 60
    dict_0 = {}
    str_5 = 'y\x0c[fN"W:2&:SWyz~W'
    link_2 = module_0.Link(dict_0, str_5)
    section_4 = module_0.Section(str_5, str_5)
    str_6 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_3 = module_0.Link(str_6, none_type_2)
    var_6 = link_3.__repr__()
    assert var_6 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_7 = var_6.__repr__()
    assert var_7 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_7 = var_6.__str__()
    assert str_7 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_8 = var_6.__repr__()
    assert var_8 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_8 = "gfRsC:6&{;|"
    section_5 = module_0.Section(str_8, str_8)
    var_9 = section_5.__repr__()
    assert var_9 == "Section(title='gfRsC:6&{;|')"
    str_9 = " Use '"
    section_6 = module_0.Section(str_9, str_9)
    var_10 = section_6.__repr__()
    assert var_10 == 'Section(title=" Use \'")'
    section_7 = module_0.Section(str_9, var_10)
    assert section_7.children == 'Section(title=" Use \'")'
    str_10 = var_0.__str__()
    assert str_10 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"


def test_case_286():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    bytes_0 = b"\x802c35Z\xf8"
    link_1 = module_0.Link(link_0, bytes_0)
    dict_0 = {}
    str_1 = 'y\x0c[fN"W:2&:SWyz~W'
    link_2 = module_0.Link(dict_0, str_1)
    var_0 = link_1.__repr__()
    assert (
        var_0
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )
    str_2 = " Use '"
    section_0 = module_0.Section(str_2, str_2)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_1 = section_0.__repr__()
    assert var_1 == 'Section(title=" Use \'")'
    int_0 = var_1.__len__()
    assert int_0 == 23
    var_2 = var_1.__repr__()
    assert var_2 == "'Section(title=\" Use \\'\")'"
    none_type_1 = None
    str_3 = "\n        Perform validation for a value.\n\n        The run_validation method should be implemented by subclasses.\n        "
    link_3 = module_0.Link(none_type_1, str_3)
    var_3 = link_3.__repr__()
    assert (
        var_3
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    str_4 = var_3.__str__()
    assert (
        str_4
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    str_5 = " Use '"
    section_1 = module_0.Section(str_5, str_5)
    var_4 = section_1.__repr__()
    assert var_4 == 'Section(title=" Use \'")'
    str_6 = "mSSW"
    link_4 = module_0.Link(str_6, bytes_0)


def test_case_287():
    str_0 = "gfRsC:6&{;|"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "gfRsC:6&{;|"
    assert section_0.children == "gfRsC:6&{;|"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = "page_context"
    section_1 = module_0.Section(str_1, str_1)
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_2, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = section_1.__repr__()
    assert var_1 == "Section(title='page_context')"
    str_3 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_3, none_type_1)
    var_2 = link_1.__repr__()
    assert var_2 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_3 = var_2.__repr__()
    assert var_3 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_4 = var_2.__repr__()
    assert var_4 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_4 = " Use '"
    section_2 = module_0.Section(str_4, str_4)
    var_5 = section_2.__repr__()
    assert var_5 == 'Section(title=" Use \'")'
    int_0 = var_5.__len__()
    assert int_0 == 23
    section_3 = module_0.Section(var_5, int_0)
    assert section_3.title == 'Section(title=" Use \'")'
    assert section_3.children == 23
    str_5 = " Use '"
    section_4 = module_0.Section(str_5, str_5)
    var_6 = section_4.__repr__()
    assert var_6 == 'Section(title=" Use \'")'
    str_6 = 'C5B_`:"E&+;Y['
    link_2 = module_0.Link(str_6, str_6)
    int_1 = var_6.__len__()
    assert int_1 == 23
    str_7 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_3 = module_0.Link(str_7, none_type_2)
    bytes_0 = b"\x802c35Z\xf8"
    link_4 = module_0.Link(link_3, bytes_0)
    dict_0 = {}
    str_8 = 'y\x0c[fN"W:2&:SWyz~W'
    link_5 = module_0.Link(dict_0, str_8)
    var_7 = link_4.__repr__()
    assert (
        var_7
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )
    str_9 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_6 = module_0.Link(str_9, none_type_3)
    bytes_1 = b"\x802c35Z\xf8"
    link_7 = module_0.Link(link_6, bytes_1)
    var_8 = link_6.__repr__()
    assert var_8 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    iterator_0 = var_8.__iter__()
    iterator_1 = var_7.__iter__()


def test_case_288():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_1, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    bytes_0 = b"\x802c35Z\xf8"
    link_1 = module_0.Link(link_0, bytes_0)
    iterator_0 = var_0.__iter__()


def test_case_289():
    dict_0 = {}
    str_0 = 'y\x0c[fN"W:2&:SWyz~W'
    link_0 = module_0.Link(dict_0, str_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == {}
    assert link_0.url == 'y\x0c[fN"W:2&:SWyz~W'
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == 'y\x0c[fN"W:2&:SWyz~W'
    assert section_0.children == 'y\x0c[fN"W:2&:SWyz~W'
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    section_1 = module_0.Section(str_0, str_0)


def test_case_290():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    bytes_0 = b"\x802c35Z\xf8"
    link_1 = module_0.Link(link_0, bytes_0)
    dict_0 = {}
    str_1 = 'y\x0c[fN"W:2&:SWyz~W'
    link_2 = module_0.Link(dict_0, str_1)
    var_0 = link_1.__repr__()
    assert (
        var_0
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_3 = module_0.Link(str_2, none_type_1)
    bytes_1 = b"\x802c35Z\xf8"
    link_4 = module_0.Link(link_3, bytes_1)
    var_1 = link_3.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    int_0 = var_1.__len__()
    assert int_0 == 42
    int_1 = var_1.__len__()
    assert int_1 == 42


def test_case_291():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    bytes_0 = b"\x802c35Z\xf8"
    link_1 = module_0.Link(link_0, bytes_0)
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""


def test_case_292():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_2 = var_1.__repr__()
    assert var_2 == "'\"Link(title=\\'0_~6:m!(f5FgU,:rvz\\', url=None)\"'"
    str_1 = " Use '"
    section_0 = module_0.Section(str_1, str_1)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_3 = section_0.__repr__()
    assert var_3 == 'Section(title=" Use \'")'
    int_0 = var_3.__len__()
    assert int_0 == 23
    var_4 = var_3.__repr__()
    assert var_4 == "'Section(title=\" Use \\'\")'"
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_2, none_type_1)
    var_5 = link_1.__repr__()
    assert var_5 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_6 = var_5.__repr__()
    assert var_6 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_7 = var_6.__repr__()
    assert var_7 == "'\"Link(title=\\'0_~6:m!(f5FgU,:rvz\\', url=None)\"'"
    str_3 = " Use '"
    section_1 = module_0.Section(str_3, str_3)
    var_8 = section_1.__repr__()
    assert var_8 == 'Section(title=" Use \'")'
    str_4 = "gfRsC:6&{;|"
    section_2 = module_0.Section(str_4, str_4)
    str_5 = "relative_to_docs"
    link_2 = module_0.Link(str_5, section_2)
    str_6 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_3 = module_0.Link(str_6, none_type_2)
    var_9 = link_3.__repr__()
    assert var_9 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_7 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_4 = module_0.Link(str_7, none_type_3)
    dict_0 = {}
    str_8 = 'y\x0c[fN"W:2&:SWyz~W'
    link_5 = module_0.Link(dict_0, str_8)
    section_3 = module_0.Section(str_8, str_8)
    str_9 = "page_context"
    section_4 = module_0.Section(str_9, str_9)
    str_10 = "' from the site because it conflicts with '"
    list_0 = []
    section_5 = module_0.Section(str_10, list_0)
    var_10 = section_5.__repr__()
    assert var_10 == "Section(title=\"' from the site because it conflicts with '\")"
    section_6 = module_0.Section(str_10, section_4)
    int_1 = var_10.__len__()
    assert int_1 == 60
    str_11 = " Use '"
    section_7 = module_0.Section(str_11, str_11)
    var_11 = section_7.__repr__()
    assert var_11 == 'Section(title=" Use \'")'
    str_12 = "gfRsC:6&{;|"
    section_8 = module_0.Section(str_12, str_12)
    str_13 = "relative_to_docs"
    link_6 = module_0.Link(str_13, section_8)
    section_9 = module_0.Section(section_7, var_11)
    assert section_9.children == 'Section(title=" Use \'")'
    none_type_4 = None
    str_14 = "\n        Perform validation for a value.\n\n        The run_validation method should be implemented by subclasses.\n        "
    link_7 = module_0.Link(none_type_4, str_14)
    var_12 = link_7.__repr__()
    assert (
        var_12
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    str_15 = var_12.__str__()
    assert (
        str_15
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    link_8 = module_0.Link(section_5, link_4)


def test_case_293():
    dict_0 = {}
    str_0 = 'y\x0c[fN"W:2&:SWyz~W'
    link_0 = module_0.Link(dict_0, str_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == {}
    assert link_0.url == 'y\x0c[fN"W:2&:SWyz~W'
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_1 = module_0.Link(str_1, none_type_0)
    var_0 = link_1.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_2 = " Use '"
    section_0 = module_0.Section(str_2, str_2)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_1 = section_0.__repr__()
    assert var_1 == 'Section(title=" Use \'")'
    str_3 = "gfRsC:6&{;|"
    section_1 = module_0.Section(str_3, str_3)
    str_4 = "relative_to_docs"
    link_2 = module_0.Link(str_4, section_1)
    str_5 = "gfRsC:6&{;|"
    section_2 = module_0.Section(str_5, str_5)
    var_2 = section_2.__repr__()
    assert var_2 == "Section(title='gfRsC:6&{;|')"
    str_6 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_3 = module_0.Link(str_6, none_type_1)
    bytes_0 = b"\x802c35Z\xf8"
    link_4 = module_0.Link(link_3, bytes_0)
    var_3 = link_3.__repr__()
    assert var_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_4 = var_3.__repr__()
    assert var_4 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_7 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_5 = module_0.Link(str_7, none_type_2)
    str_8 = "page_context"
    section_3 = module_0.Section(str_8, str_8)
    str_9 = "' from the site because it conflicts with '"
    list_0 = []
    section_4 = module_0.Section(str_9, list_0)
    var_5 = section_4.__repr__()
    assert var_5 == "Section(title=\"' from the site because it conflicts with '\")"
    section_5 = module_0.Section(str_9, section_3)
    int_0 = var_5.__len__()
    assert int_0 == 60
    link_6 = module_0.Link(var_0, str_3)
    assert link_6.title == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"


def test_case_294():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_1, none_type_1)
    var_2 = link_1.__repr__()
    assert var_2 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_3 = var_2.__repr__()
    assert var_3 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_4 = var_3.__repr__()
    assert var_4 == "'\"Link(title=\\'0_~6:m!(f5FgU,:rvz\\', url=None)\"'"
    str_2 = " Use '"
    section_0 = module_0.Section(str_2, str_2)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_5 = section_0.__repr__()
    assert var_5 == 'Section(title=" Use \'")'
    str_3 = "gfRsC:6&{;|"
    section_1 = module_0.Section(str_3, str_3)
    str_4 = "relative_to_docs"
    link_2 = module_0.Link(str_4, section_1)
    section_2 = module_0.Section(section_0, var_5)
    assert section_2.children == 'Section(title=" Use \'")'
    list_0 = []
    navigation_0 = module_0.Navigation(str_4, list_0)


def test_case_295():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    bytes_0 = b"\x802c35Z\xf8"
    link_1 = module_0.Link(link_0, bytes_0)
    dict_0 = {}
    str_1 = 'y\x0c[fN"W:2&:SWyz~W'
    link_2 = module_0.Link(dict_0, str_1)
    var_0 = link_1.__repr__()
    assert (
        var_0
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )
    none_type_1 = None
    str_2 = "\n        Perform validation for a value.\n\n        The run_validation method should be implemented by subclasses.\n        "
    link_3 = module_0.Link(none_type_1, str_2)
    var_1 = link_3.__repr__()
    assert (
        var_1
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    str_3 = var_1.__str__()
    assert (
        str_3
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    str_4 = "page_context"
    section_0 = module_0.Section(str_4, str_4)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_5 = "' from the site because it conflicts with '"
    list_0 = []
    section_1 = module_0.Section(str_5, list_0)
    var_2 = section_0.__repr__()
    assert var_2 == "Section(title='page_context')"
    var_3 = link_1.__repr__()
    assert (
        var_3
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )


def test_case_296():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    str_1 = "gfRsC:6&{;|"
    section_1 = module_0.Section(str_1, str_1)
    str_2 = "relative_to_docs"
    link_0 = module_0.Link(str_2, section_1)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "relative_to_docs"
    assert (
        f"{type(link_0.url).__module__}.{type(link_0.url).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    section_2 = module_0.Section(section_0, var_0)
    assert section_2.children == 'Section(title=" Use \'")'
    str_3 = "$9.}1Av5,.}"
    link_1 = module_0.Link(str_3, str_3)
    str_4 = 'C5B_`:"E&+;Y['
    link_2 = module_0.Link(str_4, str_4)
    str_5 = "page_context"
    section_3 = module_0.Section(str_5, str_5)
    str_6 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_3 = module_0.Link(str_6, none_type_0)
    var_1 = link_3.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_2 = section_3.__repr__()
    assert var_2 == "Section(title='page_context')"
    str_7 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_4 = module_0.Link(str_7, none_type_1)
    var_3 = link_4.__repr__()
    assert var_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_4 = var_3.__repr__()
    assert var_4 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_5 = var_3.__repr__()
    assert var_5 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_8 = " Use '"
    section_4 = module_0.Section(str_8, str_8)
    var_6 = section_4.__repr__()
    assert var_6 == 'Section(title=" Use \'")'
    str_9 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_5 = module_0.Link(str_9, none_type_2)
    var_7 = link_5.__repr__()
    assert var_7 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    int_0 = var_7.__len__()
    assert int_0 == 42
    str_10 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_6 = module_0.Link(str_10, none_type_3)
    str_11 = "0_~6:m!(f5FgU,:rvz"
    none_type_4 = None
    link_7 = module_0.Link(str_11, none_type_4)
    var_8 = link_7.__repr__()
    assert var_8 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_9 = var_8.__repr__()
    assert var_9 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_12 = "0_~6:m!(f5FgU,:rvz"
    none_type_5 = None
    link_8 = module_0.Link(str_12, none_type_5)
    var_10 = link_8.__repr__()
    assert var_10 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_11 = var_10.__repr__()
    assert var_11 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_12 = var_11.__repr__()
    assert var_12 == "'\"Link(title=\\'0_~6:m!(f5FgU,:rvz\\', url=None)\"'"
    str_13 = "page_context"
    section_5 = module_0.Section(str_13, str_13)
    str_14 = "' from the site because it conflicts with '"
    list_0 = []
    section_6 = module_0.Section(str_14, list_0)
    var_13 = section_6.__repr__()
    assert var_13 == "Section(title=\"' from the site because it conflicts with '\")"
    section_7 = module_0.Section(str_14, section_5)
    int_1 = var_13.__len__()
    assert int_1 == 60
    int_2 = var_5.__len__()
    assert int_2 == 44


def test_case_297():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_1 = var_0.__str__()
    assert str_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_2 = var_0.__repr__()
    assert var_2 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    dict_0 = {}
    str_2 = 'y\x0c[fN"W:2&:SWyz~W'
    link_1 = module_0.Link(dict_0, str_2)
    str_3 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_2 = module_0.Link(str_3, none_type_1)
    str_4 = "gfRsC:6&{;|"
    section_0 = module_0.Section(str_4, str_4)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "gfRsC:6&{;|"
    assert section_0.children == "gfRsC:6&{;|"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_5 = " Use '"
    section_1 = module_0.Section(str_5, str_5)
    var_3 = section_1.__repr__()
    assert var_3 == 'Section(title=" Use \'")'
    int_0 = var_3.__len__()
    assert int_0 == 23
    var_4 = var_3.__repr__()
    assert var_4 == "'Section(title=\" Use \\'\")'"
    var_5 = var_4.__repr__()
    assert var_5 == "'\\'Section(title=\" Use \\\\\\'\")\\''"
    str_6 = " Use '"
    section_2 = module_0.Section(str_6, str_6)
    var_6 = section_2.__repr__()
    assert var_6 == 'Section(title=" Use \'")'
    int_1 = var_6.__len__()
    assert int_1 == 23
    dict_1 = {}
    str_7 = 'y\x0c[fN"W:2&:SWyz~W'
    link_3 = module_0.Link(dict_1, str_7)
    section_3 = module_0.Section(str_7, str_7)
    section_4 = module_0.Section(str_7, str_7)
    str_8 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_4 = module_0.Link(str_8, none_type_2)
    var_7 = link_4.__repr__()
    assert var_7 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_8 = var_7.__repr__()
    assert var_8 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_9 = var_7.__repr__()
    assert var_9 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_9 = "page_context"
    section_5 = module_0.Section(str_9, str_9)
    str_10 = "' from the site because it conflicts with '"
    list_0 = []
    section_6 = module_0.Section(str_10, list_0)
    str_11 = "page_context"
    section_7 = module_0.Section(str_11, str_11)
    str_12 = "' from the site because it conflicts with '"
    list_1 = []
    section_8 = module_0.Section(str_12, list_1)
    var_10 = section_8.__repr__()
    assert var_10 == "Section(title=\"' from the site because it conflicts with '\")"
    section_9 = module_0.Section(str_12, section_7)
    int_2 = var_10.__len__()
    assert int_2 == 60
    var_11 = var_10.__repr__()
    assert (
        var_11 == "'Section(title=\"\\' from the site because it conflicts with \\'\")'"
    )
    iterator_0 = var_11.__iter__()


def test_case_298():
    none_type_0 = None
    str_0 = "\n        Perform validation for a value.\n\n        The run_validation method should be implemented by subclasses.\n        "
    link_0 = module_0.Link(none_type_0, str_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title is None
    assert (
        link_0.url
        == "\n        Perform validation for a value.\n\n        The run_validation method should be implemented by subclasses.\n        "
    )
    var_0 = link_0.__repr__()
    assert (
        var_0
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    str_1 = var_0.__str__()
    assert (
        str_1
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    dict_0 = {}
    str_2 = 'y\x0c[fN"W:2&:SWyz~W'
    link_1 = module_0.Link(dict_0, str_2)
    section_0 = module_0.Section(str_2, str_2)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == 'y\x0c[fN"W:2&:SWyz~W'
    assert section_0.children == 'y\x0c[fN"W:2&:SWyz~W'
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_3 = " Use '"
    section_1 = module_0.Section(str_3, str_3)
    var_1 = section_1.__repr__()
    assert var_1 == 'Section(title=" Use \'")'
    str_4 = "gfRsC:6&{;|"
    section_2 = module_0.Section(str_4, str_4)
    str_5 = "relative_to_docs"
    link_2 = module_0.Link(str_5, section_2)
    iterator_0 = var_1.__iter__()


def test_case_299():
    str_0 = "page_context"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = "' from the site because it conflicts with '"
    list_0 = []
    section_1 = module_0.Section(str_1, list_0)
    str_2 = "localhost"
    link_0 = module_0.Link(str_1, str_2)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "' from the site because it conflicts with '"
    assert link_0.url == "localhost"
    str_3 = " Use '"
    section_2 = module_0.Section(str_3, str_3)
    var_0 = section_2.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    int_0 = var_0.__len__()
    assert int_0 == 23
    str_4 = " Use '"
    section_3 = module_0.Section(str_4, str_4)
    var_1 = section_3.__repr__()
    assert var_1 == 'Section(title=" Use \'")'
    str_5 = 'C5B_`:"E&+;Y['
    link_1 = module_0.Link(str_5, str_5)
    int_1 = var_1.__len__()
    assert int_1 == 23
    str_6 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_2 = module_0.Link(str_6, none_type_0)
    bytes_0 = b"\x802c35Z\xf8"
    link_3 = module_0.Link(link_2, bytes_0)
    var_2 = link_2.__repr__()
    assert var_2 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_7 = " Use '"
    section_4 = module_0.Section(str_7, str_7)
    var_3 = section_4.__repr__()
    assert var_3 == 'Section(title=" Use \'")'
    var_4 = var_3.__repr__()
    assert var_4 == "'Section(title=\" Use \\'\")'"
    str_8 = " Use '"
    section_5 = module_0.Section(str_8, str_8)
    var_5 = section_5.__repr__()
    assert var_5 == 'Section(title=" Use \'")'
    str_9 = "gfRsC:6&{;|"
    section_6 = module_0.Section(str_9, str_9)
    str_10 = "relative_to_docs"
    link_4 = module_0.Link(str_10, section_6)
    str_11 = "gfRsC:6&{;|"
    section_7 = module_0.Section(str_11, str_11)
    var_6 = section_7.__repr__()
    assert var_6 == "Section(title='gfRsC:6&{;|')"
    str_12 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_5 = module_0.Link(str_12, none_type_1)
    bytes_1 = b"\x802c35Z\xf8"
    link_6 = module_0.Link(link_5, bytes_1)
    var_7 = link_5.__repr__()
    assert var_7 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    int_2 = var_7.__len__()
    assert int_2 == 42
    iterator_0 = var_3.__iter__()


def test_case_300():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    section_1 = module_0.Section(str_0, var_0)
    assert section_1.children == 'Section(title=" Use \'")'
    str_1 = "$9.}1Av5,.}"
    link_0 = module_0.Link(str_1, str_1)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "$9.}1Av5,.}"
    assert link_0.url == "$9.}1Av5,.}"
    str_2 = "gfRsC:6&{;|"
    section_2 = module_0.Section(str_2, str_2)
    str_3 = " Use '"
    section_3 = module_0.Section(str_3, str_3)
    var_1 = section_3.__repr__()
    assert var_1 == 'Section(title=" Use \'")'
    str_4 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_1 = module_0.Link(str_4, none_type_0)
    bytes_0 = b"\x802c35Z\xf8"
    link_2 = module_0.Link(link_1, bytes_0)
    str_5 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_3 = module_0.Link(str_5, none_type_1)
    bytes_1 = b"\x802c35Z\xf8"
    link_4 = module_0.Link(link_3, bytes_1)
    var_2 = link_3.__repr__()
    assert var_2 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    int_0 = var_2.__len__()
    assert int_0 == 42
    section_4 = module_0.Section(str_3, link_2)


def test_case_301():
    str_0 = "page_context"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = "' from the site because it conflicts with '"
    list_0 = []
    section_1 = module_0.Section(str_1, list_0)
    var_0 = section_1.__repr__()
    assert var_0 == "Section(title=\"' from the site because it conflicts with '\")"
    section_2 = module_0.Section(str_1, section_0)
    int_0 = var_0.__len__()
    assert int_0 == 60
    str_2 = " Use '"
    section_3 = module_0.Section(str_2, str_2)
    var_1 = section_3.__repr__()
    assert var_1 == 'Section(title=" Use \'")'
    str_3 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_3, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_2 = link_0.__repr__()
    assert var_2 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    int_1 = var_2.__len__()
    assert int_1 == 42
    str_4 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_4, none_type_1)
    bytes_0 = b"\x802c35Z\xf8"
    link_2 = module_0.Link(link_1, bytes_0)
    var_3 = link_1.__repr__()
    assert var_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_4 = var_3.__repr__()
    assert var_4 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_5 = var_0.__str__()
    assert str_5 == "Section(title=\"' from the site because it conflicts with '\")"


def test_case_302():
    dict_0 = {}
    str_0 = 'y\x0c[fN"W:2&:SWyz~W'
    link_0 = module_0.Link(dict_0, str_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == {}
    assert link_0.url == 'y\x0c[fN"W:2&:SWyz~W'
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == 'y\x0c[fN"W:2&:SWyz~W'
    assert section_0.children == 'y\x0c[fN"W:2&:SWyz~W'
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = "page_context"
    section_1 = module_0.Section(str_1, str_1)
    str_2 = "' from the site because it conflicts with '"
    list_0 = []
    section_2 = module_0.Section(str_2, list_0)
    var_0 = section_1.__repr__()
    assert var_0 == "Section(title='page_context')"
    str_3 = "page_context"
    section_3 = module_0.Section(str_3, str_3)
    str_4 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_1 = module_0.Link(str_4, none_type_0)
    var_1 = link_1.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_2 = section_3.__repr__()
    assert var_2 == "Section(title='page_context')"
    var_3 = section_3.__repr__()
    assert var_3 == "Section(title='page_context')"


def test_case_303():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    var_1 = var_0.__repr__()
    assert var_1 == "'Section(title=\" Use \\'\")'"
    dict_0 = {}
    str_1 = 'y\x0c[fN"W:2&:SWyz~W'
    link_0 = module_0.Link(dict_0, str_1)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == {}
    assert link_0.url == 'y\x0c[fN"W:2&:SWyz~W'
    section_1 = module_0.Section(str_0, var_1)
    assert section_1.children == "'Section(title=\" Use \\'\")'"


def test_case_304():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_1, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    bytes_0 = b"\x802c35Z\xf8"
    link_1 = module_0.Link(link_0, bytes_0)
    iterator_0 = var_0.__iter__()
    var_1 = link_1.__repr__()
    assert (
        var_1
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )


def test_case_305():
    str_0 = "gfRsC:6&{;|"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "gfRsC:6&{;|"
    assert section_0.children == "gfRsC:6&{;|"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = " Use '"
    section_1 = module_0.Section(str_1, str_1)
    var_0 = section_1.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    int_0 = var_0.__len__()
    assert int_0 == 23
    var_1 = var_0.__repr__()
    assert var_1 == "'Section(title=\" Use \\'\")'"
    var_2 = var_1.__repr__()
    assert var_2 == "'\\'Section(title=\" Use \\\\\\'\")\\''"
    str_2 = "page_context"
    section_2 = module_0.Section(str_2, str_2)
    str_3 = "' from the site because it conflicts with '"
    list_0 = []
    section_3 = module_0.Section(str_3, list_0)
    var_3 = section_3.__repr__()
    assert var_3 == "Section(title=\"' from the site because it conflicts with '\")"
    section_4 = module_0.Section(str_3, section_2)
    int_1 = var_3.__len__()
    assert int_1 == 60
    str_4 = " Use '"
    section_5 = module_0.Section(str_4, str_4)
    var_4 = section_5.__repr__()
    assert var_4 == 'Section(title=" Use \'")'
    str_5 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_5, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    bytes_0 = b"\x802c35Z\xf8"
    link_1 = module_0.Link(link_0, bytes_0)
    iterator_0 = var_4.__iter__()
    str_6 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_2 = module_0.Link(str_6, none_type_1)
    var_5 = link_2.__repr__()
    assert var_5 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_7 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_3 = module_0.Link(str_7, none_type_2)
    var_6 = link_3.__repr__()
    assert var_6 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_7 = var_6.__repr__()
    assert var_7 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_8 = var_6.__str__()
    assert str_8 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    dict_0 = {}
    str_9 = 'y\x0c[fN"W:2&:SWyz~W'
    link_4 = module_0.Link(dict_0, str_9)
    section_6 = module_0.Section(str_9, str_9)
    str_10 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_5 = module_0.Link(str_10, none_type_3)
    bytes_1 = b"\x802c35Z\xf8"
    link_6 = module_0.Link(link_5, bytes_1)
    dict_1 = {}
    str_11 = 'y\x0c[fN"W:2&:SWyz~W'
    link_7 = module_0.Link(dict_1, str_11)
    var_8 = link_6.__repr__()
    assert (
        var_8
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )
    iterator_1 = var_8.__iter__()


def test_case_306():
    str_0 = "page_context"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_1, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = section_0.__repr__()
    assert var_1 == "Section(title='page_context')"
    str_2 = "page_context"
    section_1 = module_0.Section(str_2, str_2)
    str_3 = "' from the site because it conflicts with '"
    list_0 = []
    section_2 = module_0.Section(str_3, list_0)
    var_2 = section_2.__repr__()
    assert var_2 == "Section(title=\"' from the site because it conflicts with '\")"
    section_3 = module_0.Section(str_3, section_1)
    str_4 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_4, none_type_1)
    var_3 = link_1.__repr__()
    assert var_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_4 = var_3.__repr__()
    assert var_4 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_5 = var_4.__repr__()
    assert var_5 == "'\"Link(title=\\'0_~6:m!(f5FgU,:rvz\\', url=None)\"'"
    str_5 = "page_context"
    section_4 = module_0.Section(str_5, str_5)
    str_6 = "' from the site because it conflicts with '"
    list_1 = []
    section_5 = module_0.Section(str_6, list_1)
    var_6 = section_5.__repr__()
    assert var_6 == "Section(title=\"' from the site because it conflicts with '\")"
    str_7 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_2 = module_0.Link(str_7, none_type_2)
    var_7 = link_2.__repr__()
    assert var_7 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_8 = var_7.__repr__()
    assert var_8 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_9 = var_8.__repr__()
    assert var_9 == "'\"Link(title=\\'0_~6:m!(f5FgU,:rvz\\', url=None)\"'"
    str_8 = " Use '"
    section_6 = module_0.Section(str_8, str_8)
    var_10 = section_6.__repr__()
    assert var_10 == 'Section(title=" Use \'")'
    int_0 = var_10.__len__()
    assert int_0 == 23
    section_7 = module_0.Section(var_10, int_0)
    assert section_7.title == 'Section(title=" Use \'")'
    assert section_7.children == 23
    str_9 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_3 = module_0.Link(str_9, none_type_3)
    bytes_0 = b"\x802c35Z\xf8"
    link_4 = module_0.Link(link_3, bytes_0)
    var_11 = link_3.__repr__()
    assert var_11 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    iterator_0 = var_11.__iter__()
    str_10 = "DX<`G>:wQ"
    section_8 = module_0.Section(str_10, str_6)


def test_case_307():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    var_1 = var_0.__repr__()
    assert var_1 == "'Section(title=\" Use \\'\")'"


def test_case_308():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_2 = var_1.__repr__()
    assert var_2 == "'\"Link(title=\\'0_~6:m!(f5FgU,:rvz\\', url=None)\"'"
    str_1 = " Use '"
    section_0 = module_0.Section(str_1, str_1)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_3 = section_0.__repr__()
    assert var_3 == 'Section(title=" Use \'")'
    section_1 = module_0.Section(str_1, var_3)
    assert section_1.children == 'Section(title=" Use \'")'
    str_2 = " Use '"
    section_2 = module_0.Section(str_2, str_2)
    var_4 = section_2.__repr__()
    assert var_4 == 'Section(title=" Use \'")'
    str_3 = 'C5B_`:"E&+;Y['
    link_1 = module_0.Link(str_3, str_3)
    int_0 = var_4.__len__()
    assert int_0 == 23
    str_4 = "A)6bgIZL"
    section_3 = module_0.Section(str_4, str_4)


def test_case_309():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    bytes_0 = b"\x802c35Z\xf8"
    link_1 = module_0.Link(link_0, bytes_0)
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_1 = "page_context"
    section_0 = module_0.Section(str_1, str_1)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_2 = "' from the site because it conflicts with '"
    list_0 = []
    section_1 = module_0.Section(str_2, list_0)
    var_1 = section_1.__repr__()
    assert var_1 == "Section(title=\"' from the site because it conflicts with '\")"
    str_3 = " Use '"
    section_2 = module_0.Section(str_3, str_3)
    var_2 = section_2.__repr__()
    assert var_2 == 'Section(title=" Use \'")'
    int_0 = var_2.__len__()
    assert int_0 == 23
    str_4 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_2 = module_0.Link(str_4, none_type_1)
    int_1 = var_2.__len__()
    assert int_1 == 23
    str_5 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_3 = module_0.Link(str_5, none_type_2)
    bytes_1 = b"\x802c35Z\xf8"
    link_4 = module_0.Link(link_3, bytes_1)
    str_6 = " Use '"
    section_3 = module_0.Section(str_6, str_6)
    var_3 = section_3.__repr__()
    assert var_3 == 'Section(title=" Use \'")'
    var_4 = var_3.__repr__()
    assert var_4 == "'Section(title=\" Use \\'\")'"
    str_7 = "$9.}1Av5,.}"
    link_5 = module_0.Link(str_7, str_7)
    section_4 = module_0.Section(var_3, str_4)
    assert section_4.title == 'Section(title=" Use \'")'


def test_case_310():
    str_0 = "page_context"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = "' from the site because it conflicts with '"
    list_0 = []
    section_1 = module_0.Section(str_1, list_0)
    var_0 = section_1.__repr__()
    assert var_0 == "Section(title=\"' from the site because it conflicts with '\")"
    section_2 = module_0.Section(str_1, section_0)
    str_2 = " Use '"
    section_3 = module_0.Section(str_2, str_2)
    var_1 = section_3.__repr__()
    assert var_1 == 'Section(title=" Use \'")'
    str_3 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_3, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_2 = link_0.__repr__()
    assert var_2 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    int_0 = var_2.__len__()
    assert int_0 == 42
    str_4 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_4, none_type_1)
    bytes_0 = b"\x802c35Z\xf8"
    link_2 = module_0.Link(link_1, bytes_0)
    str_5 = "gfRsC:6&{;|"
    section_4 = module_0.Section(str_5, str_5)
    str_6 = " Use '"
    section_5 = module_0.Section(str_6, str_6)
    var_3 = section_5.__repr__()
    assert var_3 == 'Section(title=" Use \'")'
    int_1 = var_3.__len__()
    assert int_1 == 23
    var_4 = var_3.__repr__()
    assert var_4 == "'Section(title=\" Use \\'\")'"
    var_5 = var_4.__repr__()
    assert var_5 == "'\\'Section(title=\" Use \\\\\\'\")\\''"
    str_7 = " Use '"
    section_6 = module_0.Section(str_7, str_7)
    var_6 = section_6.__repr__()
    assert var_6 == 'Section(title=" Use \'")'
    var_7 = var_5.__repr__()
    assert var_7 == "'\\'\\\\\\'Section(title=\" Use \\\\\\\\\\\\\\'\")\\\\\\'\\''"


def test_case_311():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    str_1 = "page_context"
    section_0 = module_0.Section(str_1, str_1)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_2 = "' from the site because it conflicts with '"
    list_0 = []
    section_1 = module_0.Section(str_2, list_0)
    var_0 = section_1.__repr__()
    assert var_0 == "Section(title=\"' from the site because it conflicts with '\")"
    section_2 = module_0.Section(str_2, section_0)
    str_3 = "page_context"
    section_3 = module_0.Section(str_3, str_3)
    str_4 = "' from the site because it conflicts with '"
    list_1 = []
    section_4 = module_0.Section(str_4, list_1)
    none_type_1 = None
    str_5 = "\n        Perform validation for a value.\n\n        The run_validation method should be implemented by subclasses.\n        "
    link_1 = module_0.Link(none_type_1, str_5)
    var_1 = link_1.__repr__()
    assert (
        var_1
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    str_6 = var_1.__str__()
    assert (
        str_6
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    str_7 = " Use '"
    section_5 = module_0.Section(str_7, str_7)
    var_2 = section_5.__repr__()
    assert var_2 == 'Section(title=" Use \'")'
    var_3 = var_2.__repr__()
    assert var_3 == "'Section(title=\" Use \\'\")'"
    dict_0 = {}
    str_8 = 'y\x0c[fN"W:2&:SWyz~W'
    link_2 = module_0.Link(dict_0, str_8)
    section_6 = module_0.Section(str_7, var_3)
    assert section_6.children == "'Section(title=\" Use \\'\")'"
    str_9 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_3 = module_0.Link(str_9, none_type_2)
    var_4 = link_3.__repr__()
    assert var_4 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_10 = "page_context"
    section_7 = module_0.Section(str_10, str_10)
    str_11 = "' from the site because it conflicts with '"
    list_2 = []
    section_8 = module_0.Section(str_11, list_2)
    var_5 = section_8.__repr__()
    assert var_5 == "Section(title=\"' from the site because it conflicts with '\")"
    section_9 = module_0.Section(str_11, section_7)
    int_0 = var_5.__len__()
    assert int_0 == 60
    str_12 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_4 = module_0.Link(str_12, none_type_3)
    bytes_0 = b"\x802c35Z\xf8"
    link_5 = module_0.Link(link_4, bytes_0)
    str_13 = "pre_page"
    section_10 = module_0.Section(str_13, var_1)
    assert (
        section_10.children
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )


def test_case_312():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    bytes_0 = b"\x802c35Z\xf8"
    link_1 = module_0.Link(link_0, bytes_0)
    dict_0 = {}
    str_1 = 'y\x0c[fN"W:2&:SWyz~W'
    link_2 = module_0.Link(dict_0, str_1)
    var_0 = link_1.__repr__()
    assert (
        var_0
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_3 = module_0.Link(str_2, none_type_1)
    bytes_1 = b"\x802c35Z\xf8"
    link_4 = module_0.Link(link_3, bytes_1)
    var_1 = link_3.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_3 = " Use '"
    section_0 = module_0.Section(str_3, str_3)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_2 = section_0.__repr__()
    assert var_2 == 'Section(title=" Use \'")'
    str_4 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_5 = module_0.Link(str_4, none_type_2)
    var_3 = link_5.__repr__()
    assert var_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    int_0 = var_3.__len__()
    assert int_0 == 42
    str_5 = " Use '"
    section_1 = module_0.Section(str_5, str_5)
    var_4 = section_1.__repr__()
    assert var_4 == 'Section(title=" Use \'")'
    int_1 = var_4.__len__()
    assert int_1 == 23
    int_2 = var_3.__len__()
    assert int_2 == 42


def test_case_313():
    str_0 = "page_context"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = "' from the site because it conflicts with '"
    list_0 = []
    section_1 = module_0.Section(str_1, list_0)
    str_2 = "page_context"
    section_2 = module_0.Section(str_2, str_2)
    str_3 = "' from the site because it conflicts with '"
    list_1 = []
    section_3 = module_0.Section(str_3, list_1)
    var_0 = section_3.__repr__()
    assert var_0 == "Section(title=\"' from the site because it conflicts with '\")"
    str_4 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_4, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_1 = link_0.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_2 = var_1.__repr__()
    assert var_2 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_5 = var_1.__str__()
    assert str_5 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_3 = var_1.__repr__()
    assert var_3 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_6 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_6, none_type_1)
    var_4 = link_1.__repr__()
    assert var_4 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_5 = var_4.__repr__()
    assert var_5 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_7 = " Use '"
    section_4 = module_0.Section(str_7, str_7)
    var_6 = section_4.__repr__()
    assert var_6 == 'Section(title=" Use \'")'
    var_7 = var_1.__repr__()
    assert var_7 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""


def test_case_314():
    str_0 = "page_context"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = "' from the site because it conflicts with '"
    list_0 = []
    section_1 = module_0.Section(str_1, list_0)
    var_0 = section_1.__repr__()
    assert var_0 == "Section(title=\"' from the site because it conflicts with '\")"
    str_2 = " Use '"
    section_2 = module_0.Section(str_2, str_2)
    var_1 = section_2.__repr__()
    assert var_1 == 'Section(title=" Use \'")'
    str_3 = 'C5B_`:"E&+;Y['
    link_0 = module_0.Link(str_3, str_3)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == 'C5B_`:"E&+;Y['
    assert link_0.url == 'C5B_`:"E&+;Y['
    int_0 = var_1.__len__()
    assert int_0 == 23
    str_4 = " Use '"
    section_3 = module_0.Section(str_4, str_4)
    var_2 = section_3.__repr__()
    assert var_2 == 'Section(title=" Use \'")'
    int_1 = var_2.__len__()
    assert int_1 == 23
    str_5 = " Use '"
    section_4 = module_0.Section(str_5, str_5)
    var_3 = section_4.__repr__()
    assert var_3 == 'Section(title=" Use \'")'
    str_6 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_1 = module_0.Link(str_6, none_type_0)
    bytes_0 = b"\x802c35Z\xf8"
    link_2 = module_0.Link(link_1, bytes_0)
    iterator_0 = var_3.__iter__()
    link_3 = module_0.Link(str_3, var_0)
    assert (
        link_3.url == "Section(title=\"' from the site because it conflicts with '\")"
    )


def test_case_315():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    iterator_0 = var_0.__iter__()


def test_case_316():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_1 = var_0.__str__()
    assert str_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_2 = "page_context"
    section_0 = module_0.Section(str_2, str_2)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_3 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_3, none_type_1)
    var_2 = link_1.__repr__()
    assert var_2 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_3 = section_0.__repr__()
    assert var_3 == "Section(title='page_context')"
    str_4 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_2 = module_0.Link(str_4, none_type_2)
    var_4 = link_2.__repr__()
    assert var_4 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_5 = var_4.__repr__()
    assert var_5 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_6 = var_4.__repr__()
    assert var_6 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_5 = " Use '"
    section_1 = module_0.Section(str_5, str_5)
    var_7 = section_1.__repr__()
    assert var_7 == 'Section(title=" Use \'")'
    str_6 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_3 = module_0.Link(str_6, none_type_3)
    var_8 = link_3.__repr__()
    assert var_8 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    int_0 = var_8.__len__()
    assert int_0 == 42
    str_7 = " Use '"
    section_2 = module_0.Section(str_7, str_7)
    var_9 = section_2.__repr__()
    assert var_9 == 'Section(title=" Use \'")'
    str_8 = "gfRsC:6&{;|"
    section_3 = module_0.Section(str_8, str_8)
    str_9 = "relative_to_docs"
    link_4 = module_0.Link(str_9, section_3)
    str_10 = "0_~6:m!(f5FgU,:rvz"
    none_type_4 = None
    link_5 = module_0.Link(str_10, none_type_4)
    var_10 = link_5.__repr__()
    assert var_10 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_11 = "0_~6:m!(f5FgU,:rvz"
    none_type_5 = None
    link_6 = module_0.Link(str_11, none_type_5)
    bytes_0 = b"\x802c35Z\xf8"
    link_7 = module_0.Link(link_6, bytes_0)
    str_12 = "\n        The `pre_template` event is called immediately after the subject template is\n        loaded and can be used to alter the template.\n\n        Args:\n            template: a Jinja2 [Template](https://jinja.palletsprojects.com/en/latest/api/#jinja2.Template) object\n            template_name: string filename of template\n            config: global configuration object\n\n        Returns:\n            a Jinja2 [Template](https://jinja.palletsprojects.com/en/latest/api/#jinja2.Template) object\n        "
    str_13 = "yhuE4j;s=)~"
    link_8 = module_0.Link(str_12, str_13)


def test_case_317():
    str_0 = "gfRsC:6&{;|"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "gfRsC:6&{;|"
    assert section_0.children == "gfRsC:6&{;|"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = " Use '"
    section_1 = module_0.Section(str_1, str_1)
    var_0 = section_1.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    int_0 = var_0.__len__()
    assert int_0 == 23
    var_1 = var_0.__repr__()
    assert var_1 == "'Section(title=\" Use \\'\")'"
    var_2 = var_1.__repr__()
    assert var_2 == "'\\'Section(title=\" Use \\\\\\'\")\\''"
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_2, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_3 = link_0.__repr__()
    assert var_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_4 = var_3.__repr__()
    assert var_4 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_3 = var_3.__str__()
    assert str_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_4 = " Use '"
    section_2 = module_0.Section(str_4, str_4)
    var_5 = section_2.__repr__()
    assert var_5 == 'Section(title=" Use \'")'
    var_6 = var_5.__repr__()
    assert var_6 == "'Section(title=\" Use \\'\")'"
    dict_0 = {}
    str_5 = 'y\x0c[fN"W:2&:SWyz~W'
    link_1 = module_0.Link(dict_0, str_5)
    section_3 = module_0.Section(str_4, var_6)
    assert section_3.children == "'Section(title=\" Use \\'\")'"
    str_6 = " Use '"
    section_4 = module_0.Section(str_6, str_6)
    var_7 = section_4.__repr__()
    assert var_7 == 'Section(title=" Use \'")'
    str_7 = 'C5B_`:"E&+;Y['
    link_2 = module_0.Link(str_7, str_7)
    int_1 = var_7.__len__()
    assert int_1 == 23
    str_8 = "page_context"
    section_5 = module_0.Section(str_8, str_8)
    str_9 = "' from the site because it conflicts with '"
    list_0 = []
    section_6 = module_0.Section(str_9, list_0)
    var_8 = section_6.__repr__()
    assert var_8 == "Section(title=\"' from the site because it conflicts with '\")"
    section_7 = module_0.Section(str_9, section_5)
    int_2 = var_8.__len__()
    assert int_2 == 60
    str_10 = "page_context"
    section_8 = module_0.Section(str_10, str_10)
    str_11 = "' from the site because it conflicts with '"
    list_1 = []
    section_9 = module_0.Section(str_11, list_1)
    str_12 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_3 = module_0.Link(str_12, none_type_1)
    var_9 = link_3.__repr__()
    assert var_9 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    dict_1 = {}
    str_13 = 'y\x0c[fN"W:2&:SWyz~W'
    link_4 = module_0.Link(dict_1, str_13)
    str_14 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_5 = module_0.Link(str_14, none_type_2)
    var_10 = link_5.__repr__()
    assert var_10 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_11 = var_10.__repr__()
    assert var_11 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_12 = var_10.__repr__()
    assert var_12 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_13 = var_7.__repr__()
    assert var_13 == "'Section(title=\" Use \\'\")'"
    var_14 = var_13.__repr__()
    assert var_14 == "'\\'Section(title=\" Use \\\\\\'\")\\''"


def test_case_318():
    dict_0 = {}
    str_0 = 'y\x0c[fN"W:2&:SWyz~W'
    link_0 = module_0.Link(dict_0, str_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == {}
    assert link_0.url == 'y\x0c[fN"W:2&:SWyz~W'
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == 'y\x0c[fN"W:2&:SWyz~W'
    assert section_0.children == 'y\x0c[fN"W:2&:SWyz~W'
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    section_1 = module_0.Section(str_0, str_0)
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_1 = module_0.Link(str_1, none_type_0)
    var_0 = link_1.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_2 = var_0.__str__()
    assert str_2 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_3 = " Use '"
    section_2 = module_0.Section(str_3, str_3)
    var_2 = section_2.__repr__()
    assert var_2 == 'Section(title=" Use \'")'
    int_0 = var_2.__len__()
    assert int_0 == 23
    str_4 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_2 = module_0.Link(str_4, none_type_1)
    int_1 = var_2.__len__()
    assert int_1 == 23
    str_5 = var_2.__str__()
    assert str_5 == 'Section(title=" Use \'")'


def test_case_319():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    bytes_0 = b"\x802c35Z\xf8"
    link_1 = module_0.Link(link_0, bytes_0)
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    int_0 = var_0.__len__()
    assert int_0 == 42
    str_1 = "gfRsC:6&{;|"
    section_0 = module_0.Section(str_1, str_1)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "gfRsC:6&{;|"
    assert section_0.children == "gfRsC:6&{;|"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_2 = " Use '"
    section_1 = module_0.Section(str_2, str_2)
    var_1 = section_1.__repr__()
    assert var_1 == 'Section(title=" Use \'")'
    str_3 = "gfRsC:6&{;|"
    section_2 = module_0.Section(str_3, str_3)
    str_4 = "relative_to_docs"
    link_2 = module_0.Link(str_4, section_2)
    none_type_1 = None
    str_5 = "\n        Perform validation for a value.\n\n        The run_validation method should be implemented by subclasses.\n        "
    link_3 = module_0.Link(none_type_1, str_5)
    var_2 = link_3.__repr__()
    assert (
        var_2
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    str_6 = var_2.__str__()
    assert (
        str_6
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    str_7 = "gfRsC:6&{;|"
    section_3 = module_0.Section(str_7, str_7)
    var_3 = section_3.__repr__()
    assert var_3 == "Section(title='gfRsC:6&{;|')"
    str_8 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_4 = module_0.Link(str_8, none_type_2)
    var_4 = link_4.__repr__()
    assert var_4 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_5 = var_4.__repr__()
    assert var_5 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_6 = var_5.__repr__()
    assert var_6 == "'\"Link(title=\\'0_~6:m!(f5FgU,:rvz\\', url=None)\"'"
    str_9 = "page_context"
    section_4 = module_0.Section(str_9, str_9)
    str_10 = "' from the site because it conflicts with '"
    list_0 = []
    section_5 = module_0.Section(str_10, list_0)
    var_7 = section_5.__repr__()
    assert var_7 == "Section(title=\"' from the site because it conflicts with '\")"
    section_6 = module_0.Section(str_10, section_4)
    int_1 = var_7.__len__()
    assert int_1 == 60
    str_11 = "$9.}1Av5,.}"
    link_5 = module_0.Link(str_11, str_11)
    str_12 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_6 = module_0.Link(str_12, none_type_3)
    var_8 = link_6.__repr__()
    assert var_8 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_9 = var_8.__repr__()
    assert var_9 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_13 = var_8.__str__()
    assert str_13 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_10 = var_8.__repr__()
    assert var_10 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_14 = "page_context"
    section_7 = module_0.Section(str_14, str_14)
    str_15 = "' from the site because it conflicts with '"
    list_1 = []
    section_8 = module_0.Section(str_15, list_1)
    iterator_0 = var_8.__iter__()


def test_case_320():
    bool_0 = True
    link_0 = module_0.Link(bool_0, bool_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title is True
    assert link_0.url is True


def test_case_321():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    str_1 = "page_context"
    section_1 = module_0.Section(str_1, str_1)
    str_2 = "' from the site because it conflicts with '"
    list_0 = []
    section_2 = module_0.Section(str_2, list_0)
    str_3 = "localhost"
    link_0 = module_0.Link(str_2, str_3)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "' from the site because it conflicts with '"
    assert link_0.url == "localhost"
    str_4 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_1 = module_0.Link(str_4, none_type_0)
    var_1 = link_1.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_2 = var_1.__repr__()
    assert var_2 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_3 = var_2.__repr__()
    assert var_3 == "'\"Link(title=\\'0_~6:m!(f5FgU,:rvz\\', url=None)\"'"
    str_5 = "page_context"
    section_3 = module_0.Section(str_5, str_5)
    str_6 = "' from the site because it conflicts with '"
    list_1 = []
    section_4 = module_0.Section(str_6, list_1)
    var_4 = section_4.__repr__()
    assert var_4 == "Section(title=\"' from the site because it conflicts with '\")"
    str_7 = "page_context"
    section_5 = module_0.Section(str_7, str_7)
    str_8 = "' from the site because it conflicts with '"
    list_2 = []
    section_6 = module_0.Section(str_8, list_2)
    var_5 = section_6.__repr__()
    assert var_5 == "Section(title=\"' from the site because it conflicts with '\")"
    section_7 = module_0.Section(str_8, section_5)
    int_0 = var_5.__len__()
    assert int_0 == 60
    str_9 = " Use '"
    section_8 = module_0.Section(str_9, str_9)
    var_6 = section_8.__repr__()
    assert var_6 == 'Section(title=" Use \'")'
    str_10 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_2 = module_0.Link(str_10, none_type_1)
    var_7 = link_2.__repr__()
    assert var_7 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    int_1 = var_7.__len__()
    assert int_1 == 42
    str_11 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_3 = module_0.Link(str_11, none_type_2)
    bytes_0 = b"\x802c35Z\xf8"
    link_4 = module_0.Link(link_3, bytes_0)
    var_8 = link_3.__repr__()
    assert var_8 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    iterator_0 = var_8.__iter__()
    iterator_1 = var_1.__iter__()


def test_case_322():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_1 = " Use '"
    section_0 = module_0.Section(str_1, str_1)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_2 = section_0.__repr__()
    assert var_2 == 'Section(title=" Use \'")'
    int_0 = var_2.__len__()
    assert int_0 == 23
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_2, none_type_1)
    int_1 = var_2.__len__()
    assert int_1 == 23
    str_3 = " Use '"
    section_1 = module_0.Section(str_3, str_3)
    var_3 = section_1.__repr__()
    assert var_3 == 'Section(title=" Use \'")'
    str_4 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_2 = module_0.Link(str_4, none_type_2)
    var_4 = link_2.__repr__()
    assert var_4 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    int_2 = var_4.__len__()
    assert int_2 == 42
    str_5 = " Use '"
    section_2 = module_0.Section(str_5, str_5)
    var_5 = section_2.__repr__()
    assert var_5 == 'Section(title=" Use \'")'
    var_6 = var_5.__repr__()
    assert var_6 == "'Section(title=\" Use \\'\")'"
    str_6 = " Use '"
    section_3 = module_0.Section(str_6, str_6)
    var_7 = section_3.__repr__()
    assert var_7 == 'Section(title=" Use \'")'
    str_7 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_3 = module_0.Link(str_7, none_type_3)
    bytes_0 = b"\x802c35Z\xf8"
    link_4 = module_0.Link(link_3, bytes_0)
    iterator_0 = var_7.__iter__()
    bool_0 = True
    link_5 = module_0.Link(bool_0, bool_0)
    str_8 = "page_context"
    section_4 = module_0.Section(str_8, str_8)
    str_9 = "' from the site because it conflicts with '"
    list_0 = []
    section_5 = module_0.Section(str_9, list_0)
    var_8 = section_4.__repr__()
    assert var_8 == "Section(title='page_context')"
    str_10 = " Use '"
    section_6 = module_0.Section(str_10, str_10)
    var_9 = section_6.__repr__()
    assert var_9 == 'Section(title=" Use \'")'
    int_3 = var_9.__len__()
    assert int_3 == 23
    section_7 = module_0.Section(var_9, int_3)
    assert section_7.title == 'Section(title=" Use \'")'
    assert section_7.children == 23
    var_10 = var_9.__repr__()
    assert var_10 == "'Section(title=\" Use \\'\")'"


def test_case_323():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    bytes_0 = b"\x802c35Z\xf8"
    link_1 = module_0.Link(link_0, bytes_0)
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    iterator_0 = var_0.__iter__()
    str_1 = " Use '"
    section_0 = module_0.Section(str_1, str_1)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_1 = section_0.__repr__()
    assert var_1 == 'Section(title=" Use \'")'
    str_2 = 'C5B_`:"E&+;Y['
    link_2 = module_0.Link(str_2, str_2)
    int_0 = var_1.__len__()
    assert int_0 == 23
    str_3 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_3 = module_0.Link(str_3, none_type_1)
    bytes_1 = b"\x802c35Z\xf8"
    link_4 = module_0.Link(link_3, bytes_1)
    var_2 = link_3.__repr__()
    assert var_2 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_4 = "page_context"
    section_1 = module_0.Section(str_4, str_4)
    str_5 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_5 = module_0.Link(str_5, none_type_2)
    var_3 = link_5.__repr__()
    assert var_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_4 = section_1.__repr__()
    assert var_4 == "Section(title='page_context')"
    str_6 = "gfRsC:6&{;|"
    section_2 = module_0.Section(str_6, str_6)
    str_7 = " Use '"
    section_3 = module_0.Section(str_7, str_7)
    var_5 = section_3.__repr__()
    assert var_5 == 'Section(title=" Use \'")'
    int_1 = var_5.__len__()
    assert int_1 == 23
    var_6 = var_5.__repr__()
    assert var_6 == "'Section(title=\" Use \\'\")'"
    var_7 = var_6.__repr__()
    assert var_7 == "'\\'Section(title=\" Use \\\\\\'\")\\''"
    str_8 = "page_context"
    section_4 = module_0.Section(str_8, str_8)
    str_9 = "' from the site because it conflicts with '"
    list_0 = []
    section_5 = module_0.Section(str_9, list_0)
    str_10 = " Use '"
    section_6 = module_0.Section(str_10, str_10)
    var_8 = section_6.__repr__()
    assert var_8 == 'Section(title=" Use \'")'
    int_2 = var_8.__len__()
    assert int_2 == 23
    section_7 = module_0.Section(var_8, int_2)
    assert section_7.title == 'Section(title=" Use \'")'
    assert section_7.children == 23
    str_11 = "$9.}1Av5,.}"
    link_6 = module_0.Link(str_11, str_11)
    str_12 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_7 = module_0.Link(str_12, none_type_3)
    bytes_2 = b"\x802c35Z\xf8"
    link_8 = module_0.Link(link_7, bytes_2)
    var_9 = link_7.__repr__()
    assert var_9 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_10 = var_9.__repr__()
    assert var_10 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_13 = " Use '"
    section_8 = module_0.Section(str_13, str_13)
    var_11 = section_8.__repr__()
    assert var_11 == 'Section(title=" Use \'")'
    str_14 = "gfRsC:6&{;|"
    section_9 = module_0.Section(str_14, str_14)
    str_15 = "relative_to_docs"
    link_9 = module_0.Link(str_15, section_9)
    iterator_1 = var_7.__iter__()


def test_case_324():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_1 = " Use '"
    section_0 = module_0.Section(str_1, str_1)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_1 = section_0.__repr__()
    assert var_1 == 'Section(title=" Use \'")'
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_2, none_type_1)
    bytes_0 = b"\x802c35Z\xf8"
    link_2 = module_0.Link(link_1, bytes_0)
    iterator_0 = var_1.__iter__()
    str_3 = " Use '"
    section_1 = module_0.Section(str_3, str_3)
    var_2 = section_1.__repr__()
    assert var_2 == 'Section(title=" Use \'")'
    var_3 = var_2.__repr__()
    assert var_3 == "'Section(title=\" Use \\'\")'"
    str_4 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_3 = module_0.Link(str_4, none_type_2)
    bytes_1 = b"\x802c35Z\xf8"
    link_4 = module_0.Link(link_3, bytes_1)
    str_5 = " Use '"
    section_2 = module_0.Section(str_5, str_5)
    var_4 = section_2.__repr__()
    assert var_4 == 'Section(title=" Use \'")'
    var_5 = var_4.__repr__()
    assert var_5 == "'Section(title=\" Use \\'\")'"
    dict_0 = {}
    str_6 = 'y\x0c[fN"W:2&:SWyz~W'
    link_5 = module_0.Link(dict_0, str_6)
    section_3 = module_0.Section(str_5, var_5)
    assert section_3.children == "'Section(title=\" Use \\'\")'"
    str_7 = "page_context"
    section_4 = module_0.Section(str_7, str_7)
    str_8 = "' from the site because it conflicts with '"
    list_0 = []
    section_5 = module_0.Section(str_8, list_0)
    var_6 = section_5.__repr__()
    assert var_6 == "Section(title=\"' from the site because it conflicts with '\")"
    section_6 = module_0.Section(str_8, section_4)
    int_0 = var_6.__len__()
    assert int_0 == 60
    str_9 = " Use '"
    section_7 = module_0.Section(str_9, str_9)
    var_7 = section_7.__repr__()
    assert var_7 == 'Section(title=" Use \'")'
    var_8 = var_7.__repr__()
    assert var_8 == "'Section(title=\" Use \\'\")'"
    str_10 = " Use '"
    section_8 = module_0.Section(str_10, str_10)
    var_9 = section_8.__repr__()
    assert var_9 == 'Section(title=" Use \'")'
    str_11 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_6 = module_0.Link(str_11, none_type_3)
    var_10 = link_6.__repr__()
    assert var_10 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    int_1 = var_10.__len__()
    assert int_1 == 42
    str_12 = "0_~6:m!(f5FgU,:rvz"
    none_type_4 = None
    link_7 = module_0.Link(str_12, none_type_4)
    var_11 = link_7.__repr__()
    assert var_11 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_12 = var_11.__repr__()
    assert var_12 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    iterator_1 = var_5.__iter__()


def test_case_325():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_1 = "gfRsC:6&{;|"
    section_0 = module_0.Section(str_1, str_1)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "gfRsC:6&{;|"
    assert section_0.children == "gfRsC:6&{;|"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_2 = section_0.__repr__()
    assert var_2 == "Section(title='gfRsC:6&{;|')"
    str_2 = " Use '"
    section_1 = module_0.Section(str_2, str_2)
    var_3 = section_1.__repr__()
    assert var_3 == 'Section(title=" Use \'")'
    int_0 = var_3.__len__()
    assert int_0 == 23
    var_4 = var_3.__repr__()
    assert var_4 == "'Section(title=\" Use \\'\")'"
    str_3 = "page_context"
    section_2 = module_0.Section(str_3, str_3)
    str_4 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_4, none_type_1)
    var_5 = link_1.__repr__()
    assert var_5 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_6 = section_2.__repr__()
    assert var_6 == "Section(title='page_context')"
    str_5 = " Use '"
    section_3 = module_0.Section(str_5, str_5)
    var_7 = section_3.__repr__()
    assert var_7 == 'Section(title=" Use \'")'
    str_6 = "gfRsC:6&{;|"
    section_4 = module_0.Section(str_6, str_6)
    str_7 = "relative_to_docs"
    link_2 = module_0.Link(str_7, section_4)
    section_5 = module_0.Section(section_3, var_7)
    assert section_5.children == 'Section(title=" Use \'")'
    str_8 = "gfRsC:6&{;|"
    section_6 = module_0.Section(str_8, str_8)
    str_9 = " Use '"
    section_7 = module_0.Section(str_9, str_9)
    var_8 = section_7.__repr__()
    assert var_8 == 'Section(title=" Use \'")'
    int_1 = var_8.__len__()
    assert int_1 == 23
    var_9 = var_8.__repr__()
    assert var_9 == "'Section(title=\" Use \\'\")'"
    var_10 = var_9.__repr__()
    assert var_10 == "'\\'Section(title=\" Use \\\\\\'\")\\''"
    str_10 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_3 = module_0.Link(str_10, none_type_2)
    var_11 = link_3.__repr__()
    assert var_11 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_12 = var_11.__repr__()
    assert var_12 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_11 = var_11.__str__()
    assert str_11 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_12 = 'C5B_`:"E&+;Y['
    link_4 = module_0.Link(str_12, str_12)
    dict_0 = {}
    str_13 = 'y\x0c[fN"W:2&:SWyz~W'
    link_5 = module_0.Link(dict_0, str_13)
    str_14 = var_12.__str__()
    assert str_14 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""


def test_case_326():
    str_0 = "page_context"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = "' from the site because it conflicts with '"
    list_0 = []
    section_1 = module_0.Section(str_1, list_0)
    var_0 = section_1.__repr__()
    assert var_0 == "Section(title=\"' from the site because it conflicts with '\")"
    str_2 = " Use '"
    section_2 = module_0.Section(str_2, str_2)
    var_1 = section_2.__repr__()
    assert var_1 == 'Section(title=" Use \'")'
    int_0 = var_1.__len__()
    assert int_0 == 23
    var_2 = var_1.__repr__()
    assert var_2 == "'Section(title=\" Use \\'\")'"
    str_3 = "page_context"
    section_3 = module_0.Section(str_3, str_3)
    int_1 = var_2.__len__()
    assert int_1 == 26


def test_case_327():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    int_0 = var_0.__len__()
    assert int_0 == 23
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_1, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    int_1 = var_0.__len__()
    assert int_1 == 23
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_2, none_type_1)
    var_1 = link_1.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_2 = var_1.__repr__()
    assert var_2 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    iterator_0 = var_1.__iter__()
    str_3 = " Use '"
    section_1 = module_0.Section(str_3, str_3)
    var_3 = section_1.__repr__()
    assert var_3 == 'Section(title=" Use \'")'
    str_4 = "page_context"
    section_2 = module_0.Section(str_4, str_4)
    str_5 = "' from the site because it conflicts with '"
    list_0 = []
    section_3 = module_0.Section(str_5, list_0)
    str_6 = "localhost"
    link_2 = module_0.Link(str_5, str_6)
    str_7 = " Use '"
    section_4 = module_0.Section(str_7, str_7)
    var_4 = section_4.__repr__()
    assert var_4 == 'Section(title=" Use \'")'
    int_2 = var_4.__len__()
    assert int_2 == 23
    str_8 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_3 = module_0.Link(str_8, none_type_2)
    bytes_0 = b"\x802c35Z\xf8"
    link_4 = module_0.Link(link_3, bytes_0)
    var_5 = link_3.__repr__()
    assert var_5 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_6 = var_5.__repr__()
    assert var_6 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_9 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_5 = module_0.Link(str_9, none_type_3)
    var_7 = link_5.__repr__()
    assert var_7 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_8 = var_7.__repr__()
    assert var_8 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_10 = var_7.__str__()
    assert str_10 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_11 = "page_context"
    section_5 = module_0.Section(str_11, str_11)
    iterator_1 = var_1.__iter__()


def test_case_328():
    str_0 = "gfRsC:6&{;|"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "gfRsC:6&{;|"
    assert section_0.children == "gfRsC:6&{;|"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = " Use '"
    section_1 = module_0.Section(str_1, str_1)
    var_0 = section_1.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    int_0 = var_0.__len__()
    assert int_0 == 23
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_2, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    int_1 = var_0.__len__()
    assert int_1 == 23
    str_3 = var_0.__str__()
    assert str_3 == 'Section(title=" Use \'")'


def test_case_329():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    var_1 = var_0.__repr__()
    assert var_1 == "'Section(title=\" Use \\'\")'"
    dict_0 = {}
    str_1 = 'y\x0c[fN"W:2&:SWyz~W'
    link_0 = module_0.Link(dict_0, str_1)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == {}
    assert link_0.url == 'y\x0c[fN"W:2&:SWyz~W'
    section_1 = module_0.Section(str_0, var_1)
    assert section_1.children == "'Section(title=\" Use \\'\")'"
    str_2 = " Use '"
    section_2 = module_0.Section(str_2, str_2)
    var_2 = section_2.__repr__()
    assert var_2 == 'Section(title=" Use \'")'
    var_3 = var_2.__repr__()
    assert var_3 == "'Section(title=\" Use \\'\")'"
    var_4 = var_3.__repr__()
    assert var_4 == "'\\'Section(title=\" Use \\\\\\'\")\\''"


def test_case_330():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_1 = "gfRsC:6&{;|"
    section_0 = module_0.Section(str_1, str_1)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "gfRsC:6&{;|"
    assert section_0.children == "gfRsC:6&{;|"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_2 = " Use '"
    section_1 = module_0.Section(str_2, str_2)
    var_1 = section_1.__repr__()
    assert var_1 == 'Section(title=" Use \'")'
    int_0 = var_1.__len__()
    assert int_0 == 23
    var_2 = var_1.__repr__()
    assert var_2 == "'Section(title=\" Use \\'\")'"
    var_3 = var_2.__repr__()
    assert var_3 == "'\\'Section(title=\" Use \\\\\\'\")\\''"
    str_3 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_3, none_type_1)
    bytes_0 = b"\x802c35Z\xf8"
    link_2 = module_0.Link(link_1, bytes_0)
    var_4 = link_1.__repr__()
    assert var_4 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_5 = var_4.__repr__()
    assert var_5 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_4 = "page_context"
    section_2 = module_0.Section(str_4, str_4)
    str_5 = "' from the site because it conflicts with '"
    list_0 = []
    section_3 = module_0.Section(str_5, list_0)
    var_6 = section_2.__repr__()
    assert var_6 == "Section(title='page_context')"
    str_6 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_3 = module_0.Link(str_6, none_type_2)
    var_7 = link_3.__repr__()
    assert var_7 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_8 = var_7.__repr__()
    assert var_8 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_9 = var_8.__repr__()
    assert var_9 == "'\"Link(title=\\'0_~6:m!(f5FgU,:rvz\\', url=None)\"'"
    str_7 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_4 = module_0.Link(str_7, none_type_3)
    bytes_1 = b"\x802c35Z\xf8"
    link_5 = module_0.Link(link_4, bytes_1)
    var_10 = link_4.__repr__()
    assert var_10 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_8 = " Use '"
    section_4 = module_0.Section(str_8, str_8)
    var_11 = section_4.__repr__()
    assert var_11 == 'Section(title=" Use \'")'
    dict_0 = {}
    str_9 = 'y\x0c[fN"W:2&:SWyz~W'
    link_6 = module_0.Link(dict_0, str_9)
    section_5 = module_0.Section(str_9, str_9)
    str_10 = "0_~6:m!(f5FgU,:rvz"
    none_type_4 = None
    link_7 = module_0.Link(str_10, none_type_4)
    var_12 = link_7.__repr__()
    assert var_12 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_13 = var_12.__repr__()
    assert var_13 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_14 = var_12.__repr__()
    assert var_14 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_11 = "0_~6:m!(f5FgU,:rvz"
    none_type_5 = None
    link_8 = module_0.Link(str_11, none_type_5)
    bytes_2 = b"\x802c35Z\xf8"
    link_9 = module_0.Link(link_8, bytes_2)
    var_15 = link_8.__repr__()
    assert var_15 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    int_1 = var_15.__len__()
    assert int_1 == 42
    int_2 = var_0.__len__()
    assert int_2 == 42


def test_case_331():
    bool_0 = True
    link_0 = module_0.Link(bool_0, bool_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title is True
    assert link_0.url is True
    str_0 = "gfRsC:6&{;|"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "gfRsC:6&{;|"
    assert section_0.children == "gfRsC:6&{;|"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = " Use '"
    section_1 = module_0.Section(str_1, str_1)
    var_0 = section_1.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    var_1 = var_0.__repr__()
    assert var_1 == "'Section(title=\" Use \\'\")'"
    dict_0 = {}
    str_2 = 'y\x0c[fN"W:2&:SWyz~W'
    link_1 = module_0.Link(dict_0, str_2)
    section_2 = module_0.Section(str_1, var_1)
    assert section_2.children == "'Section(title=\" Use \\'\")'"
    str_3 = " Use '"
    section_3 = module_0.Section(str_3, str_3)
    var_2 = section_3.__repr__()
    assert var_2 == 'Section(title=" Use \'")'
    str_4 = "gfRsC:6&{;|"
    section_4 = module_0.Section(str_4, str_4)
    str_5 = "relative_to_docs"
    link_2 = module_0.Link(str_5, section_4)
    str_6 = " Use '"
    section_5 = module_0.Section(str_6, str_6)
    var_3 = section_5.__repr__()
    assert var_3 == 'Section(title=" Use \'")'
    section_6 = module_0.Section(str_6, var_3)
    assert section_6.children == 'Section(title=" Use \'")'
    str_7 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_3 = module_0.Link(str_7, none_type_0)
    bytes_0 = b"\x802c35Z\xf8"
    link_4 = module_0.Link(link_3, bytes_0)
    str_8 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_5 = module_0.Link(str_8, none_type_1)
    var_4 = link_5.__repr__()
    assert var_4 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_5 = var_4.__repr__()
    assert var_5 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_9 = var_4.__str__()
    assert str_9 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_10 = "gfRsC:6&{;|"
    section_7 = module_0.Section(str_10, str_10)
    var_6 = section_7.__repr__()
    assert var_6 == "Section(title='gfRsC:6&{;|')"
    str_11 = " Use '"
    section_8 = module_0.Section(str_11, str_11)
    var_7 = section_8.__repr__()
    assert var_7 == 'Section(title=" Use \'")'
    int_0 = var_7.__len__()
    assert int_0 == 23
    str_12 = "Building extra template: "
    int_1 = 509
    link_6 = module_0.Link(str_12, int_1)


def test_case_332():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_2 = var_0.__repr__()
    assert var_2 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_1, none_type_1)
    bytes_0 = b"\x802c35Z\xf8"
    link_2 = module_0.Link(link_1, bytes_0)
    var_3 = link_1.__repr__()
    assert var_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    int_0 = var_3.__len__()
    assert int_0 == 42
    bool_0 = True
    link_3 = module_0.Link(bool_0, bool_0)
    str_2 = var_3.__str__()
    assert str_2 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"


def test_case_333():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    var_1 = var_0.__repr__()
    assert var_1 == "'Section(title=\" Use \\'\")'"
    var_2 = var_0.__repr__()
    assert var_2 == "'Section(title=\" Use \\'\")'"


def test_case_334():
    str_0 = "gfRsC:6&{;|"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "gfRsC:6&{;|"
    assert section_0.children == "gfRsC:6&{;|"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_1, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_2 = var_0.__repr__()
    assert var_2 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_3 = link_0.__repr__()
    assert var_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"


def test_case_335():
    str_0 = "page_context"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_1, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = section_0.__repr__()
    assert var_1 == "Section(title='page_context')"
    dict_0 = {}
    str_2 = 'y\x0c[fN"W:2&:SWyz~W'
    link_1 = module_0.Link(dict_0, str_2)
    section_1 = module_0.Section(str_2, str_2)
    str_3 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_2 = module_0.Link(str_3, none_type_1)
    var_2 = link_2.__repr__()
    assert var_2 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_3 = var_2.__repr__()
    assert var_3 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    int_0 = var_0.__len__()
    assert int_0 == 42


def test_case_336():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    str_1 = 'C5B_`:"E&+;Y['
    link_0 = module_0.Link(str_1, str_1)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == 'C5B_`:"E&+;Y['
    assert link_0.url == 'C5B_`:"E&+;Y['
    int_0 = var_0.__len__()
    assert int_0 == 23
    str_2 = "$9.}1Av5,.}"
    link_1 = module_0.Link(str_2, str_2)
    var_1 = var_0.__repr__()
    assert var_1 == "'Section(title=\" Use \\'\")'"


def test_case_337():
    dict_0 = {}
    str_0 = 'y\x0c[fN"W:2&:SWyz~W'
    link_0 = module_0.Link(dict_0, str_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == {}
    assert link_0.url == 'y\x0c[fN"W:2&:SWyz~W'
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == 'y\x0c[fN"W:2&:SWyz~W'
    assert section_0.children == 'y\x0c[fN"W:2&:SWyz~W'
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    section_1 = module_0.Section(str_0, str_0)
    str_1 = " Use '"
    section_2 = module_0.Section(str_1, str_1)
    var_0 = section_2.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    str_2 = "gfRsC:6&{;|"
    section_3 = module_0.Section(str_2, str_2)
    str_3 = "relative_to_docs"
    link_1 = module_0.Link(str_3, section_3)
    str_4 = " Use '"
    section_4 = module_0.Section(str_4, str_4)
    var_1 = section_4.__repr__()
    assert var_1 == 'Section(title=" Use \'")'
    int_0 = var_1.__len__()
    assert int_0 == 23
    str_5 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_2 = module_0.Link(str_5, none_type_0)
    int_1 = var_1.__len__()
    assert int_1 == 23
    str_6 = "page_context"
    section_5 = module_0.Section(str_6, str_6)
    str_7 = "' from the site because it conflicts with '"
    list_0 = []
    section_6 = module_0.Section(str_7, list_0)
    str_8 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_3 = module_0.Link(str_8, none_type_1)
    bytes_0 = b"\x802c35Z\xf8"
    link_4 = module_0.Link(link_3, bytes_0)
    var_2 = link_3.__repr__()
    assert var_2 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    int_2 = var_2.__len__()
    assert int_2 == 42
    str_9 = " Use '"
    section_7 = module_0.Section(str_9, str_9)
    var_3 = section_7.__repr__()
    assert var_3 == 'Section(title=" Use \'")'
    int_3 = var_3.__len__()
    assert int_3 == 23
    var_4 = var_3.__repr__()
    assert var_4 == "'Section(title=\" Use \\'\")'"
    str_10 = " Use '"
    section_8 = module_0.Section(str_10, str_10)
    var_5 = section_8.__repr__()
    assert var_5 == 'Section(title=" Use \'")'
    section_9 = module_0.Section(str_10, var_5)
    assert section_9.children == 'Section(title=" Use \'")'
    str_11 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_5 = module_0.Link(str_11, none_type_2)
    var_6 = link_5.__repr__()
    assert var_6 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_7 = var_6.__repr__()
    assert var_7 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_12 = var_6.__str__()
    assert str_12 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    bool_0 = True
    link_6 = module_0.Link(bool_0, bool_0)
    str_13 = "page_context"
    section_10 = module_0.Section(str_13, str_13)
    str_14 = "' from the site because it conflicts with '"
    list_1 = []
    section_11 = module_0.Section(str_14, list_1)
    str_15 = "localhost"
    link_7 = module_0.Link(str_14, str_15)
    str_16 = "I9R$;~LYa@V\x0cJ-b&-Tlq"
    link_8 = module_0.Link(str_16, var_7)
    assert link_8.url == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""


def test_case_338():
    bool_0 = True
    link_0 = module_0.Link(bool_0, bool_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title is True
    assert link_0.url is True
    str_0 = "page_context"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = "' from the site because it conflicts with '"
    list_0 = []
    section_1 = module_0.Section(str_1, list_0)
    var_0 = section_1.__repr__()
    assert var_0 == "Section(title=\"' from the site because it conflicts with '\")"
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_1 = module_0.Link(str_2, none_type_0)
    bytes_0 = b"\x802c35Z\xf8"
    link_2 = module_0.Link(link_1, bytes_0)
    str_3 = "gfRsC:6&{;|"
    section_2 = module_0.Section(str_3, str_3)
    var_1 = section_2.__repr__()
    assert var_1 == "Section(title='gfRsC:6&{;|')"
    str_4 = "page_context"
    section_3 = module_0.Section(str_4, str_4)
    str_5 = "' from the site because it conflicts with '"
    list_1 = []
    section_4 = module_0.Section(str_5, list_1)
    var_2 = section_3.__repr__()
    assert var_2 == "Section(title='page_context')"
    str_6 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_3 = module_0.Link(str_6, none_type_1)
    var_3 = link_3.__repr__()
    assert var_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_4 = var_3.__repr__()
    assert var_4 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_5 = var_3.__repr__()
    assert var_5 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_6 = var_0.__repr__()
    assert (
        var_6 == "'Section(title=\"\\' from the site because it conflicts with \\'\")'"
    )


def test_case_339():
    none_type_0 = None
    section_0 = module_0.Section(none_type_0, none_type_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title is None
    assert section_0.children is None
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )


def test_case_340():
    str_0 = "page_context"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_1, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = section_0.__repr__()
    assert var_1 == "Section(title='page_context')"
    str_2 = " Use '"
    section_1 = module_0.Section(str_2, str_2)
    var_2 = section_1.__repr__()
    assert var_2 == 'Section(title=" Use \'")'
    var_3 = var_2.__repr__()
    assert var_3 == "'Section(title=\" Use \\'\")'"
    str_3 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_3, none_type_1)
    var_4 = link_1.__repr__()
    assert var_4 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_5 = var_4.__repr__()
    assert var_5 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_4 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_2 = module_0.Link(str_4, none_type_2)
    var_6 = link_2.__repr__()
    assert var_6 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_7 = var_6.__repr__()
    assert var_7 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    iterator_0 = var_6.__iter__()
    str_5 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_3 = module_0.Link(str_5, none_type_3)
    bytes_0 = b"\x802c35Z\xf8"
    link_4 = module_0.Link(link_3, bytes_0)
    var_8 = link_3.__repr__()
    assert var_8 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_9 = var_8.__repr__()
    assert var_9 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_10 = var_7.__repr__()
    assert var_10 == "'\"Link(title=\\'0_~6:m!(f5FgU,:rvz\\', url=None)\"'"


def test_case_341():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    bytes_0 = b"\x802c35Z\xf8"
    link_1 = module_0.Link(link_0, bytes_0)
    str_1 = " Use '"
    section_0 = module_0.Section(str_1, str_1)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    var_1 = var_0.__repr__()
    assert var_1 == "'Section(title=\" Use \\'\")'"
    var_2 = var_0.__repr__()
    assert var_2 == "'Section(title=\" Use \\'\")'"
    str_2 = var_1.__str__()
    assert str_2 == "'Section(title=\" Use \\'\")'"


def test_case_342():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    bytes_0 = b"\x802c35Z\xf8"
    link_1 = module_0.Link(link_0, bytes_0)
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    iterator_0 = var_0.__iter__()
    str_1 = " Use '"
    section_0 = module_0.Section(str_1, str_1)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_1 = section_0.__repr__()
    assert var_1 == 'Section(title=" Use \'")'
    int_0 = var_1.__len__()
    assert int_0 == 23
    var_2 = var_1.__repr__()
    assert var_2 == "'Section(title=\" Use \\'\")'"
    str_2 = " Use '"
    section_1 = module_0.Section(str_2, str_2)
    var_3 = section_1.__repr__()
    assert var_3 == 'Section(title=" Use \'")'
    str_3 = "gfRsC:6&{;|"
    section_2 = module_0.Section(str_3, str_3)
    str_4 = "relative_to_docs"
    link_2 = module_0.Link(str_4, section_2)
    section_3 = module_0.Section(section_1, var_3)
    assert section_3.children == 'Section(title=" Use \'")'
    str_5 = "page_context"
    section_4 = module_0.Section(str_5, str_5)
    str_6 = "' from the site because it conflicts with '"
    list_0 = []
    section_5 = module_0.Section(str_6, list_0)
    str_7 = "localhost"
    link_3 = module_0.Link(str_6, str_7)
    dict_0 = {}
    str_8 = 'y\x0c[fN"W:2&:SWyz~W'
    link_4 = module_0.Link(dict_0, str_8)
    str_9 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_5 = module_0.Link(str_9, none_type_1)
    var_4 = link_5.__repr__()
    assert var_4 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_5 = var_4.__repr__()
    assert var_5 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    iterator_1 = var_4.__iter__()
    str_10 = "$9.}1Av5,.}"
    link_6 = module_0.Link(str_10, str_10)
    str_11 = "gfRsC:6&{;|"
    section_6 = module_0.Section(str_11, str_11)
    str_12 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_7 = module_0.Link(str_12, none_type_2)
    var_6 = link_7.__repr__()
    assert var_6 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_7 = var_6.__repr__()
    assert var_7 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_13 = var_6.__str__()
    assert str_13 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_8 = var_6.__repr__()
    assert var_8 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_14 = "gfRsC:6&{;|"
    section_7 = module_0.Section(str_14, str_14)
    var_9 = section_7.__repr__()
    assert var_9 == "Section(title='gfRsC:6&{;|')"
    int_1 = var_3.__len__()
    assert int_1 == 23


def test_case_343():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    bytes_0 = b"\x802c35Z\xf8"
    link_1 = module_0.Link(link_0, bytes_0)
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    int_0 = var_0.__len__()
    assert int_0 == 42
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_2 = module_0.Link(str_1, none_type_1)
    var_1 = link_2.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_2 = var_1.__repr__()
    assert var_2 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    iterator_0 = var_1.__iter__()
    str_2 = "gfRsC:6&{;|"
    section_0 = module_0.Section(str_2, str_2)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "gfRsC:6&{;|"
    assert section_0.children == "gfRsC:6&{;|"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_3 = 'C5B_`:"E&+;Y['
    link_3 = module_0.Link(str_3, str_3)
    dict_0 = {}
    str_4 = 'y\x0c[fN"W:2&:SWyz~W'
    link_4 = module_0.Link(dict_0, str_4)
    str_5 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_5 = module_0.Link(str_5, none_type_2)
    var_3 = link_5.__repr__()
    assert var_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_6 = " Use '"
    section_1 = module_0.Section(str_6, str_6)
    var_4 = section_1.__repr__()
    assert var_4 == 'Section(title=" Use \'")'
    str_7 = "gfRsC:6&{;|"
    section_2 = module_0.Section(str_7, str_7)
    str_8 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_6 = module_0.Link(str_8, none_type_3)
    var_5 = link_6.__repr__()
    assert var_5 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_6 = var_5.__repr__()
    assert var_6 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_7 = var_5.__repr__()
    assert var_7 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_8 = link_6.__repr__()
    assert var_8 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_9 = "0_~6:m!(f5FgU,:rvz"
    none_type_4 = None
    link_7 = module_0.Link(str_9, none_type_4)
    var_9 = link_7.__repr__()
    assert var_9 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_10 = var_9.__repr__()
    assert var_10 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_11 = var_9.__repr__()
    assert var_11 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_10 = " Use '"
    section_3 = module_0.Section(str_10, str_10)
    var_12 = section_3.__repr__()
    assert var_12 == 'Section(title=" Use \'")'
    str_11 = "0_~6:m!(f5FgU,:rvz"
    none_type_5 = None
    link_8 = module_0.Link(str_11, none_type_5)
    bytes_1 = b"\x802c35Z\xf8"
    link_9 = module_0.Link(link_8, bytes_1)
    iterator_1 = var_12.__iter__()
    var_13 = var_12.__repr__()
    assert var_13 == "'Section(title=\" Use \\'\")'"


def test_case_344():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    var_1 = var_0.__repr__()
    assert var_1 == "'Section(title=\" Use \\'\")'"
    dict_0 = {}
    str_1 = 'y\x0c[fN"W:2&:SWyz~W'
    link_0 = module_0.Link(dict_0, str_1)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == {}
    assert link_0.url == 'y\x0c[fN"W:2&:SWyz~W'
    section_1 = module_0.Section(str_1, str_1)
    section_2 = module_0.Section(str_1, str_1)
    str_2 = "page_context"
    section_3 = module_0.Section(str_2, str_2)
    str_3 = "' from the site because it conflicts with '"
    list_0 = []
    section_4 = module_0.Section(str_3, list_0)
    var_2 = section_4.__repr__()
    assert var_2 == "Section(title=\"' from the site because it conflicts with '\")"
    section_5 = module_0.Section(str_3, section_3)
    str_4 = "page_context"
    section_6 = module_0.Section(str_4, str_4)
    str_5 = "' from the site because it conflicts with '"
    list_1 = []
    section_7 = module_0.Section(str_5, list_1)
    var_3 = section_7.__repr__()
    assert var_3 == "Section(title=\"' from the site because it conflicts with '\")"
    var_4 = link_0.__repr__()
    assert var_4 == "Link(title={}, url='y\\x0c[fN\"W:2&:SWyz~W')"


def test_case_345():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_1, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_1 = link_0.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    int_0 = var_1.__len__()
    assert int_0 == 42
    str_2 = "&A<EcsnDS`*\\9"
    section_1 = module_0.Section(str_2, var_0)
    assert section_1.children == 'Section(title=" Use \'")'


def test_case_346():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    int_0 = var_0.__len__()
    assert int_0 == 23
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_1, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_1 = link_0.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_2 = var_1.__repr__()
    assert var_2 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    iterator_0 = var_1.__iter__()
    str_2 = "gfRsC:6&{;|"
    section_1 = module_0.Section(str_2, str_2)
    str_3 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_3, none_type_1)
    var_3 = link_1.__repr__()
    assert var_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_4 = var_3.__repr__()
    assert var_4 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_5 = var_3.__repr__()
    assert var_5 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_6 = link_1.__repr__()
    assert var_6 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_4 = "gfRsC:6&{;|"
    section_2 = module_0.Section(str_4, str_4)
    str_5 = " Use '"
    section_3 = module_0.Section(str_5, str_5)
    var_7 = section_3.__repr__()
    assert var_7 == 'Section(title=" Use \'")'
    int_1 = var_7.__len__()
    assert int_1 == 23
    var_8 = var_7.__repr__()
    assert var_8 == "'Section(title=\" Use \\'\")'"
    var_9 = var_8.__repr__()
    assert var_9 == "'\\'Section(title=\" Use \\\\\\'\")\\''"
    str_6 = " Use '"
    section_4 = module_0.Section(str_6, str_6)
    var_10 = section_4.__repr__()
    assert var_10 == 'Section(title=" Use \'")'
    var_11 = var_10.__repr__()
    assert var_11 == "'Section(title=\" Use \\'\")'"
    var_12 = var_10.__repr__()
    assert var_12 == "'Section(title=\" Use \\'\")'"
    str_7 = "page_context"
    section_5 = module_0.Section(str_7, str_7)
    str_8 = "' from the site because it conflicts with '"
    list_0 = []
    section_6 = module_0.Section(str_8, list_0)
    str_9 = " Use '"
    section_7 = module_0.Section(str_9, str_9)
    var_13 = section_7.__repr__()
    assert var_13 == 'Section(title=" Use \'")'
    none_type_2 = None
    str_10 = "\n        Perform validation for a value.\n\n        The run_validation method should be implemented by subclasses.\n        "
    link_2 = module_0.Link(none_type_2, str_10)
    var_14 = link_2.__repr__()
    assert (
        var_14
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    str_11 = var_14.__str__()
    assert (
        str_11
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    str_12 = " Use '"
    section_8 = module_0.Section(str_12, str_12)
    var_15 = section_8.__repr__()
    assert var_15 == 'Section(title=" Use \'")'
    str_13 = "gfRsC:6&{;|"
    section_9 = module_0.Section(str_13, str_13)
    str_14 = "relative_to_docs"
    link_3 = module_0.Link(str_14, section_9)
    section_10 = module_0.Section(section_8, var_15)
    assert section_10.children == 'Section(title=" Use \'")'
    str_15 = " Use '"
    section_11 = module_0.Section(str_15, str_15)
    var_16 = section_11.__repr__()
    assert var_16 == 'Section(title=" Use \'")'
    section_12 = module_0.Section(str_15, var_16)
    assert section_12.children == 'Section(title=" Use \'")'
    var_17 = var_3.__repr__()
    assert var_17 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""


def test_case_347():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    str_1 = "gfRsC:6&{;|"
    section_1 = module_0.Section(str_1, str_1)
    str_2 = "relative_to_docs"
    link_0 = module_0.Link(str_2, section_1)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "relative_to_docs"
    assert (
        f"{type(link_0.url).__module__}.{type(link_0.url).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    section_2 = module_0.Section(section_0, var_0)
    assert section_2.children == 'Section(title=" Use \'")'
    str_3 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_1 = module_0.Link(str_3, none_type_0)
    var_1 = link_1.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_2 = var_1.__repr__()
    assert var_2 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    int_0 = var_1.__len__()
    assert int_0 == 42


def test_case_348():
    str_0 = "gfRsC:6&{;|"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "gfRsC:6&{;|"
    assert section_0.children == "gfRsC:6&{;|"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = " Use '"
    section_1 = module_0.Section(str_1, str_1)
    var_0 = section_1.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    int_0 = var_0.__len__()
    assert int_0 == 23
    var_1 = var_0.__repr__()
    assert var_1 == "'Section(title=\" Use \\'\")'"
    var_2 = var_1.__repr__()
    assert var_2 == "'\\'Section(title=\" Use \\\\\\'\")\\''"
    str_2 = "page_context"
    section_2 = module_0.Section(str_2, str_2)
    str_3 = "' from the site because it conflicts with '"
    list_0 = []
    section_3 = module_0.Section(str_3, list_0)
    str_4 = "localhost"
    link_0 = module_0.Link(str_3, str_4)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "' from the site because it conflicts with '"
    assert link_0.url == "localhost"
    dict_0 = {}
    str_5 = 'y\x0c[fN"W:2&:SWyz~W'
    link_1 = module_0.Link(dict_0, str_5)
    section_4 = module_0.Section(str_5, str_5)
    bool_0 = True
    link_2 = module_0.Link(bool_0, bool_0)
    str_6 = " Use '"
    section_5 = module_0.Section(str_6, str_6)
    var_3 = section_5.__repr__()
    assert var_3 == 'Section(title=" Use \'")'
    var_4 = var_3.__repr__()
    assert var_4 == "'Section(title=\" Use \\'\")'"
    var_5 = var_3.__repr__()
    assert var_5 == "'Section(title=\" Use \\'\")'"
    var_6 = var_2.__repr__()
    assert var_6 == "'\\'\\\\\\'Section(title=\" Use \\\\\\\\\\\\\\'\")\\\\\\'\\''"


def test_case_349():
    none_type_0 = None
    section_0 = module_0.Section(none_type_0, none_type_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title is None
    assert section_0.children is None
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_0 = module_0.Link(str_0, none_type_1)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    bytes_0 = b"\x802c35Z\xf8"
    link_1 = module_0.Link(link_0, bytes_0)
    dict_0 = {}
    str_1 = 'y\x0c[fN"W:2&:SWyz~W'
    link_2 = module_0.Link(dict_0, str_1)
    section_1 = module_0.Section(str_1, str_1)
    str_2 = " Use '"
    section_2 = module_0.Section(str_2, str_2)
    var_0 = section_2.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    int_0 = var_0.__len__()
    assert int_0 == 23
    str_3 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_3 = module_0.Link(str_3, none_type_2)
    int_1 = var_0.__len__()
    assert int_1 == 23
    str_4 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_4 = module_0.Link(str_4, none_type_3)
    bytes_1 = b"\x802c35Z\xf8"
    link_5 = module_0.Link(link_4, bytes_1)
    var_1 = link_4.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    iterator_0 = var_1.__iter__()
    str_5 = "0_~6:m!(f5FgU,:rvz"
    none_type_4 = None
    link_6 = module_0.Link(str_5, none_type_4)
    var_2 = link_6.__repr__()
    assert var_2 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_3 = var_2.__repr__()
    assert var_3 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_4 = var_3.__repr__()
    assert var_4 == "'\"Link(title=\\'0_~6:m!(f5FgU,:rvz\\', url=None)\"'"
    str_6 = "0_~6:m!(f5FgU,:rvz"
    none_type_5 = None
    link_7 = module_0.Link(str_6, none_type_5)
    var_5 = link_7.__repr__()
    assert var_5 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    section_3 = module_0.Section(var_3, var_3)
    assert section_3.title == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    assert section_3.children == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""


def test_case_350():
    none_type_0 = None
    str_0 = "\n        Perform validation for a value.\n\n        The run_validation method should be implemented by subclasses.\n        "
    link_0 = module_0.Link(none_type_0, str_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title is None
    assert (
        link_0.url
        == "\n        Perform validation for a value.\n\n        The run_validation method should be implemented by subclasses.\n        "
    )
    var_0 = link_0.__repr__()
    assert (
        var_0
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    str_1 = var_0.__str__()
    assert (
        str_1
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    str_2 = " Use '"
    section_0 = module_0.Section(str_2, str_2)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_1 = section_0.__repr__()
    assert var_1 == 'Section(title=" Use \'")'
    str_3 = 'C5B_`:"E&+;Y['
    link_1 = module_0.Link(str_3, str_3)
    int_0 = var_1.__len__()
    assert int_0 == 23
    dict_0 = {}
    str_4 = 'y\x0c[fN"W:2&:SWyz~W'
    link_2 = module_0.Link(dict_0, str_4)
    str_5 = " Use '"
    section_1 = module_0.Section(str_5, str_5)
    var_2 = section_1.__repr__()
    assert var_2 == 'Section(title=" Use \'")'
    str_6 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_3 = module_0.Link(str_6, none_type_1)
    bytes_0 = b"\x802c35Z\xf8"
    link_4 = module_0.Link(link_3, bytes_0)
    iterator_0 = var_2.__iter__()
    int_1 = var_1.__len__()
    assert int_1 == 23


def test_case_351():
    str_0 = 'C5B_`:"E&+;Y['
    link_0 = module_0.Link(str_0, str_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == 'C5B_`:"E&+;Y['
    assert link_0.url == 'C5B_`:"E&+;Y['
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_1 = module_0.Link(str_1, none_type_0)
    var_0 = link_1.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_2 = var_1.__repr__()
    assert var_2 == "'\"Link(title=\\'0_~6:m!(f5FgU,:rvz\\', url=None)\"'"
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_2 = module_0.Link(str_2, none_type_1)
    bytes_0 = b"\x802c35Z\xf8"
    link_3 = module_0.Link(link_2, bytes_0)
    var_3 = link_2.__repr__()
    assert var_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    iterator_0 = var_3.__iter__()
    str_3 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_4 = module_0.Link(str_3, none_type_2)
    int_0 = var_0.__len__()
    assert int_0 == 42


def test_case_352():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    str_1 = 'C5B_`:"E&+;Y['
    link_0 = module_0.Link(str_1, str_1)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == 'C5B_`:"E&+;Y['
    assert link_0.url == 'C5B_`:"E&+;Y['
    int_0 = var_0.__len__()
    assert int_0 == 23
    str_2 = "$9.}1Av5,.}"
    link_1 = module_0.Link(str_2, str_2)
    var_1 = var_0.__repr__()
    assert var_1 == "'Section(title=\" Use \\'\")'"
    str_3 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_2 = module_0.Link(str_3, none_type_0)
    bytes_0 = b"\x802c35Z\xf8"
    link_3 = module_0.Link(link_2, bytes_0)
    var_2 = link_2.__repr__()
    assert var_2 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_4 = var_1.__str__()
    assert str_4 == "'Section(title=\" Use \\'\")'"


def test_case_353():
    dict_0 = {}
    str_0 = 'y\x0c[fN"W:2&:SWyz~W'
    link_0 = module_0.Link(dict_0, str_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == {}
    assert link_0.url == 'y\x0c[fN"W:2&:SWyz~W'
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == 'y\x0c[fN"W:2&:SWyz~W'
    assert section_0.children == 'y\x0c[fN"W:2&:SWyz~W'
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = "page_context"
    section_1 = module_0.Section(str_1, str_1)
    str_2 = "' from the site because it conflicts with '"
    list_0 = []
    section_2 = module_0.Section(str_2, list_0)
    var_0 = section_2.__repr__()
    assert var_0 == "Section(title=\"' from the site because it conflicts with '\")"
    str_3 = "gfRsC:6&{;|"
    section_3 = module_0.Section(str_3, str_3)
    str_4 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_1 = module_0.Link(str_4, none_type_0)
    var_1 = link_1.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_2 = var_1.__repr__()
    assert var_2 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_3 = var_1.__repr__()
    assert var_3 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_4 = link_1.__repr__()
    assert var_4 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_5 = "page_context"
    section_4 = module_0.Section(str_5, str_5)
    str_6 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_2 = module_0.Link(str_6, none_type_1)
    bytes_0 = b"\x802c35Z\xf8"
    link_3 = module_0.Link(link_2, bytes_0)
    bool_0 = True
    link_4 = module_0.Link(bool_0, bool_0)
    str_7 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_5 = module_0.Link(str_7, none_type_2)
    var_5 = link_5.__repr__()
    assert var_5 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_6 = var_5.__repr__()
    assert var_6 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_7 = var_6.__repr__()
    assert var_7 == "'\"Link(title=\\'0_~6:m!(f5FgU,:rvz\\', url=None)\"'"
    str_8 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_6 = module_0.Link(str_8, none_type_3)
    var_8 = link_6.__repr__()
    assert var_8 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_9 = var_8.__repr__()
    assert var_9 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    iterator_0 = var_8.__iter__()
    str_9 = " Use '"
    section_5 = module_0.Section(str_9, str_9)
    var_10 = section_5.__repr__()
    assert var_10 == 'Section(title=" Use \'")'
    int_0 = var_10.__len__()
    assert int_0 == 23
    str_10 = " Use '"
    section_6 = module_0.Section(str_10, str_10)
    var_11 = section_6.__repr__()
    assert var_11 == 'Section(title=" Use \'")'
    int_1 = var_11.__len__()
    assert int_1 == 23
    str_11 = "0_~6:m!(f5FgU,:rvz"
    none_type_4 = None
    link_7 = module_0.Link(str_11, none_type_4)
    int_2 = var_11.__len__()
    assert int_2 == 23
    iterator_1 = var_0.__iter__()


def test_case_354():
    none_type_0 = None
    str_0 = "\n        Perform validation for a value.\n\n        The run_validation method should be implemented by subclasses.\n        "
    link_0 = module_0.Link(none_type_0, str_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title is None
    assert (
        link_0.url
        == "\n        Perform validation for a value.\n\n        The run_validation method should be implemented by subclasses.\n        "
    )
    var_0 = link_0.__repr__()
    assert (
        var_0
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    str_1 = var_0.__str__()
    assert (
        str_1
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    bool_0 = True
    link_1 = module_0.Link(bool_0, bool_0)
    var_1 = var_0.__repr__()
    assert (
        var_1
        == "\"Link(title=[blank], url='\\\\n        Perform validation for a value.\\\\n\\\\n        The run_validation method should be implemented by subclasses.\\\\n        ')\""
    )


def test_case_355():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    var_1 = var_0.__repr__()
    assert var_1 == "'Section(title=\" Use \\'\")'"
    var_2 = var_0.__repr__()
    assert var_2 == "'Section(title=\" Use \\'\")'"
    str_1 = " Use '"
    section_1 = module_0.Section(str_1, str_1)
    var_3 = section_1.__repr__()
    assert var_3 == 'Section(title=" Use \'")'
    int_0 = var_3.__len__()
    assert int_0 == 23
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_2, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    int_1 = var_3.__len__()
    assert int_1 == 23
    str_3 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_3, none_type_1)
    bytes_0 = b"\x802c35Z\xf8"
    link_2 = module_0.Link(link_1, bytes_0)
    str_4 = "$9.}1Av5,.}"
    link_3 = module_0.Link(str_4, str_4)
    none_type_2 = None
    str_5 = "\n        Perform validation for a value.\n\n        The run_validation method should be implemented by subclasses.\n        "
    link_4 = module_0.Link(none_type_2, str_5)
    var_4 = link_4.__repr__()
    assert (
        var_4
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    str_6 = var_4.__str__()
    assert (
        str_6
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    bool_0 = True
    link_5 = module_0.Link(bool_0, bool_0)
    var_5 = var_4.__repr__()
    assert (
        var_5
        == "\"Link(title=[blank], url='\\\\n        Perform validation for a value.\\\\n\\\\n        The run_validation method should be implemented by subclasses.\\\\n        ')\""
    )
    str_7 = " Use '"
    section_2 = module_0.Section(str_7, str_7)
    var_6 = section_2.__repr__()
    assert var_6 == 'Section(title=" Use \'")'
    var_7 = var_6.__repr__()
    assert var_7 == "'Section(title=\" Use \\'\")'"
    dict_0 = {}
    str_8 = 'y\x0c[fN"W:2&:SWyz~W'
    link_6 = module_0.Link(dict_0, str_8)
    section_3 = module_0.Section(str_7, var_7)
    assert section_3.children == "'Section(title=\" Use \\'\")'"
    str_9 = " Use '"
    section_4 = module_0.Section(str_9, str_9)
    var_8 = section_4.__repr__()
    assert var_8 == 'Section(title=" Use \'")'
    int_2 = var_8.__len__()
    assert int_2 == 23
    section_5 = module_0.Section(var_8, int_2)
    assert section_5.title == 'Section(title=" Use \'")'
    assert section_5.children == 23
    str_10 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_7 = module_0.Link(str_10, none_type_3)
    bytes_1 = b"\x802c35Z\xf8"
    link_8 = module_0.Link(link_7, bytes_1)
    var_9 = link_7.__repr__()
    assert var_9 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    int_3 = var_9.__len__()
    assert int_3 == 42
    var_10 = link_6.__repr__()
    assert var_10 == "Link(title={}, url='y\\x0c[fN\"W:2&:SWyz~W')"


def test_case_356():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    str_1 = "gfRsC:6&{;|"
    section_1 = module_0.Section(str_1, str_1)
    str_2 = "relative_to_docs"
    link_0 = module_0.Link(str_2, section_1)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "relative_to_docs"
    assert (
        f"{type(link_0.url).__module__}.{type(link_0.url).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    section_2 = module_0.Section(section_0, var_0)
    assert section_2.children == 'Section(title=" Use \'")'
    int_0 = var_0.__len__()
    assert int_0 == 23


def test_case_357():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_1, none_type_1)
    bytes_0 = b"\x802c35Z\xf8"
    link_2 = module_0.Link(link_1, bytes_0)
    str_2 = "page_context"
    section_0 = module_0.Section(str_2, str_2)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_3 = "' from the site because it conflicts with '"
    list_0 = []
    section_1 = module_0.Section(str_3, list_0)
    var_2 = section_1.__repr__()
    assert var_2 == "Section(title=\"' from the site because it conflicts with '\")"
    section_2 = module_0.Section(str_3, section_0)
    str_4 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_3 = module_0.Link(str_4, none_type_2)
    bytes_1 = b"\x802c35Z\xf8"
    link_4 = module_0.Link(link_3, bytes_1)
    var_3 = link_3.__repr__()
    assert var_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    iterator_0 = var_3.__iter__()
    none_type_3 = None
    section_3 = module_0.Section(none_type_3, none_type_3)
    str_5 = "0_~6:m!(f5FgU,:rvz"
    none_type_4 = None
    link_5 = module_0.Link(str_5, none_type_4)
    bytes_2 = b"\x802c35Z\xf8"
    link_6 = module_0.Link(link_5, bytes_2)
    var_4 = link_5.__repr__()
    assert var_4 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    int_0 = var_4.__len__()
    assert int_0 == 42
    str_6 = " Use '"
    section_4 = module_0.Section(str_6, str_6)
    var_5 = section_4.__repr__()
    assert var_5 == 'Section(title=" Use \'")'
    str_7 = "gfRsC:6&{;|"
    section_5 = module_0.Section(str_7, str_7)
    str_8 = "relative_to_docs"
    link_7 = module_0.Link(str_8, section_5)
    section_6 = module_0.Section(section_4, var_5)
    assert section_6.children == 'Section(title=" Use \'")'
    int_1 = var_5.__len__()
    assert int_1 == 23
    str_9 = "0_~6:m!(f5FgU,:rvz"
    none_type_5 = None
    link_8 = module_0.Link(str_9, none_type_5)
    var_6 = link_8.__repr__()
    assert var_6 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_7 = var_6.__repr__()
    assert var_7 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_8 = var_7.__repr__()
    assert var_8 == "'\"Link(title=\\'0_~6:m!(f5FgU,:rvz\\', url=None)\"'"
    dict_0 = {}
    str_10 = 'y\x0c[fN"W:2&:SWyz~W'
    link_9 = module_0.Link(dict_0, str_10)
    section_7 = module_0.Section(str_10, str_10)
    var_9 = section_2.__repr__()
    assert var_9 == "Section(title=\"' from the site because it conflicts with '\")"


def test_case_358():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_1, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_1 = link_0.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    int_0 = var_1.__len__()
    assert int_0 == 42
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_2, none_type_1)
    bytes_0 = b"\x802c35Z\xf8"
    link_2 = module_0.Link(link_1, bytes_0)
    str_3 = "page_context"
    section_1 = module_0.Section(str_3, str_3)
    str_4 = "' from the site because it conflicts with '"
    list_0 = []
    section_2 = module_0.Section(str_4, list_0)
    var_2 = section_2.__repr__()
    assert var_2 == "Section(title=\"' from the site because it conflicts with '\")"
    section_3 = module_0.Section(str_4, section_1)
    int_1 = var_2.__len__()
    assert int_1 == 60
    str_5 = " Use '"
    section_4 = module_0.Section(str_5, str_5)
    var_3 = section_4.__repr__()
    assert var_3 == 'Section(title=" Use \'")'
    str_6 = "gfRsC:6&{;|"
    section_5 = module_0.Section(str_6, str_6)
    str_7 = "relative_to_docs"
    link_3 = module_0.Link(str_7, section_5)
    str_8 = " Use '"
    section_6 = module_0.Section(str_8, str_8)
    var_4 = section_6.__repr__()
    assert var_4 == 'Section(title=" Use \'")'
    int_2 = var_4.__len__()
    assert int_2 == 23
    var_5 = var_4.__repr__()
    assert var_5 == "'Section(title=\" Use \\'\")'"
    str_9 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_4 = module_0.Link(str_9, none_type_2)
    bytes_1 = b"\x802c35Z\xf8"
    link_5 = module_0.Link(link_4, bytes_1)
    var_6 = link_4.__repr__()
    assert var_6 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    int_3 = var_6.__len__()
    assert int_3 == 42
    str_10 = "page_context"
    section_7 = module_0.Section(str_10, str_10)
    str_11 = "' from the site because it conflicts with '"
    list_1 = []
    section_8 = module_0.Section(str_11, list_1)
    str_12 = "page_context"
    section_9 = module_0.Section(str_12, str_12)
    str_13 = "' from the site because it conflicts with '"
    list_2 = []
    section_10 = module_0.Section(str_13, list_2)
    var_7 = section_10.__repr__()
    assert var_7 == "Section(title=\"' from the site because it conflicts with '\")"
    section_11 = module_0.Section(str_13, section_9)
    bool_0 = True
    link_6 = module_0.Link(bool_0, bool_0)
    section_12 = module_0.Section(none_type_0, none_type_2)


def test_case_359():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    var_1 = var_0.__repr__()
    assert var_1 == "'Section(title=\" Use \\'\")'"
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_1, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    str_2 = "$9.}1Av5,.}"
    link_1 = module_0.Link(str_2, str_2)
    str_3 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_2 = module_0.Link(str_3, none_type_1)
    var_2 = link_2.__repr__()
    assert var_2 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_3 = var_2.__repr__()
    assert var_3 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_4 = var_2.__repr__()
    assert var_4 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_4 = 'C5B_`:"E&+;Y['
    link_3 = module_0.Link(str_4, str_4)
    str_5 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_4 = module_0.Link(str_5, none_type_2)
    bytes_0 = b"\x802c35Z\xf8"
    link_5 = module_0.Link(link_4, bytes_0)
    var_5 = link_4.__repr__()
    assert var_5 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_6 = var_5.__repr__()
    assert var_6 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_6 = "page_context"
    section_1 = module_0.Section(str_6, str_6)
    str_7 = " Use '"
    section_2 = module_0.Section(str_7, str_7)
    var_7 = section_2.__repr__()
    assert var_7 == 'Section(title=" Use \'")'
    str_8 = "gfRsC:6&{;|"
    section_3 = module_0.Section(str_8, str_8)
    str_9 = "relative_to_docs"
    link_6 = module_0.Link(str_9, section_3)
    section_4 = module_0.Section(section_2, var_7)
    assert section_4.children == 'Section(title=" Use \'")'
    int_0 = var_7.__len__()
    assert int_0 == 23
    str_10 = " Use '"
    section_5 = module_0.Section(str_10, str_10)
    var_8 = section_5.__repr__()
    assert var_8 == 'Section(title=" Use \'")'
    int_1 = var_8.__len__()
    assert int_1 == 23
    var_9 = var_8.__repr__()
    assert var_9 == "'Section(title=\" Use \\'\")'"
    iterator_0 = var_0.__iter__()


def test_case_360():
    str_0 = "gfRsC:6&{;|"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "gfRsC:6&{;|"
    assert section_0.children == "gfRsC:6&{;|"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    list_0 = []
    section_1 = module_0.Section(section_0, list_0)


def test_case_361():
    bool_0 = True
    section_0 = module_0.Section(bool_0, bool_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title is True
    assert section_0.children is True
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )


def test_case_362():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    str_1 = " Use '"
    section_0 = module_0.Section(str_1, str_1)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    str_2 = "gfRsC:6&{;|"
    section_1 = module_0.Section(str_2, str_2)
    str_3 = "relative_to_docs"
    link_1 = module_0.Link(str_3, section_1)
    section_2 = module_0.Section(section_0, var_0)
    assert section_2.children == 'Section(title=" Use \'")'
    var_1 = link_1.__repr__()
    assert var_1 == "Link(title='relative_to_docs', url=Section(title='gfRsC:6&{;|'))"


def test_case_363():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    bytes_0 = b"\x802c35Z\xf8"
    link_1 = module_0.Link(link_0, bytes_0)
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_1 = "page_context"
    section_0 = module_0.Section(str_1, str_1)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_2 = "' from the site because it conflicts with '"
    list_0 = []
    section_1 = module_0.Section(str_2, list_0)
    str_3 = "localhost"
    link_2 = module_0.Link(str_2, str_3)
    str_4 = " Use '"
    section_2 = module_0.Section(str_4, str_4)
    var_1 = section_2.__repr__()
    assert var_1 == 'Section(title=" Use \'")'
    int_0 = var_1.__len__()
    assert int_0 == 23
    var_2 = var_1.__repr__()
    assert var_2 == "'Section(title=\" Use \\'\")'"
    str_5 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_3 = module_0.Link(str_5, none_type_1)
    bytes_1 = b"\x802c35Z\xf8"
    link_4 = module_0.Link(link_3, bytes_1)
    var_3 = link_3.__repr__()
    assert var_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    iterator_0 = var_3.__iter__()
    str_6 = " Use '"
    section_3 = module_0.Section(str_6, str_6)
    var_4 = section_3.__repr__()
    assert var_4 == 'Section(title=" Use \'")'
    str_7 = 'C5B_`:"E&+;Y['
    link_5 = module_0.Link(str_7, str_7)
    int_1 = var_4.__len__()
    assert int_1 == 23
    str_8 = "gfRsC:6&{;|"
    section_4 = module_0.Section(str_8, str_8)
    str_9 = " Use '"
    section_5 = module_0.Section(str_9, str_9)
    var_5 = section_5.__repr__()
    assert var_5 == 'Section(title=" Use \'")'
    int_2 = var_5.__len__()
    assert int_2 == 23
    var_6 = var_5.__repr__()
    assert var_6 == "'Section(title=\" Use \\'\")'"
    var_7 = var_6.__repr__()
    assert var_7 == "'\\'Section(title=\" Use \\\\\\'\")\\''"
    str_10 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_6 = module_0.Link(str_10, none_type_2)
    var_8 = link_6.__repr__()
    assert var_8 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_9 = var_8.__repr__()
    assert var_9 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_11 = var_8.__str__()
    assert str_11 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_10 = var_8.__repr__()
    assert var_10 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_11 = section_2.__repr__()
    assert var_11 == 'Section(title=" Use \'")'


def test_case_364():
    str_0 = "page_context"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = "' from the site because it conflicts with '"
    list_0 = []
    section_1 = module_0.Section(str_1, list_0)
    var_0 = section_0.__repr__()
    assert var_0 == "Section(title='page_context')"
    str_2 = " Use '"
    section_2 = module_0.Section(str_2, str_2)
    var_1 = section_2.__repr__()
    assert var_1 == 'Section(title=" Use \'")'
    str_3 = "gfRsC:6&{;|"
    section_3 = module_0.Section(str_3, str_3)
    str_4 = "relative_to_docs"
    link_0 = module_0.Link(str_4, section_3)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "relative_to_docs"
    assert (
        f"{type(link_0.url).__module__}.{type(link_0.url).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    section_4 = module_0.Section(section_2, var_1)
    assert section_4.children == 'Section(title=" Use \'")'
    int_0 = var_1.__len__()
    assert int_0 == 23
    str_5 = " Use '"
    section_5 = module_0.Section(str_5, str_5)
    var_2 = section_5.__repr__()
    assert var_2 == 'Section(title=" Use \'")'
    str_6 = 'C5B_`:"E&+;Y['
    link_1 = module_0.Link(str_6, str_6)
    int_1 = var_2.__len__()
    assert int_1 == 23
    str_7 = " Use '"
    section_6 = module_0.Section(str_7, str_7)
    var_3 = section_6.__repr__()
    assert var_3 == 'Section(title=" Use \'")'
    str_8 = "gfRsC:6&{;|"
    section_7 = module_0.Section(str_8, str_8)
    str_9 = "relative_to_docs"
    link_2 = module_0.Link(str_9, section_7)
    section_8 = module_0.Section(section_6, var_3)
    assert section_8.children == 'Section(title=" Use \'")'
    none_type_0 = None
    str_10 = "\n        Perform validation for a value.\n\n        The run_validation method should be implemented by subclasses.\n        "
    link_3 = module_0.Link(none_type_0, str_10)
    var_4 = link_3.__repr__()
    assert (
        var_4
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    str_11 = var_4.__str__()
    assert (
        str_11
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    str_12 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_4 = module_0.Link(str_12, none_type_1)
    bytes_0 = b"\x802c35Z\xf8"
    link_5 = module_0.Link(link_4, bytes_0)
    dict_0 = {}
    str_13 = 'y\x0c[fN"W:2&:SWyz~W'
    link_6 = module_0.Link(dict_0, str_13)
    var_5 = link_5.__repr__()
    assert (
        var_5
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )
    str_14 = " Use '"
    section_9 = module_0.Section(str_14, str_14)
    var_6 = section_9.__repr__()
    assert var_6 == 'Section(title=" Use \'")'
    int_2 = var_6.__len__()
    assert int_2 == 23
    str_15 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_7 = module_0.Link(str_15, none_type_2)
    int_3 = var_6.__len__()
    assert int_3 == 23
    str_16 = "page_context"
    section_10 = module_0.Section(str_16, str_16)
    str_17 = "' from the site because it conflicts with '"
    list_1 = []
    section_11 = module_0.Section(str_17, list_1)
    str_18 = "localhost"
    link_8 = module_0.Link(str_17, str_18)
    str_19 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_9 = module_0.Link(str_19, none_type_3)
    bytes_1 = b"\x802c35Z\xf8"
    link_10 = module_0.Link(link_9, bytes_1)
    var_7 = link_9.__repr__()
    assert var_7 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_20 = "page_context"
    section_12 = module_0.Section(str_20, str_20)
    str_21 = "' from the site because it conflicts with '"
    list_2 = []
    section_13 = module_0.Section(str_21, list_2)
    var_8 = section_13.__repr__()
    assert var_8 == "Section(title=\"' from the site because it conflicts with '\")"
    section_14 = module_0.Section(str_21, section_12)
    int_4 = var_8.__len__()
    assert int_4 == 60
    str_22 = "&_p>;\t"
    link_11 = module_0.Link(str_22, link_4)


def test_case_365():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    str_1 = 'C5B_`:"E&+;Y['
    link_0 = module_0.Link(str_1, str_1)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == 'C5B_`:"E&+;Y['
    assert link_0.url == 'C5B_`:"E&+;Y['
    int_0 = var_0.__len__()
    assert int_0 == 23
    str_2 = "$9.}1Av5,.}"
    link_1 = module_0.Link(str_2, str_2)
    var_1 = var_0.__repr__()
    assert var_1 == "'Section(title=\" Use \\'\")'"
    dict_0 = {}
    str_3 = 'y\x0c[fN"W:2&:SWyz~W'
    link_2 = module_0.Link(dict_0, str_3)
    section_1 = module_0.Section(str_3, str_3)
    section_2 = module_0.Section(str_3, str_3)
    none_type_0 = None
    str_4 = "\n        Perform validation for a value.\n\n        The run_validation method should be implemented by subclasses.\n        "
    link_3 = module_0.Link(none_type_0, str_4)
    var_2 = link_3.__repr__()
    assert (
        var_2
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    str_5 = var_2.__str__()
    assert (
        str_5
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    bool_0 = True
    link_4 = module_0.Link(bool_0, bool_0)
    var_3 = var_2.__repr__()
    assert (
        var_3
        == "\"Link(title=[blank], url='\\\\n        Perform validation for a value.\\\\n\\\\n        The run_validation method should be implemented by subclasses.\\\\n        ')\""
    )
    str_6 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_5 = module_0.Link(str_6, none_type_1)
    var_4 = link_5.__repr__()
    assert var_4 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_5 = var_4.__repr__()
    assert var_5 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_7 = var_4.__str__()
    assert str_7 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_6 = var_4.__repr__()
    assert var_6 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_8 = "page_context"
    section_3 = module_0.Section(str_8, str_8)
    str_9 = "' from the site because it conflicts with '"
    list_0 = []
    section_4 = module_0.Section(str_9, list_0)
    var_7 = section_3.__repr__()
    assert var_7 == "Section(title='page_context')"
    iterator_0 = var_6.__iter__()


def test_case_366():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    bytes_0 = b"\x802c35Z\xf8"
    link_1 = module_0.Link(link_0, bytes_0)
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_2 = module_0.Link(str_1, none_type_1)
    bytes_1 = b"\x802c35Z\xf8"
    link_3 = module_0.Link(link_2, bytes_1)
    var_0 = link_2.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    bool_0 = True
    link_4 = module_0.Link(bool_0, bool_0)
    str_2 = " Use '"
    section_0 = module_0.Section(str_2, str_2)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_2 = section_0.__repr__()
    assert var_2 == 'Section(title=" Use \'")'
    str_3 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_5 = module_0.Link(str_3, none_type_2)
    bytes_2 = b"\x802c35Z\xf8"
    link_6 = module_0.Link(link_5, bytes_2)
    iterator_0 = var_2.__iter__()
    str_4 = "page_context"
    section_1 = module_0.Section(str_4, str_4)
    str_5 = "' from the site because it conflicts with '"
    list_0 = []
    section_2 = module_0.Section(str_5, list_0)
    var_3 = section_1.__repr__()
    assert var_3 == "Section(title='page_context')"
    str_6 = " Use '"
    section_3 = module_0.Section(str_6, str_6)
    var_4 = section_3.__repr__()
    assert var_4 == 'Section(title=" Use \'")'
    int_0 = var_4.__len__()
    assert int_0 == 23
    str_7 = "page_context"
    section_4 = module_0.Section(str_7, str_7)
    str_8 = "' from the site because it conflicts with '"
    list_1 = []
    section_5 = module_0.Section(str_8, list_1)
    var_5 = section_5.__repr__()
    assert var_5 == "Section(title=\"' from the site because it conflicts with '\")"
    section_6 = module_0.Section(str_8, section_4)
    int_1 = var_5.__len__()
    assert int_1 == 60
    str_9 = " Use '"
    section_7 = module_0.Section(str_9, str_9)
    var_6 = section_7.__repr__()
    assert var_6 == 'Section(title=" Use \'")'
    str_10 = "gfRsC:6&{;|"
    section_8 = module_0.Section(str_10, str_10)
    str_11 = "relative_to_docs"
    link_7 = module_0.Link(str_11, section_8)
    str_12 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_8 = module_0.Link(str_12, none_type_3)
    var_7 = link_8.__repr__()
    assert var_7 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_8 = var_7.__repr__()
    assert var_8 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    iterator_1 = var_7.__iter__()
    var_9 = link_3.__repr__()
    assert (
        var_9
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )


def test_case_367():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    bytes_0 = b"\x802c35Z\xf8"
    link_1 = module_0.Link(link_0, bytes_0)
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    int_0 = var_0.__len__()
    assert int_0 == 42
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_2 = module_0.Link(str_1, none_type_1)
    var_1 = link_2.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_2 = var_1.__repr__()
    assert var_2 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_2 = var_1.__str__()
    assert str_2 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_3 = " Use '"
    section_0 = module_0.Section(str_3, str_3)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_3 = section_0.__repr__()
    assert var_3 == 'Section(title=" Use \'")'
    str_4 = 'C5B_`:"E&+;Y['
    link_3 = module_0.Link(str_4, str_4)
    int_1 = var_3.__len__()
    assert int_1 == 23
    str_5 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_4 = module_0.Link(str_5, none_type_2)
    var_4 = link_4.__repr__()
    assert var_4 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    none_type_3 = None
    section_1 = module_0.Section(none_type_3, none_type_3)
    str_6 = " Use '"
    section_2 = module_0.Section(str_6, str_6)
    var_5 = section_2.__repr__()
    assert var_5 == 'Section(title=" Use \'")'
    int_2 = var_5.__len__()
    assert int_2 == 23
    section_3 = module_0.Section(var_5, int_2)
    assert section_3.title == 'Section(title=" Use \'")'
    assert section_3.children == 23
    str_7 = var_1.__str__()
    assert str_7 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"


def test_case_368():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    var_1 = var_0.__repr__()
    assert var_1 == "'Section(title=\" Use \\'\")'"
    dict_0 = {}
    str_1 = 'y\x0c[fN"W:2&:SWyz~W'
    link_0 = module_0.Link(dict_0, str_1)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == {}
    assert link_0.url == 'y\x0c[fN"W:2&:SWyz~W'
    section_1 = module_0.Section(str_0, var_1)
    assert section_1.children == "'Section(title=\" Use \\'\")'"
    str_2 = " Use '"
    section_2 = module_0.Section(str_2, str_2)
    var_2 = section_2.__repr__()
    assert var_2 == 'Section(title=" Use \'")'
    dict_1 = {}
    str_3 = 'y\x0c[fN"W:2&:SWyz~W'
    link_1 = module_0.Link(dict_1, str_3)
    section_3 = module_0.Section(str_3, str_3)
    section_4 = module_0.Section(str_3, str_3)
    str_4 = "page_context"
    section_5 = module_0.Section(str_4, str_4)
    str_5 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_2 = module_0.Link(str_5, none_type_0)
    var_3 = link_2.__repr__()
    assert var_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_4 = section_5.__repr__()
    assert var_4 == "Section(title='page_context')"
    str_6 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_3 = module_0.Link(str_6, none_type_1)
    bytes_0 = b"\x802c35Z\xf8"
    link_4 = module_0.Link(link_3, bytes_0)
    var_5 = link_3.__repr__()
    assert var_5 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_6 = var_5.__repr__()
    assert var_6 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_7 = section_5.__repr__()
    assert var_7 == "Section(title='page_context')"
    iterator_0 = var_7.__iter__()


def test_case_369():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    str_1 = 'C5B_`:"E&+;Y['
    link_0 = module_0.Link(str_1, str_1)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == 'C5B_`:"E&+;Y['
    assert link_0.url == 'C5B_`:"E&+;Y['
    int_0 = var_0.__len__()
    assert int_0 == 23
    str_2 = "page_context"
    section_1 = module_0.Section(str_2, str_2)
    str_3 = "' from the site because it conflicts with '"
    list_0 = []
    section_2 = module_0.Section(str_3, list_0)
    str_4 = 'C5B_`:"E&+;Y['
    link_1 = module_0.Link(str_4, str_4)
    str_5 = "gfRsC:6&{;|"
    section_3 = module_0.Section(str_5, str_5)
    list_1 = []
    section_4 = module_0.Section(section_3, list_1)
    str_6 = " Use '"
    section_5 = module_0.Section(str_6, str_6)
    var_1 = section_5.__repr__()
    assert var_1 == 'Section(title=" Use \'")'
    str_7 = "gfRsC:6&{;|"
    section_6 = module_0.Section(str_7, str_7)
    str_8 = "relative_to_docs"
    link_2 = module_0.Link(str_8, section_6)
    section_7 = module_0.Section(section_5, var_1)
    assert section_7.children == 'Section(title=" Use \'")'
    int_1 = var_1.__len__()
    assert int_1 == 23
    str_9 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_3 = module_0.Link(str_9, none_type_0)
    var_2 = link_3.__repr__()
    assert var_2 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_3 = var_2.__repr__()
    assert var_3 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_4 = var_3.__repr__()
    assert var_4 == "'\"Link(title=\\'0_~6:m!(f5FgU,:rvz\\', url=None)\"'"
    str_10 = " Use '"
    section_8 = module_0.Section(str_10, str_10)
    var_5 = section_8.__repr__()
    assert var_5 == 'Section(title=" Use \'")'
    var_6 = var_5.__repr__()
    assert var_6 == "'Section(title=\" Use \\'\")'"
    str_11 = " Use '"
    section_9 = module_0.Section(str_11, str_11)
    var_7 = section_9.__repr__()
    assert var_7 == 'Section(title=" Use \'")'
    str_12 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_4 = module_0.Link(str_12, none_type_1)
    var_8 = link_4.__repr__()
    assert var_8 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    int_2 = var_8.__len__()
    assert int_2 == 42
    str_13 = " Use '"
    section_10 = module_0.Section(str_13, str_13)
    var_9 = section_10.__repr__()
    assert var_9 == 'Section(title=" Use \'")'
    int_3 = var_9.__len__()
    assert int_3 == 23
    iterator_0 = var_9.__iter__()


def test_case_370():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_1 = var_0.__str__()
    assert str_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_2 = 'C5B_`:"E&+;Y['
    link_1 = module_0.Link(str_2, str_2)
    int_0 = var_0.__len__()
    assert int_0 == 42


def test_case_371():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    var_1 = var_0.__repr__()
    assert var_1 == "'Section(title=\" Use \\'\")'"
    str_1 = "page_context"
    section_1 = module_0.Section(str_1, str_1)
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_2, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_2 = link_0.__repr__()
    assert var_2 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_3 = section_1.__repr__()
    assert var_3 == "Section(title='page_context')"
    str_3 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_3, none_type_1)
    var_4 = link_1.__repr__()
    assert var_4 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_5 = var_4.__repr__()
    assert var_5 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_4 = " Use '"
    section_2 = module_0.Section(str_4, str_4)
    var_6 = section_2.__repr__()
    assert var_6 == 'Section(title=" Use \'")'
    int_0 = var_6.__len__()
    assert int_0 == 23
    str_5 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_2 = module_0.Link(str_5, none_type_2)
    int_1 = var_6.__len__()
    assert int_1 == 23
    str_6 = "page_context"
    section_3 = module_0.Section(str_6, str_6)
    str_7 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_3 = module_0.Link(str_7, none_type_3)
    var_7 = link_3.__repr__()
    assert var_7 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_8 = var_7.__repr__()
    assert var_8 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_8 = var_7.__str__()
    assert str_8 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    dict_0 = {}
    str_9 = 'y\x0c[fN"W:2&:SWyz~W'
    link_4 = module_0.Link(dict_0, str_9)
    section_4 = module_0.Section(str_9, str_9)
    bool_0 = True
    section_5 = module_0.Section(bool_0, bool_0)
    var_9 = link_4.__repr__()
    assert var_9 == "Link(title={}, url='y\\x0c[fN\"W:2&:SWyz~W')"


def test_case_372():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_1 = var_0.__str__()
    assert str_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_2 = " Use '"
    section_0 = module_0.Section(str_2, str_2)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_2 = section_0.__repr__()
    assert var_2 == 'Section(title=" Use \'")'
    int_0 = var_2.__len__()
    assert int_0 == 23
    str_3 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_3, none_type_1)
    int_1 = var_2.__len__()
    assert int_1 == 23
    str_4 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_2 = module_0.Link(str_4, none_type_2)
    var_3 = link_2.__repr__()
    assert var_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_4 = var_3.__repr__()
    assert var_4 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_5 = " Use '"
    section_1 = module_0.Section(str_5, str_5)
    var_5 = section_1.__repr__()
    assert var_5 == 'Section(title=" Use \'")'
    section_2 = module_0.Section(str_5, var_5)
    assert section_2.children == 'Section(title=" Use \'")'
    str_6 = " Use '"
    section_3 = module_0.Section(str_6, str_6)
    var_6 = section_3.__repr__()
    assert var_6 == 'Section(title=" Use \'")'
    str_7 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_3 = module_0.Link(str_7, none_type_3)
    bytes_0 = b"\x802c35Z\xf8"
    link_4 = module_0.Link(link_3, bytes_0)
    iterator_0 = var_6.__iter__()
    bool_0 = True
    link_5 = module_0.Link(bool_0, bool_0)
    str_8 = "gfRsC:6&{;|"
    section_4 = module_0.Section(str_8, str_8)
    str_9 = "0_~6:m!(f5FgU,:rvz"
    none_type_4 = None
    link_6 = module_0.Link(str_9, none_type_4)
    var_7 = link_6.__repr__()
    assert var_7 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_8 = var_7.__repr__()
    assert var_8 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_9 = var_7.__repr__()
    assert var_9 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_10 = link_6.__repr__()
    assert var_10 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_10 = " Use '"
    section_5 = module_0.Section(str_10, str_10)
    var_11 = section_5.__repr__()
    assert var_11 == 'Section(title=" Use \'")'
    str_11 = "gfRsC:6&{;|"
    section_6 = module_0.Section(str_11, str_11)
    str_12 = "relative_to_docs"
    link_7 = module_0.Link(str_12, section_6)
    str_13 = "gfRsC:6&{;|"
    section_7 = module_0.Section(str_13, str_13)
    str_14 = "0_~6:m!(f5FgU,:rvz"
    none_type_5 = None
    link_8 = module_0.Link(str_14, none_type_5)
    var_12 = link_8.__repr__()
    assert var_12 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_13 = var_12.__repr__()
    assert var_13 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_14 = var_13.__repr__()
    assert var_14 == "'\"Link(title=\\'0_~6:m!(f5FgU,:rvz\\', url=None)\"'"
    int_2 = var_5.__len__()
    assert int_2 == 23


def test_case_373():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    var_1 = var_0.__repr__()
    assert var_1 == "'Section(title=\" Use \\'\")'"
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_1, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_2 = link_0.__repr__()
    assert var_2 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_3 = var_2.__repr__()
    assert var_3 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_4 = var_3.__repr__()
    assert var_4 == "'\"Link(title=\\'0_~6:m!(f5FgU,:rvz\\', url=None)\"'"
    str_2 = "$9.}1Av5,.}"
    link_1 = module_0.Link(str_2, str_2)
    str_3 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_2 = module_0.Link(str_3, none_type_1)
    var_5 = link_2.__repr__()
    assert var_5 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_6 = var_5.__repr__()
    assert var_6 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    iterator_0 = var_5.__iter__()
    str_4 = " Use '"
    section_1 = module_0.Section(str_4, str_4)
    var_7 = section_1.__repr__()
    assert var_7 == 'Section(title=" Use \'")'
    int_0 = var_7.__len__()
    assert int_0 == 23
    str_5 = "page_context"
    section_2 = module_0.Section(str_5, str_5)
    str_6 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_3 = module_0.Link(str_6, none_type_2)
    var_8 = link_3.__repr__()
    assert var_8 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_9 = section_2.__repr__()
    assert var_9 == "Section(title='page_context')"
    str_7 = "S"
    section_3 = module_0.Section(str_7, var_4)
    assert section_3.children == "'\"Link(title=\\'0_~6:m!(f5FgU,:rvz\\', url=None)\"'"


def test_case_374():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    var_1 = var_0.__repr__()
    assert var_1 == "'Section(title=\" Use \\'\")'"
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_1, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    bytes_0 = b"\x802c35Z\xf8"
    link_1 = module_0.Link(link_0, bytes_0)
    var_2 = link_0.__repr__()
    assert var_2 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    iterator_0 = var_2.__iter__()
    bool_0 = True
    link_2 = module_0.Link(bool_0, bool_0)
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_3 = module_0.Link(str_2, none_type_1)
    var_3 = link_3.__repr__()
    assert var_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_4 = var_3.__repr__()
    assert var_4 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    iterator_1 = var_3.__iter__()
    dict_0 = {}
    str_3 = 'y\x0c[fN"W:2&:SWyz~W'
    link_4 = module_0.Link(dict_0, str_3)
    str_4 = " Use '"
    section_1 = module_0.Section(str_4, str_4)
    var_5 = section_1.__repr__()
    assert var_5 == 'Section(title=" Use \'")'
    var_6 = var_5.__repr__()
    assert var_6 == "'Section(title=\" Use \\'\")'"
    str_5 = "gfRsC:6&{;|"
    section_2 = module_0.Section(str_5, str_5)
    str_6 = " Use '"
    section_3 = module_0.Section(str_6, str_6)
    var_7 = section_3.__repr__()
    assert var_7 == 'Section(title=" Use \'")'
    int_0 = var_7.__len__()
    assert int_0 == 23
    var_8 = var_7.__repr__()
    assert var_8 == "'Section(title=\" Use \\'\")'"
    var_9 = var_8.__repr__()
    assert var_9 == "'\\'Section(title=\" Use \\\\\\'\")\\''"
    str_7 = "gfRsC:6&{;|"
    section_4 = module_0.Section(str_7, str_7)
    list_0 = []
    section_5 = module_0.Section(section_4, list_0)
    str_8 = " Use '"
    section_6 = module_0.Section(str_8, str_8)
    var_10 = section_6.__repr__()
    assert var_10 == 'Section(title=" Use \'")'
    section_7 = module_0.Section(str_8, var_10)
    assert section_7.children == 'Section(title=" Use \'")'
    link_5 = module_0.Link(var_10, str_2)
    assert link_5.title == 'Section(title=" Use \'")'


def test_case_375():
    str_0 = "page_context"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = "' from the site because it conflicts with '"
    list_0 = []
    section_1 = module_0.Section(str_1, list_0)
    section_2 = module_0.Section(section_1, list_0)


def test_case_376():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    int_0 = var_0.__len__()
    assert int_0 == 23
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_1, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    int_1 = var_0.__len__()
    assert int_1 == 23
    int_2 = var_0.__len__()
    assert int_2 == 23


def test_case_377():
    str_0 = "gfRsC:6&{;|"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "gfRsC:6&{;|"
    assert section_0.children == "gfRsC:6&{;|"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = " Use '"
    section_1 = module_0.Section(str_1, str_1)
    var_0 = section_1.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    int_0 = var_0.__len__()
    assert int_0 == 23
    var_1 = var_0.__repr__()
    assert var_1 == "'Section(title=\" Use \\'\")'"
    var_2 = var_1.__repr__()
    assert var_2 == "'\\'Section(title=\" Use \\\\\\'\")\\''"
    bool_0 = True
    link_0 = module_0.Link(bool_0, bool_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title is True
    assert link_0.url is True
    dict_0 = {}
    str_2 = 'y\x0c[fN"W:2&:SWyz~W'
    link_1 = module_0.Link(dict_0, str_2)
    section_2 = module_0.Section(str_2, str_2)
    section_3 = module_0.Section(str_2, str_2)
    str_3 = " Use '"
    section_4 = module_0.Section(str_3, str_3)
    var_3 = section_4.__repr__()
    assert var_3 == 'Section(title=" Use \'")'
    str_4 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_2 = module_0.Link(str_4, none_type_0)
    var_4 = link_2.__repr__()
    assert var_4 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    int_1 = var_4.__len__()
    assert int_1 == 42
    str_5 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_3 = module_0.Link(str_5, none_type_1)
    str_6 = var_2.__str__()
    assert str_6 == "'\\'Section(title=\" Use \\\\\\'\")\\''"


def test_case_378():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_1 = var_0.__str__()
    assert str_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_2 = 'C5B_`:"E&+;Y['
    link_1 = module_0.Link(str_2, str_2)
    int_0 = var_0.__len__()
    assert int_0 == 42
    str_3 = "gfRsC:6&{;|"
    section_0 = module_0.Section(str_3, str_3)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "gfRsC:6&{;|"
    assert section_0.children == "gfRsC:6&{;|"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_4 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_2 = module_0.Link(str_4, none_type_1)
    var_2 = link_2.__repr__()
    assert var_2 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_3 = var_2.__repr__()
    assert var_3 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_4 = var_2.__repr__()
    assert var_4 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_5 = link_2.__repr__()
    assert var_5 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_6 = var_3.__repr__()
    assert var_6 == "'\"Link(title=\\'0_~6:m!(f5FgU,:rvz\\', url=None)\"'"


def test_case_379():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    section_1 = module_0.Section(str_0, var_0)
    assert section_1.children == 'Section(title=" Use \'")'
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_1, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_1 = link_0.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_2 = var_1.__repr__()
    assert var_2 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_2 = var_1.__str__()
    assert str_2 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_3 = "gfRsC:6&{;|"
    section_2 = module_0.Section(str_3, str_3)
    list_0 = []
    section_3 = module_0.Section(section_2, list_0)
    str_4 = " Use '"
    section_4 = module_0.Section(str_4, str_4)
    var_3 = section_4.__repr__()
    assert var_3 == 'Section(title=" Use \'")'
    str_5 = "gfRsC:6&{;|"
    section_5 = module_0.Section(str_5, str_5)
    str_6 = "relative_to_docs"
    link_1 = module_0.Link(str_6, section_5)
    section_6 = module_0.Section(section_4, var_3)
    assert section_6.children == 'Section(title=" Use \'")'
    int_0 = var_3.__len__()
    assert int_0 == 23
    none_type_1 = None
    str_7 = "\n        Perform validation for a value.\n\n        The run_validation method should be implemented by subclasses.\n        "
    link_2 = module_0.Link(none_type_1, str_7)
    var_4 = link_2.__repr__()
    assert (
        var_4
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    str_8 = var_4.__str__()
    assert (
        str_8
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    bool_0 = True
    link_3 = module_0.Link(bool_0, bool_0)
    var_5 = var_4.__repr__()
    assert (
        var_5
        == "\"Link(title=[blank], url='\\\\n        Perform validation for a value.\\\\n\\\\n        The run_validation method should be implemented by subclasses.\\\\n        ')\""
    )
    iterator_0 = var_1.__iter__()


def test_case_380():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_1, none_type_1)
    var_2 = link_1.__repr__()
    assert var_2 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_3 = var_2.__repr__()
    assert var_3 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_4 = var_3.__repr__()
    assert var_4 == "'\"Link(title=\\'0_~6:m!(f5FgU,:rvz\\', url=None)\"'"
    str_2 = "gfRsC:6&{;|"
    section_0 = module_0.Section(str_2, str_2)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "gfRsC:6&{;|"
    assert section_0.children == "gfRsC:6&{;|"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_5 = section_0.__repr__()
    assert var_5 == "Section(title='gfRsC:6&{;|')"
    str_3 = 'C5B_`:"E&+;Y['
    link_2 = module_0.Link(str_3, str_3)
    var_6 = var_5.__repr__()
    assert var_6 == "\"Section(title='gfRsC:6&{;|')\""


def test_case_381():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    int_0 = var_0.__len__()
    assert int_0 == 23
    section_1 = module_0.Section(var_0, int_0)
    assert section_1.title == 'Section(title=" Use \'")'
    assert section_1.children == 23
    str_1 = "page_context"
    section_2 = module_0.Section(str_1, str_1)
    str_2 = "' from the site because it conflicts with '"
    list_0 = []
    section_3 = module_0.Section(str_2, list_0)
    section_4 = module_0.Section(section_3, list_0)
    str_3 = " Use '"
    section_5 = module_0.Section(str_3, str_3)
    var_1 = section_5.__repr__()
    assert var_1 == 'Section(title=" Use \'")'
    var_2 = var_1.__repr__()
    assert var_2 == "'Section(title=\" Use \\'\")'"
    str_4 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_4, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    str_5 = " Use '"
    section_6 = module_0.Section(str_5, str_5)
    var_3 = section_6.__repr__()
    assert var_3 == 'Section(title=" Use \'")'
    str_6 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_6, none_type_1)
    var_4 = link_1.__repr__()
    assert var_4 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    int_1 = var_4.__len__()
    assert int_1 == 42
    str_7 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_2 = module_0.Link(str_7, none_type_2)
    bytes_0 = b"\x802c35Z\xf8"
    link_3 = module_0.Link(link_2, bytes_0)
    str_8 = "page_context"
    section_7 = module_0.Section(str_8, str_8)
    str_9 = "' from the site because it conflicts with '"
    list_1 = []
    section_8 = module_0.Section(str_9, list_1)
    var_5 = section_8.__repr__()
    assert var_5 == "Section(title=\"' from the site because it conflicts with '\")"
    section_9 = module_0.Section(str_9, section_7)
    str_10 = "Bh[hf9Xa\x0bxp?P!?_~\x0bm"
    link_4 = module_0.Link(section_7, str_10)


def test_case_382():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_1, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_1 = link_0.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    int_0 = var_1.__len__()
    assert int_0 == 42
    str_2 = " Use '"
    section_1 = module_0.Section(str_2, str_2)
    var_2 = section_1.__repr__()
    assert var_2 == 'Section(title=" Use \'")'
    int_1 = var_2.__len__()
    assert int_1 == 23
    var_3 = var_2.__repr__()
    assert var_3 == "'Section(title=\" Use \\'\")'"
    str_3 = "page_context"
    section_2 = module_0.Section(str_3, str_3)
    str_4 = " Use '"
    section_3 = module_0.Section(str_4, str_4)
    var_4 = section_3.__repr__()
    assert var_4 == 'Section(title=" Use \'")'
    str_5 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_5, none_type_1)
    bytes_0 = b"\x802c35Z\xf8"
    link_2 = module_0.Link(link_1, bytes_0)
    iterator_0 = var_4.__iter__()
    str_6 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_3 = module_0.Link(str_6, none_type_2)
    var_5 = link_3.__repr__()
    assert var_5 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_6 = var_5.__repr__()
    assert var_6 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_7 = " Use '"
    section_4 = module_0.Section(str_7, str_7)
    var_7 = section_4.__repr__()
    assert var_7 == 'Section(title=" Use \'")'
    var_8 = var_7.__repr__()
    assert var_8 == "'Section(title=\" Use \\'\")'"
    str_8 = " Use '"
    section_5 = module_0.Section(str_8, str_8)
    var_9 = section_5.__repr__()
    assert var_9 == 'Section(title=" Use \'")'
    var_10 = var_9.__repr__()
    assert var_10 == "'Section(title=\" Use \\'\")'"
    dict_0 = {}
    str_9 = 'y\x0c[fN"W:2&:SWyz~W'
    link_4 = module_0.Link(dict_0, str_9)
    section_6 = module_0.Section(str_8, var_10)
    assert section_6.children == "'Section(title=\" Use \\'\")'"
    str_10 = " Use '"
    section_7 = module_0.Section(str_10, str_10)
    var_11 = section_7.__repr__()
    assert var_11 == 'Section(title=" Use \'")'
    int_2 = var_11.__len__()
    assert int_2 == 23
    section_8 = module_0.Section(var_11, int_2)
    assert section_8.title == 'Section(title=" Use \'")'
    assert section_8.children == 23
    var_12 = var_3.__repr__()
    assert var_12 == "'\\'Section(title=\" Use \\\\\\'\")\\''"


def test_case_383():
    str_0 = "page_context"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = "' from the site because it conflicts with '"
    list_0 = []
    section_1 = module_0.Section(str_1, list_0)
    var_0 = section_0.__repr__()
    assert var_0 == "Section(title='page_context')"
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_2, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_1 = link_0.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_2 = var_1.__repr__()
    assert var_2 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_3 = var_2.__repr__()
    assert var_3 == "'\"Link(title=\\'0_~6:m!(f5FgU,:rvz\\', url=None)\"'"
    str_3 = " Use '"
    section_2 = module_0.Section(str_3, str_3)
    var_4 = section_2.__repr__()
    assert var_4 == 'Section(title=" Use \'")'
    var_5 = var_4.__repr__()
    assert var_5 == "'Section(title=\" Use \\'\")'"
    bool_0 = True
    section_3 = module_0.Section(bool_0, bool_0)
    none_type_1 = None
    str_4 = "\n        Perform validation for a value.\n\n        The run_validation method should be implemented by subclasses.\n        "
    link_1 = module_0.Link(none_type_1, str_4)
    var_6 = link_1.__repr__()
    assert (
        var_6
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    str_5 = var_6.__str__()
    assert (
        str_5
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    bool_1 = True
    link_2 = module_0.Link(bool_1, bool_1)
    var_7 = var_6.__repr__()
    assert (
        var_7
        == "\"Link(title=[blank], url='\\\\n        Perform validation for a value.\\\\n\\\\n        The run_validation method should be implemented by subclasses.\\\\n        ')\""
    )
    str_6 = " Use '"
    section_4 = module_0.Section(str_6, str_6)
    var_8 = section_4.__repr__()
    assert var_8 == 'Section(title=" Use \'")'
    var_9 = var_8.__repr__()
    assert var_9 == "'Section(title=\" Use \\'\")'"
    str_7 = "gfRsC:6&{;|"
    section_5 = module_0.Section(str_7, str_7)
    str_8 = "page_context"
    section_6 = module_0.Section(str_8, str_8)
    str_9 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_3 = module_0.Link(str_9, none_type_2)
    var_10 = link_3.__repr__()
    assert var_10 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_11 = section_6.__repr__()
    assert var_11 == "Section(title='page_context')"
    str_10 = "page_context"
    section_7 = module_0.Section(str_10, str_10)
    str_11 = "' from the site because it conflicts with '"
    list_1 = []
    section_8 = module_0.Section(str_11, list_1)
    str_12 = "localhost"
    link_4 = module_0.Link(str_11, str_12)
    str_13 = " Use '"
    section_9 = module_0.Section(str_13, str_13)
    var_12 = section_9.__repr__()
    assert var_12 == 'Section(title=" Use \'")'
    var_13 = var_12.__repr__()
    assert var_13 == "'Section(title=\" Use \\'\")'"
    var_14 = var_12.__repr__()
    assert var_14 == "'Section(title=\" Use \\'\")'"
    link_5 = module_0.Link(var_13, var_5)
    assert link_5.title == "'Section(title=\" Use \\'\")'"
    assert link_5.url == "'Section(title=\" Use \\'\")'"


def test_case_384():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    int_0 = var_0.__len__()
    assert int_0 == 23
    str_1 = "page_context"
    section_1 = module_0.Section(str_1, str_1)
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_2, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_1 = link_0.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_2 = section_1.__repr__()
    assert var_2 == "Section(title='page_context')"
    var_3 = var_2.__repr__()
    assert var_3 == "\"Section(title='page_context')\""


def test_case_385():
    str_0 = "gfRsC:6&{;|"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "gfRsC:6&{;|"
    assert section_0.children == "gfRsC:6&{;|"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = " Use '"
    section_1 = module_0.Section(str_1, str_1)
    var_0 = section_1.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    int_0 = var_0.__len__()
    assert int_0 == 23
    var_1 = var_0.__repr__()
    assert var_1 == "'Section(title=\" Use \\'\")'"
    var_2 = var_1.__repr__()
    assert var_2 == "'\\'Section(title=\" Use \\\\\\'\")\\''"
    str_2 = "gfRsC:6&{;|"
    section_2 = module_0.Section(str_2, str_2)
    str_3 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_3, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    bytes_0 = b"\x802c35Z\xf8"
    link_1 = module_0.Link(link_0, bytes_0)
    var_3 = link_0.__repr__()
    assert var_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_4 = " Use '"
    section_3 = module_0.Section(str_4, str_4)
    var_4 = section_3.__repr__()
    assert var_4 == 'Section(title=" Use \'")'
    none_type_1 = None
    section_4 = module_0.Section(none_type_1, none_type_1)
    var_5 = var_1.__repr__()
    assert var_5 == "'\\'Section(title=\" Use \\\\\\'\")\\''"


def test_case_386():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    section_1 = module_0.Section(str_0, var_0)
    assert section_1.children == 'Section(title=" Use \'")'
    none_type_0 = None
    str_1 = "\n        Perform validation for a value.\n\n        The run_validation method should be implemented by subclasses.\n        "
    link_0 = module_0.Link(none_type_0, str_1)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title is None
    assert (
        link_0.url
        == "\n        Perform validation for a value.\n\n        The run_validation method should be implemented by subclasses.\n        "
    )
    var_1 = link_0.__repr__()
    assert (
        var_1
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    str_2 = var_1.__str__()
    assert (
        str_2
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    bool_0 = True
    link_1 = module_0.Link(bool_0, bool_0)
    var_2 = var_1.__repr__()
    assert (
        var_2
        == "\"Link(title=[blank], url='\\\\n        Perform validation for a value.\\\\n\\\\n        The run_validation method should be implemented by subclasses.\\\\n        ')\""
    )
    str_3 = " Use '"
    section_2 = module_0.Section(str_3, str_3)
    var_3 = section_2.__repr__()
    assert var_3 == 'Section(title=" Use \'")'
    int_0 = var_3.__len__()
    assert int_0 == 23
    str_4 = " Use '"
    section_3 = module_0.Section(str_4, str_4)
    var_4 = section_3.__repr__()
    assert var_4 == 'Section(title=" Use \'")'
    var_5 = var_4.__repr__()
    assert var_5 == "'Section(title=\" Use \\'\")'"
    dict_0 = {}
    str_5 = 'y\x0c[fN"W:2&:SWyz~W'
    link_2 = module_0.Link(dict_0, str_5)
    section_4 = module_0.Section(str_4, var_5)
    assert section_4.children == "'Section(title=\" Use \\'\")'"
    str_6 = "page_context"
    section_5 = module_0.Section(str_6, str_6)
    str_7 = " Use '"
    section_6 = module_0.Section(str_7, str_7)
    var_6 = section_6.__repr__()
    assert var_6 == 'Section(title=" Use \'")'
    str_8 = "gfRsC:6&{;|"
    section_7 = module_0.Section(str_8, str_8)
    str_9 = "relative_to_docs"
    link_3 = module_0.Link(str_9, section_7)
    str_10 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_4 = module_0.Link(str_10, none_type_1)
    var_7 = link_4.__repr__()
    assert var_7 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_8 = var_7.__repr__()
    assert var_8 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_9 = var_7.__repr__()
    assert var_9 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_10 = var_5.__repr__()
    assert var_10 == "'\\'Section(title=\" Use \\\\\\'\")\\''"


def test_case_387():
    str_0 = "page_context"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_1, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = section_0.__repr__()
    assert var_1 == "Section(title='page_context')"
    str_2 = "page_context"
    section_1 = module_0.Section(str_2, str_2)
    str_3 = "' from the site because it conflicts with '"
    list_0 = []
    section_2 = module_0.Section(str_3, list_0)
    none_type_1 = None
    str_4 = "\n        Perform validation for a value.\n\n        The run_validation method should be implemented by subclasses.\n        "
    link_1 = module_0.Link(none_type_1, str_4)
    var_2 = link_1.__repr__()
    assert (
        var_2
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    str_5 = var_2.__str__()
    assert (
        str_5
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    str_6 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_2 = module_0.Link(str_6, none_type_2)
    var_3 = link_2.__repr__()
    assert var_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_7 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_3 = module_0.Link(str_7, none_type_3)
    var_4 = link_3.__repr__()
    assert var_4 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_5 = var_4.__repr__()
    assert var_5 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_6 = var_4.__repr__()
    assert var_6 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    link_4 = module_0.Link(var_5, str_5)
    assert link_4.title == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    assert (
        link_4.url
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )


def test_case_388():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    bytes_0 = b"\x802c35Z\xf8"
    link_1 = module_0.Link(link_0, bytes_0)
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_2 = module_0.Link(str_1, none_type_1)
    var_1 = link_2.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_2 = var_1.__repr__()
    assert var_2 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_3 = var_1.__repr__()
    assert var_3 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_2 = " Use '"
    section_0 = module_0.Section(str_2, str_2)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_4 = section_0.__repr__()
    assert var_4 == 'Section(title=" Use \'")'
    int_0 = var_4.__len__()
    assert int_0 == 23
    str_3 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_3 = module_0.Link(str_3, none_type_2)
    int_1 = var_4.__len__()
    assert int_1 == 23
    int_2 = var_4.__len__()
    assert int_2 == 23
    str_4 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_4 = module_0.Link(str_4, none_type_3)
    bytes_1 = b"\x802c35Z\xf8"
    link_5 = module_0.Link(link_4, bytes_1)
    var_5 = link_4.__repr__()
    assert var_5 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    int_3 = var_5.__len__()
    assert int_3 == 42
    str_5 = " Use '"
    section_1 = module_0.Section(str_5, str_5)
    var_6 = section_1.__repr__()
    assert var_6 == 'Section(title=" Use \'")'
    str_6 = 'C5B_`:"E&+;Y['
    link_6 = module_0.Link(str_6, str_6)
    int_4 = var_6.__len__()
    assert int_4 == 23
    str_7 = " Use '"
    section_2 = module_0.Section(str_7, str_7)
    var_7 = section_2.__repr__()
    assert var_7 == 'Section(title=" Use \'")'
    int_5 = var_7.__len__()
    assert int_5 == 23
    var_8 = var_7.__repr__()
    assert var_8 == "'Section(title=\" Use \\'\")'"
    iterator_0 = var_4.__iter__()


def test_case_389():
    str_0 = "gfRsC:6&{;|"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "gfRsC:6&{;|"
    assert section_0.children == "gfRsC:6&{;|"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == "Section(title='gfRsC:6&{;|')"
    bool_0 = True
    section_1 = module_0.Section(bool_0, bool_0)
    list_0 = [var_0, var_0]
    section_2 = module_0.Section(section_0, list_0)
    assert section_2.children == [
        "Section(title='gfRsC:6&{;|')",
        "Section(title='gfRsC:6&{;|')",
    ]


def test_case_390():
    str_0 = "gfRsC:6&{;|"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "gfRsC:6&{;|"
    assert section_0.children == "gfRsC:6&{;|"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == "Section(title='gfRsC:6&{;|')"
    bool_0 = True
    section_1 = module_0.Section(bool_0, bool_0)
    list_0 = [var_0, var_0]
    section_2 = module_0.Section(section_0, list_0)
    assert section_2.children == [
        "Section(title='gfRsC:6&{;|')",
        "Section(title='gfRsC:6&{;|')",
    ]
    none_type_0 = None
    str_1 = "\n        Perform validation for a value.\n\n        The run_validation method should be implemented by subclasses.\n        "
    link_0 = module_0.Link(none_type_0, str_1)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title is None
    assert (
        link_0.url
        == "\n        Perform validation for a value.\n\n        The run_validation method should be implemented by subclasses.\n        "
    )
    var_1 = link_0.__repr__()
    assert (
        var_1
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    str_2 = var_1.__str__()
    assert (
        str_2
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    str_3 = " Use '"
    section_3 = module_0.Section(str_3, str_3)
    var_2 = section_3.__repr__()
    assert var_2 == 'Section(title=" Use \'")'
    int_0 = var_2.__len__()
    assert int_0 == 23
    var_3 = var_2.__repr__()
    assert var_3 == "'Section(title=\" Use \\'\")'"
    link_1 = module_0.Link(list_0, var_0)
    assert link_1.title == [
        "Section(title='gfRsC:6&{;|')",
        "Section(title='gfRsC:6&{;|')",
    ]
    assert link_1.url == "Section(title='gfRsC:6&{;|')"


def test_case_391():
    str_0 = "gfRsC:6&{;|"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "gfRsC:6&{;|"
    assert section_0.children == "gfRsC:6&{;|"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_1, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_2 = var_0.__repr__()
    assert var_2 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_3 = link_0.__repr__()
    assert var_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_2, none_type_1)
    var_4 = link_1.__repr__()
    assert var_4 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_5 = var_4.__repr__()
    assert var_5 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_6 = var_5.__repr__()
    assert var_6 == "'\"Link(title=\\'0_~6:m!(f5FgU,:rvz\\', url=None)\"'"
    dict_0 = {}
    str_3 = 'y\x0c[fN"W:2&:SWyz~W'
    link_2 = module_0.Link(dict_0, str_3)
    str_4 = " Use '"
    section_1 = module_0.Section(str_4, str_4)
    var_7 = section_1.__repr__()
    assert var_7 == 'Section(title=" Use \'")'
    int_0 = var_7.__len__()
    assert int_0 == 23
    str_5 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_3 = module_0.Link(str_5, none_type_2)
    int_1 = var_7.__len__()
    assert int_1 == 23
    int_2 = var_7.__len__()
    assert int_2 == 23
    str_6 = " Use '"
    section_2 = module_0.Section(str_6, str_6)
    var_8 = section_2.__repr__()
    assert var_8 == 'Section(title=" Use \'")'
    int_3 = var_8.__len__()
    assert int_3 == 23
    var_9 = var_8.__repr__()
    assert var_9 == "'Section(title=\" Use \\'\")'"
    str_7 = " Use '"
    section_3 = module_0.Section(str_7, str_7)
    var_10 = section_3.__repr__()
    assert var_10 == 'Section(title=" Use \'")'
    var_11 = var_10.__repr__()
    assert var_11 == "'Section(title=\" Use \\'\")'"
    int_4 = var_5.__len__()
    assert int_4 == 44


def test_case_392():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_1 = " Use '"
    section_0 = module_0.Section(str_1, str_1)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_2 = section_0.__repr__()
    assert var_2 == 'Section(title=" Use \'")'
    str_2 = "gfRsC:6&{;|"
    section_1 = module_0.Section(str_2, str_2)
    str_3 = "relative_to_docs"
    link_1 = module_0.Link(str_3, section_1)
    var_3 = var_1.__repr__()
    assert var_3 == "'\"Link(title=\\'0_~6:m!(f5FgU,:rvz\\', url=None)\"'"


def test_case_393():
    str_0 = "gfRsC:6&{;|"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "gfRsC:6&{;|"
    assert section_0.children == "gfRsC:6&{;|"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    list_0 = []
    section_1 = module_0.Section(section_0, list_0)
    str_1 = "page_context"
    section_2 = module_0.Section(str_1, str_1)
    str_2 = "' from the site because it conflicts with '"
    list_1 = []
    section_3 = module_0.Section(str_2, list_1)
    var_0 = section_3.__repr__()
    assert var_0 == "Section(title=\"' from the site because it conflicts with '\")"
    section_4 = module_0.Section(str_2, section_2)
    int_0 = var_0.__len__()
    assert int_0 == 60
    str_3 = " Use '"
    section_5 = module_0.Section(str_3, str_3)
    var_1 = section_5.__repr__()
    assert var_1 == 'Section(title=" Use \'")'
    int_1 = var_1.__len__()
    assert int_1 == 23
    var_2 = var_1.__repr__()
    assert var_2 == "'Section(title=\" Use \\'\")'"
    str_4 = " Use '"
    section_6 = module_0.Section(str_4, str_4)
    var_3 = section_6.__repr__()
    assert var_3 == 'Section(title=" Use \'")'
    str_5 = "gfRsC:6&{;|"
    section_7 = module_0.Section(str_5, str_5)
    str_6 = "relative_to_docs"
    link_0 = module_0.Link(str_6, section_7)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "relative_to_docs"
    assert (
        f"{type(link_0.url).__module__}.{type(link_0.url).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    section_8 = module_0.Section(section_6, var_3)
    assert section_8.children == 'Section(title=" Use \'")'
    int_2 = var_3.__len__()
    assert int_2 == 23
    var_4 = var_1.__repr__()
    assert var_4 == "'Section(title=\" Use \\'\")'"


def test_case_394():
    str_0 = "gfRsC:6&{;|"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "gfRsC:6&{;|"
    assert section_0.children == "gfRsC:6&{;|"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = 'C5B_`:"E&+;Y['
    link_0 = module_0.Link(str_1, str_1)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == 'C5B_`:"E&+;Y['
    assert link_0.url == 'C5B_`:"E&+;Y['
    str_2 = " Use '"
    section_1 = module_0.Section(str_2, str_2)
    var_0 = section_1.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    var_1 = var_0.__repr__()
    assert var_1 == "'Section(title=\" Use \\'\")'"
    var_2 = var_0.__repr__()
    assert var_2 == "'Section(title=\" Use \\'\")'"
    str_3 = " Use '"
    section_2 = module_0.Section(str_3, str_3)
    var_3 = section_2.__repr__()
    assert var_3 == 'Section(title=" Use \'")'
    int_0 = var_3.__len__()
    assert int_0 == 23
    str_4 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_1 = module_0.Link(str_4, none_type_0)
    int_1 = var_3.__len__()
    assert int_1 == 23
    str_5 = "page_context"
    section_3 = module_0.Section(str_5, str_5)
    str_6 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_2 = module_0.Link(str_6, none_type_1)
    var_4 = link_2.__repr__()
    assert var_4 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_5 = section_3.__repr__()
    assert var_5 == "Section(title='page_context')"
    none_type_2 = None
    section_4 = module_0.Section(none_type_2, none_type_2)
    section_5 = module_0.Section(str_2, str_3)


def test_case_395():
    str_0 = "gfRsC:6&{;|"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "gfRsC:6&{;|"
    assert section_0.children == "gfRsC:6&{;|"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    list_0 = []
    section_1 = module_0.Section(section_0, list_0)
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_1, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    bytes_0 = b"\x802c35Z\xf8"
    link_1 = module_0.Link(link_0, bytes_0)
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    iterator_0 = var_0.__iter__()
    str_2 = " Use '"
    section_2 = module_0.Section(str_2, str_2)
    var_1 = section_2.__repr__()
    assert var_1 == 'Section(title=" Use \'")'
    var_2 = var_1.__repr__()
    assert var_2 == "'Section(title=\" Use \\'\")'"
    dict_0 = {}
    str_3 = 'y\x0c[fN"W:2&:SWyz~W'
    link_2 = module_0.Link(dict_0, str_3)
    section_3 = module_0.Section(str_2, var_2)
    assert section_3.children == "'Section(title=\" Use \\'\")'"
    str_4 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_3 = module_0.Link(str_4, none_type_1)
    var_3 = link_3.__repr__()
    assert var_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_4 = var_3.__repr__()
    assert var_4 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_5 = var_3.__str__()
    assert str_5 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_5 = var_3.__repr__()
    assert var_5 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_6 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_4 = module_0.Link(str_6, none_type_2)
    bytes_1 = b"\x802c35Z\xf8"
    link_5 = module_0.Link(link_4, bytes_1)
    var_6 = link_4.__repr__()
    assert var_6 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_7 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_6 = module_0.Link(str_7, none_type_3)
    var_7 = link_6.__repr__()
    assert var_7 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_8 = var_7.__repr__()
    assert var_8 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    iterator_1 = var_7.__iter__()
    str_8 = "0_~6:m!(f5FgU,:rvz"
    none_type_4 = None
    link_7 = module_0.Link(str_8, none_type_4)
    var_9 = link_7.__repr__()
    assert var_9 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_10 = var_9.__repr__()
    assert var_10 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_11 = var_10.__repr__()
    assert var_11 == "'\"Link(title=\\'0_~6:m!(f5FgU,:rvz\\', url=None)\"'"
    iterator_2 = var_2.__iter__()


def test_case_396():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    bytes_0 = b"\x802c35Z\xf8"
    link_1 = module_0.Link(link_0, bytes_0)
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_1 = " Use '"
    section_0 = module_0.Section(str_1, str_1)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_2 = section_0.__repr__()
    assert var_2 == 'Section(title=" Use \'")'
    var_3 = var_2.__repr__()
    assert var_3 == "'Section(title=\" Use \\'\")'"
    dict_0 = {}
    str_2 = 'y\x0c[fN"W:2&:SWyz~W'
    link_2 = module_0.Link(dict_0, str_2)
    section_1 = module_0.Section(str_1, var_3)
    assert section_1.children == "'Section(title=\" Use \\'\")'"
    dict_1 = {}
    str_3 = 'y\x0c[fN"W:2&:SWyz~W'
    link_3 = module_0.Link(dict_1, str_3)
    section_2 = module_0.Section(str_3, str_3)
    section_3 = module_0.Section(str_3, str_3)
    str_4 = " Use '"
    section_4 = module_0.Section(str_4, str_4)
    var_4 = section_4.__repr__()
    assert var_4 == 'Section(title=" Use \'")'
    str_5 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_4 = module_0.Link(str_5, none_type_1)
    bytes_1 = b"\x802c35Z\xf8"
    link_5 = module_0.Link(link_4, bytes_1)
    iterator_0 = var_4.__iter__()
    str_6 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_6 = module_0.Link(str_6, none_type_2)
    bytes_2 = b"\x802c35Z\xf8"
    link_7 = module_0.Link(link_6, bytes_2)
    var_5 = link_6.__repr__()
    assert var_5 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    int_0 = var_5.__len__()
    assert int_0 == 42
    var_6 = link_5.__repr__()
    assert (
        var_6
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )


def test_case_397():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    int_0 = var_0.__len__()
    assert int_0 == 23
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_1, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    int_1 = var_0.__len__()
    assert int_1 == 23
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_2, none_type_1)
    var_1 = link_1.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_2 = var_1.__repr__()
    assert var_2 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_3 = var_1.__str__()
    assert str_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_4 = " Use '"
    section_1 = module_0.Section(str_4, str_4)
    var_3 = section_1.__repr__()
    assert var_3 == 'Section(title=" Use \'")'
    str_5 = "gfRsC:6&{;|"
    section_2 = module_0.Section(str_5, str_5)
    str_6 = "relative_to_docs"
    link_2 = module_0.Link(str_6, section_2)
    str_7 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_3 = module_0.Link(str_7, none_type_2)
    var_4 = link_3.__repr__()
    assert var_4 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_5 = var_4.__repr__()
    assert var_5 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_8 = "gfRsC:6&{;|"
    section_3 = module_0.Section(str_8, str_8)
    var_6 = section_3.__repr__()
    assert var_6 == "Section(title='gfRsC:6&{;|')"
    bool_0 = True
    section_4 = module_0.Section(bool_0, bool_0)
    list_0 = [var_6, var_6]
    section_5 = module_0.Section(section_3, list_0)
    assert section_5.children == [
        "Section(title='gfRsC:6&{;|')",
        "Section(title='gfRsC:6&{;|')",
    ]
    str_9 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_4 = module_0.Link(str_9, none_type_3)
    bytes_0 = b"\x802c35Z\xf8"
    link_5 = module_0.Link(link_4, bytes_0)
    var_7 = link_4.__repr__()
    assert var_7 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    iterator_0 = var_7.__iter__()
    str_10 = "$9.}1Av5,.}"
    link_6 = module_0.Link(str_10, str_10)
    str_11 = "page_context"
    section_6 = module_0.Section(str_11, str_11)
    str_12 = "' from the site because it conflicts with '"
    list_1 = []
    section_7 = module_0.Section(str_12, list_1)
    var_8 = section_7.__repr__()
    assert var_8 == "Section(title=\"' from the site because it conflicts with '\")"
    str_13 = "0_~6:m!(f5FgU,:rvz"
    none_type_4 = None
    link_7 = module_0.Link(str_13, none_type_4)
    var_9 = link_7.__repr__()
    assert var_9 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_10 = var_9.__repr__()
    assert var_10 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_11 = var_10.__repr__()
    assert var_11 == "'\"Link(title=\\'0_~6:m!(f5FgU,:rvz\\', url=None)\"'"
    section_8 = module_0.Section(str_3, var_10)
    assert section_8.title == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    assert section_8.children == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""


def test_case_398():
    str_0 = "page_context"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = "' from the site because it conflicts with '"
    list_0 = []
    section_1 = module_0.Section(str_1, list_0)
    var_0 = section_1.__repr__()
    assert var_0 == "Section(title=\"' from the site because it conflicts with '\")"
    section_2 = module_0.Section(str_1, section_0)
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_2, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_1 = link_0.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_2 = var_1.__repr__()
    assert var_2 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    iterator_0 = var_1.__iter__()
    str_3 = " Use '"
    section_3 = module_0.Section(str_3, str_3)
    var_3 = section_3.__repr__()
    assert var_3 == 'Section(title=" Use \'")'
    str_4 = 'C5B_`:"E&+;Y['
    link_1 = module_0.Link(str_4, str_4)
    int_0 = var_3.__len__()
    assert int_0 == 23
    str_5 = "$9.}1Av5,.}"
    link_2 = module_0.Link(str_5, str_5)
    var_4 = var_3.__repr__()
    assert var_4 == "'Section(title=\" Use \\'\")'"
    str_6 = var_3.__str__()
    assert str_6 == 'Section(title=" Use \'")'


def test_case_399():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_1 = "gfRsC:6&{;|"
    section_0 = module_0.Section(str_1, str_1)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "gfRsC:6&{;|"
    assert section_0.children == "gfRsC:6&{;|"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    list_0 = []
    section_1 = module_0.Section(section_0, list_0)
    str_2 = " Use '"
    section_2 = module_0.Section(str_2, str_2)
    var_2 = section_2.__repr__()
    assert var_2 == 'Section(title=" Use \'")'
    str_3 = "gfRsC:6&{;|"
    section_3 = module_0.Section(str_3, str_3)
    str_4 = "relative_to_docs"
    link_1 = module_0.Link(str_4, section_3)
    section_4 = module_0.Section(section_2, var_2)
    assert section_4.children == 'Section(title=" Use \'")'
    none_type_1 = None
    str_5 = "\n        Perform validation for a value.\n\n        The run_validation method should be implemented by subclasses.\n        "
    link_2 = module_0.Link(none_type_1, str_5)
    var_3 = link_2.__repr__()
    assert (
        var_3
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    str_6 = var_3.__str__()
    assert (
        str_6
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    str_7 = " Use '"
    section_5 = module_0.Section(str_7, str_7)
    var_4 = section_5.__repr__()
    assert var_4 == 'Section(title=" Use \'")'
    var_5 = var_4.__repr__()
    assert var_5 == "'Section(title=\" Use \\'\")'"
    str_8 = "page_context"
    section_6 = module_0.Section(str_8, str_8)
    str_9 = "' from the site because it conflicts with '"
    list_1 = []
    section_7 = module_0.Section(str_9, list_1)
    str_10 = " Use '"
    section_8 = module_0.Section(str_10, str_10)
    var_6 = section_8.__repr__()
    assert var_6 == 'Section(title=" Use \'")'
    int_0 = var_6.__len__()
    assert int_0 == 23
    str_11 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_3 = module_0.Link(str_11, none_type_2)
    int_1 = var_6.__len__()
    assert int_1 == 23
    str_12 = " Use '"
    section_9 = module_0.Section(str_12, str_12)
    var_7 = section_9.__repr__()
    assert var_7 == 'Section(title=" Use \'")'
    str_13 = var_0.__str__()
    assert str_13 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"


def test_case_400():
    str_0 = "page_context"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = "' from the site because it conflicts with '"
    list_0 = []
    section_1 = module_0.Section(str_1, list_0)
    var_0 = section_0.__repr__()
    assert var_0 == "Section(title='page_context')"
    str_2 = "gfRsC:6&{;|"
    section_2 = module_0.Section(str_2, str_2)
    str_3 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_3, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_1 = link_0.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_2 = var_1.__repr__()
    assert var_2 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_3 = var_1.__repr__()
    assert var_3 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_4 = link_0.__repr__()
    assert var_4 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_5 = var_3.__repr__()
    assert var_5 == "'\"Link(title=\\'0_~6:m!(f5FgU,:rvz\\', url=None)\"'"


def test_case_401():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_2 = var_1.__repr__()
    assert var_2 == "'\"Link(title=\\'0_~6:m!(f5FgU,:rvz\\', url=None)\"'"
    str_1 = "page_context"
    section_0 = module_0.Section(str_1, str_1)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_2 = "' from the site because it conflicts with '"
    list_0 = []
    section_1 = module_0.Section(str_2, list_0)
    str_3 = "localhost"
    link_1 = module_0.Link(str_2, str_3)
    str_4 = " Use '"
    section_2 = module_0.Section(str_4, str_4)
    var_3 = section_2.__repr__()
    assert var_3 == 'Section(title=" Use \'")'
    str_5 = "gfRsC:6&{;|"
    section_3 = module_0.Section(str_5, str_5)
    str_6 = "relative_to_docs"
    link_2 = module_0.Link(str_6, section_3)
    str_7 = " Use '"
    section_4 = module_0.Section(str_7, str_7)
    var_4 = section_4.__repr__()
    assert var_4 == 'Section(title=" Use \'")'
    str_8 = "gfRsC:6&{;|"
    section_5 = module_0.Section(str_8, str_8)
    list_1 = []
    section_6 = module_0.Section(section_5, list_1)
    str_9 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_3 = module_0.Link(str_9, none_type_1)
    var_5 = link_3.__repr__()
    assert var_5 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_6 = var_5.__repr__()
    assert var_6 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    iterator_0 = var_5.__iter__()
    str_10 = " Use '"
    section_7 = module_0.Section(str_10, str_10)
    var_7 = section_7.__repr__()
    assert var_7 == 'Section(title=" Use \'")'
    int_0 = var_7.__len__()
    assert int_0 == 23
    var_8 = var_7.__repr__()
    assert var_8 == "'Section(title=\" Use \\'\")'"
    int_1 = var_0.__len__()
    assert int_1 == 42


def test_case_402():
    set_0 = set()
    navigation_0 = module_0.Navigation(set_0, set_0)
    assert (
        f"{type(navigation_0).__module__}.{type(navigation_0).__qualname__}"
        == "mkdocs.structure.nav.Navigation"
    )
    assert len(navigation_0) == 0
    str_0 = navigation_0.__str__()


def test_case_403():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_1 = var_0.__str__()
    assert str_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_2 = var_0.__repr__()
    assert var_2 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_2 = " Use '"
    section_0 = module_0.Section(str_2, str_2)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_3 = section_0.__repr__()
    assert var_3 == 'Section(title=" Use \'")'
    section_1 = module_0.Section(str_2, var_3)
    assert section_1.children == 'Section(title=" Use \'")'
    str_3 = "page_context"
    section_2 = module_0.Section(str_3, str_3)
    str_4 = "' from the site because it conflicts with '"
    list_0 = []
    section_3 = module_0.Section(str_4, list_0)
    link_1 = module_0.Link(str_4, str_4)


def test_case_404():
    str_0 = "gfRsC:6&{;|"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "gfRsC:6&{;|"
    assert section_0.children == "gfRsC:6&{;|"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_1, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    bytes_0 = b"\x802c35Z\xf8"
    link_1 = module_0.Link(link_0, bytes_0)
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    iterator_0 = var_0.__iter__()
    str_2 = "page_context"
    section_1 = module_0.Section(str_2, str_2)
    int_0 = var_0.__len__()
    assert int_0 == 42


def test_case_405():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    bytes_0 = b"\x802c35Z\xf8"
    link_1 = module_0.Link(link_0, bytes_0)
    bool_0 = True
    section_0 = module_0.Section(bool_0, bool_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title is True
    assert section_0.children is True
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = link_1.__repr__()
    assert (
        var_0
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )
    str_1 = var_0.__str__()
    assert (
        str_1
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )


def test_case_406():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    var_1 = var_0.__repr__()
    assert var_1 == "'Section(title=\" Use \\'\")'"
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_1, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    bytes_0 = b"\x802c35Z\xf8"
    link_1 = module_0.Link(link_0, bytes_0)
    dict_0 = {}
    str_2 = 'y\x0c[fN"W:2&:SWyz~W'
    link_2 = module_0.Link(dict_0, str_2)
    var_2 = link_1.__repr__()
    assert (
        var_2
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )
    str_3 = "page_context"
    section_1 = module_0.Section(str_3, str_3)
    str_4 = "' from the site because it conflicts with '"
    list_0 = []
    section_2 = module_0.Section(str_4, list_0)
    var_3 = section_2.__repr__()
    assert var_3 == "Section(title=\"' from the site because it conflicts with '\")"
    section_3 = module_0.Section(str_4, section_1)
    int_0 = var_3.__len__()
    assert int_0 == 60
    str_5 = "page_context"
    section_4 = module_0.Section(str_5, str_5)
    str_6 = "' from the site because it conflicts with '"
    list_1 = []
    section_5 = module_0.Section(str_6, list_1)
    var_4 = section_4.__repr__()
    assert var_4 == "Section(title='page_context')"
    str_7 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_3 = module_0.Link(str_7, none_type_1)
    bytes_1 = b"\x802c35Z\xf8"
    link_4 = module_0.Link(link_3, bytes_1)
    var_5 = link_3.__repr__()
    assert var_5 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    iterator_0 = var_5.__iter__()
    none_type_2 = None
    str_8 = "\n        Perform validation for a value.\n\n        The run_validation method should be implemented by subclasses.\n        "
    link_5 = module_0.Link(none_type_2, str_8)
    var_6 = link_5.__repr__()
    assert (
        var_6
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    str_9 = var_6.__str__()
    assert (
        str_9
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    bool_0 = True
    link_6 = module_0.Link(bool_0, bool_0)
    var_7 = var_6.__repr__()
    assert (
        var_7
        == "\"Link(title=[blank], url='\\\\n        Perform validation for a value.\\\\n\\\\n        The run_validation method should be implemented by subclasses.\\\\n        ')\""
    )
    str_10 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_7 = module_0.Link(str_10, none_type_3)
    var_8 = link_7.__repr__()
    assert var_8 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_9 = var_8.__repr__()
    assert var_9 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    iterator_1 = var_8.__iter__()
    str_11 = " Use '"
    section_6 = module_0.Section(str_11, str_11)
    var_10 = section_6.__repr__()
    assert var_10 == 'Section(title=" Use \'")'
    str_12 = 'C5B_`:"E&+;Y['
    link_8 = module_0.Link(str_12, str_12)
    int_1 = var_10.__len__()
    assert int_1 == 23
    str_13 = "0_~6:m!(f5FgU,:rvz"
    none_type_4 = None
    link_9 = module_0.Link(str_13, none_type_4)
    bytes_2 = b"\x802c35Z\xf8"
    link_10 = module_0.Link(link_9, bytes_2)
    bool_1 = True
    section_7 = module_0.Section(bool_1, bool_1)
    var_11 = link_10.__repr__()
    assert (
        var_11
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )
    str_14 = var_11.__str__()
    assert (
        str_14
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )
    bool_2 = True
    tuple_0 = (var_3, var_2, bool_2)
    link_11 = module_0.Link(tuple_0, str_2)
    assert link_11.title == (
        "Section(title=\"' from the site because it conflicts with '\")",
        "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')",
        True,
    )


def test_case_407():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_2 = var_1.__repr__()
    assert var_2 == "'\"Link(title=\\'0_~6:m!(f5FgU,:rvz\\', url=None)\"'"
    str_1 = "gfRsC:6&{;|"
    section_0 = module_0.Section(str_1, str_1)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "gfRsC:6&{;|"
    assert section_0.children == "gfRsC:6&{;|"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_2, none_type_1)
    var_3 = link_1.__repr__()
    assert var_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_4 = var_3.__repr__()
    assert var_4 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_5 = var_3.__repr__()
    assert var_5 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_6 = link_1.__repr__()
    assert var_6 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    dict_0 = {}
    str_3 = 'y\x0c[fN"W:2&:SWyz~W'
    link_2 = module_0.Link(dict_0, str_3)
    str_4 = " Use '"
    section_1 = module_0.Section(str_4, str_4)
    var_7 = section_1.__repr__()
    assert var_7 == 'Section(title=" Use \'")'
    str_5 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_3 = module_0.Link(str_5, none_type_2)
    bytes_0 = b"\x802c35Z\xf8"
    link_4 = module_0.Link(link_3, bytes_0)
    iterator_0 = var_7.__iter__()
    str_6 = "page_context"
    section_2 = module_0.Section(str_6, str_6)
    str_7 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_5 = module_0.Link(str_7, none_type_3)
    var_8 = link_5.__repr__()
    assert var_8 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_9 = section_2.__repr__()
    assert var_9 == "Section(title='page_context')"
    str_8 = "page_context"
    section_3 = module_0.Section(str_8, str_8)
    str_9 = "' from the site because it conflicts with '"
    list_0 = []
    section_4 = module_0.Section(str_9, list_0)
    var_10 = section_4.__repr__()
    assert var_10 == "Section(title=\"' from the site because it conflicts with '\")"
    section_5 = module_0.Section(str_9, section_3)
    str_10 = "0_~6:m!(f5FgU,:rvz"
    none_type_4 = None
    link_6 = module_0.Link(str_10, none_type_4)
    str_11 = "0_~6:m!(f5FgU,:rvz"
    none_type_5 = None
    link_7 = module_0.Link(str_11, none_type_5)
    var_11 = link_7.__repr__()
    assert var_11 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_12 = var_11.__repr__()
    assert var_12 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_13 = var_12.__repr__()
    assert var_13 == "'\"Link(title=\\'0_~6:m!(f5FgU,:rvz\\', url=None)\"'"
    link_8 = module_0.Link(str_9, str_0)


def test_case_408():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    bytes_0 = b"\x802c35Z\xf8"
    link_1 = module_0.Link(link_0, bytes_0)
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    int_0 = var_0.__len__()
    assert int_0 == 42
    str_1 = "page_context"
    section_0 = module_0.Section(str_1, str_1)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_2 = "' from the site because it conflicts with '"
    list_0 = []
    section_1 = module_0.Section(str_2, list_0)
    var_1 = section_1.__repr__()
    assert var_1 == "Section(title=\"' from the site because it conflicts with '\")"
    section_2 = module_0.Section(str_1, bytes_0)


def test_case_409():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    str_1 = " Use '"
    section_0 = module_0.Section(str_1, str_1)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_2, none_type_1)
    bytes_0 = b"\x802c35Z\xf8"
    link_2 = module_0.Link(link_1, bytes_0)
    iterator_0 = var_0.__iter__()
    dict_0 = {}
    str_3 = 'y\x0c[fN"W:2&:SWyz~W'
    link_3 = module_0.Link(dict_0, str_3)
    section_1 = module_0.Section(str_3, str_3)
    str_4 = " Use '"
    section_2 = module_0.Section(str_4, str_4)
    var_1 = section_2.__repr__()
    assert var_1 == 'Section(title=" Use \'")'
    var_2 = var_1.__repr__()
    assert var_2 == "'Section(title=\" Use \\'\")'"
    str_5 = "gfRsC:6&{;|"
    section_3 = module_0.Section(str_5, str_5)
    list_0 = []
    section_4 = module_0.Section(section_3, list_0)
    str_6 = " Use '"
    section_5 = module_0.Section(str_6, str_6)
    var_3 = section_5.__repr__()
    assert var_3 == 'Section(title=" Use \'")'
    str_7 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_4 = module_0.Link(str_7, none_type_2)
    var_4 = link_4.__repr__()
    assert var_4 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    int_0 = var_4.__len__()
    assert int_0 == 42
    int_1 = var_4.__len__()
    assert int_1 == 42


def test_case_410():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    bytes_0 = b"\x802c35Z\xf8"
    link_1 = module_0.Link(link_0, bytes_0)
    str_1 = "page_context"
    section_0 = module_0.Section(str_1, str_1)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_2 = "' from the site because it conflicts with '"
    list_0 = []
    section_1 = module_0.Section(str_2, list_0)
    section_2 = module_0.Section(section_1, list_0)
    bool_0 = True
    link_2 = module_0.Link(bool_0, bool_0)
    str_3 = " Use '"
    section_3 = module_0.Section(str_3, str_3)
    var_0 = section_3.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    var_1 = var_0.__repr__()
    assert var_1 == "'Section(title=\" Use \\'\")'"
    str_4 = " Use '"
    section_4 = module_0.Section(str_4, str_4)
    var_2 = section_4.__repr__()
    assert var_2 == 'Section(title=" Use \'")'
    str_5 = 'C5B_`:"E&+;Y['
    link_3 = module_0.Link(str_5, str_5)
    int_0 = var_2.__len__()
    assert int_0 == 23
    str_6 = "gfRsC:6&{;|"
    section_5 = module_0.Section(str_6, str_6)
    var_3 = section_5.__repr__()
    assert var_3 == "Section(title='gfRsC:6&{;|')"
    bool_1 = True
    section_6 = module_0.Section(bool_1, bool_1)
    list_1 = [var_3, var_3]
    section_7 = module_0.Section(section_5, list_1)
    assert section_7.children == [
        "Section(title='gfRsC:6&{;|')",
        "Section(title='gfRsC:6&{;|')",
    ]
    iterator_0 = var_1.__iter__()


def test_case_411():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    bytes_0 = b"\x802c35Z\xf8"
    link_1 = module_0.Link(link_0, bytes_0)
    str_1 = " Use '"
    section_0 = module_0.Section(str_1, str_1)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_2 = module_0.Link(str_2, none_type_1)
    bytes_1 = b"\x802c35Z\xf8"
    link_3 = module_0.Link(link_2, bytes_1)
    iterator_0 = var_0.__iter__()
    str_3 = "gfRsC:6&{;|"
    section_1 = module_0.Section(str_3, str_3)
    str_4 = "page_context"
    section_2 = module_0.Section(str_4, str_4)
    str_5 = "' from the site because it conflicts with '"
    list_0 = []
    section_3 = module_0.Section(str_5, list_0)
    bool_0 = True
    section_4 = module_0.Section(bool_0, bool_0)
    str_6 = " Use '"
    section_5 = module_0.Section(str_6, str_6)
    var_1 = section_5.__repr__()
    assert var_1 == 'Section(title=" Use \'")'
    var_2 = var_1.__repr__()
    assert var_2 == "'Section(title=\" Use \\'\")'"
    str_7 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_4 = module_0.Link(str_7, none_type_2)
    bytes_2 = b"\x802c35Z\xf8"
    link_5 = module_0.Link(link_4, bytes_2)
    bool_1 = True
    section_6 = module_0.Section(bool_1, bool_1)
    var_3 = link_5.__repr__()
    assert (
        var_3
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )
    str_8 = var_3.__str__()
    assert (
        str_8
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )
    str_9 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_6 = module_0.Link(str_9, none_type_3)
    var_4 = link_6.__repr__()
    assert var_4 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_5 = var_4.__repr__()
    assert var_5 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_6 = var_0.__repr__()
    assert var_6 == "'Section(title=\" Use \\'\")'"


def test_case_412():
    none_type_0 = None
    str_0 = "\n        Perform validation for a value.\n\n        The run_validation method should be implemented by subclasses.\n        "
    link_0 = module_0.Link(none_type_0, str_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title is None
    assert (
        link_0.url
        == "\n        Perform validation for a value.\n\n        The run_validation method should be implemented by subclasses.\n        "
    )
    var_0 = link_0.__repr__()
    assert (
        var_0
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    str_1 = var_0.__str__()
    assert (
        str_1
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_2, none_type_1)
    var_1 = link_1.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_2 = var_1.__repr__()
    assert var_2 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_3 = var_1.__str__()
    assert str_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_3 = var_1.__repr__()
    assert var_3 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_4 = " Use '"
    section_0 = module_0.Section(str_4, str_4)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_4 = section_0.__repr__()
    assert var_4 == 'Section(title=" Use \'")'
    var_5 = var_4.__repr__()
    assert var_5 == "'Section(title=\" Use \\'\")'"
    str_5 = " Use '"
    section_1 = module_0.Section(str_5, str_5)
    var_6 = section_1.__repr__()
    assert var_6 == 'Section(title=" Use \'")'
    str_6 = "gfRsC:6&{;|"
    section_2 = module_0.Section(str_6, str_6)
    str_7 = "relative_to_docs"
    link_2 = module_0.Link(str_7, section_2)
    section_3 = module_0.Section(section_1, var_6)
    assert section_3.children == 'Section(title=" Use \'")'
    str_8 = "gfRsC:6&{;|"
    section_4 = module_0.Section(str_8, str_8)
    var_7 = section_4.__repr__()
    assert var_7 == "Section(title='gfRsC:6&{;|')"
    str_9 = " Use '"
    section_5 = module_0.Section(str_9, str_9)
    var_8 = section_5.__repr__()
    assert var_8 == 'Section(title=" Use \'")'
    str_10 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_3 = module_0.Link(str_10, none_type_2)
    bytes_0 = b"\x802c35Z\xf8"
    link_4 = module_0.Link(link_3, bytes_0)
    iterator_0 = var_8.__iter__()
    str_11 = " Use '"
    section_6 = module_0.Section(str_11, str_11)
    var_9 = section_6.__repr__()
    assert var_9 == 'Section(title=" Use \'")'
    var_10 = var_9.__repr__()
    assert var_10 == "'Section(title=\" Use \\'\")'"
    var_11 = var_9.__repr__()
    assert var_11 == "'Section(title=\" Use \\'\")'"
    str_12 = " Use '"
    section_7 = module_0.Section(str_12, str_12)
    var_12 = section_7.__repr__()
    assert var_12 == 'Section(title=" Use \'")'
    int_0 = var_12.__len__()
    assert int_0 == 23
    str_13 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_5 = module_0.Link(str_13, none_type_3)
    int_1 = var_12.__len__()
    assert int_1 == 23
    str_14 = "gfRsC:6&{;|"
    section_8 = module_0.Section(str_14, str_14)
    var_13 = section_8.__repr__()
    assert var_13 == "Section(title='gfRsC:6&{;|')"
    bool_0 = True
    section_9 = module_0.Section(bool_0, bool_0)
    list_0 = [var_13, var_13]
    section_10 = module_0.Section(section_8, list_0)
    assert section_10.children == [
        "Section(title='gfRsC:6&{;|')",
        "Section(title='gfRsC:6&{;|')",
    ]
    section_11 = module_0.Section(link_1, section_2)


def test_case_413():
    str_0 = "page_context"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = " Use '"
    section_1 = module_0.Section(str_1, str_1)
    var_0 = section_1.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    var_1 = var_0.__repr__()
    assert var_1 == "'Section(title=\" Use \\'\")'"
    dict_0 = {}
    str_2 = 'y\x0c[fN"W:2&:SWyz~W'
    link_0 = module_0.Link(dict_0, str_2)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == {}
    assert link_0.url == 'y\x0c[fN"W:2&:SWyz~W'
    section_2 = module_0.Section(str_1, var_1)
    assert section_2.children == "'Section(title=\" Use \\'\")'"
    str_3 = "page_context"
    section_3 = module_0.Section(str_3, str_3)
    str_4 = "' from the site because it conflicts with '"
    list_0 = []
    section_4 = module_0.Section(str_4, list_0)
    var_2 = section_4.__repr__()
    assert var_2 == "Section(title=\"' from the site because it conflicts with '\")"
    str_5 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_1 = module_0.Link(str_5, none_type_0)
    var_3 = link_1.__repr__()
    assert var_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_4 = var_3.__repr__()
    assert var_4 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_6 = var_3.__str__()
    assert str_6 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_7 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_2 = module_0.Link(str_7, none_type_1)
    str_8 = " Use '"
    section_5 = module_0.Section(str_8, str_8)
    var_5 = section_5.__repr__()
    assert var_5 == 'Section(title=" Use \'")'
    var_6 = var_5.__repr__()
    assert var_6 == "'Section(title=\" Use \\'\")'"
    var_7 = var_5.__repr__()
    assert var_7 == "'Section(title=\" Use \\'\")'"
    str_9 = 'C5B_`:"E&+;Y['
    link_3 = module_0.Link(str_9, str_9)
    str_10 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_4 = module_0.Link(str_10, none_type_2)
    var_8 = link_4.__repr__()
    assert var_8 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_9 = var_8.__repr__()
    assert var_9 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_10 = var_9.__repr__()
    assert var_10 == "'\"Link(title=\\'0_~6:m!(f5FgU,:rvz\\', url=None)\"'"
    str_11 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_5 = module_0.Link(str_11, none_type_3)
    var_11 = link_5.__repr__()
    assert var_11 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_12 = var_9.__repr__()
    assert var_12 == "'\"Link(title=\\'0_~6:m!(f5FgU,:rvz\\', url=None)\"'"


def test_case_414():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    bytes_0 = b"\x802c35Z\xf8"
    link_1 = module_0.Link(link_0, bytes_0)
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_1 = "gfRsC:6&{;|"
    section_0 = module_0.Section(str_1, str_1)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "gfRsC:6&{;|"
    assert section_0.children == "gfRsC:6&{;|"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_2 = section_0.__repr__()
    assert var_2 == "Section(title='gfRsC:6&{;|')"
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_2 = module_0.Link(str_2, none_type_1)
    var_3 = link_2.__repr__()
    assert var_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_4 = var_3.__repr__()
    assert var_4 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_3 = var_3.__str__()
    assert str_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_4 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_3 = module_0.Link(str_4, none_type_2)
    var_5 = link_3.__repr__()
    assert var_5 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_6 = var_5.__repr__()
    assert var_6 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_5 = var_5.__str__()
    assert str_5 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_6 = 'C5B_`:"E&+;Y['
    link_4 = module_0.Link(str_6, str_6)
    int_0 = var_5.__len__()
    assert int_0 == 42
    str_7 = "python"
    link_5 = module_0.Link(str_1, str_7)


def test_case_415():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    bytes_0 = b"\x802c35Z\xf8"
    link_1 = module_0.Link(link_0, bytes_0)
    dict_0 = {}
    str_1 = 'y\x0c[fN"W:2&:SWyz~W'
    link_2 = module_0.Link(dict_0, str_1)
    var_0 = link_1.__repr__()
    assert (
        var_0
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )
    str_2 = "page_context"
    section_0 = module_0.Section(str_2, str_2)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_3 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_3 = module_0.Link(str_3, none_type_1)
    var_1 = link_3.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_2 = section_0.__repr__()
    assert var_2 == "Section(title='page_context')"
    str_4 = "$9.}1Av5,.}"
    link_4 = module_0.Link(str_4, str_4)
    str_5 = "page_context"
    section_1 = module_0.Section(str_5, str_5)
    str_6 = "' from the site because it conflicts with '"
    list_0 = []
    section_2 = module_0.Section(str_6, list_0)
    var_3 = section_2.__repr__()
    assert var_3 == "Section(title=\"' from the site because it conflicts with '\")"
    str_7 = 'C5B_`:"E&+;Y['
    link_5 = module_0.Link(str_7, str_7)
    str_8 = "page_context"
    section_3 = module_0.Section(str_8, str_8)
    str_9 = "' from the site because it conflicts with '"
    list_1 = []
    section_4 = module_0.Section(str_9, list_1)
    var_4 = section_3.__repr__()
    assert var_4 == "Section(title='page_context')"
    str_10 = var_1.__str__()
    assert str_10 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"


def test_case_416():
    str_0 = "jXt{G!+9"
    int_0 = -1857
    link_0 = module_0.Link(str_0, int_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "jXt{G!+9"
    assert link_0.url == -1857


def test_case_417():
    str_0 = "gfRsC:6&{;|"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "gfRsC:6&{;|"
    assert section_0.children == "gfRsC:6&{;|"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = " Use '"
    section_1 = module_0.Section(str_1, str_1)
    var_0 = section_1.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_2, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    bytes_0 = b"\x802c35Z\xf8"
    link_1 = module_0.Link(link_0, bytes_0)
    iterator_0 = var_0.__iter__()
    var_1 = link_1.__repr__()
    assert (
        var_1
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )


def test_case_418():
    str_0 = "page_context"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_1, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_2 = var_0.__str__()
    assert str_2 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_3 = 'C5B_`:"E&+;Y['
    link_1 = module_0.Link(str_3, str_3)
    int_0 = var_0.__len__()
    assert int_0 == 42
    section_1 = module_0.Section(str_1, var_1)
    assert section_1.children == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""


def test_case_419():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    var_1 = var_0.__repr__()
    assert var_1 == "'Section(title=\" Use \\'\")'"
    dict_0 = {}
    str_1 = 'y\x0c[fN"W:2&:SWyz~W'
    link_0 = module_0.Link(dict_0, str_1)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == {}
    assert link_0.url == 'y\x0c[fN"W:2&:SWyz~W'
    section_1 = module_0.Section(str_0, var_1)
    assert section_1.children == "'Section(title=\" Use \\'\")'"
    str_2 = "u"
    link_1 = module_0.Link(str_1, str_2)


def test_case_420():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    var_1 = var_0.__repr__()
    assert var_1 == "'Section(title=\" Use \\'\")'"
    set_0 = set()
    navigation_0 = module_0.Navigation(set_0, set_0)
    assert (
        f"{type(navigation_0).__module__}.{type(navigation_0).__qualname__}"
        == "mkdocs.structure.nav.Navigation"
    )
    assert len(navigation_0) == 0
    str_1 = navigation_0.__str__()
    iterator_0 = var_1.__iter__()


def test_case_421():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    var_1 = var_0.__repr__()
    assert var_1 == "'Section(title=\" Use \\'\")'"
    set_0 = set()
    navigation_0 = module_0.Navigation(set_0, set_0)
    assert (
        f"{type(navigation_0).__module__}.{type(navigation_0).__qualname__}"
        == "mkdocs.structure.nav.Navigation"
    )
    assert len(navigation_0) == 0
    str_1 = navigation_0.__str__()
    iterator_0 = var_1.__iter__()
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_2, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_2 = link_0.__repr__()
    assert var_2 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_3 = var_2.__repr__()
    assert var_3 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_4 = var_3.__repr__()
    assert var_4 == "'\"Link(title=\\'0_~6:m!(f5FgU,:rvz\\', url=None)\"'"
    str_3 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_3, none_type_1)
    var_5 = link_1.__repr__()
    assert var_5 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_6 = var_5.__repr__()
    assert var_6 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_4 = var_5.__str__()
    assert str_4 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_5 = " Use '"
    section_1 = module_0.Section(str_5, str_5)
    var_7 = section_1.__repr__()
    assert var_7 == 'Section(title=" Use \'")'
    section_2 = module_0.Section(str_5, var_7)
    assert section_2.children == 'Section(title=" Use \'")'
    dict_0 = {}
    str_6 = 'y\x0c[fN"W:2&:SWyz~W'
    link_2 = module_0.Link(dict_0, str_6)
    section_3 = module_0.Section(str_6, str_6)
    str_7 = var_0.__str__()
    assert str_7 == 'Section(title=" Use \'")'


def test_case_422():
    none_type_0 = None
    str_0 = "\n        Perform validation for a value.\n\n        The run_validation method should be implemented by subclasses.\n        "
    link_0 = module_0.Link(none_type_0, str_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title is None
    assert (
        link_0.url
        == "\n        Perform validation for a value.\n\n        The run_validation method should be implemented by subclasses.\n        "
    )
    var_0 = link_0.__repr__()
    assert (
        var_0
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    str_1 = var_0.__str__()
    assert (
        str_1
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    str_2 = " Use '"
    section_0 = module_0.Section(str_2, str_2)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_1 = section_0.__repr__()
    assert var_1 == 'Section(title=" Use \'")'
    var_2 = var_1.__repr__()
    assert var_2 == "'Section(title=\" Use \\'\")'"
    str_3 = "gfRsC:6&{;|"
    section_1 = module_0.Section(str_3, str_3)
    str_4 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_4, none_type_1)
    var_3 = link_1.__repr__()
    assert var_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_4 = var_3.__repr__()
    assert var_4 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_5 = var_3.__repr__()
    assert var_5 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_6 = link_1.__repr__()
    assert var_6 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_5 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_2 = module_0.Link(str_5, none_type_2)
    bytes_0 = b"\x802c35Z\xf8"
    link_3 = module_0.Link(link_2, bytes_0)
    var_7 = link_2.__repr__()
    assert var_7 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_6 = "page_context"
    section_2 = module_0.Section(str_6, str_6)
    str_7 = "' from the site because it conflicts with '"
    list_0 = []
    section_3 = module_0.Section(str_7, list_0)
    var_8 = section_3.__repr__()
    assert var_8 == "Section(title=\"' from the site because it conflicts with '\")"
    section_4 = module_0.Section(str_7, section_2)
    str_8 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_4 = module_0.Link(str_8, none_type_3)
    bytes_1 = b"\x802c35Z\xf8"
    link_5 = module_0.Link(link_4, bytes_1)
    var_9 = link_4.__repr__()
    assert var_9 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    int_0 = var_9.__len__()
    assert int_0 == 42
    iterator_0 = var_6.__iter__()


def test_case_423():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    bytes_0 = b"\x802c35Z\xf8"
    link_1 = module_0.Link(link_0, bytes_0)
    dict_0 = {}
    str_1 = 'y\x0c[fN"W:2&:SWyz~W'
    link_2 = module_0.Link(dict_0, str_1)
    var_0 = link_1.__repr__()
    assert (
        var_0
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )
    str_2 = " Use '"
    section_0 = module_0.Section(str_2, str_2)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_1 = section_0.__repr__()
    assert var_1 == 'Section(title=" Use \'")'
    str_3 = "page_context"
    section_1 = module_0.Section(str_3, str_3)
    str_4 = "' from the site because it conflicts with '"
    list_0 = []
    section_2 = module_0.Section(str_4, list_0)
    section_3 = module_0.Section(section_2, list_0)
    dict_1 = {}
    str_5 = 'y\x0c[fN"W:2&:SWyz~W'
    link_3 = module_0.Link(dict_1, str_5)
    section_4 = module_0.Section(str_5, str_5)
    section_5 = module_0.Section(str_5, str_5)
    str_6 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_4 = module_0.Link(str_6, none_type_1)
    bytes_1 = b"\x802c35Z\xf8"
    link_5 = module_0.Link(link_4, bytes_1)
    var_2 = link_4.__repr__()
    assert var_2 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    iterator_0 = var_2.__iter__()
    str_7 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_6 = module_0.Link(str_7, none_type_2)
    var_3 = link_6.__repr__()
    assert var_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_4 = var_3.__repr__()
    assert var_4 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    iterator_1 = var_3.__iter__()
    str_8 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_7 = module_0.Link(str_8, none_type_3)
    var_5 = link_7.__repr__()
    assert var_5 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_6 = var_5.__repr__()
    assert var_6 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    none_type_4 = None
    str_9 = "\n        Perform validation for a value.\n\n        The run_validation method should be implemented by subclasses.\n        "
    link_8 = module_0.Link(none_type_4, str_9)
    var_7 = link_8.__repr__()
    assert (
        var_7
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    str_10 = var_7.__str__()
    assert (
        str_10
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    bool_0 = True
    link_9 = module_0.Link(bool_0, bool_0)
    var_8 = var_7.__repr__()
    assert (
        var_8
        == "\"Link(title=[blank], url='\\\\n        Perform validation for a value.\\\\n\\\\n        The run_validation method should be implemented by subclasses.\\\\n        ')\""
    )
    section_6 = module_0.Section(str_7, var_1)
    assert section_6.children == 'Section(title=" Use \'")'


def test_case_424():
    str_0 = "' is included in the 'nav' configuration."
    link_0 = module_0.Link(str_0, str_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "' is included in the 'nav' configuration."
    assert link_0.url == "' is included in the 'nav' configuration."


def test_case_425():
    none_type_0 = None
    section_0 = module_0.Section(none_type_0, none_type_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title is None
    assert section_0.children is None
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_0 = "gfRsC:6&{;|"
    section_1 = module_0.Section(str_0, str_0)
    list_0 = []
    section_2 = module_0.Section(section_1, list_0)
    str_1 = "gfRsC:6&{;|"
    section_3 = module_0.Section(str_1, str_1)
    str_2 = "gfRsC:6&{;|"
    section_4 = module_0.Section(str_2, str_2)
    var_0 = section_4.__repr__()
    assert var_0 == "Section(title='gfRsC:6&{;|')"
    int_0 = var_0.__len__()
    assert int_0 == 28


def test_case_426():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    str_1 = "gfRsC:6&{;|"
    section_1 = module_0.Section(str_1, str_1)
    str_2 = "relative_to_docs"
    link_0 = module_0.Link(str_2, section_1)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "relative_to_docs"
    assert (
        f"{type(link_0.url).__module__}.{type(link_0.url).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    set_0 = set()
    navigation_0 = module_0.Navigation(set_0, set_0)
    assert (
        f"{type(navigation_0).__module__}.{type(navigation_0).__qualname__}"
        == "mkdocs.structure.nav.Navigation"
    )
    assert len(navigation_0) == 0
    str_3 = navigation_0.__str__()
    str_4 = "$9.}1Av5,.}"
    link_1 = module_0.Link(str_4, str_4)
    str_5 = " Use '"
    section_2 = module_0.Section(str_5, str_5)
    var_1 = section_2.__repr__()
    assert var_1 == 'Section(title=" Use \'")'
    int_0 = var_1.__len__()
    assert int_0 == 23
    str_6 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_2 = module_0.Link(str_6, none_type_0)
    int_1 = var_1.__len__()
    assert int_1 == 23
    navigation_1 = module_0.Navigation(none_type_0, navigation_0)


def test_case_427():
    str_0 = "gfRsC:6&{;|"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "gfRsC:6&{;|"
    assert section_0.children == "gfRsC:6&{;|"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == "Section(title='gfRsC:6&{;|')"
    bool_0 = True
    section_1 = module_0.Section(bool_0, bool_0)
    list_0 = [var_0, var_0]
    section_2 = module_0.Section(section_0, list_0)
    assert section_2.children == [
        "Section(title='gfRsC:6&{;|')",
        "Section(title='gfRsC:6&{;|')",
    ]
    str_1 = "page_context"
    section_3 = module_0.Section(str_1, str_1)
    str_2 = "' from the site because it conflicts with '"
    list_1 = []
    section_4 = module_0.Section(str_2, list_1)
    var_1 = section_3.__repr__()
    assert var_1 == "Section(title='page_context')"
    str_3 = "page_context"
    section_5 = module_0.Section(str_3, str_3)
    str_4 = "' from the site because it conflicts with '"
    list_2 = []
    section_6 = module_0.Section(str_4, list_2)
    var_2 = section_6.__repr__()
    assert var_2 == "Section(title=\"' from the site because it conflicts with '\")"
    str_5 = " Use '"
    section_7 = module_0.Section(str_5, str_5)
    var_3 = section_7.__repr__()
    assert var_3 == 'Section(title=" Use \'")'
    str_6 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_6, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_4 = link_0.__repr__()
    assert var_4 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    int_0 = var_4.__len__()
    assert int_0 == 42
    str_7 = " Use '"
    section_8 = module_0.Section(str_7, str_7)
    var_5 = section_8.__repr__()
    assert var_5 == 'Section(title=" Use \'")'
    int_1 = var_5.__len__()
    assert int_1 == 23
    str_8 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_8, none_type_1)
    int_2 = var_5.__len__()
    assert int_2 == 23
    int_3 = var_5.__len__()
    assert int_3 == 23
    str_9 = "page_context"
    section_9 = module_0.Section(str_9, str_9)
    str_10 = "' from the site because it conflicts with '"
    list_3 = []
    section_10 = module_0.Section(str_10, list_3)
    var_6 = section_10.__repr__()
    assert var_6 == "Section(title=\"' from the site because it conflicts with '\")"
    section_11 = module_0.Section(str_10, section_9)
    str_11 = "page_context"
    section_12 = module_0.Section(str_11, str_11)
    str_12 = "jXt{G!+9"
    int_4 = -1857
    link_2 = module_0.Link(str_12, int_4)
    str_13 = var_2.__str__()
    assert str_13 == "Section(title=\"' from the site because it conflicts with '\")"


def test_case_428():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    none_type_1 = None
    section_0 = module_0.Section(none_type_1, none_type_1)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title is None
    assert section_0.children is None
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = "page_context"
    section_1 = module_0.Section(str_1, str_1)
    str_2 = "' from the site because it conflicts with '"
    list_0 = []
    section_2 = module_0.Section(str_2, list_0)
    bool_0 = True
    link_1 = module_0.Link(bool_0, bool_0)
    str_3 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_2 = module_0.Link(str_3, none_type_2)
    var_2 = link_2.__repr__()
    assert var_2 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    none_type_3 = None
    str_4 = "\n        Perform validation for a value.\n\n        The run_validation method should be implemented by subclasses.\n        "
    link_3 = module_0.Link(none_type_3, str_4)
    var_3 = link_3.__repr__()
    assert (
        var_3
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    str_5 = var_3.__str__()
    assert (
        str_5
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    bool_1 = True
    link_4 = module_0.Link(bool_1, bool_1)
    var_4 = var_3.__repr__()
    assert (
        var_4
        == "\"Link(title=[blank], url='\\\\n        Perform validation for a value.\\\\n\\\\n        The run_validation method should be implemented by subclasses.\\\\n        ')\""
    )
    str_6 = "9)VbG#xR>R+~B5m"
    section_3 = module_0.Section(str_6, var_1)
    assert section_3.children == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""


def test_case_429():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_1, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    bytes_0 = b"\x802c35Z\xf8"
    link_1 = module_0.Link(link_0, bytes_0)
    iterator_0 = var_0.__iter__()
    dict_0 = {}
    str_2 = 'y\x0c[fN"W:2&:SWyz~W'
    link_2 = module_0.Link(dict_0, str_2)
    section_1 = module_0.Section(str_2, str_2)
    section_2 = module_0.Section(str_2, str_2)
    str_3 = " Use '"
    section_3 = module_0.Section(str_3, str_3)
    var_1 = section_3.__repr__()
    assert var_1 == 'Section(title=" Use \'")'
    str_4 = "gfRsC:6&{;|"
    section_4 = module_0.Section(str_4, str_4)
    str_5 = "relative_to_docs"
    link_3 = module_0.Link(str_5, section_4)
    section_5 = module_0.Section(str_2, section_0)


def test_case_430():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    str_1 = "gfRsC:6&{;|"
    section_1 = module_0.Section(str_1, str_1)
    str_2 = "relative_to_docs"
    link_0 = module_0.Link(str_2, section_1)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "relative_to_docs"
    assert (
        f"{type(link_0.url).__module__}.{type(link_0.url).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    section_2 = module_0.Section(section_0, var_0)
    assert section_2.children == 'Section(title=" Use \'")'
    str_3 = " Use '"
    section_3 = module_0.Section(str_3, str_3)
    var_1 = section_3.__repr__()
    assert var_1 == 'Section(title=" Use \'")'
    var_2 = var_1.__repr__()
    assert var_2 == "'Section(title=\" Use \\'\")'"
    bool_0 = True
    link_1 = module_0.Link(bool_0, bool_0)
    str_4 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_2 = module_0.Link(str_4, none_type_0)
    bytes_0 = b"\x802c35Z\xf8"
    link_3 = module_0.Link(link_2, bytes_0)
    var_3 = link_2.__repr__()
    assert var_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    int_0 = var_3.__len__()
    assert int_0 == 42
    str_5 = " Use '"
    section_4 = module_0.Section(str_5, str_5)
    var_4 = section_4.__repr__()
    assert var_4 == 'Section(title=" Use \'")'
    var_5 = var_4.__repr__()
    assert var_5 == "'Section(title=\" Use \\'\")'"
    set_0 = set()
    navigation_0 = module_0.Navigation(set_0, set_0)
    assert (
        f"{type(navigation_0).__module__}.{type(navigation_0).__qualname__}"
        == "mkdocs.structure.nav.Navigation"
    )
    assert len(navigation_0) == 0
    str_6 = navigation_0.__str__()
    iterator_0 = var_5.__iter__()
    str_7 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_4 = module_0.Link(str_7, none_type_1)
    bytes_1 = b"\x802c35Z\xf8"
    link_5 = module_0.Link(link_4, bytes_1)
    str_8 = " Use '"
    section_5 = module_0.Section(str_8, str_8)
    var_6 = section_5.__repr__()
    assert var_6 == 'Section(title=" Use \'")'
    int_1 = var_6.__len__()
    assert int_1 == 23
    str_9 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_6 = module_0.Link(str_9, none_type_2)
    int_2 = var_6.__len__()
    assert int_2 == 23
    str_10 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_7 = module_0.Link(str_10, none_type_3)
    bytes_2 = b"\x802c35Z\xf8"
    link_8 = module_0.Link(link_7, bytes_2)
    var_7 = link_7.__repr__()
    assert var_7 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_8 = var_7.__repr__()
    assert var_8 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_11 = "page_context"
    section_6 = module_0.Section(str_11, str_11)
    str_12 = "0_~6:m!(f5FgU,:rvz"
    none_type_4 = None
    link_9 = module_0.Link(str_12, none_type_4)
    var_9 = link_9.__repr__()
    assert var_9 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_10 = section_6.__repr__()
    assert var_10 == "Section(title='page_context')"
    link_10 = module_0.Link(str_3, str_7)


def test_case_431():
    str_0 = "x"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "x"
    assert section_0.children == "x"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )


def test_case_432():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    var_1 = var_0.__repr__()
    assert var_1 == "'Section(title=\" Use \\'\")'"
    set_0 = set()
    navigation_0 = module_0.Navigation(set_0, set_0)
    assert (
        f"{type(navigation_0).__module__}.{type(navigation_0).__qualname__}"
        == "mkdocs.structure.nav.Navigation"
    )
    assert len(navigation_0) == 0
    str_1 = navigation_0.__str__()
    iterator_0 = var_1.__iter__()
    str_2 = "gfRsC:6&{;|"
    section_1 = module_0.Section(str_2, str_2)
    str_3 = "page_context"
    section_2 = module_0.Section(str_3, str_3)
    str_4 = "' from the site because it conflicts with '"
    list_0 = []
    section_3 = module_0.Section(str_4, list_0)
    str_5 = "localhost"
    link_0 = module_0.Link(str_4, str_5)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "' from the site because it conflicts with '"
    assert link_0.url == "localhost"
    str_6 = "' is included in the 'nav' configuration."
    link_1 = module_0.Link(str_6, str_6)
    dict_0 = {}
    str_7 = 'y\x0c[fN"W:2&:SWyz~W'
    link_2 = module_0.Link(dict_0, str_7)
    section_4 = module_0.Section(str_7, str_7)
    int_0 = var_0.__len__()
    assert int_0 == 23


def test_case_433():
    str_0 = "page_context"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = "' from the site because it conflicts with '"
    list_0 = []
    section_1 = module_0.Section(str_1, list_0)
    var_0 = section_1.__repr__()
    assert var_0 == "Section(title=\"' from the site because it conflicts with '\")"
    section_2 = module_0.Section(str_1, section_0)
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_2, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_1 = link_0.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_2 = var_1.__repr__()
    assert var_2 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_3 = var_1.__str__()
    assert str_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_3 = var_1.__repr__()
    assert var_3 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_4 = " Use '"
    section_3 = module_0.Section(str_4, str_4)
    var_4 = section_3.__repr__()
    assert var_4 == 'Section(title=" Use \'")'
    int_0 = var_4.__len__()
    assert int_0 == 23
    var_5 = var_4.__repr__()
    assert var_5 == "'Section(title=\" Use \\'\")'"
    section_4 = module_0.Section(var_3, var_0)
    assert section_4.title == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    assert (
        section_4.children
        == "Section(title=\"' from the site because it conflicts with '\")"
    )


def test_case_434():
    str_0 = "gfRsC:6&{;|"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "gfRsC:6&{;|"
    assert section_0.children == "gfRsC:6&{;|"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_1, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_2 = var_0.__repr__()
    assert var_2 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_3 = link_0.__repr__()
    assert var_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    set_0 = set()
    navigation_0 = module_0.Navigation(set_0, set_0)
    assert (
        f"{type(navigation_0).__module__}.{type(navigation_0).__qualname__}"
        == "mkdocs.structure.nav.Navigation"
    )
    assert len(navigation_0) == 0
    str_2 = navigation_0.__str__()
    str_3 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_3, none_type_1)
    bytes_0 = b"\x802c35Z\xf8"
    link_2 = module_0.Link(link_1, bytes_0)
    var_4 = link_1.__repr__()
    assert var_4 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_4 = "page_context"
    section_1 = module_0.Section(str_4, str_4)
    str_5 = "' from the site because it conflicts with '"
    list_0 = []
    section_2 = module_0.Section(str_5, list_0)
    var_5 = section_2.__repr__()
    assert var_5 == "Section(title=\"' from the site because it conflicts with '\")"
    str_6 = 'C5B_`:"E&+;Y['
    link_3 = module_0.Link(str_6, str_6)
    str_7 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_4 = module_0.Link(str_7, none_type_2)
    bytes_1 = b"\x802c35Z\xf8"
    link_5 = module_0.Link(link_4, bytes_1)
    var_6 = link_4.__repr__()
    assert var_6 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    int_0 = var_6.__len__()
    assert int_0 == 42
    str_8 = "a0i\no'@B&wey[n02p\x0bC"
    section_3 = module_0.Section(str_8, var_3)
    assert section_3.children == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"


def test_case_435():
    str_0 = "gfRsC:6&{;|"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "gfRsC:6&{;|"
    assert section_0.children == "gfRsC:6&{;|"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_1, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_2 = var_0.__repr__()
    assert var_2 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_3 = link_0.__repr__()
    assert var_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_2 = " Use '"
    section_1 = module_0.Section(str_2, str_2)
    var_4 = section_1.__repr__()
    assert var_4 == 'Section(title=" Use \'")'
    var_5 = var_4.__repr__()
    assert var_5 == "'Section(title=\" Use \\'\")'"
    str_3 = " Use '"
    section_2 = module_0.Section(str_3, str_3)
    var_6 = section_2.__repr__()
    assert var_6 == 'Section(title=" Use \'")'
    str_4 = "gfRsC:6&{;|"
    section_3 = module_0.Section(str_4, str_4)
    str_5 = "relative_to_docs"
    link_1 = module_0.Link(str_5, section_3)
    section_4 = module_0.Section(section_2, var_6)
    assert section_4.children == 'Section(title=" Use \'")'
    str_6 = "x"
    section_5 = module_0.Section(str_6, str_6)
    str_7 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_2 = module_0.Link(str_7, none_type_1)
    var_7 = link_2.__repr__()
    assert var_7 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_8 = var_7.__repr__()
    assert var_8 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_9 = var_8.__repr__()
    assert var_9 == "'\"Link(title=\\'0_~6:m!(f5FgU,:rvz\\', url=None)\"'"
    str_8 = " Use '"
    section_6 = module_0.Section(str_8, str_8)
    var_10 = section_6.__repr__()
    assert var_10 == 'Section(title=" Use \'")'
    var_11 = var_10.__repr__()
    assert var_11 == "'Section(title=\" Use \\'\")'"
    set_0 = set()
    navigation_0 = module_0.Navigation(set_0, set_0)
    assert (
        f"{type(navigation_0).__module__}.{type(navigation_0).__qualname__}"
        == "mkdocs.structure.nav.Navigation"
    )
    assert len(navigation_0) == 0
    str_9 = navigation_0.__str__()
    iterator_0 = var_11.__iter__()
    str_10 = "' is included in the 'nav' configuration."
    link_3 = module_0.Link(str_10, str_10)
    str_11 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_4 = module_0.Link(str_11, none_type_2)
    bytes_0 = b"\x802c35Z\xf8"
    link_5 = module_0.Link(link_4, bytes_0)
    bool_0 = True
    section_7 = module_0.Section(bool_0, bool_0)
    var_12 = var_7.__repr__()
    assert var_12 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""


def test_case_436():
    str_0 = "gfRsC:6&{;|"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "gfRsC:6&{;|"
    assert section_0.children == "gfRsC:6&{;|"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = " Use '"
    section_1 = module_0.Section(str_1, str_1)
    var_0 = section_1.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    int_0 = var_0.__len__()
    assert int_0 == 23
    var_1 = var_0.__repr__()
    assert var_1 == "'Section(title=\" Use \\'\")'"
    var_2 = var_1.__repr__()
    assert var_2 == "'\\'Section(title=\" Use \\\\\\'\")\\''"
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_2, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_3 = link_0.__repr__()
    assert var_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_4 = var_3.__repr__()
    assert var_4 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_3 = var_3.__str__()
    assert str_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_5 = var_3.__repr__()
    assert var_5 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_4 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_4, none_type_1)
    var_6 = link_1.__repr__()
    assert var_6 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_7 = var_6.__repr__()
    assert var_7 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_5 = " Use '"
    section_2 = module_0.Section(str_5, str_5)
    var_8 = section_2.__repr__()
    assert var_8 == 'Section(title=" Use \'")'
    str_6 = 'C5B_`:"E&+;Y['
    link_2 = module_0.Link(str_6, str_6)
    int_1 = var_8.__len__()
    assert int_1 == 23
    str_7 = "$9.}1Av5,.}"
    link_3 = module_0.Link(str_7, str_7)
    var_9 = var_8.__repr__()
    assert var_9 == "'Section(title=\" Use \\'\")'"
    str_8 = "' is included in the 'nav' configuration."
    link_4 = module_0.Link(str_8, str_8)
    str_9 = ",:Ln~MlBBAr\r"
    link_5 = module_0.Link(var_5, str_9)
    assert link_5.title == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""


def test_case_437():
    str_0 = "page_context"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = "' from the site because it conflicts with '"
    list_0 = []
    section_1 = module_0.Section(str_1, list_0)
    var_0 = section_1.__repr__()
    assert var_0 == "Section(title=\"' from the site because it conflicts with '\")"
    section_2 = module_0.Section(str_1, section_0)
    int_0 = var_0.__len__()
    assert int_0 == 60
    str_2 = "page_context"
    section_3 = module_0.Section(str_2, str_2)
    str_3 = "' from the site because it conflicts with '"
    list_1 = []
    section_4 = module_0.Section(str_3, list_1)
    var_1 = section_4.__repr__()
    assert var_1 == "Section(title=\"' from the site because it conflicts with '\")"
    str_4 = "jXt{G!+9"
    int_1 = -1857
    link_0 = module_0.Link(str_4, int_1)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "jXt{G!+9"
    assert link_0.url == -1857
    str_5 = "gfRsC:6&{;|"
    section_5 = module_0.Section(str_5, str_5)
    var_2 = section_5.__repr__()
    assert var_2 == "Section(title='gfRsC:6&{;|')"
    bool_0 = True
    link_1 = module_0.Link(bool_0, bool_0)
    dict_0 = {}
    str_6 = 'y\x0c[fN"W:2&:SWyz~W'
    link_2 = module_0.Link(dict_0, str_6)
    section_6 = module_0.Section(str_6, str_6)
    link_3 = module_0.Link(section_6, str_4)


def test_case_438():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    int_0 = var_0.__len__()
    assert int_0 == 23
    var_1 = var_0.__repr__()
    assert var_1 == "'Section(title=\" Use \\'\")'"
    str_1 = " Use '"
    section_1 = module_0.Section(str_1, str_1)
    var_2 = section_1.__repr__()
    assert var_2 == 'Section(title=" Use \'")'
    var_3 = var_2.__repr__()
    assert var_3 == "'Section(title=\" Use \\'\")'"
    set_0 = set()
    navigation_0 = module_0.Navigation(set_0, set_0)
    assert (
        f"{type(navigation_0).__module__}.{type(navigation_0).__qualname__}"
        == "mkdocs.structure.nav.Navigation"
    )
    assert len(navigation_0) == 0
    str_2 = navigation_0.__str__()
    iterator_0 = var_3.__iter__()
    str_3 = " Use '"
    section_2 = module_0.Section(str_3, str_3)
    var_4 = section_2.__repr__()
    assert var_4 == 'Section(title=" Use \'")'
    int_1 = var_4.__len__()
    assert int_1 == 23
    section_3 = module_0.Section(var_4, int_1)
    assert section_3.title == 'Section(title=" Use \'")'
    assert section_3.children == 23
    str_4 = "gfRsC:6&{;|"
    section_4 = module_0.Section(str_4, str_4)
    list_0 = []
    section_5 = module_0.Section(section_4, list_0)
    str_5 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_5, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    bytes_0 = b"\x802c35Z\xf8"
    link_1 = module_0.Link(link_0, bytes_0)
    bool_0 = True
    section_6 = module_0.Section(bool_0, bool_0)
    var_5 = link_1.__repr__()
    assert (
        var_5
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )
    str_6 = var_5.__str__()
    assert (
        str_6
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )
    str_7 = " Use '"
    section_7 = module_0.Section(str_7, str_7)
    var_6 = section_7.__repr__()
    assert var_6 == 'Section(title=" Use \'")'
    bool_1 = True
    link_2 = module_0.Link(bool_1, bool_1)
    str_8 = "page_context"
    section_8 = module_0.Section(str_8, str_8)
    str_9 = "' from the site because it conflicts with '"
    list_1 = []
    section_9 = module_0.Section(str_9, list_1)
    section_10 = module_0.Section(section_9, list_1)
    var_7 = section_2.__repr__()
    assert var_7 == 'Section(title=" Use \'")'


def test_case_439():
    str_0 = "page_context"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = "' from the site because it conflicts with '"
    list_0 = []
    section_1 = module_0.Section(str_1, list_0)
    var_0 = section_1.__repr__()
    assert var_0 == "Section(title=\"' from the site because it conflicts with '\")"
    section_2 = module_0.Section(str_1, section_0)
    int_0 = var_0.__len__()
    assert int_0 == 60
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_2, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_1 = link_0.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    int_1 = var_0.__len__()
    assert int_1 == 60


def test_case_440():
    none_type_0 = None
    section_0 = module_0.Section(none_type_0, none_type_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title is None
    assert section_0.children is None
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_0 = "page_context"
    section_1 = module_0.Section(str_0, str_0)
    str_1 = "' from the site because it conflicts with '"
    list_0 = []
    section_2 = module_0.Section(str_1, list_0)
    var_0 = section_2.__repr__()
    assert var_0 == "Section(title=\"' from the site because it conflicts with '\")"
    str_2 = "page_context"
    section_3 = module_0.Section(str_2, str_2)
    str_3 = "' from the site because it conflicts with '"
    list_1 = []
    section_4 = module_0.Section(str_3, list_1)
    section_5 = module_0.Section(section_4, list_1)
    str_4 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_0 = module_0.Link(str_4, none_type_1)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_1 = link_0.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_2 = var_1.__repr__()
    assert var_2 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_5 = " Use '"
    section_6 = module_0.Section(str_5, str_5)
    var_3 = section_6.__repr__()
    assert var_3 == 'Section(title=" Use \'")'
    str_6 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_1 = module_0.Link(str_6, none_type_2)
    var_4 = link_1.__repr__()
    assert var_4 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    int_0 = var_4.__len__()
    assert int_0 == 42
    none_type_3 = None
    str_7 = "\n        Perform validation for a value.\n\n        The run_validation method should be implemented by subclasses.\n        "
    link_2 = module_0.Link(none_type_3, str_7)
    var_5 = link_2.__repr__()
    assert (
        var_5
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    str_8 = var_5.__str__()
    assert (
        str_8
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    bool_0 = True
    link_3 = module_0.Link(bool_0, bool_0)
    var_6 = var_5.__repr__()
    assert (
        var_6
        == "\"Link(title=[blank], url='\\\\n        Perform validation for a value.\\\\n\\\\n        The run_validation method should be implemented by subclasses.\\\\n        ')\""
    )
    str_9 = "0_~6:m!(f5FgU,:rvz"
    none_type_4 = None
    link_4 = module_0.Link(str_9, none_type_4)
    bytes_0 = b"\x802c35Z\xf8"
    link_5 = module_0.Link(link_4, bytes_0)
    var_7 = link_4.__repr__()
    assert var_7 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    iterator_0 = var_7.__iter__()
    str_10 = " Use '"
    section_7 = module_0.Section(str_10, str_10)
    var_8 = section_7.__repr__()
    assert var_8 == 'Section(title=" Use \'")'
    var_9 = var_8.__repr__()
    assert var_9 == "'Section(title=\" Use \\'\")'"
    str_11 = "0_~6:m!(f5FgU,:rvz"
    none_type_5 = None
    link_6 = module_0.Link(str_11, none_type_5)
    iterator_1 = var_6.__iter__()


def test_case_441():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_2 = var_1.__repr__()
    assert var_2 == "'\"Link(title=\\'0_~6:m!(f5FgU,:rvz\\', url=None)\"'"
    str_1 = "x"
    section_0 = module_0.Section(str_1, str_1)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "x"
    assert section_0.children == "x"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_2 = "jXt{G!+9"
    int_0 = -1857
    link_1 = module_0.Link(str_2, int_0)
    str_3 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_2 = module_0.Link(str_3, none_type_1)
    bytes_0 = b"\x802c35Z\xf8"
    link_3 = module_0.Link(link_2, bytes_0)
    str_4 = " Use '"
    section_1 = module_0.Section(str_4, str_4)
    var_3 = section_1.__repr__()
    assert var_3 == 'Section(title=" Use \'")'
    int_1 = var_3.__len__()
    assert int_1 == 23
    section_2 = module_0.Section(var_3, int_1)
    assert section_2.title == 'Section(title=" Use \'")'
    assert section_2.children == 23
    str_5 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_4 = module_0.Link(str_5, none_type_2)
    bytes_1 = b"\x802c35Z\xf8"
    link_5 = module_0.Link(link_4, bytes_1)
    var_4 = link_4.__repr__()
    assert var_4 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    iterator_0 = var_4.__iter__()
    str_6 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_6 = module_0.Link(str_6, none_type_3)
    var_5 = link_6.__repr__()
    assert var_5 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_6 = var_5.__repr__()
    assert var_6 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    iterator_1 = var_5.__iter__()
    var_7 = section_1.__repr__()
    assert var_7 == 'Section(title=" Use \'")'


def test_case_442():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_2 = var_0.__repr__()
    assert var_2 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_3 = link_0.__repr__()
    assert var_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"


def test_case_443():
    str_0 = "page_context"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = "' from the site because it conflicts with '"
    list_0 = []
    section_1 = module_0.Section(str_1, list_0)
    var_0 = section_1.__repr__()
    assert var_0 == "Section(title=\"' from the site because it conflicts with '\")"
    section_2 = module_0.Section(str_1, section_0)
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_2, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    bytes_0 = b"\x802c35Z\xf8"
    link_1 = module_0.Link(link_0, bytes_0)
    var_1 = link_0.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    iterator_0 = var_1.__iter__()
    str_3 = " Use '"
    section_3 = module_0.Section(str_3, str_3)
    var_2 = section_3.__repr__()
    assert var_2 == 'Section(title=" Use \'")'
    str_4 = "gfRsC:6&{;|"
    section_4 = module_0.Section(str_4, str_4)
    str_5 = "relative_to_docs"
    link_2 = module_0.Link(str_5, section_4)
    section_5 = module_0.Section(section_3, var_2)
    assert section_5.children == 'Section(title=" Use \'")'
    str_6 = "$9.}1Av5,.}"
    link_3 = module_0.Link(str_6, str_6)
    str_7 = "page_context"
    section_6 = module_0.Section(str_7, str_7)
    str_8 = "' from the site because it conflicts with '"
    list_1 = []
    section_7 = module_0.Section(str_8, list_1)
    str_9 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_4 = module_0.Link(str_9, none_type_1)
    var_3 = link_4.__repr__()
    assert var_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_4 = var_3.__repr__()
    assert var_4 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_5 = var_3.__repr__()
    assert var_5 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_10 = " Use '"
    section_8 = module_0.Section(str_10, str_10)
    var_6 = section_8.__repr__()
    assert var_6 == 'Section(title=" Use \'")'
    int_0 = var_6.__len__()
    assert int_0 == 23
    section_9 = module_0.Section(var_6, int_0)
    assert section_9.title == 'Section(title=" Use \'")'
    assert section_9.children == 23
    none_type_2 = None
    str_11 = "\n        Perform validation for a value.\n\n        The run_validation method should be implemented by subclasses.\n        "
    link_5 = module_0.Link(none_type_2, str_11)
    var_7 = link_5.__repr__()
    assert (
        var_7
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    str_12 = var_7.__str__()
    assert (
        str_12
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    bool_0 = True
    link_6 = module_0.Link(bool_0, bool_0)
    var_8 = var_7.__repr__()
    assert (
        var_8
        == "\"Link(title=[blank], url='\\\\n        Perform validation for a value.\\\\n\\\\n        The run_validation method should be implemented by subclasses.\\\\n        ')\""
    )
    dict_0 = {}
    str_13 = 'y\x0c[fN"W:2&:SWyz~W'
    link_7 = module_0.Link(dict_0, str_13)
    str_14 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_8 = module_0.Link(str_14, none_type_3)
    var_9 = link_8.__repr__()
    assert var_9 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_10 = var_9.__repr__()
    assert var_10 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_11 = var_10.__repr__()
    assert var_11 == "'\"Link(title=\\'0_~6:m!(f5FgU,:rvz\\', url=None)\"'"
    str_15 = "oLsj#Z>h$-\\N{+F\x0c"
    section_10 = module_0.Section(str_15, str_6)


def test_case_444():
    none_type_0 = None
    str_0 = "\n        Perform validation for a value.\n\n        The run_validation method should be implemented by subclasses.\n        "
    link_0 = module_0.Link(none_type_0, str_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title is None
    assert (
        link_0.url
        == "\n        Perform validation for a value.\n\n        The run_validation method should be implemented by subclasses.\n        "
    )
    var_0 = link_0.__repr__()
    assert (
        var_0
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    str_1 = var_0.__str__()
    assert (
        str_1
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_2, none_type_1)
    var_1 = link_1.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_2 = var_1.__repr__()
    assert var_2 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    iterator_0 = var_1.__iter__()
    str_3 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_2 = module_0.Link(str_3, none_type_2)
    var_3 = link_2.__repr__()
    assert var_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_4 = var_3.__repr__()
    assert var_4 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_4 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_3 = module_0.Link(str_4, none_type_3)
    bytes_0 = b"\x802c35Z\xf8"
    link_4 = module_0.Link(link_3, bytes_0)
    var_5 = link_3.__repr__()
    assert var_5 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    dict_0 = {}
    str_5 = 'y\x0c[fN"W:2&:SWyz~W'
    link_5 = module_0.Link(dict_0, str_5)
    section_0 = module_0.Section(str_5, str_5)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == 'y\x0c[fN"W:2&:SWyz~W'
    assert section_0.children == 'y\x0c[fN"W:2&:SWyz~W'
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_6 = "page_context"
    section_1 = module_0.Section(str_6, str_6)
    str_7 = "' from the site because it conflicts with '"
    list_0 = []
    section_2 = module_0.Section(str_7, list_0)
    var_6 = section_2.__repr__()
    assert var_6 == "Section(title=\"' from the site because it conflicts with '\")"
    str_8 = "gfRsC:6&{;|"
    section_3 = module_0.Section(str_8, str_8)
    str_9 = "0_~6:m!(f5FgU,:rvz"
    none_type_4 = None
    link_6 = module_0.Link(str_9, none_type_4)
    var_7 = link_6.__repr__()
    assert var_7 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_8 = var_7.__repr__()
    assert var_8 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_9 = var_7.__repr__()
    assert var_9 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_10 = link_6.__repr__()
    assert var_10 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_11 = link_3.__repr__()
    assert var_11 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"


def test_case_445():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    str_1 = "gfRsC:6&{;|"
    section_1 = module_0.Section(str_1, str_1)
    str_2 = "relative_to_docs"
    link_0 = module_0.Link(str_2, section_1)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "relative_to_docs"
    assert (
        f"{type(link_0.url).__module__}.{type(link_0.url).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    section_2 = module_0.Section(section_0, var_0)
    assert section_2.children == 'Section(title=" Use \'")'
    int_0 = var_0.__len__()
    assert int_0 == 23
    str_3 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_1 = module_0.Link(str_3, none_type_0)
    var_1 = link_1.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_2 = var_1.__repr__()
    assert var_2 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_4 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_2 = module_0.Link(str_4, none_type_1)
    bytes_0 = b"\x802c35Z\xf8"
    link_3 = module_0.Link(link_2, bytes_0)
    var_3 = link_2.__repr__()
    assert var_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_5 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_4 = module_0.Link(str_5, none_type_2)
    var_4 = link_4.__repr__()
    assert var_4 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_5 = var_4.__repr__()
    assert var_5 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_6 = var_4.__repr__()
    assert var_6 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_7 = link_4.__repr__()
    assert var_7 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_6 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_5 = module_0.Link(str_6, none_type_3)
    var_8 = link_5.__repr__()
    assert var_8 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_9 = var_8.__repr__()
    assert var_9 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_7 = var_8.__str__()
    assert str_7 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_8 = "page_context"
    section_3 = module_0.Section(str_8, str_8)
    str_9 = "' from the site because it conflicts with '"
    list_0 = []
    section_4 = module_0.Section(str_9, list_0)
    var_10 = section_4.__repr__()
    assert var_10 == "Section(title=\"' from the site because it conflicts with '\")"
    section_5 = module_0.Section(str_9, section_3)
    bool_0 = True
    link_6 = module_0.Link(bool_0, bool_0)
    str_10 = "0_~6:m!(f5FgU,:rvz"
    none_type_4 = None
    link_7 = module_0.Link(str_10, none_type_4)
    var_11 = link_7.__repr__()
    assert var_11 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_12 = var_11.__repr__()
    assert var_12 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_13 = var_12.__repr__()
    assert var_13 == "'\"Link(title=\\'0_~6:m!(f5FgU,:rvz\\', url=None)\"'"
    str_11 = " Use '"
    section_6 = module_0.Section(str_11, str_11)
    var_14 = section_6.__repr__()
    assert var_14 == 'Section(title=" Use \'")'
    str_12 = "gfRsC:6&{;|"
    section_7 = module_0.Section(str_12, str_12)
    str_13 = "relative_to_docs"
    link_8 = module_0.Link(str_13, section_7)
    section_8 = module_0.Section(section_6, var_14)
    assert section_8.children == 'Section(title=" Use \'")'
    str_14 = var_2.__str__()
    assert str_14 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""


def test_case_446():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_2 = var_0.__repr__()
    assert var_2 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_1 = " Use '"
    section_0 = module_0.Section(str_1, str_1)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_3 = section_0.__repr__()
    assert var_3 == 'Section(title=" Use \'")'
    var_4 = var_3.__repr__()
    assert var_4 == "'Section(title=\" Use \\'\")'"
    dict_0 = {}
    str_2 = 'y\x0c[fN"W:2&:SWyz~W'
    link_1 = module_0.Link(dict_0, str_2)
    section_1 = module_0.Section(str_1, var_4)
    assert section_1.children == "'Section(title=\" Use \\'\")'"
    str_3 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_2 = module_0.Link(str_3, none_type_1)
    bytes_0 = b"\x802c35Z\xf8"
    link_3 = module_0.Link(link_2, bytes_0)
    var_5 = link_2.__repr__()
    assert var_5 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    iterator_0 = var_5.__iter__()
    str_4 = 'C5B_`:"E&+;Y['
    link_4 = module_0.Link(str_4, str_4)
    str_5 = " Use '"
    section_2 = module_0.Section(str_5, str_5)
    var_6 = section_2.__repr__()
    assert var_6 == 'Section(title=" Use \'")'
    var_7 = var_6.__repr__()
    assert var_7 == "'Section(title=\" Use \\'\")'"
    str_6 = var_0.__str__()
    assert str_6 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"


def test_case_447():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    var_1 = var_0.__repr__()
    assert var_1 == "'Section(title=\" Use \\'\")'"
    dict_0 = {}
    str_1 = 'y\x0c[fN"W:2&:SWyz~W'
    link_0 = module_0.Link(dict_0, str_1)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == {}
    assert link_0.url == 'y\x0c[fN"W:2&:SWyz~W'
    section_1 = module_0.Section(str_0, var_1)
    assert section_1.children == "'Section(title=\" Use \\'\")'"
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_1 = module_0.Link(str_2, none_type_0)
    var_2 = link_1.__repr__()
    assert var_2 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_3 = var_2.__repr__()
    assert var_3 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_4 = var_3.__repr__()
    assert var_4 == "'\"Link(title=\\'0_~6:m!(f5FgU,:rvz\\', url=None)\"'"
    str_3 = "page_context"
    section_2 = module_0.Section(str_3, str_3)
    str_4 = "' from the site because it conflicts with '"
    list_0 = []
    section_3 = module_0.Section(str_4, list_0)
    var_5 = section_3.__repr__()
    assert var_5 == "Section(title=\"' from the site because it conflicts with '\")"
    section_4 = module_0.Section(str_4, section_2)
    int_0 = var_5.__len__()
    assert int_0 == 60
    str_5 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_2 = module_0.Link(str_5, none_type_1)
    bytes_0 = b"\x802c35Z\xf8"
    link_3 = module_0.Link(link_2, bytes_0)
    var_6 = link_2.__repr__()
    assert var_6 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    int_1 = var_6.__len__()
    assert int_1 == 42
    str_6 = " Use '"
    section_5 = module_0.Section(str_6, str_6)
    var_7 = section_5.__repr__()
    assert var_7 == 'Section(title=" Use \'")'
    str_7 = 'C5B_`:"E&+;Y['
    link_4 = module_0.Link(str_7, str_7)
    int_2 = var_7.__len__()
    assert int_2 == 23
    str_8 = " Use '"
    section_6 = module_0.Section(str_8, str_8)
    var_8 = section_6.__repr__()
    assert var_8 == 'Section(title=" Use \'")'
    int_3 = var_8.__len__()
    assert int_3 == 23
    str_9 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_5 = module_0.Link(str_9, none_type_2)
    int_4 = var_8.__len__()
    assert int_4 == 23
    str_10 = " Use '"
    section_7 = module_0.Section(str_10, str_10)
    var_9 = section_7.__repr__()
    assert var_9 == 'Section(title=" Use \'")'
    str_11 = "gfRsC:6&{;|"
    section_8 = module_0.Section(str_11, str_11)
    str_12 = "relative_to_docs"
    link_6 = module_0.Link(str_12, section_8)
    int_5 = var_4.__len__()
    assert int_5 == 48


def test_case_448():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    str_1 = 'C5B_`:"E&+;Y['
    link_0 = module_0.Link(str_1, str_1)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == 'C5B_`:"E&+;Y['
    assert link_0.url == 'C5B_`:"E&+;Y['
    int_0 = var_0.__len__()
    assert int_0 == 23
    section_1 = module_0.Section(var_0, var_0)
    assert section_1.title == 'Section(title=" Use \'")'
    assert section_1.children == 'Section(title=" Use \'")'


def test_case_449():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    var_1 = var_0.__repr__()
    assert var_1 == "'Section(title=\" Use \\'\")'"
    dict_0 = {}
    str_1 = 'y\x0c[fN"W:2&:SWyz~W'
    link_0 = module_0.Link(dict_0, str_1)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == {}
    assert link_0.url == 'y\x0c[fN"W:2&:SWyz~W'
    section_1 = module_0.Section(str_0, var_1)
    assert section_1.children == "'Section(title=\" Use \\'\")'"
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_1 = module_0.Link(str_2, none_type_0)
    str_3 = "$9.}1Av5,.}"
    link_2 = module_0.Link(str_3, str_3)
    var_2 = link_0.__repr__()
    assert var_2 == "Link(title={}, url='y\\x0c[fN\"W:2&:SWyz~W')"


def test_case_450():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_1 = var_0.__str__()
    assert str_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_2, none_type_1)
    var_2 = link_1.__repr__()
    assert var_2 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_3 = var_2.__repr__()
    assert var_3 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_4 = var_3.__repr__()
    assert var_4 == "'\"Link(title=\\'0_~6:m!(f5FgU,:rvz\\', url=None)\"'"
    link_2 = module_0.Link(var_2, str_2)
    assert link_2.title == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"


def test_case_451():
    none_type_0 = None
    set_0 = {none_type_0, none_type_0, none_type_0, none_type_0}
    link_0 = module_0.Link(none_type_0, set_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title is None
    assert link_0.url == {None}


def test_case_452():
    str_0 = "page_context"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = "' from the site because it conflicts with '"
    list_0 = []
    section_1 = module_0.Section(str_1, list_0)
    dict_0 = {}
    str_2 = 'y\x0c[fN"W:2&:SWyz~W'
    link_0 = module_0.Link(dict_0, str_2)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == {}
    assert link_0.url == 'y\x0c[fN"W:2&:SWyz~W'
    section_2 = module_0.Section(str_2, str_2)
    str_3 = " Use '"
    section_3 = module_0.Section(str_3, str_3)
    var_0 = section_3.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    var_1 = var_0.__repr__()
    assert var_1 == "'Section(title=\" Use \\'\")'"
    str_4 = "jXt{G!+9"
    int_0 = -1857
    link_1 = module_0.Link(str_4, int_0)
    str_5 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_2 = module_0.Link(str_5, none_type_0)
    var_2 = link_2.__repr__()
    assert var_2 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_3 = var_2.__repr__()
    assert var_3 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_4 = var_3.__repr__()
    assert var_4 == "'\"Link(title=\\'0_~6:m!(f5FgU,:rvz\\', url=None)\"'"
    str_6 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_3 = module_0.Link(str_6, none_type_1)
    bytes_0 = b"\x802c35Z\xf8"
    link_4 = module_0.Link(link_3, bytes_0)
    dict_1 = {}
    str_7 = 'y\x0c[fN"W:2&:SWyz~W'
    link_5 = module_0.Link(dict_1, str_7)
    var_5 = link_4.__repr__()
    assert (
        var_5
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )
    str_8 = " Use '"
    section_4 = module_0.Section(str_8, str_8)
    var_6 = section_4.__repr__()
    assert var_6 == 'Section(title=" Use \'")'
    int_1 = var_6.__len__()
    assert int_1 == 23
    str_9 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_6 = module_0.Link(str_9, none_type_2)
    int_2 = var_6.__len__()
    assert int_2 == 23
    int_3 = var_6.__len__()
    assert int_3 == 23
    str_10 = " Use '"
    section_5 = module_0.Section(str_10, str_10)
    var_7 = section_5.__repr__()
    assert var_7 == 'Section(title=" Use \'")'
    str_11 = " Use '"
    section_6 = module_0.Section(str_11, str_11)
    var_8 = section_6.__repr__()
    assert var_8 == 'Section(title=" Use \'")'
    section_7 = module_0.Section(str_11, var_8)
    assert section_7.children == 'Section(title=" Use \'")'
    str_12 = " Use '"
    section_8 = module_0.Section(str_12, str_12)
    var_9 = section_8.__repr__()
    assert var_9 == 'Section(title=" Use \'")'
    var_10 = var_9.__repr__()
    assert var_10 == "'Section(title=\" Use \\'\")'"
    iterator_0 = var_9.__iter__()


def test_case_453():
    str_0 = "page_context"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = "gfRsC:6&{;|"
    section_1 = module_0.Section(str_1, str_1)
    str_2 = " Use '"
    section_2 = module_0.Section(str_2, str_2)
    var_0 = section_2.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    int_0 = var_0.__len__()
    assert int_0 == 23
    var_1 = var_0.__repr__()
    assert var_1 == "'Section(title=\" Use \\'\")'"
    var_2 = var_1.__repr__()
    assert var_2 == "'\\'Section(title=\" Use \\\\\\'\")\\''"
    str_3 = "page_context"
    section_3 = module_0.Section(str_3, str_3)
    str_4 = "' from the site because it conflicts with '"
    list_0 = []
    section_4 = module_0.Section(str_4, list_0)
    dict_0 = {}
    str_5 = 'y\x0c[fN"W:2&:SWyz~W'
    link_0 = module_0.Link(dict_0, str_5)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == {}
    assert link_0.url == 'y\x0c[fN"W:2&:SWyz~W'
    section_5 = module_0.Section(str_5, str_5)
    section_6 = module_0.Section(str_5, str_5)
    str_6 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_1 = module_0.Link(str_6, none_type_0)
    var_3 = link_1.__repr__()
    assert var_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_4 = var_3.__repr__()
    assert var_4 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    iterator_0 = var_3.__iter__()
    iterator_1 = var_1.__iter__()


def test_case_454():
    bool_0 = True
    section_0 = module_0.Section(bool_0, bool_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title is True
    assert section_0.children is True
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    none_type_0 = None
    section_1 = module_0.Section(none_type_0, none_type_0)
    str_0 = " Use '"
    section_2 = module_0.Section(str_0, str_0)
    var_0 = section_2.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    var_1 = var_0.__repr__()
    assert var_1 == "'Section(title=\" Use \\'\")'"
    dict_0 = {}
    str_1 = 'y\x0c[fN"W:2&:SWyz~W'
    link_0 = module_0.Link(dict_0, str_1)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == {}
    assert link_0.url == 'y\x0c[fN"W:2&:SWyz~W'
    section_3 = module_0.Section(str_0, var_1)
    assert section_3.children == "'Section(title=\" Use \\'\")'"
    str_2 = " Use '"
    section_4 = module_0.Section(str_2, str_2)
    var_2 = section_4.__repr__()
    assert var_2 == 'Section(title=" Use \'")'
    str_3 = 'C5B_`:"E&+;Y['
    link_1 = module_0.Link(str_3, str_3)
    int_0 = var_2.__len__()
    assert int_0 == 23
    str_4 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_2 = module_0.Link(str_4, none_type_1)
    var_3 = link_2.__repr__()
    assert var_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_4 = var_3.__repr__()
    assert var_4 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_5 = " Use '"
    section_5 = module_0.Section(str_5, str_5)
    var_5 = section_5.__repr__()
    assert var_5 == 'Section(title=" Use \'")'
    var_6 = var_5.__repr__()
    assert var_6 == "'Section(title=\" Use \\'\")'"
    var_7 = var_5.__repr__()
    assert var_7 == "'Section(title=\" Use \\'\")'"
    str_6 = " Use '"
    section_6 = module_0.Section(str_6, str_6)
    var_8 = section_6.__repr__()
    assert var_8 == 'Section(title=" Use \'")'
    int_1 = var_8.__len__()
    assert int_1 == 23
    section_7 = module_0.Section(var_8, int_1)
    assert section_7.title == 'Section(title=" Use \'")'
    assert section_7.children == 23
    str_7 = "gfRsC:6&{;|"
    section_8 = module_0.Section(str_7, str_7)
    str_8 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_3 = module_0.Link(str_8, none_type_2)
    var_9 = link_3.__repr__()
    assert var_9 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_10 = var_9.__repr__()
    assert var_10 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_11 = var_9.__repr__()
    assert var_11 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_12 = link_3.__repr__()
    assert var_12 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    link_4 = module_0.Link(str_7, link_1)


def test_case_455():
    str_0 = "page_context"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = "' from the site because it conflicts with '"
    list_0 = []
    section_1 = module_0.Section(str_1, list_0)
    str_2 = "page_context"
    section_2 = module_0.Section(str_2, str_2)
    str_3 = "' from the site because it conflicts with '"
    list_1 = []
    section_3 = module_0.Section(str_3, list_1)
    section_4 = module_0.Section(section_3, list_1)
    var_0 = section_2.__repr__()
    assert var_0 == "Section(title='page_context')"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Section(title='page_context')\""
    var_2 = var_1.__repr__()
    assert var_2 == "'\"Section(title=\\'page_context\\')\"'"


def test_case_456():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    str_1 = 'C5B_`:"E&+;Y['
    link_0 = module_0.Link(str_1, str_1)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == 'C5B_`:"E&+;Y['
    assert link_0.url == 'C5B_`:"E&+;Y['
    int_0 = var_0.__len__()
    assert int_0 == 23
    str_2 = "$9.}1Av5,.}"
    link_1 = module_0.Link(str_2, str_2)
    var_1 = var_0.__repr__()
    assert var_1 == "'Section(title=\" Use \\'\")'"
    none_type_0 = None
    str_3 = "\n        Perform validation for a value.\n\n        The run_validation method should be implemented by subclasses.\n        "
    link_2 = module_0.Link(none_type_0, str_3)
    var_2 = link_2.__repr__()
    assert (
        var_2
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    str_4 = var_2.__str__()
    assert (
        str_4
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    str_5 = "EA^%dphJmI"
    link_3 = module_0.Link(str_4, str_5)
    assert (
        link_3.title
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )


def test_case_457():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    bytes_0 = b"\x802c35Z\xf8"
    link_1 = module_0.Link(link_0, bytes_0)
    dict_0 = {}
    str_1 = 'y\x0c[fN"W:2&:SWyz~W'
    link_2 = module_0.Link(dict_0, str_1)
    var_0 = link_1.__repr__()
    assert (
        var_0
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )
    str_2 = " Use '"
    section_0 = module_0.Section(str_2, str_2)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_1 = section_0.__repr__()
    assert var_1 == 'Section(title=" Use \'")'
    str_3 = "gfRsC:6&{;|"
    section_1 = module_0.Section(str_3, str_3)
    str_4 = "relative_to_docs"
    link_3 = module_0.Link(str_4, section_1)
    var_2 = var_1.__repr__()
    assert var_2 == "'Section(title=\" Use \\'\")'"


def test_case_458():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    int_0 = var_0.__len__()
    assert int_0 == 23
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_1, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    int_1 = var_0.__len__()
    assert int_1 == 23
    none_type_1 = None
    section_1 = module_0.Section(none_type_1, none_type_1)
    str_2 = "page_context"
    section_2 = module_0.Section(str_2, str_2)
    str_3 = "' from the site because it conflicts with '"
    list_0 = []
    section_3 = module_0.Section(str_3, list_0)
    var_1 = section_3.__repr__()
    assert var_1 == "Section(title=\"' from the site because it conflicts with '\")"
    str_4 = "page_context"
    section_4 = module_0.Section(str_4, str_4)
    str_5 = "' from the site because it conflicts with '"
    list_1 = []
    section_5 = module_0.Section(str_5, list_1)
    var_2 = section_4.__repr__()
    assert var_2 == "Section(title='page_context')"
    str_6 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_1 = module_0.Link(str_6, none_type_2)
    str_7 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_2 = module_0.Link(str_7, none_type_3)
    var_3 = link_2.__repr__()
    assert var_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_4 = var_3.__repr__()
    assert var_4 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_5 = var_3.__repr__()
    assert var_5 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_8 = " Use '"
    section_6 = module_0.Section(str_8, str_8)
    var_6 = section_6.__repr__()
    assert var_6 == 'Section(title=" Use \'")'
    int_2 = var_6.__len__()
    assert int_2 == 23
    var_7 = var_6.__repr__()
    assert var_7 == "'Section(title=\" Use \\'\")'"
    str_9 = "0_~6:m!(f5FgU,:rvz"
    none_type_4 = None
    link_3 = module_0.Link(str_9, none_type_4)
    bytes_0 = b"\x802c35Z\xf8"
    link_4 = module_0.Link(link_3, bytes_0)
    var_8 = link_3.__repr__()
    assert var_8 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    int_3 = var_8.__len__()
    assert int_3 == 42
    str_10 = " Use '"
    section_7 = module_0.Section(str_10, str_10)
    var_9 = section_7.__repr__()
    assert var_9 == 'Section(title=" Use \'")'
    int_4 = var_9.__len__()
    assert int_4 == 23
    section_8 = module_0.Section(var_9, int_4)
    assert section_8.title == 'Section(title=" Use \'")'
    assert section_8.children == 23
    str_11 = "gfRsC:6&{;|"
    section_9 = module_0.Section(str_11, str_11)
    str_12 = " Use '"
    section_10 = module_0.Section(str_12, str_12)
    var_10 = section_10.__repr__()
    assert var_10 == 'Section(title=" Use \'")'
    int_5 = var_10.__len__()
    assert int_5 == 23
    var_11 = var_10.__repr__()
    assert var_11 == "'Section(title=\" Use \\'\")'"
    var_12 = var_11.__repr__()
    assert var_12 == "'\\'Section(title=\" Use \\\\\\'\")\\''"
    var_13 = section_5.__repr__()
    assert var_13 == "Section(title=\"' from the site because it conflicts with '\")"


def test_case_459():
    str_0 = "page_context"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = "' from the site because it conflicts with '"
    list_0 = []
    section_1 = module_0.Section(str_1, list_0)
    var_0 = section_1.__repr__()
    assert var_0 == "Section(title=\"' from the site because it conflicts with '\")"
    section_2 = module_0.Section(str_1, section_0)
    int_0 = var_0.__len__()
    assert int_0 == 60
    str_2 = "page_context"
    section_3 = module_0.Section(str_2, str_2)
    str_3 = "' from the site because it conflicts with '"
    list_1 = []
    section_4 = module_0.Section(str_3, list_1)
    var_1 = section_4.__repr__()
    assert var_1 == "Section(title=\"' from the site because it conflicts with '\")"
    str_4 = " Use '"
    section_5 = module_0.Section(str_4, str_4)
    var_2 = section_5.__repr__()
    assert var_2 == 'Section(title=" Use \'")'
    var_3 = var_2.__repr__()
    assert var_3 == "'Section(title=\" Use \\'\")'"
    str_5 = " Use '"
    section_6 = module_0.Section(str_5, str_5)
    var_4 = section_6.__repr__()
    assert var_4 == 'Section(title=" Use \'")'
    str_6 = 'C5B_`:"E&+;Y['
    link_0 = module_0.Link(str_6, str_6)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == 'C5B_`:"E&+;Y['
    assert link_0.url == 'C5B_`:"E&+;Y['
    int_1 = var_4.__len__()
    assert int_1 == 23
    var_5 = var_3.__repr__()
    assert var_5 == "'\\'Section(title=\" Use \\\\\\'\")\\''"


def test_case_460():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    iterator_0 = var_0.__iter__()
    var_2 = var_0.__repr__()
    assert var_2 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""


def test_case_461():
    bytes_0 = b"\xac\xb0\x17a\xfaT/\xf7\xc9"
    section_0 = module_0.Section(bytes_0, bytes_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == b"\xac\xb0\x17a\xfaT/\xf7\xc9"
    assert section_0.children == b"\xac\xb0\x17a\xfaT/\xf7\xc9"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )


def test_case_462():
    none_type_0 = None
    section_0 = module_0.Section(none_type_0, none_type_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title is None
    assert section_0.children is None
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = module_1.urlsplit(none_type_0)
    iterator_0 = var_0.__iter__()


def test_case_463():
    str_0 = "page_context"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = "' from the site because it conflicts with '"
    list_0 = []
    section_1 = module_0.Section(str_1, list_0)
    var_0 = section_1.__repr__()
    assert var_0 == "Section(title=\"' from the site because it conflicts with '\")"
    section_2 = module_0.Section(str_1, section_0)
    int_0 = var_0.__len__()
    assert int_0 == 60
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_2, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_1 = link_0.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_2 = var_1.__repr__()
    assert var_2 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_3 = var_1.__repr__()
    assert var_3 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_3 = "' is included in the 'nav' configuration."
    link_1 = module_0.Link(str_3, str_3)
    str_4 = "page_context"
    section_3 = module_0.Section(str_4, str_4)
    str_5 = "' from the site because it conflicts with '"
    list_1 = []
    section_4 = module_0.Section(str_5, list_1)
    var_4 = section_3.__repr__()
    assert var_4 == "Section(title='page_context')"
    bytes_0 = b"\xac\xb0\x17a\xfaT/\xf7\xc9"
    section_5 = module_0.Section(bytes_0, bytes_0)
    str_6 = 'C5B_`:"E&+;Y['
    link_2 = module_0.Link(str_6, str_6)
    str_7 = " Use '"
    section_6 = module_0.Section(str_7, str_7)
    var_5 = section_6.__repr__()
    assert var_5 == 'Section(title=" Use \'")'
    var_6 = var_5.__repr__()
    assert var_6 == "'Section(title=\" Use \\'\")'"
    dict_0 = {}
    str_8 = 'y\x0c[fN"W:2&:SWyz~W'
    link_3 = module_0.Link(dict_0, str_8)
    section_7 = module_0.Section(str_7, var_6)
    assert section_7.children == "'Section(title=\" Use \\'\")'"
    link_4 = module_0.Link(list_0, var_4)
    assert link_4.url == "Section(title='page_context')"


def test_case_464():
    bool_0 = True
    link_0 = module_0.Link(bool_0, bool_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title is True
    assert link_0.url is True
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_1 = module_0.Link(str_0, none_type_0)
    bytes_0 = b"\x802c35Z\xf8"
    link_2 = module_0.Link(link_1, bytes_0)
    bool_1 = True
    section_0 = module_0.Section(bool_1, bool_1)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title is True
    assert section_0.children is True
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = link_2.__repr__()
    assert (
        var_0
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )
    str_1 = var_0.__str__()
    assert (
        str_1
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_3 = module_0.Link(str_2, none_type_1)
    bytes_1 = b"\x802c35Z\xf8"
    link_4 = module_0.Link(link_3, bytes_1)
    var_1 = link_3.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    int_0 = var_1.__len__()
    assert int_0 == 42
    iterator_0 = var_0.__iter__()


def test_case_465():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    str_1 = "gfRsC:6&{;|"
    section_1 = module_0.Section(str_1, str_1)
    str_2 = "relative_to_docs"
    link_0 = module_0.Link(str_2, section_1)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "relative_to_docs"
    assert (
        f"{type(link_0.url).__module__}.{type(link_0.url).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    section_2 = module_0.Section(section_0, var_0)
    assert section_2.children == 'Section(title=" Use \'")'
    str_3 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_1 = module_0.Link(str_3, none_type_0)
    bytes_0 = b"\x802c35Z\xf8"
    link_2 = module_0.Link(link_1, bytes_0)
    var_1 = link_1.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_4 = "$9.}1Av5,.}"
    link_3 = module_0.Link(str_4, str_4)
    str_5 = " Use '"
    section_3 = module_0.Section(str_5, str_5)
    var_2 = section_3.__repr__()
    assert var_2 == 'Section(title=" Use \'")'
    str_6 = 'C5B_`:"E&+;Y['
    link_4 = module_0.Link(str_6, str_6)
    int_0 = var_2.__len__()
    assert int_0 == 23
    str_7 = "$9.}1Av5,.}"
    link_5 = module_0.Link(str_7, str_7)
    var_3 = var_2.__repr__()
    assert var_3 == "'Section(title=\" Use \\'\")'"
    str_8 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_6 = module_0.Link(str_8, none_type_1)
    var_4 = link_6.__repr__()
    assert var_4 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    bool_0 = True
    section_4 = module_0.Section(bool_0, bool_0)
    str_9 = "' contains a link to '"
    section_5 = module_0.Section(str_9, var_4)
    assert section_5.children == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"


def test_case_466():
    str_0 = "gfRsC:6&{;|"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "gfRsC:6&{;|"
    assert section_0.children == "gfRsC:6&{;|"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_1, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_2 = var_0.__repr__()
    assert var_2 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_3 = link_0.__repr__()
    assert var_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    none_type_1 = None
    str_2 = "\n        Perform validation for a value.\n\n        The run_validation method should be implemented by subclasses.\n        "
    link_1 = module_0.Link(none_type_1, str_2)
    var_4 = link_1.__repr__()
    assert (
        var_4
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    str_3 = var_4.__str__()
    assert (
        str_3
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    str_4 = " Use '"
    section_1 = module_0.Section(str_4, str_4)
    var_5 = section_1.__repr__()
    assert var_5 == 'Section(title=" Use \'")'
    var_6 = var_5.__repr__()
    assert var_6 == "'Section(title=\" Use \\'\")'"
    var_7 = var_5.__repr__()
    assert var_7 == "'Section(title=\" Use \\'\")'"
    dict_0 = {}
    str_5 = 'y\x0c[fN"W:2&:SWyz~W'
    link_2 = module_0.Link(dict_0, str_5)
    section_2 = module_0.Section(str_5, str_5)
    section_3 = module_0.Section(str_5, str_5)
    str_6 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_3 = module_0.Link(str_6, none_type_2)
    var_8 = link_3.__repr__()
    assert var_8 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_9 = var_8.__repr__()
    assert var_9 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    iterator_0 = var_8.__iter__()
    var_10 = var_8.__repr__()
    assert var_10 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_7 = var_7.__str__()
    assert str_7 == "'Section(title=\" Use \\'\")'"


def test_case_467():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    int_0 = var_0.__len__()
    assert int_0 == 23
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_1, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    int_1 = var_0.__len__()
    assert int_1 == 23
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_2, none_type_1)
    var_1 = link_1.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_2 = var_0.__repr__()
    assert var_2 == "'Section(title=\" Use \\'\")'"


def test_case_468():
    str_0 = "page_context"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = "' from the site because it conflicts with '"
    list_0 = []
    section_1 = module_0.Section(str_1, list_0)
    var_0 = section_1.__repr__()
    assert var_0 == "Section(title=\"' from the site because it conflicts with '\")"
    section_2 = module_0.Section(str_1, section_0)
    str_2 = "page_context"
    section_3 = module_0.Section(str_2, str_2)
    str_3 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_3, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_1 = link_0.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_2 = section_3.__repr__()
    assert var_2 == "Section(title='page_context')"
    str_4 = "gfRsC:6&{;|"
    section_4 = module_0.Section(str_4, str_4)
    str_5 = "page_context"
    section_5 = module_0.Section(str_5, str_5)
    str_6 = "' from the site because it conflicts with '"
    list_1 = []
    section_6 = module_0.Section(str_6, list_1)
    var_3 = section_6.__repr__()
    assert var_3 == "Section(title=\"' from the site because it conflicts with '\")"
    section_7 = module_0.Section(str_6, section_5)
    int_0 = var_3.__len__()
    assert int_0 == 60
    str_7 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_7, none_type_1)
    bytes_0 = b"\x802c35Z\xf8"
    link_2 = module_0.Link(link_1, bytes_0)
    var_4 = link_1.__repr__()
    assert var_4 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_5 = var_4.__repr__()
    assert var_5 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_8 = "page_context"
    section_8 = module_0.Section(str_8, str_8)
    str_9 = " Use '"
    section_9 = module_0.Section(str_9, str_9)
    var_6 = section_9.__repr__()
    assert var_6 == 'Section(title=" Use \'")'
    int_1 = var_6.__len__()
    assert int_1 == 23
    section_10 = module_0.Section(var_6, int_1)
    assert section_10.title == 'Section(title=" Use \'")'
    assert section_10.children == 23
    str_10 = "gfRsC:6&{;|"
    section_11 = module_0.Section(str_10, str_10)
    str_11 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_3 = module_0.Link(str_11, none_type_2)
    var_7 = link_3.__repr__()
    assert var_7 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_8 = var_7.__repr__()
    assert var_8 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_9 = var_7.__repr__()
    assert var_9 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_10 = link_3.__repr__()
    assert var_10 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    int_2 = var_2.__len__()
    assert int_2 == 29


def test_case_469():
    str_0 = "page_context"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = "' from the site because it conflicts with '"
    list_0 = []
    section_1 = module_0.Section(str_1, list_0)
    var_0 = section_1.__repr__()
    assert var_0 == "Section(title=\"' from the site because it conflicts with '\")"
    str_2 = " Use '"
    section_2 = module_0.Section(str_2, str_2)
    var_1 = section_2.__repr__()
    assert var_1 == 'Section(title=" Use \'")'
    str_3 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_3, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    bytes_0 = b"\x802c35Z\xf8"
    link_1 = module_0.Link(link_0, bytes_0)
    iterator_0 = var_1.__iter__()
    var_2 = var_1.__repr__()
    assert var_2 == "'Section(title=\" Use \\'\")'"


def test_case_470():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    bytes_0 = b"\x802c35Z\xf8"
    link_1 = module_0.Link(link_0, bytes_0)
    bool_0 = True
    section_0 = module_0.Section(bool_0, bool_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title is True
    assert section_0.children is True
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = link_1.__repr__()
    assert (
        var_0
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )
    str_1 = var_0.__str__()
    assert (
        str_1
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )
    none_type_1 = None
    set_0 = {none_type_1, none_type_1, none_type_1, none_type_1}
    link_2 = module_0.Link(none_type_1, set_0)
    str_2 = "page_context"
    section_1 = module_0.Section(str_2, str_2)
    str_3 = "' from the site because it conflicts with '"
    list_0 = []
    section_2 = module_0.Section(str_3, list_0)
    var_1 = section_1.__repr__()
    assert var_1 == "Section(title='page_context')"
    str_4 = " Use '"
    section_3 = module_0.Section(str_4, str_4)
    var_2 = section_3.__repr__()
    assert var_2 == 'Section(title=" Use \'")'
    str_5 = "gfRsC:6&{;|"
    section_4 = module_0.Section(str_5, str_5)
    str_6 = "relative_to_docs"
    link_3 = module_0.Link(str_6, section_4)
    str_7 = "x"
    section_5 = module_0.Section(str_7, str_7)
    str_8 = "gfRsC:6&{;|"
    section_6 = module_0.Section(str_8, str_8)
    str_9 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_4 = module_0.Link(str_9, none_type_2)
    var_3 = link_4.__repr__()
    assert var_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_4 = var_3.__repr__()
    assert var_4 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_5 = var_3.__repr__()
    assert var_5 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_6 = link_4.__repr__()
    assert var_6 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_10 = " Use '"
    section_7 = module_0.Section(str_10, str_10)
    var_7 = section_7.__repr__()
    assert var_7 == 'Section(title=" Use \'")'
    int_0 = var_7.__len__()
    assert int_0 == 23
    var_8 = var_2.__repr__()
    assert var_8 == "'Section(title=\" Use \\'\")'"


def test_case_471():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    var_1 = var_0.__repr__()
    assert var_1 == "'Section(title=\" Use \\'\")'"
    dict_0 = {}
    str_1 = 'y\x0c[fN"W:2&:SWyz~W'
    link_0 = module_0.Link(dict_0, str_1)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == {}
    assert link_0.url == 'y\x0c[fN"W:2&:SWyz~W'
    str_2 = " Use '"
    section_1 = module_0.Section(str_2, str_2)
    var_2 = section_1.__repr__()
    assert var_2 == 'Section(title=" Use \'")'
    str_3 = 'C5B_`:"E&+;Y['
    link_1 = module_0.Link(str_3, str_3)
    int_0 = var_2.__len__()
    assert int_0 == 23
    str_4 = "$9.}1Av5,.}"
    link_2 = module_0.Link(str_4, str_4)
    var_3 = var_2.__repr__()
    assert var_3 == "'Section(title=\" Use \\'\")'"
    section_2 = module_0.Section(var_1, var_1)
    assert section_2.title == "'Section(title=\" Use \\'\")'"
    assert section_2.children == "'Section(title=\" Use \\'\")'"


def test_case_472():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    iterator_0 = var_0.__iter__()
    var_2 = var_0.__repr__()
    assert var_2 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_1, none_type_1)
    var_3 = link_1.__repr__()
    assert var_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_4 = var_3.__repr__()
    assert var_4 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_5 = var_3.__repr__()
    assert var_5 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_2 = " Use '"
    section_0 = module_0.Section(str_2, str_2)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_6 = section_0.__repr__()
    assert var_6 == 'Section(title=" Use \'")'
    str_3 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_2 = module_0.Link(str_3, none_type_2)
    bytes_0 = b"\x802c35Z\xf8"
    link_3 = module_0.Link(link_2, bytes_0)
    iterator_1 = var_6.__iter__()
    str_4 = "' is included in the 'nav' configuration."
    link_4 = module_0.Link(str_4, str_4)
    str_5 = "d@IMz]4\\EmIqM']"
    list_0 = []
    section_1 = module_0.Section(str_5, list_0)


def test_case_473():
    str_0 = "' is included in the 'nav' configuration."
    link_0 = module_0.Link(str_0, str_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "' is included in the 'nav' configuration."
    assert link_0.url == "' is included in the 'nav' configuration."
    str_1 = "gfRsC:6&{;|"
    section_0 = module_0.Section(str_1, str_1)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "gfRsC:6&{;|"
    assert section_0.children == "gfRsC:6&{;|"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == "Section(title='gfRsC:6&{;|')"
    dict_0 = {}
    str_2 = 'y\x0c[fN"W:2&:SWyz~W'
    link_1 = module_0.Link(dict_0, str_2)
    section_1 = module_0.Section(str_2, str_2)
    str_3 = " Use '"
    section_2 = module_0.Section(str_3, str_3)
    var_1 = section_2.__repr__()
    assert var_1 == 'Section(title=" Use \'")'
    str_4 = "gfRsC:6&{;|"
    section_3 = module_0.Section(str_4, str_4)
    str_5 = "relative_to_docs"
    link_2 = module_0.Link(str_5, section_3)
    str_6 = " Use '"
    section_4 = module_0.Section(str_6, str_6)
    var_2 = section_4.__repr__()
    assert var_2 == 'Section(title=" Use \'")'
    var_3 = var_2.__repr__()
    assert var_3 == "'Section(title=\" Use \\'\")'"
    str_7 = " Use '"
    section_5 = module_0.Section(str_7, str_7)
    var_4 = section_5.__repr__()
    assert var_4 == 'Section(title=" Use \'")'
    str_8 = 'C5B_`:"E&+;Y['
    link_3 = module_0.Link(str_8, str_8)
    int_0 = var_4.__len__()
    assert int_0 == 23
    str_9 = "gfRsC:6&{;|"
    section_6 = module_0.Section(str_9, str_9)
    list_0 = []
    section_7 = module_0.Section(section_6, list_0)
    str_10 = " Use '"
    section_8 = module_0.Section(str_10, str_10)
    var_5 = section_8.__repr__()
    assert var_5 == 'Section(title=" Use \'")'
    str_11 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_4 = module_0.Link(str_11, none_type_0)
    var_6 = link_4.__repr__()
    assert var_6 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    int_1 = var_6.__len__()
    assert int_1 == 42
    section_9 = module_0.Section(var_2, var_6)
    assert section_9.title == 'Section(title=" Use \'")'
    assert section_9.children == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"


def test_case_474():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_2 = var_1.__repr__()
    assert var_2 == "'\"Link(title=\\'0_~6:m!(f5FgU,:rvz\\', url=None)\"'"
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_1, none_type_1)
    bytes_0 = b"\x802c35Z\xf8"
    link_2 = module_0.Link(link_1, bytes_0)
    var_3 = link_1.__repr__()
    assert var_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_3 = module_0.Link(str_2, none_type_2)
    var_4 = link_3.__repr__()
    assert var_4 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_5 = var_4.__repr__()
    assert var_5 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_3 = var_4.__str__()
    assert str_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_6 = var_4.__repr__()
    assert var_6 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    none_type_3 = None
    set_0 = {none_type_3, none_type_3, none_type_3, none_type_3}
    link_4 = module_0.Link(none_type_3, set_0)
    none_type_4 = None
    str_4 = "\n        Perform validation for a value.\n\n        The run_validation method should be implemented by subclasses.\n        "
    link_5 = module_0.Link(none_type_4, str_4)
    var_7 = link_5.__repr__()
    assert (
        var_7
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    str_5 = var_7.__str__()
    assert (
        str_5
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    dict_0 = {}
    str_6 = 'y\x0c[fN"W:2&:SWyz~W'
    link_6 = module_0.Link(dict_0, str_6)
    section_0 = module_0.Section(str_6, str_6)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == 'y\x0c[fN"W:2&:SWyz~W'
    assert section_0.children == 'y\x0c[fN"W:2&:SWyz~W'
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    section_1 = module_0.Section(str_6, str_6)
    dict_1 = {}
    str_7 = 'y\x0c[fN"W:2&:SWyz~W'
    link_7 = module_0.Link(dict_1, str_7)
    int_0 = var_5.__len__()
    assert int_0 == 44


def test_case_475():
    dict_0 = {}
    str_0 = 'y\x0c[fN"W:2&:SWyz~W'
    link_0 = module_0.Link(dict_0, str_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == {}
    assert link_0.url == 'y\x0c[fN"W:2&:SWyz~W'
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == 'y\x0c[fN"W:2&:SWyz~W'
    assert section_0.children == 'y\x0c[fN"W:2&:SWyz~W'
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    section_1 = module_0.Section(str_0, str_0)
    str_1 = "page_context"
    section_2 = module_0.Section(str_1, str_1)
    str_2 = "' from the site because it conflicts with '"
    list_0 = []
    section_3 = module_0.Section(str_2, list_0)
    str_3 = "localhost"
    link_1 = module_0.Link(str_2, str_3)
    bool_0 = True
    link_2 = module_0.Link(bool_0, bool_0)
    str_4 = " Use '"
    section_4 = module_0.Section(str_4, str_4)
    var_0 = section_4.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    str_5 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_3 = module_0.Link(str_5, none_type_0)
    var_1 = link_3.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    int_0 = var_1.__len__()
    assert int_0 == 42
    str_6 = " Use '"
    section_5 = module_0.Section(str_6, str_6)
    var_2 = section_5.__repr__()
    assert var_2 == 'Section(title=" Use \'")'
    int_1 = var_2.__len__()
    assert int_1 == 23
    str_7 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_4 = module_0.Link(str_7, none_type_1)
    int_2 = var_2.__len__()
    assert int_2 == 23
    int_3 = var_2.__len__()
    assert int_3 == 23
    str_8 = "page_context"
    section_6 = module_0.Section(str_8, str_8)
    str_9 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_5 = module_0.Link(str_9, none_type_2)
    var_3 = link_5.__repr__()
    assert var_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_4 = section_6.__repr__()
    assert var_4 == "Section(title='page_context')"
    str_10 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_6 = module_0.Link(str_10, none_type_3)
    var_5 = link_6.__repr__()
    assert var_5 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_6 = var_5.__repr__()
    assert var_6 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    iterator_0 = var_5.__iter__()
    var_7 = var_5.__repr__()
    assert var_7 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_11 = "0_~6:m!(f5FgU,:rvz"
    none_type_4 = None
    link_7 = module_0.Link(str_11, none_type_4)
    bytes_0 = b"\x802c35Z\xf8"
    link_8 = module_0.Link(link_7, bytes_0)
    var_8 = link_7.__repr__()
    assert var_8 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_9 = var_3.__repr__()
    assert var_9 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""


def test_case_476():
    str_0 = "gfRsC:6&{;|"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "gfRsC:6&{;|"
    assert section_0.children == "gfRsC:6&{;|"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_1, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_2 = var_0.__repr__()
    assert var_2 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_3 = link_0.__repr__()
    assert var_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_2 = "gfRsC:6&{;|"
    section_1 = module_0.Section(str_2, str_2)
    var_4 = section_1.__repr__()
    assert var_4 == "Section(title='gfRsC:6&{;|')"
    bool_0 = True
    section_2 = module_0.Section(bool_0, bool_0)
    list_0 = [var_4, var_4]
    section_3 = module_0.Section(section_1, list_0)
    assert section_3.children == [
        "Section(title='gfRsC:6&{;|')",
        "Section(title='gfRsC:6&{;|')",
    ]
    str_3 = "page_context"
    section_4 = module_0.Section(str_3, str_3)
    str_4 = "' from the site because it conflicts with '"
    list_1 = []
    section_5 = module_0.Section(str_4, list_1)
    var_5 = section_5.__repr__()
    assert var_5 == "Section(title=\"' from the site because it conflicts with '\")"
    section_6 = module_0.Section(str_4, section_4)
    str_5 = " Use '"
    section_7 = module_0.Section(str_5, str_5)
    var_6 = section_7.__repr__()
    assert var_6 == 'Section(title=" Use \'")'
    var_7 = var_6.__repr__()
    assert var_7 == "'Section(title=\" Use \\'\")'"
    dict_0 = {}
    str_6 = 'y\x0c[fN"W:2&:SWyz~W'
    link_1 = module_0.Link(dict_0, str_6)
    section_8 = module_0.Section(str_5, var_7)
    assert section_8.children == "'Section(title=\" Use \\'\")'"
    str_7 = "page_context"
    section_9 = module_0.Section(str_7, str_7)
    iterator_0 = var_3.__iter__()


def test_case_477():
    str_0 = "' is included in the 'nav' configuration."
    link_0 = module_0.Link(str_0, str_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "' is included in the 'nav' configuration."
    assert link_0.url == "' is included in the 'nav' configuration."
    str_1 = 'C5B_`:"E&+;Y['
    link_1 = module_0.Link(str_1, str_1)
    none_type_0 = None
    str_2 = "\n        Perform validation for a value.\n\n        The run_validation method should be implemented by subclasses.\n        "
    link_2 = module_0.Link(none_type_0, str_2)
    var_0 = link_2.__repr__()
    assert (
        var_0
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    str_3 = var_0.__str__()
    assert (
        str_3
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    bool_0 = True
    link_3 = module_0.Link(bool_0, bool_0)
    var_1 = var_0.__repr__()
    assert (
        var_1
        == "\"Link(title=[blank], url='\\\\n        Perform validation for a value.\\\\n\\\\n        The run_validation method should be implemented by subclasses.\\\\n        ')\""
    )
    str_4 = " Use '"
    section_0 = module_0.Section(str_4, str_4)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_2 = section_0.__repr__()
    assert var_2 == 'Section(title=" Use \'")'
    str_5 = 'C5B_`:"E&+;Y['
    link_4 = module_0.Link(str_5, str_5)
    int_0 = var_2.__len__()
    assert int_0 == 23
    str_6 = "$9.}1Av5,.}"
    link_5 = module_0.Link(str_6, str_6)
    var_3 = var_2.__repr__()
    assert var_3 == "'Section(title=\" Use \\'\")'"
    none_type_1 = None
    section_1 = module_0.Section(none_type_1, none_type_1)
    var_4 = module_1.urlsplit(none_type_1)
    iterator_0 = var_4.__iter__()
    none_type_2 = None
    str_7 = "\n        Perform validation for a value.\n\n        The run_validation method should be implemented by subclasses.\n        "
    link_6 = module_0.Link(none_type_2, str_7)
    var_5 = link_6.__repr__()
    assert (
        var_5
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    str_8 = var_5.__str__()
    assert (
        str_8
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    str_9 = " Use '"
    section_2 = module_0.Section(str_9, str_9)
    var_6 = section_2.__repr__()
    assert var_6 == 'Section(title=" Use \'")'
    str_10 = "gfRsC:6&{;|"
    section_3 = module_0.Section(str_10, str_10)
    str_11 = "relative_to_docs"
    link_7 = module_0.Link(str_11, section_3)
    section_4 = module_0.Section(section_2, var_6)
    assert section_4.children == 'Section(title=" Use \'")'
    int_1 = var_6.__len__()
    assert int_1 == 23
    str_12 = " Use '"
    section_5 = module_0.Section(str_12, str_12)
    var_7 = section_5.__repr__()
    assert var_7 == 'Section(title=" Use \'")'
    str_13 = "gfRsC:6&{;|"
    section_6 = module_0.Section(str_13, str_13)
    str_14 = "relative_to_docs"
    link_8 = module_0.Link(str_14, section_6)
    section_7 = module_0.Section(section_5, var_7)
    assert section_7.children == 'Section(title=" Use \'")'
    str_15 = "page_context"
    section_8 = module_0.Section(str_15, str_15)
    str_16 = "' from the site because it conflicts with '"
    list_0 = []
    section_9 = module_0.Section(str_16, list_0)
    section_10 = module_0.Section(section_9, list_0)
    var_8 = section_7.__repr__()
    assert var_8 == 'Section(title=Section(title=" Use \'"))'


def test_case_478():
    none_type_0 = None
    set_0 = {none_type_0, none_type_0, none_type_0, none_type_0}
    link_0 = module_0.Link(none_type_0, set_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title is None
    assert link_0.url == {None}
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    int_0 = var_0.__len__()
    assert int_0 == 23
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_1, none_type_1)
    var_1 = link_1.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_2 = var_1.__repr__()
    assert var_2 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    iterator_0 = var_1.__iter__()
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_2 = module_0.Link(str_2, none_type_2)
    bytes_0 = b"\x802c35Z\xf8"
    link_3 = module_0.Link(link_2, bytes_0)
    str_3 = "page_context"
    section_1 = module_0.Section(str_3, str_3)
    str_4 = "' from the site because it conflicts with '"
    list_0 = []
    section_2 = module_0.Section(str_4, list_0)
    var_3 = section_2.__repr__()
    assert var_3 == "Section(title=\"' from the site because it conflicts with '\")"
    section_3 = module_0.Section(str_4, section_1)
    str_5 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_4 = module_0.Link(str_5, none_type_3)
    var_4 = link_4.__repr__()
    assert var_4 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_5 = var_4.__repr__()
    assert var_5 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_6 = var_4.__str__()
    assert str_6 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_6 = var_4.__repr__()
    assert var_6 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_7 = "0_~6:m!(f5FgU,:rvz"
    none_type_4 = None
    link_5 = module_0.Link(str_7, none_type_4)
    var_7 = link_5.__repr__()
    assert var_7 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_8 = var_7.__repr__()
    assert var_8 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_9 = var_7.__repr__()
    assert var_9 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_8 = "0_~6:m!(f5FgU,:rvz"
    none_type_5 = None
    link_6 = module_0.Link(str_8, none_type_5)
    var_10 = link_6.__repr__()
    assert var_10 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_11 = var_10.__repr__()
    assert var_11 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_9 = var_10.__str__()
    assert str_9 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_10 = 'C5B_`:"E&+;Y['
    link_7 = module_0.Link(str_10, str_10)
    int_1 = var_10.__len__()
    assert int_1 == 42
    str_11 = "page_context"
    section_4 = module_0.Section(str_11, str_11)
    str_12 = "' from the site because it conflicts with '"
    list_1 = []
    section_5 = module_0.Section(str_12, list_1)
    section_6 = module_0.Section(section_5, list_1)
    var_12 = link_0.__repr__()
    assert var_12 == "Link(title=[blank], url={None})"


def test_case_479():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    int_0 = var_1.__len__()
    assert int_0 == 44


def test_case_480():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    int_0 = var_0.__len__()
    assert int_0 == 23
    section_1 = module_0.Section(var_0, int_0)
    assert section_1.title == 'Section(title=" Use \'")'
    assert section_1.children == 23
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_1, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_1 = link_0.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_2 = var_1.__repr__()
    assert var_2 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_2 = var_1.__str__()
    assert str_2 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_3 = 'C5B_`:"E&+;Y['
    link_1 = module_0.Link(str_3, str_3)
    int_1 = var_1.__len__()
    assert int_1 == 42
    str_4 = "gfRsC:6&{;|"
    section_2 = module_0.Section(str_4, str_4)
    str_5 = " Use '"
    section_3 = module_0.Section(str_5, str_5)
    var_3 = section_3.__repr__()
    assert var_3 == 'Section(title=" Use \'")'
    int_2 = var_3.__len__()
    assert int_2 == 23
    var_4 = var_3.__repr__()
    assert var_4 == "'Section(title=\" Use \\'\")'"
    var_5 = var_4.__repr__()
    assert var_5 == "'\\'Section(title=\" Use \\\\\\'\")\\''"
    none_type_1 = None
    str_6 = "\n        Perform validation for a value.\n\n        The run_validation method should be implemented by subclasses.\n        "
    link_2 = module_0.Link(none_type_1, str_6)
    var_6 = link_2.__repr__()
    assert (
        var_6
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    str_7 = var_6.__str__()
    assert (
        str_7
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    var_7 = var_5.__repr__()
    assert var_7 == "'\\'\\\\\\'Section(title=\" Use \\\\\\\\\\\\\\'\")\\\\\\'\\''"


def test_case_481():
    str_0 = "page_context"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = "' from the site because it conflicts with '"
    list_0 = []
    section_1 = module_0.Section(str_1, list_0)
    str_2 = "localhost"
    link_0 = module_0.Link(str_1, str_2)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "' from the site because it conflicts with '"
    assert link_0.url == "localhost"
    str_3 = " Use '"
    section_2 = module_0.Section(str_3, str_3)
    var_0 = section_2.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    str_4 = "gfRsC:6&{;|"
    section_3 = module_0.Section(str_4, str_4)
    str_5 = "relative_to_docs"
    link_1 = module_0.Link(str_5, section_3)
    section_4 = module_0.Section(section_2, var_0)
    assert section_4.children == 'Section(title=" Use \'")'
    int_0 = var_0.__len__()
    assert int_0 == 23
    str_6 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_2 = module_0.Link(str_6, none_type_0)
    var_1 = link_2.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_2 = var_1.__repr__()
    assert var_2 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_3 = var_2.__repr__()
    assert var_3 == "'\"Link(title=\\'0_~6:m!(f5FgU,:rvz\\', url=None)\"'"
    str_7 = "x"
    section_5 = module_0.Section(str_7, str_7)
    str_8 = "$9.}1Av5,.}"
    link_3 = module_0.Link(str_8, str_8)
    var_4 = link_2.__repr__()
    assert var_4 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"


def test_case_482():
    none_type_0 = None
    section_0 = module_0.Section(none_type_0, none_type_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title is None
    assert section_0.children is None
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = module_1.urlsplit(none_type_0)
    iterator_0 = var_0.__iter__()
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_0 = module_0.Link(str_0, none_type_1)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_1 = link_0.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_2 = var_1.__repr__()
    assert var_2 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_1 = var_1.__str__()
    assert str_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_1 = module_0.Link(str_2, none_type_2)
    var_3 = link_1.__repr__()
    assert var_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_4 = var_3.__repr__()
    assert var_4 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_3 = var_3.__str__()
    assert str_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_5 = var_3.__repr__()
    assert var_5 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    int_0 = var_4.__len__()
    assert int_0 == 44


def test_case_483():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    var_1 = var_0.__repr__()
    assert var_1 == "'Section(title=\" Use \\'\")'"
    str_1 = "page_context"
    section_1 = module_0.Section(str_1, str_1)
    str_2 = "' from the site because it conflicts with '"
    list_0 = []
    section_2 = module_0.Section(str_2, list_0)
    var_2 = section_2.__repr__()
    assert var_2 == "Section(title=\"' from the site because it conflicts with '\")"
    section_3 = module_0.Section(str_2, section_1)
    str_3 = " Use '"
    section_4 = module_0.Section(str_3, str_3)
    var_3 = section_4.__repr__()
    assert var_3 == 'Section(title=" Use \'")'
    str_4 = 'C5B_`:"E&+;Y['
    link_0 = module_0.Link(str_4, str_4)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == 'C5B_`:"E&+;Y['
    assert link_0.url == 'C5B_`:"E&+;Y['
    int_0 = var_3.__len__()
    assert int_0 == 23
    str_5 = "$9.}1Av5,.}"
    link_1 = module_0.Link(str_5, str_5)
    var_4 = var_3.__repr__()
    assert var_4 == "'Section(title=\" Use \\'\")'"
    str_6 = "gfRsC:6&{;|"
    section_5 = module_0.Section(str_6, str_6)
    str_7 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_2 = module_0.Link(str_7, none_type_0)
    var_5 = link_2.__repr__()
    assert var_5 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_6 = var_5.__repr__()
    assert var_6 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_7 = var_5.__repr__()
    assert var_7 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_8 = link_2.__repr__()
    assert var_8 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    set_0 = set()
    navigation_0 = module_0.Navigation(set_0, set_0)
    assert (
        f"{type(navigation_0).__module__}.{type(navigation_0).__qualname__}"
        == "mkdocs.structure.nav.Navigation"
    )
    assert len(navigation_0) == 0
    str_8 = navigation_0.__str__()
    str_9 = "gfRsC:6&{;|"
    section_6 = module_0.Section(str_9, str_9)
    var_9 = section_6.__repr__()
    assert var_9 == "Section(title='gfRsC:6&{;|')"
    bool_0 = True
    section_7 = module_0.Section(bool_0, bool_0)
    list_1 = [var_9, var_9]
    section_8 = module_0.Section(section_6, list_1)
    assert section_8.children == [
        "Section(title='gfRsC:6&{;|')",
        "Section(title='gfRsC:6&{;|')",
    ]
    str_10 = "page_context"
    section_9 = module_0.Section(str_10, str_10)
    str_11 = "' from the site because it conflicts with '"
    list_2 = []
    section_10 = module_0.Section(str_11, list_2)
    section_11 = module_0.Section(section_10, list_2)
    str_12 = " Use '"
    section_12 = module_0.Section(str_12, str_12)
    var_10 = section_12.__repr__()
    assert var_10 == 'Section(title=" Use \'")'
    int_1 = var_10.__len__()
    assert int_1 == 23
    var_11 = var_10.__repr__()
    assert var_11 == "'Section(title=\" Use \\'\")'"
    none_type_1 = None
    section_13 = module_0.Section(none_type_1, none_type_1)
    var_12 = module_1.urlsplit(none_type_1)
    iterator_0 = var_12.__iter__()
    int_2 = var_3.__len__()
    assert int_2 == 23


def test_case_484():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_1 = var_0.__str__()
    assert str_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_2 = var_0.__repr__()
    assert var_2 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_2 = " Use '"
    section_0 = module_0.Section(str_2, str_2)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_3 = section_0.__repr__()
    assert var_3 == 'Section(title=" Use \'")'
    int_0 = var_3.__len__()
    assert int_0 == 23
    section_1 = module_0.Section(var_3, int_0)
    assert section_1.title == 'Section(title=" Use \'")'
    assert section_1.children == 23
    str_3 = " Use '"
    section_2 = module_0.Section(str_3, str_3)
    var_4 = section_2.__repr__()
    assert var_4 == 'Section(title=" Use \'")'
    int_1 = var_4.__len__()
    assert int_1 == 23
    var_5 = var_4.__repr__()
    assert var_5 == "'Section(title=\" Use \\'\")'"
    str_4 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_4, none_type_1)
    bytes_0 = b"\x802c35Z\xf8"
    link_2 = module_0.Link(link_1, bytes_0)
    var_6 = link_1.__repr__()
    assert var_6 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_7 = var_6.__repr__()
    assert var_7 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_5 = " Use '"
    section_3 = module_0.Section(str_5, str_5)
    var_8 = section_3.__repr__()
    assert var_8 == 'Section(title=" Use \'")'
    str_6 = "gfRsC:6&{;|"
    section_4 = module_0.Section(str_6, str_6)
    str_7 = "relative_to_docs"
    link_3 = module_0.Link(str_7, section_4)
    section_5 = module_0.Section(section_3, var_8)
    assert section_5.children == 'Section(title=" Use \'")'
    int_2 = var_8.__len__()
    assert int_2 == 23
    str_8 = "gfRsC:6&{;|"
    section_6 = module_0.Section(str_8, str_8)
    var_9 = section_6.__repr__()
    assert var_9 == "Section(title='gfRsC:6&{;|')"
    bool_0 = True
    section_7 = module_0.Section(bool_0, bool_0)
    list_0 = [var_9, var_9]
    section_8 = module_0.Section(section_6, list_0)
    assert section_8.children == [
        "Section(title='gfRsC:6&{;|')",
        "Section(title='gfRsC:6&{;|')",
    ]
    str_9 = " Use '"
    section_9 = module_0.Section(str_9, str_9)
    var_10 = section_9.__repr__()
    assert var_10 == 'Section(title=" Use \'")'
    none_type_2 = None
    section_10 = module_0.Section(none_type_2, none_type_2)
    var_11 = module_1.urlsplit(none_type_2)
    iterator_0 = var_11.__iter__()
    str_10 = "page_context"
    section_11 = module_0.Section(str_10, str_10)
    str_11 = "' from the site because it conflicts with '"
    list_1 = []
    section_12 = module_0.Section(str_11, list_1)
    section_13 = module_0.Section(section_12, list_1)
    str_12 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_4 = module_0.Link(str_12, none_type_3)
    var_12 = link_4.__repr__()
    assert var_12 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_13 = var_12.__repr__()
    assert var_13 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_14 = var_13.__repr__()
    assert var_14 == "'\"Link(title=\\'0_~6:m!(f5FgU,:rvz\\', url=None)\"'"
    var_15 = section_1.__repr__()
    assert var_15 == "Section(title='Section(title=\" Use \\'\")')"


def test_case_485():
    str_0 = "page_context"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = "' from the site because it conflicts with '"
    list_0 = []
    section_1 = module_0.Section(str_1, list_0)
    var_0 = section_0.__repr__()
    assert var_0 == "Section(title='page_context')"
    str_2 = " Use '"
    section_2 = module_0.Section(str_2, str_2)
    var_1 = section_2.__repr__()
    assert var_1 == 'Section(title=" Use \'")'
    str_3 = 'C5B_`:"E&+;Y['
    link_0 = module_0.Link(str_3, str_3)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == 'C5B_`:"E&+;Y['
    assert link_0.url == 'C5B_`:"E&+;Y['
    int_0 = var_1.__len__()
    assert int_0 == 23
    set_0 = set()
    navigation_0 = module_0.Navigation(set_0, set_0)
    assert (
        f"{type(navigation_0).__module__}.{type(navigation_0).__qualname__}"
        == "mkdocs.structure.nav.Navigation"
    )
    assert len(navigation_0) == 0
    str_4 = navigation_0.__str__()
    str_5 = "page_context"
    section_3 = module_0.Section(str_5, str_5)
    str_6 = "' from the site because it conflicts with '"
    list_1 = []
    section_4 = module_0.Section(str_6, list_1)
    section_5 = module_0.Section(section_4, list_1)
    str_7 = " Use '"
    section_6 = module_0.Section(str_7, str_7)
    var_2 = section_6.__repr__()
    assert var_2 == 'Section(title=" Use \'")'
    int_1 = var_2.__len__()
    assert int_1 == 23
    str_8 = " Use '"
    section_7 = module_0.Section(str_8, str_8)
    var_3 = section_7.__repr__()
    assert var_3 == 'Section(title=" Use \'")'
    int_2 = var_3.__len__()
    assert int_2 == 23
    str_9 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_1 = module_0.Link(str_9, none_type_0)
    int_3 = var_3.__len__()
    assert int_3 == 23
    str_10 = "page_context"
    section_8 = module_0.Section(str_10, str_10)
    str_11 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_2 = module_0.Link(str_11, none_type_1)
    var_4 = link_2.__repr__()
    assert var_4 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_5 = section_8.__repr__()
    assert var_5 == "Section(title='page_context')"
    str_12 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_3 = module_0.Link(str_12, none_type_2)
    var_6 = link_3.__repr__()
    assert var_6 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_7 = var_6.__repr__()
    assert var_7 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_8 = var_6.__repr__()
    assert var_8 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_9 = link_3.__repr__()
    assert var_9 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_13 = "gfRsC:6&{;|"
    section_9 = module_0.Section(str_13, str_13)
    str_14 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_4 = module_0.Link(str_14, none_type_3)
    bytes_0 = b"\x802c35Z\xf8"
    link_5 = module_0.Link(link_4, bytes_0)
    dict_0 = {}
    str_15 = 'y\x0c[fN"W:2&:SWyz~W'
    link_6 = module_0.Link(dict_0, str_15)
    var_10 = link_5.__repr__()
    assert (
        var_10
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )
    var_11 = var_10.__repr__()
    assert (
        var_11
        == "\"Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\\\x802c35Z\\\\xf8')\""
    )


def test_case_486():
    str_0 = "page_context"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = "' from the site because it conflicts with '"
    list_0 = []
    section_1 = module_0.Section(str_1, list_0)
    str_2 = "localhost"
    link_0 = module_0.Link(str_1, str_2)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "' from the site because it conflicts with '"
    assert link_0.url == "localhost"
    str_3 = " Use '"
    section_2 = module_0.Section(str_3, str_3)
    var_0 = section_2.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    str_4 = "gfRsC:6&{;|"
    section_3 = module_0.Section(str_4, str_4)
    str_5 = "relative_to_docs"
    link_1 = module_0.Link(str_5, section_3)
    str_6 = " Use '"
    section_4 = module_0.Section(str_6, str_6)
    var_1 = section_4.__repr__()
    assert var_1 == 'Section(title=" Use \'")'
    str_7 = "gfRsC:6&{;|"
    section_5 = module_0.Section(str_7, str_7)
    str_8 = "relative_to_docs"
    link_2 = module_0.Link(str_8, section_5)
    section_6 = module_0.Section(section_4, var_1)
    assert section_6.children == 'Section(title=" Use \'")'
    str_9 = 'C5B_`:"E&+;Y['
    link_3 = module_0.Link(str_9, str_9)
    str_10 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_4 = module_0.Link(str_10, none_type_0)
    var_2 = link_4.__repr__()
    assert var_2 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_11 = var_2.__str__()
    assert str_11 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"


def test_case_487():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    str_1 = 'C5B_`:"E&+;Y['
    link_0 = module_0.Link(str_1, str_1)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == 'C5B_`:"E&+;Y['
    assert link_0.url == 'C5B_`:"E&+;Y['
    int_0 = var_0.__len__()
    assert int_0 == 23
    section_1 = module_0.Section(var_0, var_0)
    assert section_1.title == 'Section(title=" Use \'")'
    assert section_1.children == 'Section(title=" Use \'")'
    link_1 = module_0.Link(section_0, str_0)


def test_case_488():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    var_1 = var_0.__repr__()
    assert var_1 == "'Section(title=\" Use \\'\")'"
    var_2 = var_0.__repr__()
    assert var_2 == "'Section(title=\" Use \\'\")'"
    str_1 = "gfRsC:6&{;|"
    section_1 = module_0.Section(str_1, str_1)
    var_3 = section_1.__repr__()
    assert var_3 == "Section(title='gfRsC:6&{;|')"
    str_2 = "x"
    section_2 = module_0.Section(str_2, str_2)
    str_3 = "gfRsC:6&{;|"
    section_3 = module_0.Section(str_3, str_3)
    list_0 = []
    section_4 = module_0.Section(section_3, list_0)
    str_4 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_4, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    bytes_0 = b"\x802c35Z\xf8"
    link_1 = module_0.Link(link_0, bytes_0)
    var_4 = link_0.__repr__()
    assert var_4 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    int_0 = var_4.__len__()
    assert int_0 == 42
    str_5 = "gfRsC:6&{;|"
    section_5 = module_0.Section(str_5, str_5)
    str_6 = " Use '"
    section_6 = module_0.Section(str_6, str_6)
    var_5 = section_6.__repr__()
    assert var_5 == 'Section(title=" Use \'")'
    int_1 = var_5.__len__()
    assert int_1 == 23
    var_6 = var_5.__repr__()
    assert var_6 == "'Section(title=\" Use \\'\")'"
    var_7 = var_6.__repr__()
    assert var_7 == "'\\'Section(title=\" Use \\\\\\'\")\\''"
    str_7 = " Use '"
    section_7 = module_0.Section(str_7, str_7)
    var_8 = section_7.__repr__()
    assert var_8 == 'Section(title=" Use \'")'
    int_2 = var_8.__len__()
    assert int_2 == 23
    var_9 = var_8.__repr__()
    assert var_9 == "'Section(title=\" Use \\'\")'"
    str_8 = " Use '"
    section_8 = module_0.Section(str_8, str_8)
    var_10 = section_8.__repr__()
    assert var_10 == 'Section(title=" Use \'")'
    int_3 = var_10.__len__()
    assert int_3 == 23
    section_9 = module_0.Section(var_10, int_3)
    assert section_9.title == 'Section(title=" Use \'")'
    assert section_9.children == 23
    str_9 = 'C5B_`:"E&+;Y['
    link_2 = module_0.Link(str_9, str_9)
    str_10 = " Use '"
    section_10 = module_0.Section(str_10, str_10)
    var_11 = section_10.__repr__()
    assert var_11 == 'Section(title=" Use \'")'
    str_11 = "gfRsC:6&{;|"
    section_11 = module_0.Section(str_11, str_11)
    str_12 = "relative_to_docs"
    link_3 = module_0.Link(str_12, section_11)
    section_12 = module_0.Section(section_10, var_11)
    assert section_12.children == 'Section(title=" Use \'")'
    str_13 = var_1.__str__()
    assert str_13 == "'Section(title=\" Use \\'\")'"


def test_case_489():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    int_0 = var_0.__len__()
    assert int_0 == 23
    var_1 = var_0.__repr__()
    assert var_1 == "'Section(title=\" Use \\'\")'"
    link_0 = module_0.Link(int_0, var_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == 23
    assert link_0.url == 'Section(title=" Use \'")'


def test_case_490():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    bytes_0 = b"\x802c35Z\xf8"
    link_1 = module_0.Link(link_0, bytes_0)
    bool_0 = True
    section_0 = module_0.Section(bool_0, bool_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title is True
    assert section_0.children is True
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = link_1.__repr__()
    assert (
        var_0
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )
    str_1 = var_0.__str__()
    assert (
        str_1
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )
    str_2 = " Use '"
    section_1 = module_0.Section(str_2, str_2)
    var_1 = section_1.__repr__()
    assert var_1 == 'Section(title=" Use \'")'
    str_3 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_2 = module_0.Link(str_3, none_type_1)
    var_2 = link_2.__repr__()
    assert var_2 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    int_0 = var_2.__len__()
    assert int_0 == 42
    str_4 = " Use '"
    section_2 = module_0.Section(str_4, str_4)
    var_3 = section_2.__repr__()
    assert var_3 == 'Section(title=" Use \'")'
    var_4 = var_3.__repr__()
    assert var_4 == "'Section(title=\" Use \\'\")'"
    str_5 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_3 = module_0.Link(str_5, none_type_2)
    var_5 = link_3.__repr__()
    assert var_5 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_6 = var_5.__repr__()
    assert var_6 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_7 = var_6.__repr__()
    assert var_7 == "'\"Link(title=\\'0_~6:m!(f5FgU,:rvz\\', url=None)\"'"
    str_6 = "' is included in the 'nav' configuration."
    link_4 = module_0.Link(str_6, str_6)
    str_7 = " Use '"
    section_3 = module_0.Section(str_7, str_7)
    var_8 = section_3.__repr__()
    assert var_8 == 'Section(title=" Use \'")'
    section_4 = module_0.Section(str_7, var_8)
    assert section_4.children == 'Section(title=" Use \'")'
    str_8 = "gfRsC:6&{;|"
    section_5 = module_0.Section(str_8, str_8)
    list_0 = []
    section_6 = module_0.Section(section_5, list_0)
    iterator_0 = var_7.__iter__()


def test_case_491():
    str_0 = "page_context"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = "' from the site because it conflicts with '"
    list_0 = []
    section_1 = module_0.Section(str_1, list_0)
    section_2 = module_0.Section(section_1, list_0)
    section_3 = module_0.Section(str_1, list_0)


def test_case_492():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    bytes_0 = b"\x802c35Z\xf8"
    link_1 = module_0.Link(link_0, bytes_0)
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_1 = " Use '"
    section_0 = module_0.Section(str_1, str_1)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_1 = section_0.__repr__()
    assert var_1 == 'Section(title=" Use \'")'
    str_2 = "gfRsC:6&{;|"
    section_1 = module_0.Section(str_2, str_2)
    str_3 = "relative_to_docs"
    link_2 = module_0.Link(str_3, section_1)
    section_2 = module_0.Section(section_0, var_1)
    assert section_2.children == 'Section(title=" Use \'")'
    int_0 = var_1.__len__()
    assert int_0 == 23
    none_type_1 = None
    section_3 = module_0.Section(none_type_1, none_type_1)
    var_2 = module_1.urlsplit(none_type_1)
    iterator_0 = var_2.__iter__()
    str_4 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_3 = module_0.Link(str_4, none_type_2)
    str_5 = " Use '"
    section_4 = module_0.Section(str_5, str_5)
    var_3 = section_4.__repr__()
    assert var_3 == 'Section(title=" Use \'")'
    str_6 = 'C5B_`:"E&+;Y['
    link_4 = module_0.Link(str_6, str_6)
    int_1 = var_3.__len__()
    assert int_1 == 23
    str_7 = " Use '"
    section_5 = module_0.Section(str_7, str_7)
    var_4 = section_5.__repr__()
    assert var_4 == 'Section(title=" Use \'")'
    var_5 = var_4.__repr__()
    assert var_5 == "'Section(title=\" Use \\'\")'"
    dict_0 = {}
    str_8 = 'y\x0c[fN"W:2&:SWyz~W'
    link_5 = module_0.Link(dict_0, str_8)
    section_6 = module_0.Section(str_7, var_5)
    assert section_6.children == "'Section(title=\" Use \\'\")'"
    var_6 = var_4.__repr__()
    assert var_6 == "'Section(title=\" Use \\'\")'"


def test_case_493():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    iterator_0 = var_0.__iter__()
    var_2 = var_0.__repr__()
    assert var_2 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_1 = " Use '"
    section_0 = module_0.Section(str_1, str_1)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_3 = section_0.__repr__()
    assert var_3 == 'Section(title=" Use \'")'
    str_2 = 'C5B_`:"E&+;Y['
    link_1 = module_0.Link(str_2, str_2)
    int_0 = var_3.__len__()
    assert int_0 == 23
    section_1 = module_0.Section(var_3, var_3)
    assert section_1.title == 'Section(title=" Use \'")'
    assert section_1.children == 'Section(title=" Use \'")'
    link_2 = module_0.Link(section_0, str_1)
    iterator_1 = var_3.__iter__()


def test_case_494():
    bool_0 = True
    section_0 = module_0.Section(bool_0, bool_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title is True
    assert section_0.children is True
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    section_1 = module_0.Section(none_type_0, var_1)
    assert section_1.children == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""


def test_case_495():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_1 = "gfRsC:6&{;|"
    section_0 = module_0.Section(str_1, str_1)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "gfRsC:6&{;|"
    assert section_0.children == "gfRsC:6&{;|"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_2 = " Use '"
    section_1 = module_0.Section(str_2, str_2)
    var_1 = section_1.__repr__()
    assert var_1 == 'Section(title=" Use \'")'
    int_0 = var_1.__len__()
    assert int_0 == 23
    var_2 = var_1.__repr__()
    assert var_2 == "'Section(title=\" Use \\'\")'"
    var_3 = var_2.__repr__()
    assert var_3 == "'\\'Section(title=\" Use \\\\\\'\")\\''"
    str_3 = "page_context"
    section_2 = module_0.Section(str_3, str_3)
    str_4 = "' from the site because it conflicts with '"
    list_0 = []
    section_3 = module_0.Section(str_4, list_0)
    section_4 = module_0.Section(section_3, list_0)
    section_5 = module_0.Section(str_4, list_0)
    str_5 = " Use '"
    section_6 = module_0.Section(str_5, str_5)
    var_4 = section_6.__repr__()
    assert var_4 == 'Section(title=" Use \'")'
    var_5 = var_4.__repr__()
    assert var_5 == "'Section(title=\" Use \\'\")'"
    str_6 = "page_context"
    section_7 = module_0.Section(str_6, str_6)
    str_7 = "' from the site because it conflicts with '"
    list_1 = []
    section_8 = module_0.Section(str_7, list_1)
    section_9 = module_0.Section(section_8, list_1)
    str_8 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_8, none_type_1)
    bytes_0 = b"\x802c35Z\xf8"
    link_2 = module_0.Link(link_1, bytes_0)
    var_6 = link_1.__repr__()
    assert var_6 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_7 = var_6.__repr__()
    assert var_7 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_8 = var_6.__repr__()
    assert var_8 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""


def test_case_496():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    bytes_0 = b"\x802c35Z\xf8"
    link_1 = module_0.Link(link_0, bytes_0)
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_1 = " Use '"
    section_0 = module_0.Section(str_1, str_1)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_2 = section_0.__repr__()
    assert var_2 == 'Section(title=" Use \'")'
    var_3 = var_2.__repr__()
    assert var_3 == "'Section(title=\" Use \\'\")'"
    str_2 = "page_context"
    section_1 = module_0.Section(str_2, str_2)
    str_3 = "' from the site because it conflicts with '"
    list_0 = []
    section_2 = module_0.Section(str_3, list_0)
    var_4 = section_2.__repr__()
    assert var_4 == "Section(title=\"' from the site because it conflicts with '\")"
    str_4 = " Use '"
    section_3 = module_0.Section(str_4, str_4)
    var_5 = section_3.__repr__()
    assert var_5 == 'Section(title=" Use \'")'
    str_5 = 'C5B_`:"E&+;Y['
    link_2 = module_0.Link(str_5, str_5)
    int_0 = var_5.__len__()
    assert int_0 == 23
    str_6 = "$9.}1Av5,.}"
    link_3 = module_0.Link(str_6, str_6)
    var_6 = var_5.__repr__()
    assert var_6 == "'Section(title=\" Use \\'\")'"
    str_7 = "page_context"
    section_4 = module_0.Section(str_7, str_7)
    str_8 = "' from the site because it conflicts with '"
    list_1 = []
    section_5 = module_0.Section(str_8, list_1)
    var_7 = section_4.__repr__()
    assert var_7 == "Section(title='page_context')"
    str_9 = " Use '"
    section_6 = module_0.Section(str_9, str_9)
    var_8 = section_6.__repr__()
    assert var_8 == 'Section(title=" Use \'")'
    var_9 = var_8.__repr__()
    assert var_9 == "'Section(title=\" Use \\'\")'"
    dict_0 = {}
    str_10 = 'y\x0c[fN"W:2&:SWyz~W'
    link_4 = module_0.Link(dict_0, str_10)
    section_7 = module_0.Section(str_9, var_9)
    assert section_7.children == "'Section(title=\" Use \\'\")'"
    bool_0 = True
    section_8 = module_0.Section(bool_0, bool_0)
    str_11 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_5 = module_0.Link(str_11, none_type_1)
    var_10 = link_5.__repr__()
    assert var_10 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_11 = var_10.__repr__()
    assert var_11 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    section_9 = module_0.Section(none_type_1, var_11)
    assert section_9.children == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_12 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_6 = module_0.Link(str_12, none_type_2)
    var_12 = link_6.__repr__()
    assert var_12 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_13 = var_12.__repr__()
    assert var_13 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_14 = var_13.__repr__()
    assert var_14 == "'\"Link(title=\\'0_~6:m!(f5FgU,:rvz\\', url=None)\"'"
    str_13 = "gfRsC:6&{;|"
    section_10 = module_0.Section(str_13, str_13)
    str_14 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_7 = module_0.Link(str_14, none_type_3)
    var_15 = link_7.__repr__()
    assert var_15 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_16 = var_15.__repr__()
    assert var_16 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_17 = var_15.__repr__()
    assert var_17 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_18 = link_7.__repr__()
    assert var_18 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_19 = var_5.__repr__()
    assert var_19 == "'Section(title=\" Use \\'\")'"


def test_case_497():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_2 = var_0.__repr__()
    assert var_2 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_3 = link_0.__repr__()
    assert var_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    none_type_1 = None
    str_1 = "\n        Perform validation for a value.\n\n        The run_validation method should be implemented by subclasses.\n        "
    link_1 = module_0.Link(none_type_1, str_1)
    var_4 = link_1.__repr__()
    assert (
        var_4
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    str_2 = var_4.__str__()
    assert (
        str_2
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    bool_0 = True
    link_2 = module_0.Link(bool_0, bool_0)
    var_5 = var_4.__repr__()
    assert (
        var_5
        == "\"Link(title=[blank], url='\\\\n        Perform validation for a value.\\\\n\\\\n        The run_validation method should be implemented by subclasses.\\\\n        ')\""
    )
    str_3 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_3 = module_0.Link(str_3, none_type_2)
    bytes_0 = b"\x802c35Z\xf8"
    link_4 = module_0.Link(link_3, bytes_0)
    var_6 = link_3.__repr__()
    assert var_6 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    iterator_0 = var_6.__iter__()
    str_4 = "jXt{G!+9"
    int_0 = -1857
    link_5 = module_0.Link(str_4, int_0)
    str_5 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_6 = module_0.Link(str_5, none_type_3)
    var_7 = link_6.__repr__()
    assert var_7 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_8 = var_7.__repr__()
    assert var_8 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_9 = var_8.__repr__()
    assert var_9 == "'\"Link(title=\\'0_~6:m!(f5FgU,:rvz\\', url=None)\"'"
    str_6 = " Use '"
    section_0 = module_0.Section(str_6, str_6)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_10 = section_0.__repr__()
    assert var_10 == 'Section(title=" Use \'")'
    int_1 = var_10.__len__()
    assert int_1 == 23
    str_7 = "gfRsC:6&{;|"
    section_1 = module_0.Section(str_7, str_7)
    str_8 = " Use '"
    section_2 = module_0.Section(str_8, str_8)
    var_11 = section_2.__repr__()
    assert var_11 == 'Section(title=" Use \'")'
    int_2 = var_11.__len__()
    assert int_2 == 23
    var_12 = var_11.__repr__()
    assert var_12 == "'Section(title=\" Use \\'\")'"
    var_13 = var_12.__repr__()
    assert var_13 == "'\\'Section(title=\" Use \\\\\\'\")\\''"
    str_9 = "page_context"
    section_3 = module_0.Section(str_9, str_9)
    str_10 = "' from the site because it conflicts with '"
    list_0 = []
    section_4 = module_0.Section(str_10, list_0)
    section_5 = module_0.Section(section_4, list_0)
    section_6 = module_0.Section(str_10, list_0)
    str_11 = "0_~6:m!(f5FgU,:rvz"
    none_type_4 = None
    link_7 = module_0.Link(str_11, none_type_4)
    var_14 = link_7.__repr__()
    assert var_14 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_15 = var_14.__repr__()
    assert var_15 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_16 = var_14.__repr__()
    assert var_16 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_12 = "$9.}1Av5,.}"
    link_8 = module_0.Link(str_12, str_12)
    var_17 = section_1.__repr__()
    assert var_17 == "Section(title='gfRsC:6&{;|')"


def test_case_498():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    int_0 = var_0.__len__()
    assert int_0 == 23
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_1, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    int_1 = var_0.__len__()
    assert int_1 == 23
    int_2 = var_0.__len__()
    assert int_2 == 23
    str_2 = " Use '"
    section_1 = module_0.Section(str_2, str_2)
    var_1 = section_1.__repr__()
    assert var_1 == 'Section(title=" Use \'")'
    var_2 = var_1.__repr__()
    assert var_2 == "'Section(title=\" Use \\'\")'"
    dict_0 = {}
    str_3 = 'y\x0c[fN"W:2&:SWyz~W'
    link_1 = module_0.Link(dict_0, str_3)
    section_2 = module_0.Section(str_2, var_2)
    assert section_2.children == "'Section(title=\" Use \\'\")'"
    str_4 = " Use '"
    section_3 = module_0.Section(str_4, str_4)
    var_3 = section_3.__repr__()
    assert var_3 == 'Section(title=" Use \'")'
    str_5 = 'C5B_`:"E&+;Y['
    link_2 = module_0.Link(str_5, str_5)
    int_3 = var_3.__len__()
    assert int_3 == 23
    str_6 = " Use '"
    section_4 = module_0.Section(str_6, str_6)
    var_4 = section_4.__repr__()
    assert var_4 == 'Section(title=" Use \'")'
    int_4 = var_4.__len__()
    assert int_4 == 23
    str_7 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_3 = module_0.Link(str_7, none_type_1)
    int_5 = var_4.__len__()
    assert int_5 == 23
    str_8 = " Use '"
    section_5 = module_0.Section(str_8, str_8)
    var_5 = section_5.__repr__()
    assert var_5 == 'Section(title=" Use \'")'
    str_9 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_4 = module_0.Link(str_9, none_type_2)
    bytes_0 = b"\x802c35Z\xf8"
    link_5 = module_0.Link(link_4, bytes_0)
    iterator_0 = var_5.__iter__()
    bytes_1 = b"\xac\xb0\x17a\xfaT/\xf7\xc9"
    section_6 = module_0.Section(bytes_1, bytes_1)
    str_10 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_6 = module_0.Link(str_10, none_type_3)
    var_6 = link_6.__repr__()
    assert var_6 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_7 = var_6.__repr__()
    assert var_7 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_8 = var_6.__repr__()
    assert var_8 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_9 = link_6.__repr__()
    assert var_9 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_10 = var_8.__repr__()
    assert var_10 == "'\"Link(title=\\'0_~6:m!(f5FgU,:rvz\\', url=None)\"'"


def test_case_499():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    iterator_0 = var_0.__iter__()
    str_1 = " Use '"
    section_0 = module_0.Section(str_1, str_1)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_2 = section_0.__repr__()
    assert var_2 == 'Section(title=" Use \'")'
    str_2 = "gfRsC:6&{;|"
    section_1 = module_0.Section(str_2, str_2)
    str_3 = "relative_to_docs"
    link_1 = module_0.Link(str_3, section_1)
    str_4 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_2 = module_0.Link(str_4, none_type_1)
    var_3 = link_2.__repr__()
    assert var_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_4 = var_3.__repr__()
    assert var_4 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_5 = var_4.__repr__()
    assert var_5 == "'\"Link(title=\\'0_~6:m!(f5FgU,:rvz\\', url=None)\"'"
    str_5 = "$9.}1Av5,.}"
    link_3 = module_0.Link(str_5, str_5)
    str_6 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_4 = module_0.Link(str_6, none_type_2)
    var_6 = link_4.__repr__()
    assert var_6 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_7 = var_6.__repr__()
    assert var_7 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_7 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_5 = module_0.Link(str_7, none_type_3)
    str_8 = "gfRsC:6&{;|"
    section_2 = module_0.Section(str_8, str_8)
    var_8 = section_2.__repr__()
    assert var_8 == "Section(title='gfRsC:6&{;|')"
    str_9 = " Use '"
    section_3 = module_0.Section(str_9, str_9)
    var_9 = section_3.__repr__()
    assert var_9 == 'Section(title=" Use \'")'
    str_10 = "0_~6:m!(f5FgU,:rvz"
    none_type_4 = None
    link_6 = module_0.Link(str_10, none_type_4)
    bytes_0 = b"\x802c35Z\xf8"
    link_7 = module_0.Link(link_6, bytes_0)
    iterator_1 = var_9.__iter__()
    dict_0 = {}
    str_11 = 'y\x0c[fN"W:2&:SWyz~W'
    link_8 = module_0.Link(dict_0, str_11)
    section_4 = module_0.Section(str_11, str_11)
    str_12 = " Use '"
    section_5 = module_0.Section(str_12, str_12)
    var_10 = section_5.__repr__()
    assert var_10 == 'Section(title=" Use \'")'
    var_11 = var_10.__repr__()
    assert var_11 == "'Section(title=\" Use \\'\")'"
    dict_1 = {}
    str_13 = 'y\x0c[fN"W:2&:SWyz~W'
    link_9 = module_0.Link(dict_1, str_13)
    section_6 = module_0.Section(str_12, var_11)
    assert section_6.children == "'Section(title=\" Use \\'\")'"
    var_12 = link_8.__repr__()
    assert var_12 == "Link(title={}, url='y\\x0c[fN\"W:2&:SWyz~W')"


def test_case_500():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    str_1 = "gfRsC:6&{;|"
    section_1 = module_0.Section(str_1, str_1)
    str_2 = "relative_to_docs"
    link_0 = module_0.Link(str_2, section_1)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "relative_to_docs"
    assert (
        f"{type(link_0.url).__module__}.{type(link_0.url).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    section_2 = module_0.Section(section_0, var_0)
    assert section_2.children == 'Section(title=" Use \'")'
    bool_0 = True
    section_3 = module_0.Section(bool_0, bool_0)
    str_3 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_1 = module_0.Link(str_3, none_type_0)
    var_1 = link_1.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_2 = var_1.__repr__()
    assert var_2 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    section_4 = module_0.Section(none_type_0, var_2)
    assert section_4.children == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_4 = 'C5B_`:"E&+;Y['
    link_2 = module_0.Link(str_4, str_4)
    str_5 = " Use '"
    section_5 = module_0.Section(str_5, str_5)
    var_3 = section_5.__repr__()
    assert var_3 == 'Section(title=" Use \'")'
    str_6 = 'C5B_`:"E&+;Y['
    link_3 = module_0.Link(str_6, str_6)
    int_0 = var_3.__len__()
    assert int_0 == 23
    section_6 = module_0.Section(var_3, var_3)
    assert section_6.title == 'Section(title=" Use \'")'
    assert section_6.children == 'Section(title=" Use \'")'
    var_4 = var_3.__repr__()
    assert var_4 == "'Section(title=\" Use \\'\")'"


def test_case_501():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    str_1 = "gfRsC:6&{;|"
    section_1 = module_0.Section(str_1, str_1)
    str_2 = "relative_to_docs"
    link_0 = module_0.Link(str_2, section_1)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "relative_to_docs"
    assert (
        f"{type(link_0.url).__module__}.{type(link_0.url).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    str_3 = "' is included in the 'nav' configuration."
    link_1 = module_0.Link(str_3, str_3)
    bool_0 = True
    section_2 = module_0.Section(bool_0, bool_0)
    str_4 = "page_context"
    section_3 = module_0.Section(str_4, str_4)
    str_5 = "' from the site because it conflicts with '"
    list_0 = []
    section_4 = module_0.Section(str_5, list_0)
    var_1 = section_3.__repr__()
    assert var_1 == "Section(title='page_context')"
    str_6 = "page_context"
    section_5 = module_0.Section(str_6, str_6)
    str_7 = "' from the site because it conflicts with '"
    list_1 = []
    section_6 = module_0.Section(str_7, list_1)
    var_2 = section_6.__repr__()
    assert var_2 == "Section(title=\"' from the site because it conflicts with '\")"
    bool_1 = True
    section_7 = module_0.Section(bool_1, bool_1)
    str_8 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_2 = module_0.Link(str_8, none_type_0)
    var_3 = link_2.__repr__()
    assert var_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_4 = var_3.__repr__()
    assert var_4 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    section_8 = module_0.Section(none_type_0, var_4)
    assert section_8.children == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    dict_0 = {}
    str_9 = 'y\x0c[fN"W:2&:SWyz~W'
    link_3 = module_0.Link(dict_0, str_9)
    section_9 = module_0.Section(str_9, str_9)
    section_10 = module_0.Section(str_9, str_9)
    str_10 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_4 = module_0.Link(str_10, none_type_1)
    bytes_0 = b"\x802c35Z\xf8"
    link_5 = module_0.Link(link_4, bytes_0)
    var_5 = link_4.__repr__()
    assert var_5 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_11 = " Use '"
    section_11 = module_0.Section(str_11, str_11)
    var_6 = section_11.__repr__()
    assert var_6 == 'Section(title=" Use \'")'
    str_12 = var_4.__str__()
    assert str_12 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""


def test_case_502():
    none_type_0 = None
    str_0 = "\n        Perform validation for a value.\n\n        The run_validation method should be implemented by subclasses.\n        "
    link_0 = module_0.Link(none_type_0, str_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title is None
    assert (
        link_0.url
        == "\n        Perform validation for a value.\n\n        The run_validation method should be implemented by subclasses.\n        "
    )
    var_0 = link_0.__repr__()
    assert (
        var_0
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    str_1 = var_0.__str__()
    assert (
        str_1
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    str_2 = " Use '"
    section_0 = module_0.Section(str_2, str_2)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_1 = section_0.__repr__()
    assert var_1 == 'Section(title=" Use \'")'
    var_2 = var_1.__repr__()
    assert var_2 == "'Section(title=\" Use \\'\")'"
    dict_0 = {}
    str_3 = 'y\x0c[fN"W:2&:SWyz~W'
    link_1 = module_0.Link(dict_0, str_3)
    section_1 = module_0.Section(str_2, var_2)
    assert section_1.children == "'Section(title=\" Use \\'\")'"
    str_4 = "gfRsC:6&{;|"
    section_2 = module_0.Section(str_4, str_4)
    str_5 = " Use '"
    section_3 = module_0.Section(str_5, str_5)
    var_3 = section_3.__repr__()
    assert var_3 == 'Section(title=" Use \'")'
    int_0 = var_3.__len__()
    assert int_0 == 23
    var_4 = var_3.__repr__()
    assert var_4 == "'Section(title=\" Use \\'\")'"
    var_5 = var_4.__repr__()
    assert var_5 == "'\\'Section(title=\" Use \\\\\\'\")\\''"
    str_6 = " Use '"
    section_4 = module_0.Section(str_6, str_6)
    var_6 = section_4.__repr__()
    assert var_6 == 'Section(title=" Use \'")'
    str_7 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_2 = module_0.Link(str_7, none_type_1)
    var_7 = link_2.__repr__()
    assert var_7 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    int_1 = var_7.__len__()
    assert int_1 == 42
    str_8 = " Use '"
    section_5 = module_0.Section(str_8, str_8)
    var_8 = section_5.__repr__()
    assert var_8 == 'Section(title=" Use \'")'
    int_2 = var_8.__len__()
    assert int_2 == 23
    var_9 = var_8.__repr__()
    assert var_9 == "'Section(title=\" Use \\'\")'"
    str_9 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_3 = module_0.Link(str_9, none_type_2)
    var_10 = link_3.__repr__()
    assert var_10 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    set_0 = set()
    navigation_0 = module_0.Navigation(set_0, set_0)
    assert (
        f"{type(navigation_0).__module__}.{type(navigation_0).__qualname__}"
        == "mkdocs.structure.nav.Navigation"
    )
    assert len(navigation_0) == 0
    str_10 = navigation_0.__str__()
    var_11 = var_7.__repr__()
    assert var_11 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""


def test_case_503():
    str_0 = "$9.}1Av5,.}"
    link_0 = module_0.Link(str_0, str_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "$9.}1Av5,.}"
    assert link_0.url == "$9.}1Av5,.}"
    str_1 = " Use '"
    section_0 = module_0.Section(str_1, str_1)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    int_0 = var_0.__len__()
    assert int_0 == 23
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_1 = module_0.Link(str_2, none_type_0)
    int_1 = var_0.__len__()
    assert int_1 == 23
    dict_0 = {}
    str_3 = 'y\x0c[fN"W:2&:SWyz~W'
    link_2 = module_0.Link(dict_0, str_3)
    section_1 = module_0.Section(str_3, str_3)
    section_2 = module_0.Section(str_3, str_3)
    str_4 = " Use '"
    section_3 = module_0.Section(str_4, str_4)
    var_1 = section_3.__repr__()
    assert var_1 == 'Section(title=" Use \'")'
    var_2 = var_1.__repr__()
    assert var_2 == "'Section(title=\" Use \\'\")'"
    str_5 = " Use '"
    section_4 = module_0.Section(str_5, str_5)
    var_3 = section_4.__repr__()
    assert var_3 == 'Section(title=" Use \'")'
    str_6 = "gfRsC:6&{;|"
    section_5 = module_0.Section(str_6, str_6)
    str_7 = "relative_to_docs"
    link_3 = module_0.Link(str_7, section_5)
    none_type_1 = None
    section_6 = module_0.Section(none_type_1, none_type_1)
    var_4 = module_1.urlsplit(none_type_1)
    iterator_0 = var_4.__iter__()
    str_8 = "page_context"
    section_7 = module_0.Section(str_8, str_8)
    str_9 = "' from the site because it conflicts with '"
    list_0 = []
    section_8 = module_0.Section(str_9, list_0)
    section_9 = module_0.Section(section_8, list_0)
    str_10 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_4 = module_0.Link(str_10, none_type_2)
    var_5 = link_4.__repr__()
    assert var_5 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_6 = var_5.__repr__()
    assert var_6 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_7 = var_6.__repr__()
    assert var_7 == "'\"Link(title=\\'0_~6:m!(f5FgU,:rvz\\', url=None)\"'"
    int_2 = var_2.__len__()
    assert int_2 == 26


def test_case_504():
    str_0 = "' is included in the 'nav' configuration."
    link_0 = module_0.Link(str_0, str_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "' is included in the 'nav' configuration."
    assert link_0.url == "' is included in the 'nav' configuration."
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_1 = module_0.Link(str_1, none_type_0)
    var_0 = link_1.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_2 = var_0.__repr__()
    assert var_2 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_2 = " Use '"
    section_0 = module_0.Section(str_2, str_2)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_3 = section_0.__repr__()
    assert var_3 == 'Section(title=" Use \'")'
    str_3 = " Use '"
    section_1 = module_0.Section(str_3, str_3)
    var_4 = section_1.__repr__()
    assert var_4 == 'Section(title=" Use \'")'
    str_4 = "gfRsC:6&{;|"
    section_2 = module_0.Section(str_4, str_4)
    str_5 = "relative_to_docs"
    link_2 = module_0.Link(str_5, section_2)
    str_6 = "x"
    section_3 = module_0.Section(str_6, str_6)
    iterator_0 = var_4.__iter__()


def test_case_505():
    str_0 = "gfRsC:6&{;|"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "gfRsC:6&{;|"
    assert section_0.children == "gfRsC:6&{;|"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_1, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    bytes_0 = b"\x802c35Z\xf8"
    link_1 = module_0.Link(link_0, bytes_0)
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_2 = module_0.Link(str_2, none_type_1)
    bytes_1 = b"\x802c35Z\xf8"
    link_3 = module_0.Link(link_2, bytes_1)
    var_0 = link_2.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    dict_0 = {}
    str_3 = 'y\x0c[fN"W:2&:SWyz~W'
    link_4 = module_0.Link(dict_0, str_3)
    section_1 = module_0.Section(str_3, str_3)
    section_2 = module_0.Section(str_3, str_3)
    str_4 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_5 = module_0.Link(str_4, none_type_2)
    bytes_2 = b"\x802c35Z\xf8"
    link_6 = module_0.Link(link_5, bytes_2)
    var_1 = link_5.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    int_0 = var_1.__len__()
    assert int_0 == 42
    str_5 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_7 = module_0.Link(str_5, none_type_3)
    none_type_4 = None
    str_6 = "\n        Perform validation for a value.\n\n        The run_validation method should be implemented by subclasses.\n        "
    link_8 = module_0.Link(none_type_4, str_6)
    var_2 = link_8.__repr__()
    assert (
        var_2
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    str_7 = var_2.__str__()
    assert (
        str_7
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    var_3 = var_2.__repr__()
    assert (
        var_3
        == "\"Link(title=[blank], url='\\\\n        Perform validation for a value.\\\\n\\\\n        The run_validation method should be implemented by subclasses.\\\\n        ')\""
    )


def test_case_506():
    dict_0 = {}
    str_0 = 'y\x0c[fN"W:2&:SWyz~W'
    link_0 = module_0.Link(dict_0, str_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == {}
    assert link_0.url == 'y\x0c[fN"W:2&:SWyz~W'
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == 'y\x0c[fN"W:2&:SWyz~W'
    assert section_0.children == 'y\x0c[fN"W:2&:SWyz~W'
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_1 = module_0.Link(str_1, none_type_0)
    bytes_0 = b"\x802c35Z\xf8"
    link_2 = module_0.Link(link_1, bytes_0)
    var_0 = link_1.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    int_0 = var_0.__len__()
    assert int_0 == 42
    str_2 = "page_context"
    section_1 = module_0.Section(str_2, str_2)
    str_3 = "' from the site because it conflicts with '"
    list_0 = []
    section_2 = module_0.Section(str_3, list_0)
    section_3 = module_0.Section(section_2, list_0)
    str_4 = "page_context"
    section_4 = module_0.Section(str_4, str_4)
    str_5 = " Use '"
    section_5 = module_0.Section(str_5, str_5)
    var_1 = section_5.__repr__()
    assert var_1 == 'Section(title=" Use \'")'
    var_2 = var_1.__repr__()
    assert var_2 == "'Section(title=\" Use \\'\")'"
    str_6 = "gfRsC:6&{;|"
    section_6 = module_0.Section(str_6, str_6)
    str_7 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_3 = module_0.Link(str_7, none_type_1)
    var_3 = link_3.__repr__()
    assert var_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_4 = var_3.__repr__()
    assert var_4 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_5 = var_3.__repr__()
    assert var_5 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_6 = link_3.__repr__()
    assert var_6 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_8 = " Use '"
    section_7 = module_0.Section(str_8, str_8)
    var_7 = section_7.__repr__()
    assert var_7 == 'Section(title=" Use \'")'
    int_1 = var_7.__len__()
    assert int_1 == 23
    var_8 = var_7.__repr__()
    assert var_8 == "'Section(title=\" Use \\'\")'"
    str_9 = " Use '"
    section_8 = module_0.Section(str_9, str_9)
    var_9 = section_8.__repr__()
    assert var_9 == 'Section(title=" Use \'")'
    int_2 = var_9.__len__()
    assert int_2 == 23
    section_9 = module_0.Section(var_9, int_2)
    assert section_9.title == 'Section(title=" Use \'")'
    assert section_9.children == 23
    bool_0 = True
    section_10 = module_0.Section(bool_0, bool_0)
    link_4 = module_0.Link(none_type_1, none_type_0)


def test_case_507():
    bool_0 = True
    section_0 = module_0.Section(bool_0, bool_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title is True
    assert section_0.children is True
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    section_1 = module_0.Section(none_type_0, var_1)
    assert section_1.children == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_2 = section_1.__repr__()
    assert var_2 == "Section(title=None)"


def test_case_508():
    str_0 = "' is included in the 'nav' configuration."
    link_0 = module_0.Link(str_0, str_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "' is included in the 'nav' configuration."
    assert link_0.url == "' is included in the 'nav' configuration."
    none_type_0 = None
    str_1 = "\n        Perform validation for a value.\n\n        The run_validation method should be implemented by subclasses.\n        "
    link_1 = module_0.Link(none_type_0, str_1)
    var_0 = link_1.__repr__()
    assert (
        var_0
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    str_2 = var_0.__str__()
    assert (
        str_2
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    bool_0 = True
    link_2 = module_0.Link(bool_0, bool_0)
    var_1 = var_0.__repr__()
    assert (
        var_1
        == "\"Link(title=[blank], url='\\\\n        Perform validation for a value.\\\\n\\\\n        The run_validation method should be implemented by subclasses.\\\\n        ')\""
    )
    str_3 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_3 = module_0.Link(str_3, none_type_1)
    bytes_0 = b"\x802c35Z\xf8"
    link_4 = module_0.Link(link_3, bytes_0)
    var_2 = link_3.__repr__()
    assert var_2 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_3 = var_2.__repr__()
    assert var_3 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_4 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_5 = module_0.Link(str_4, none_type_2)
    var_4 = link_5.__repr__()
    assert var_4 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_5 = var_4.__repr__()
    assert var_5 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_6 = var_4.__repr__()
    assert var_6 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_5 = " Use '"
    section_0 = module_0.Section(str_5, str_5)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_7 = section_0.__repr__()
    assert var_7 == 'Section(title=" Use \'")'
    int_0 = var_7.__len__()
    assert int_0 == 23
    dict_0 = {}
    str_6 = 'y\x0c[fN"W:2&:SWyz~W'
    link_6 = module_0.Link(dict_0, str_6)
    var_8 = var_1.__repr__()
    assert (
        var_8
        == "'\"Link(title=[blank], url=\\'\\\\\\\\n        Perform validation for a value.\\\\\\\\n\\\\\\\\n        The run_validation method should be implemented by subclasses.\\\\\\\\n        \\')\"'"
    )


def test_case_509():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    bytes_0 = b"\x802c35Z\xf8"
    link_1 = module_0.Link(link_0, bytes_0)
    bool_0 = True
    section_0 = module_0.Section(bool_0, bool_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title is True
    assert section_0.children is True
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = link_1.__repr__()
    assert (
        var_0
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )
    str_1 = var_0.__str__()
    assert (
        str_1
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )
    bool_1 = True
    section_1 = module_0.Section(bool_1, bool_1)
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_2 = module_0.Link(str_2, none_type_1)
    var_1 = link_2.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_2 = var_1.__repr__()
    assert var_2 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_3 = var_1.__str__()
    assert str_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_4 = 'C5B_`:"E&+;Y['
    link_3 = module_0.Link(str_4, str_4)
    int_0 = var_1.__len__()
    assert int_0 == 42
    none_type_2 = None
    str_5 = "\n        Perform validation for a value.\n\n        The run_validation method should be implemented by subclasses.\n        "
    link_4 = module_0.Link(none_type_2, str_5)
    var_3 = link_4.__repr__()
    assert (
        var_3
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    str_6 = var_3.__str__()
    assert (
        str_6
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    bool_2 = True
    link_5 = module_0.Link(bool_2, bool_2)
    var_4 = var_3.__repr__()
    assert (
        var_4
        == "\"Link(title=[blank], url='\\\\n        Perform validation for a value.\\\\n\\\\n        The run_validation method should be implemented by subclasses.\\\\n        ')\""
    )
    str_7 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_6 = module_0.Link(str_7, none_type_3)
    var_5 = link_6.__repr__()
    assert var_5 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_6 = var_5.__repr__()
    assert var_6 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_7 = var_6.__repr__()
    assert var_7 == "'\"Link(title=\\'0_~6:m!(f5FgU,:rvz\\', url=None)\"'"
    str_8 = "gfRsC:6&{;|"
    section_2 = module_0.Section(str_8, str_8)
    str_9 = "0_~6:m!(f5FgU,:rvz"
    none_type_4 = None
    link_7 = module_0.Link(str_9, none_type_4)
    var_8 = link_7.__repr__()
    assert var_8 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_9 = var_8.__repr__()
    assert var_9 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_10 = var_8.__repr__()
    assert var_10 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_11 = link_7.__repr__()
    assert var_11 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_10 = " Use '"
    section_3 = module_0.Section(str_10, str_10)
    var_12 = section_3.__repr__()
    assert var_12 == 'Section(title=" Use \'")'
    var_13 = var_12.__repr__()
    assert var_13 == "'Section(title=\" Use \\'\")'"
    dict_0 = {}
    str_11 = 'y\x0c[fN"W:2&:SWyz~W'
    link_8 = module_0.Link(dict_0, str_11)
    section_4 = module_0.Section(str_10, var_13)
    assert section_4.children == "'Section(title=\" Use \\'\")'"
    str_12 = "0_~6:m!(f5FgU,:rvz"
    none_type_5 = None
    link_9 = module_0.Link(str_12, none_type_5)
    var_14 = link_9.__repr__()
    assert var_14 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_15 = var_14.__repr__()
    assert var_15 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_16 = var_14.__repr__()
    assert var_16 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_13 = " Use '"
    section_5 = module_0.Section(str_13, str_13)
    var_17 = section_5.__repr__()
    assert var_17 == 'Section(title=" Use \'")'
    str_14 = "gfRsC:6&{;|"
    section_6 = module_0.Section(str_14, str_14)
    str_15 = "relative_to_docs"
    link_10 = module_0.Link(str_15, section_6)
    section_7 = module_0.Section(section_5, var_17)
    assert section_7.children == 'Section(title=" Use \'")'
    str_16 = "0_~6:m!(f5FgU,:rvz"
    none_type_6 = None
    link_11 = module_0.Link(str_16, none_type_6)
    var_18 = link_11.__repr__()
    assert var_18 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_19 = var_18.__repr__()
    assert var_19 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_20 = var_19.__repr__()
    assert var_20 == "'\"Link(title=\\'0_~6:m!(f5FgU,:rvz\\', url=None)\"'"
    int_1 = var_20.__len__()
    assert int_1 == 48


def test_case_510():
    dict_0 = {}
    str_0 = 'y\x0c[fN"W:2&:SWyz~W'
    link_0 = module_0.Link(dict_0, str_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == {}
    assert link_0.url == 'y\x0c[fN"W:2&:SWyz~W'
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == 'y\x0c[fN"W:2&:SWyz~W'
    assert section_0.children == 'y\x0c[fN"W:2&:SWyz~W'
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_1 = module_0.Link(str_1, none_type_0)
    bytes_0 = b"\x802c35Z\xf8"
    link_2 = module_0.Link(link_1, bytes_0)
    var_0 = link_1.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_3 = module_0.Link(str_2, none_type_1)
    var_2 = link_3.__repr__()
    assert var_2 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_3 = var_2.__repr__()
    assert var_3 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_3 = var_2.__str__()
    assert str_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_4 = " Use '"
    section_1 = module_0.Section(str_4, str_4)
    var_4 = section_1.__repr__()
    assert var_4 == 'Section(title=" Use \'")'
    int_0 = var_4.__len__()
    assert int_0 == 23
    str_5 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_4 = module_0.Link(str_5, none_type_2)
    int_1 = var_4.__len__()
    assert int_1 == 23
    str_6 = " Use '"
    section_2 = module_0.Section(str_6, str_6)
    var_5 = section_2.__repr__()
    assert var_5 == 'Section(title=" Use \'")'
    iterator_0 = var_3.__iter__()


def test_case_511():
    bool_0 = True
    section_0 = module_0.Section(bool_0, bool_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title is True
    assert section_0.children is True
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    section_1 = module_0.Section(none_type_0, var_1)
    assert section_1.children == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_1 = "$9.}1Av5,.}"
    link_1 = module_0.Link(str_1, str_1)
    str_2 = "page_context"
    section_2 = module_0.Section(str_2, str_2)
    str_3 = "' from the site because it conflicts with '"
    list_0 = []
    section_3 = module_0.Section(str_3, list_0)
    var_2 = section_2.__repr__()
    assert var_2 == "Section(title='page_context')"
    dict_0 = {}
    str_4 = 'y\x0c[fN"W:2&:SWyz~W'
    link_2 = module_0.Link(dict_0, str_4)
    section_4 = module_0.Section(str_4, str_4)
    str_5 = "page_context"
    section_5 = module_0.Section(str_5, str_5)
    str_6 = "' from the site because it conflicts with '"
    list_1 = []
    section_6 = module_0.Section(str_6, list_1)
    var_3 = section_6.__repr__()
    assert var_3 == "Section(title=\"' from the site because it conflicts with '\")"
    section_7 = module_0.Section(str_6, section_5)
    var_4 = var_0.__repr__()
    assert var_4 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""


def test_case_512():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    str_1 = 'C5B_`:"E&+;Y['
    link_0 = module_0.Link(str_1, str_1)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == 'C5B_`:"E&+;Y['
    assert link_0.url == 'C5B_`:"E&+;Y['
    int_0 = var_0.__len__()
    assert int_0 == 23
    none_type_0 = None
    str_2 = "\n        Perform validation for a value.\n\n        The run_validation method should be implemented by subclasses.\n        "
    link_1 = module_0.Link(none_type_0, str_2)
    var_1 = link_1.__repr__()
    assert (
        var_1
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    str_3 = var_1.__str__()
    assert (
        str_3
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    bool_0 = True
    link_2 = module_0.Link(bool_0, bool_0)
    var_2 = var_1.__repr__()
    assert (
        var_2
        == "\"Link(title=[blank], url='\\\\n        Perform validation for a value.\\\\n\\\\n        The run_validation method should be implemented by subclasses.\\\\n        ')\""
    )
    str_4 = "page_context"
    section_1 = module_0.Section(str_4, str_4)
    str_5 = "' from the site because it conflicts with '"
    list_0 = []
    section_2 = module_0.Section(str_5, list_0)
    var_3 = section_2.__repr__()
    assert var_3 == "Section(title=\"' from the site because it conflicts with '\")"
    section_3 = module_0.Section(str_5, section_1)
    int_1 = var_3.__len__()
    assert int_1 == 60
    str_6 = "page_context"
    section_4 = module_0.Section(str_6, str_6)
    str_7 = "' from the site because it conflicts with '"
    list_1 = []
    section_5 = module_0.Section(str_7, list_1)
    str_8 = "localhost"
    link_3 = module_0.Link(str_7, str_8)
    iterator_0 = var_2.__iter__()


def test_case_513():
    str_0 = "page_context"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = "' from the site because it conflicts with '"
    list_0 = []
    section_1 = module_0.Section(str_1, list_0)
    str_2 = "localhost"
    link_0 = module_0.Link(str_1, str_2)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "' from the site because it conflicts with '"
    assert link_0.url == "localhost"
    str_3 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_1 = module_0.Link(str_3, none_type_0)
    var_0 = link_1.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_4 = " Use '"
    section_2 = module_0.Section(str_4, str_4)
    var_2 = section_2.__repr__()
    assert var_2 == 'Section(title=" Use \'")'
    str_5 = 'C5B_`:"E&+;Y['
    link_2 = module_0.Link(str_5, str_5)
    int_0 = var_2.__len__()
    assert int_0 == 23
    section_3 = module_0.Section(var_2, var_2)
    assert section_3.title == 'Section(title=" Use \'")'
    assert section_3.children == 'Section(title=" Use \'")'
    str_6 = "gfRsC:6&{;|"
    section_4 = module_0.Section(str_6, str_6)
    str_7 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_3 = module_0.Link(str_7, none_type_1)
    var_3 = link_3.__repr__()
    assert var_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_4 = var_3.__repr__()
    assert var_4 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_5 = var_3.__repr__()
    assert var_5 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_6 = link_3.__repr__()
    assert var_6 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_8 = " Use '"
    section_5 = module_0.Section(str_8, str_8)
    var_7 = section_5.__repr__()
    assert var_7 == 'Section(title=" Use \'")'
    var_8 = var_7.__repr__()
    assert var_8 == "'Section(title=\" Use \\'\")'"
    set_0 = set()
    navigation_0 = module_0.Navigation(set_0, set_0)
    assert (
        f"{type(navigation_0).__module__}.{type(navigation_0).__qualname__}"
        == "mkdocs.structure.nav.Navigation"
    )
    assert len(navigation_0) == 0
    str_9 = navigation_0.__str__()
    iterator_0 = var_8.__iter__()
    str_10 = "NK,/peY&$u5C{\\/"
    section_6 = module_0.Section(str_10, var_0)
    assert section_6.children == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"


def test_case_514():
    str_0 = "page_context"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = " Use '"
    section_1 = module_0.Section(str_1, str_1)
    var_0 = section_1.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    var_1 = var_0.__repr__()
    assert var_1 == "'Section(title=\" Use \\'\")'"
    link_0 = module_0.Link(var_1, section_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "'Section(title=\" Use \\'\")'"
    assert (
        f"{type(link_0.url).__module__}.{type(link_0.url).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )


def test_case_515():
    str_0 = "page_context"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = "' from the site because it conflicts with '"
    list_0 = []
    section_1 = module_0.Section(str_1, list_0)
    var_0 = section_0.__repr__()
    assert var_0 == "Section(title='page_context')"
    str_2 = "gfRsC:6&{;|"
    section_2 = module_0.Section(str_2, str_2)
    str_3 = "gfRsC:6&{;|"
    section_3 = module_0.Section(str_3, str_3)
    var_1 = section_3.__repr__()
    assert var_1 == "Section(title='gfRsC:6&{;|')"
    str_4 = " Use '"
    section_4 = module_0.Section(str_4, str_4)
    var_2 = section_4.__repr__()
    assert var_2 == 'Section(title=" Use \'")'
    str_5 = "gfRsC:6&{;|"
    section_5 = module_0.Section(str_5, str_5)
    str_6 = "relative_to_docs"
    link_0 = module_0.Link(str_6, section_5)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "relative_to_docs"
    assert (
        f"{type(link_0.url).__module__}.{type(link_0.url).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    section_6 = module_0.Section(section_4, var_2)
    assert section_6.children == 'Section(title=" Use \'")'
    int_0 = var_2.__len__()
    assert int_0 == 23
    str_7 = " Use '"
    section_7 = module_0.Section(str_7, str_7)
    var_3 = section_7.__repr__()
    assert var_3 == 'Section(title=" Use \'")'
    int_1 = var_3.__len__()
    assert int_1 == 23
    var_4 = var_3.__repr__()
    assert var_4 == "'Section(title=\" Use \\'\")'"
    link_1 = module_0.Link(int_1, var_3)
    assert link_1.title == 23
    assert link_1.url == 'Section(title=" Use \'")'
    var_5 = var_3.__repr__()
    assert var_5 == "'Section(title=\" Use \\'\")'"


def test_case_516():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_2 = var_1.__repr__()
    assert var_2 == "'\"Link(title=\\'0_~6:m!(f5FgU,:rvz\\', url=None)\"'"
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_1, none_type_1)
    bytes_0 = b"\x802c35Z\xf8"
    link_2 = module_0.Link(link_1, bytes_0)
    str_2 = "page_context"
    section_0 = module_0.Section(str_2, str_2)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_3 = "' from the site because it conflicts with '"
    list_0 = []
    section_1 = module_0.Section(str_3, list_0)
    var_3 = section_1.__repr__()
    assert var_3 == "Section(title=\"' from the site because it conflicts with '\")"
    section_2 = module_0.Section(str_3, section_0)
    str_4 = "x"
    section_3 = module_0.Section(str_4, str_4)
    str_5 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_3 = module_0.Link(str_5, none_type_2)
    bytes_1 = b"\x802c35Z\xf8"
    link_4 = module_0.Link(link_3, bytes_1)
    bool_0 = True
    section_4 = module_0.Section(bool_0, bool_0)
    var_4 = link_4.__repr__()
    assert (
        var_4
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )
    str_6 = var_4.__str__()
    assert (
        str_6
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )
    str_7 = " Use '"
    section_5 = module_0.Section(str_7, str_7)
    var_5 = section_5.__repr__()
    assert var_5 == 'Section(title=" Use \'")'
    str_8 = 'C5B_`:"E&+;Y['
    link_5 = module_0.Link(str_8, str_8)
    int_0 = var_5.__len__()
    assert int_0 == 23
    str_9 = "$9.}1Av5,.}"
    link_6 = module_0.Link(str_9, str_9)
    var_6 = var_5.__repr__()
    assert var_6 == "'Section(title=\" Use \\'\")'"
    int_1 = var_4.__len__()
    assert int_1 == 76


def test_case_517():
    str_0 = "page_context"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = "' from the site because it conflicts with '"
    list_0 = []
    section_1 = module_0.Section(str_1, list_0)
    str_2 = " Use '"
    section_2 = module_0.Section(str_2, str_2)
    var_0 = section_2.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    var_1 = var_0.__repr__()
    assert var_1 == "'Section(title=\" Use \\'\")'"
    str_3 = var_0.__str__()
    assert str_3 == 'Section(title=" Use \'")'


def test_case_518():
    str_0 = "page_context"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = " Use '"
    section_1 = module_0.Section(str_1, str_1)
    var_0 = section_1.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    var_1 = var_0.__repr__()
    assert var_1 == "'Section(title=\" Use \\'\")'"
    link_0 = module_0.Link(var_1, section_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "'Section(title=\" Use \\'\")'"
    assert (
        f"{type(link_0.url).__module__}.{type(link_0.url).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    str_2 = " Use '"
    section_2 = module_0.Section(str_2, str_2)
    var_2 = section_2.__repr__()
    assert var_2 == 'Section(title=" Use \'")'
    int_0 = var_2.__len__()
    assert int_0 == 23
    section_3 = module_0.Section(var_2, int_0)
    assert section_3.title == 'Section(title=" Use \'")'
    assert section_3.children == 23
    str_3 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_1 = module_0.Link(str_3, none_type_0)
    var_3 = link_1.__repr__()
    assert var_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_4 = var_3.__repr__()
    assert var_4 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    iterator_0 = var_3.__iter__()
    str_4 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_2 = module_0.Link(str_4, none_type_1)
    var_5 = link_2.__repr__()
    assert var_5 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_6 = var_5.__repr__()
    assert var_6 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_5 = var_5.__str__()
    assert str_5 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_6 = "gfRsC:6&{;|"
    section_4 = module_0.Section(str_6, str_6)
    str_7 = " Use '"
    section_5 = module_0.Section(str_7, str_7)
    var_7 = section_5.__repr__()
    assert var_7 == 'Section(title=" Use \'")'
    int_1 = var_7.__len__()
    assert int_1 == 23
    var_8 = var_7.__repr__()
    assert var_8 == "'Section(title=\" Use \\'\")'"
    var_9 = var_8.__repr__()
    assert var_9 == "'\\'Section(title=\" Use \\\\\\'\")\\''"
    none_type_2 = None
    set_0 = {none_type_2, none_type_2, none_type_2, none_type_2}
    link_3 = module_0.Link(none_type_2, set_0)
    list_0 = []
    navigation_0 = module_0.Navigation(link_2, list_0)


def test_case_519():
    dict_0 = {}
    str_0 = 'y\x0c[fN"W:2&:SWyz~W'
    link_0 = module_0.Link(dict_0, str_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == {}
    assert link_0.url == 'y\x0c[fN"W:2&:SWyz~W'
    str_1 = " Use '"
    section_0 = module_0.Section(str_1, str_1)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    str_2 = "gfRsC:6&{;|"
    section_1 = module_0.Section(str_2, str_2)
    str_3 = "relative_to_docs"
    link_1 = module_0.Link(str_3, section_1)
    section_2 = module_0.Section(section_0, var_0)
    assert section_2.children == 'Section(title=" Use \'")'
    str_4 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_2 = module_0.Link(str_4, none_type_0)
    var_1 = link_2.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_2 = var_1.__repr__()
    assert var_2 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    iterator_0 = var_1.__iter__()
    set_0 = set()
    navigation_0 = module_0.Navigation(set_0, set_0)
    assert (
        f"{type(navigation_0).__module__}.{type(navigation_0).__qualname__}"
        == "mkdocs.structure.nav.Navigation"
    )
    assert len(navigation_0) == 0
    str_5 = navigation_0.__str__()
    str_6 = " Use '"
    section_3 = module_0.Section(str_6, str_6)
    var_3 = section_3.__repr__()
    assert var_3 == 'Section(title=" Use \'")'
    var_4 = var_3.__repr__()
    assert var_4 == "'Section(title=\" Use \\'\")'"
    int_0 = var_0.__len__()
    assert int_0 == 23


def test_case_520():
    str_0 = "gfRsC:6&{;|"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "gfRsC:6&{;|"
    assert section_0.children == "gfRsC:6&{;|"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == "Section(title='gfRsC:6&{;|')"
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_1, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    bytes_0 = b"\x802c35Z\xf8"
    link_1 = module_0.Link(link_0, bytes_0)
    var_1 = link_0.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_2 = "page_context"
    section_1 = module_0.Section(str_2, str_2)
    str_3 = "' from the site because it conflicts with '"
    list_0 = []
    section_2 = module_0.Section(str_3, list_0)
    var_2 = section_1.__repr__()
    assert var_2 == "Section(title='page_context')"
    section_3 = module_0.Section(str_1, var_0)
    assert section_3.children == "Section(title='gfRsC:6&{;|')"


def test_case_521():
    none_type_0 = None
    section_0 = module_0.Section(none_type_0, none_type_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title is None
    assert section_0.children is None
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    dict_0 = {}
    str_0 = 'y\x0c[fN"W:2&:SWyz~W'
    link_0 = module_0.Link(dict_0, str_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == {}
    assert link_0.url == 'y\x0c[fN"W:2&:SWyz~W'
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_1, none_type_1)
    var_0 = link_1.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_2 = var_0.__repr__()
    assert var_2 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_3 = link_1.__repr__()
    assert var_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_2 = "x"
    section_1 = module_0.Section(str_2, str_2)
    str_3 = " Use '"
    section_2 = module_0.Section(str_3, str_3)
    var_4 = section_2.__repr__()
    assert var_4 == 'Section(title=" Use \'")'
    str_4 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_2 = module_0.Link(str_4, none_type_2)
    var_5 = link_2.__repr__()
    assert var_5 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    int_0 = var_5.__len__()
    assert int_0 == 42
    str_5 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_3 = module_0.Link(str_5, none_type_3)
    var_6 = link_3.__repr__()
    assert var_6 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_6 = " Use '"
    section_3 = module_0.Section(str_6, str_6)
    var_7 = section_3.__repr__()
    assert var_7 == 'Section(title=" Use \'")'
    str_7 = 'C5B_`:"E&+;Y['
    link_4 = module_0.Link(str_7, str_7)
    int_1 = var_7.__len__()
    assert int_1 == 23
    str_8 = "page_context"
    section_4 = module_0.Section(str_8, str_8)
    str_9 = "' from the site because it conflicts with '"
    list_0 = []
    section_5 = module_0.Section(str_9, list_0)
    section_6 = module_0.Section(var_5, none_type_2)
    assert section_6.title == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"


def test_case_522():
    str_0 = "page_context"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = "' from the site because it conflicts with '"
    list_0 = []
    section_1 = module_0.Section(str_1, list_0)
    var_0 = section_1.__repr__()
    assert var_0 == "Section(title=\"' from the site because it conflicts with '\")"
    str_2 = "\\l;/\nKHZ=K\nU\no|2{loH"
    link_0 = module_0.Link(str_0, str_2)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "page_context"
    assert link_0.url == "\\l;/\nKHZ=K\nU\no|2{loH"


def test_case_523():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    str_1 = 'C5B_`:"E&+;Y['
    link_0 = module_0.Link(str_1, str_1)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == 'C5B_`:"E&+;Y['
    assert link_0.url == 'C5B_`:"E&+;Y['
    int_0 = var_0.__len__()
    assert int_0 == 23
    section_1 = module_0.Section(str_0, var_0)
    assert section_1.children == 'Section(title=" Use \'")'


def test_case_524():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    bytes_0 = b"\x802c35Z\xf8"
    link_1 = module_0.Link(link_0, bytes_0)
    bool_0 = True
    section_0 = module_0.Section(bool_0, bool_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title is True
    assert section_0.children is True
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = link_1.__repr__()
    assert (
        var_0
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )
    str_1 = var_0.__str__()
    assert (
        str_1
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )
    str_2 = " Use '"
    section_1 = module_0.Section(str_2, str_2)
    var_1 = section_1.__repr__()
    assert var_1 == 'Section(title=" Use \'")'
    int_0 = var_1.__len__()
    assert int_0 == 23
    var_2 = var_1.__repr__()
    assert var_2 == "'Section(title=\" Use \\'\")'"
    link_2 = module_0.Link(int_0, var_1)
    assert link_2.title == 23
    assert link_2.url == 'Section(title=" Use \'")'
    str_3 = "page_context"
    section_2 = module_0.Section(str_3, str_3)
    str_4 = "gfRsC:6&{;|"
    section_3 = module_0.Section(str_4, str_4)
    str_5 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_3 = module_0.Link(str_5, none_type_1)
    var_3 = link_3.__repr__()
    assert var_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_4 = var_3.__repr__()
    assert var_4 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_5 = var_3.__repr__()
    assert var_5 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_6 = link_3.__repr__()
    assert var_6 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_6 = "gfRsC:6&{;|"
    section_4 = module_0.Section(str_6, str_6)
    var_7 = section_4.__repr__()
    assert var_7 == "Section(title='gfRsC:6&{;|')"
    str_7 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_4 = module_0.Link(str_7, none_type_2)
    var_8 = link_4.__repr__()
    assert var_8 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_9 = var_8.__repr__()
    assert var_9 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_10 = var_8.__repr__()
    assert var_10 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_11 = var_8.__repr__()
    assert var_11 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""


def test_case_525():
    str_0 = "' is included in the 'nav' configuration."
    link_0 = module_0.Link(str_0, str_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "' is included in the 'nav' configuration."
    assert link_0.url == "' is included in the 'nav' configuration."
    none_type_0 = None
    section_0 = module_0.Section(none_type_0, none_type_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title is None
    assert section_0.children is None
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = module_1.urlsplit(none_type_0)
    iterator_0 = var_0.__iter__()
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_1, none_type_1)
    var_1 = link_1.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_2 = var_1.__repr__()
    assert var_2 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_3 = var_1.__repr__()
    assert var_3 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    none_type_2 = None
    section_1 = module_0.Section(none_type_2, none_type_2)
    bool_0 = True
    section_2 = module_0.Section(bool_0, bool_0)
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_2 = module_0.Link(str_2, none_type_3)
    var_4 = link_2.__repr__()
    assert var_4 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_5 = var_4.__repr__()
    assert var_5 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    section_3 = module_0.Section(none_type_3, var_5)
    assert section_3.children == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_3 = "gfRsC:6&{;|"
    section_4 = module_0.Section(str_3, str_3)
    var_6 = section_4.__repr__()
    assert var_6 == "Section(title='gfRsC:6&{;|')"
    str_4 = " Use '"
    section_5 = module_0.Section(str_4, str_4)
    var_7 = section_5.__repr__()
    assert var_7 == 'Section(title=" Use \'")'
    var_8 = var_7.__repr__()
    assert var_8 == "'Section(title=\" Use \\'\")'"
    str_5 = "page_context"
    section_6 = module_0.Section(str_5, str_5)
    str_6 = "' from the site because it conflicts with '"
    list_0 = []
    section_7 = module_0.Section(str_6, list_0)
    section_8 = module_0.Section(section_4, var_5)
    assert section_8.children == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""


def test_case_526():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    int_0 = var_1.__len__()
    assert int_0 == 44
    str_1 = "gfRsC:6&{;|"
    section_0 = module_0.Section(str_1, str_1)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "gfRsC:6&{;|"
    assert section_0.children == "gfRsC:6&{;|"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_2 = " Use '"
    section_1 = module_0.Section(str_2, str_2)
    var_2 = section_1.__repr__()
    assert var_2 == 'Section(title=" Use \'")'
    int_1 = var_2.__len__()
    assert int_1 == 23
    var_3 = var_2.__repr__()
    assert var_3 == "'Section(title=\" Use \\'\")'"
    var_4 = var_3.__repr__()
    assert var_4 == "'\\'Section(title=\" Use \\\\\\'\")\\''"
    str_3 = " Use '"
    section_2 = module_0.Section(str_3, str_3)
    var_5 = section_2.__repr__()
    assert var_5 == 'Section(title=" Use \'")'
    str_4 = "gfRsC:6&{;|"
    section_3 = module_0.Section(str_4, str_4)
    str_5 = "relative_to_docs"
    link_1 = module_0.Link(str_5, section_3)
    str_6 = "page_context"
    section_4 = module_0.Section(str_6, str_6)
    str_7 = "' from the site because it conflicts with '"
    list_0 = []
    section_5 = module_0.Section(str_7, list_0)
    var_6 = section_5.__repr__()
    assert var_6 == "Section(title=\"' from the site because it conflicts with '\")"
    str_8 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_2 = module_0.Link(str_8, none_type_1)
    bytes_0 = b"\x802c35Z\xf8"
    link_3 = module_0.Link(link_2, bytes_0)
    bool_0 = True
    section_6 = module_0.Section(bool_0, bool_0)
    var_7 = link_3.__repr__()
    assert (
        var_7
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )
    str_9 = var_7.__str__()
    assert (
        str_9
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )
    str_10 = var_5.__str__()
    assert str_10 == 'Section(title=" Use \'")'


def test_case_527():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    str_1 = " Use '"
    section_0 = module_0.Section(str_1, str_1)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    str_2 = "gfRsC:6&{;|"
    section_1 = module_0.Section(str_2, str_2)
    str_3 = "relative_to_docs"
    link_1 = module_0.Link(str_3, section_1)
    section_2 = module_0.Section(section_0, var_0)
    assert section_2.children == 'Section(title=" Use \'")'
    int_0 = var_0.__len__()
    assert int_0 == 23
    str_4 = " Use '"
    section_3 = module_0.Section(str_4, str_4)
    var_1 = section_3.__repr__()
    assert var_1 == 'Section(title=" Use \'")'
    var_2 = var_1.__repr__()
    assert var_2 == "'Section(title=\" Use \\'\")'"
    var_3 = var_1.__repr__()
    assert var_3 == "'Section(title=\" Use \\'\")'"
    str_5 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_2 = module_0.Link(str_5, none_type_1)
    var_4 = link_2.__repr__()
    assert var_4 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_5 = var_4.__repr__()
    assert var_5 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_6 = var_4.__str__()
    assert str_6 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_7 = 'C5B_`:"E&+;Y['
    link_3 = module_0.Link(str_7, str_7)
    int_1 = var_4.__len__()
    assert int_1 == 42
    set_0 = set()
    navigation_0 = module_0.Navigation(set_0, set_0)
    assert (
        f"{type(navigation_0).__module__}.{type(navigation_0).__qualname__}"
        == "mkdocs.structure.nav.Navigation"
    )
    assert len(navigation_0) == 0
    str_8 = navigation_0.__str__()
    str_9 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_4 = module_0.Link(str_9, none_type_2)
    var_6 = link_4.__repr__()
    assert var_6 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_7 = var_6.__repr__()
    assert var_7 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    iterator_0 = var_6.__iter__()
    dict_0 = {}
    str_10 = 'y\x0c[fN"W:2&:SWyz~W'
    link_5 = module_0.Link(dict_0, str_10)
    section_4 = module_0.Section(str_10, str_10)
    section_5 = module_0.Section(str_10, str_10)
    str_11 = "$9.}1Av5,.}"
    link_6 = module_0.Link(str_11, str_11)
    str_12 = " Use '"
    section_6 = module_0.Section(str_12, str_12)
    var_8 = section_6.__repr__()
    assert var_8 == 'Section(title=" Use \'")'
    str_13 = 'C5B_`:"E&+;Y['
    link_7 = module_0.Link(str_13, str_13)
    int_2 = var_8.__len__()
    assert int_2 == 23
    link_8 = module_0.Link(str_10, str_12)


def test_case_528():
    str_0 = "page_context"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = "' from the site because it conflicts with '"
    list_0 = []
    section_1 = module_0.Section(str_1, list_0)
    var_0 = section_1.__repr__()
    assert var_0 == "Section(title=\"' from the site because it conflicts with '\")"
    section_2 = module_0.Section(str_1, section_0)
    str_2 = " Use '"
    section_3 = module_0.Section(str_2, str_2)
    var_1 = section_3.__repr__()
    assert var_1 == 'Section(title=" Use \'")'
    str_3 = 'C5B_`:"E&+;Y['
    link_0 = module_0.Link(str_3, str_3)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == 'C5B_`:"E&+;Y['
    assert link_0.url == 'C5B_`:"E&+;Y['
    int_0 = var_1.__len__()
    assert int_0 == 23
    var_2 = section_3.__repr__()
    assert var_2 == 'Section(title=" Use \'")'


def test_case_529():
    bytes_0 = b"\xac\xb0\x17a\xfaT/\xf7\xc9"
    section_0 = module_0.Section(bytes_0, bytes_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == b"\xac\xb0\x17a\xfaT/\xf7\xc9"
    assert section_0.children == b"\xac\xb0\x17a\xfaT/\xf7\xc9"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    none_type_0 = None
    section_1 = module_0.Section(none_type_0, none_type_0)
    var_0 = module_1.urlsplit(none_type_0)
    iterator_0 = var_0.__iter__()
    str_0 = " Use '"
    section_2 = module_0.Section(str_0, str_0)
    var_1 = section_2.__repr__()
    assert var_1 == 'Section(title=" Use \'")'
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_0 = module_0.Link(str_1, none_type_1)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    bytes_1 = b"\x802c35Z\xf8"
    link_1 = module_0.Link(link_0, bytes_1)
    iterator_1 = var_1.__iter__()
    str_2 = "gfRsC:6&{;|"
    section_3 = module_0.Section(str_2, str_2)
    str_3 = " Use '"
    section_4 = module_0.Section(str_3, str_3)
    var_2 = section_4.__repr__()
    assert var_2 == 'Section(title=" Use \'")'
    int_0 = var_2.__len__()
    assert int_0 == 23
    var_3 = var_2.__repr__()
    assert var_3 == "'Section(title=\" Use \\'\")'"
    var_4 = var_3.__repr__()
    assert var_4 == "'\\'Section(title=\" Use \\\\\\'\")\\''"
    int_1 = var_4.__len__()
    assert int_1 == 32


def test_case_530():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    bytes_0 = b"\x802c35Z\xf8"
    link_1 = module_0.Link(link_0, bytes_0)
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_1 = " Use '"
    section_0 = module_0.Section(str_1, str_1)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_2 = section_0.__repr__()
    assert var_2 == 'Section(title=" Use \'")'
    int_0 = var_2.__len__()
    assert int_0 == 23
    var_3 = var_2.__repr__()
    assert var_3 == "'Section(title=\" Use \\'\")'"
    str_2 = " Use '"
    section_1 = module_0.Section(str_2, str_2)
    var_4 = section_1.__repr__()
    assert var_4 == 'Section(title=" Use \'")'
    str_3 = 'C5B_`:"E&+;Y['
    link_2 = module_0.Link(str_3, str_3)
    int_1 = var_4.__len__()
    assert int_1 == 23
    section_2 = module_0.Section(var_4, var_4)
    assert section_2.title == 'Section(title=" Use \'")'
    assert section_2.children == 'Section(title=" Use \'")'
    str_4 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_3 = module_0.Link(str_4, none_type_1)
    var_5 = link_3.__repr__()
    assert var_5 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_6 = var_5.__repr__()
    assert var_6 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    iterator_0 = var_5.__iter__()
    bool_0 = True
    link_4 = module_0.Link(bool_0, bool_0)
    str_5 = "\x0cX''2KSGYQ"
    link_5 = module_0.Link(str_5, link_0)


def test_case_531():
    str_0 = "gfRsC:6&{;|"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "gfRsC:6&{;|"
    assert section_0.children == "gfRsC:6&{;|"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == "Section(title='gfRsC:6&{;|')"
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_1, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_1 = link_0.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_2 = var_1.__repr__()
    assert var_2 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_2, none_type_1)
    bytes_0 = b"\x802c35Z\xf8"
    link_2 = module_0.Link(link_1, bytes_0)
    bool_0 = True
    section_1 = module_0.Section(bool_0, bool_0)
    var_3 = link_2.__repr__()
    assert (
        var_3
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )
    str_3 = var_3.__str__()
    assert (
        str_3
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )
    str_4 = "$9.}1Av5,.}"
    link_3 = module_0.Link(str_4, str_4)
    str_5 = " Use '"
    section_2 = module_0.Section(str_5, str_5)
    var_4 = section_2.__repr__()
    assert var_4 == 'Section(title=" Use \'")'
    str_6 = 'C5B_`:"E&+;Y['
    link_4 = module_0.Link(str_6, str_6)
    int_0 = var_4.__len__()
    assert int_0 == 23
    str_7 = "$9.}1Av5,.}"
    link_5 = module_0.Link(str_7, str_7)
    var_5 = var_4.__repr__()
    assert var_5 == "'Section(title=\" Use \\'\")'"
    str_8 = "page_context"
    section_3 = module_0.Section(str_8, str_8)
    str_9 = "' from the site because it conflicts with '"
    list_0 = []
    section_4 = module_0.Section(str_9, list_0)
    var_6 = section_4.__repr__()
    assert var_6 == "Section(title=\"' from the site because it conflicts with '\")"
    str_10 = "\\l;/\nKHZ=K\nU\no|2{loH"
    link_6 = module_0.Link(str_8, str_10)
    link_7 = module_0.Link(str_6, var_5)
    assert link_7.url == "'Section(title=\" Use \\'\")'"


def test_case_532():
    str_0 = "gfRsC:6&{;|"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "gfRsC:6&{;|"
    assert section_0.children == "gfRsC:6&{;|"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_1, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_2 = var_1.__repr__()
    assert var_2 == "'\"Link(title=\\'0_~6:m!(f5FgU,:rvz\\', url=None)\"'"
    str_2 = "gfRsC:6&{;|"
    section_1 = module_0.Section(str_2, str_2)
    var_3 = section_1.__repr__()
    assert var_3 == "Section(title='gfRsC:6&{;|')"
    bool_0 = True
    section_2 = module_0.Section(bool_0, bool_0)
    list_0 = [var_3, var_3]
    section_3 = module_0.Section(section_1, list_0)
    assert section_3.children == [
        "Section(title='gfRsC:6&{;|')",
        "Section(title='gfRsC:6&{;|')",
    ]
    str_3 = "page_context"
    section_4 = module_0.Section(str_3, str_3)
    str_4 = " Use '"
    section_5 = module_0.Section(str_4, str_4)
    var_4 = section_5.__repr__()
    assert var_4 == 'Section(title=" Use \'")'
    var_5 = var_4.__repr__()
    assert var_5 == "'Section(title=\" Use \\'\")'"
    link_1 = module_0.Link(var_5, section_4)
    assert link_1.title == "'Section(title=\" Use \\'\")'"
    iterator_0 = var_4.__iter__()


def test_case_533():
    str_0 = "page_context"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = "' from the site because it conflicts with '"
    list_0 = []
    section_1 = module_0.Section(str_1, list_0)
    var_0 = section_0.__repr__()
    assert var_0 == "Section(title='page_context')"
    str_2 = " Use '"
    section_2 = module_0.Section(str_2, str_2)
    var_1 = section_2.__repr__()
    assert var_1 == 'Section(title=" Use \'")'
    var_2 = var_1.__repr__()
    assert var_2 == "'Section(title=\" Use \\'\")'"
    str_3 = "gfRsC:6&{;|"
    section_3 = module_0.Section(str_3, str_3)
    str_4 = " Use '"
    section_4 = module_0.Section(str_4, str_4)
    var_3 = section_4.__repr__()
    assert var_3 == 'Section(title=" Use \'")'
    int_0 = var_3.__len__()
    assert int_0 == 23
    str_5 = " Use '"
    section_5 = module_0.Section(str_5, str_5)
    var_4 = section_5.__repr__()
    assert var_4 == 'Section(title=" Use \'")'
    int_1 = var_4.__len__()
    assert int_1 == 23
    var_5 = var_4.__repr__()
    assert var_5 == "'Section(title=\" Use \\'\")'"
    link_0 = module_0.Link(int_1, var_4)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == 23
    assert link_0.url == 'Section(title=" Use \'")'
    str_6 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_1 = module_0.Link(str_6, none_type_0)
    var_6 = link_1.__repr__()
    assert var_6 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_7 = var_6.__repr__()
    assert var_7 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_8 = var_7.__repr__()
    assert var_8 == "'\"Link(title=\\'0_~6:m!(f5FgU,:rvz\\', url=None)\"'"
    str_7 = "page_context"
    section_6 = module_0.Section(str_7, str_7)
    str_8 = "' from the site because it conflicts with '"
    list_1 = []
    section_7 = module_0.Section(str_8, list_1)
    section_8 = module_0.Section(section_7, list_1)
    int_2 = var_0.__len__()
    assert int_2 == 29


def test_case_534():
    bool_0 = True
    section_0 = module_0.Section(bool_0, bool_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title is True
    assert section_0.children is True
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_0 = " Use '"
    section_1 = module_0.Section(str_0, str_0)
    var_0 = section_1.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    int_0 = var_0.__len__()
    assert int_0 == 23
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_1, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    int_1 = var_0.__len__()
    assert int_1 == 23
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_2, none_type_1)
    var_1 = link_1.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_2 = var_1.__repr__()
    assert var_2 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    iterator_0 = var_1.__iter__()
    var_3 = var_1.__repr__()
    assert var_3 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_3 = "gfRsC:6&{;|"
    section_2 = module_0.Section(str_3, str_3)
    str_4 = "page_context"
    section_3 = module_0.Section(str_4, str_4)
    str_5 = "' from the site because it conflicts with '"
    list_0 = []
    section_4 = module_0.Section(str_5, list_0)
    var_4 = section_4.__repr__()
    assert var_4 == "Section(title=\"' from the site because it conflicts with '\")"
    str_6 = "\\l;/\nKHZ=K\nU\no|2{loH"
    link_2 = module_0.Link(str_4, str_6)
    str_7 = " Use '"
    section_5 = module_0.Section(str_7, str_7)
    var_5 = section_5.__repr__()
    assert var_5 == 'Section(title=" Use \'")'
    var_6 = var_5.__repr__()
    assert var_6 == "'Section(title=\" Use \\'\")'"
    var_7 = var_5.__repr__()
    assert var_7 == "'Section(title=\" Use \\'\")'"
    str_8 = 'C5B_`:"E&+;Y['
    link_3 = module_0.Link(str_8, str_8)
    none_type_2 = None
    str_9 = "\n        Perform validation for a value.\n\n        The run_validation method should be implemented by subclasses.\n        "
    link_4 = module_0.Link(none_type_2, str_9)
    var_8 = link_4.__repr__()
    assert (
        var_8
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    str_10 = var_8.__str__()
    assert (
        str_10
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    str_11 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_5 = module_0.Link(str_11, none_type_3)
    var_9 = link_5.__repr__()
    assert var_9 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_10 = var_9.__repr__()
    assert var_10 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    int_2 = var_10.__len__()
    assert int_2 == 44
    str_12 = "0_~6:m!(f5FgU,:rvz"
    none_type_4 = None
    link_6 = module_0.Link(str_12, none_type_4)
    var_11 = link_6.__repr__()
    assert var_11 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    section_6 = module_0.Section(var_1, list_0)
    assert section_6.title == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"


def test_case_535():
    str_0 = "page_context"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = "' from the site because it conflicts with '"
    list_0 = []
    section_1 = module_0.Section(str_1, list_0)
    section_2 = module_0.Section(section_1, list_0)
    section_3 = module_0.Section(str_1, list_0)
    str_2 = 'C5B_`:"E&+;Y['
    link_0 = module_0.Link(str_2, str_2)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == 'C5B_`:"E&+;Y['
    assert link_0.url == 'C5B_`:"E&+;Y['
    bool_0 = True
    section_4 = module_0.Section(bool_0, bool_0)
    str_3 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_1 = module_0.Link(str_3, none_type_0)
    str_4 = "gfRsC:6&{;|"
    section_5 = module_0.Section(str_4, str_4)
    var_0 = section_5.__repr__()
    assert var_0 == "Section(title='gfRsC:6&{;|')"
    dict_0 = {}
    str_5 = 'y\x0c[fN"W:2&:SWyz~W'
    link_2 = module_0.Link(dict_0, str_5)
    str_6 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_3 = module_0.Link(str_6, none_type_1)
    bytes_0 = b"\x802c35Z\xf8"
    link_4 = module_0.Link(link_3, bytes_0)
    var_1 = link_3.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    iterator_0 = var_1.__iter__()
    var_2 = link_2.__repr__()
    assert var_2 == "Link(title={}, url='y\\x0c[fN\"W:2&:SWyz~W')"


def test_case_536():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    int_0 = var_0.__len__()
    assert int_0 == 23
    var_1 = var_0.__repr__()
    assert var_1 == "'Section(title=\" Use \\'\")'"
    link_0 = module_0.Link(int_0, var_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == 23
    assert link_0.url == 'Section(title=" Use \'")'
    bytes_0 = b"\xac\xb0\x17a\xfaT/\xf7\xc9"
    section_1 = module_0.Section(bytes_0, bytes_0)
    str_1 = "gfRsC:6&{;|"
    section_2 = module_0.Section(str_1, str_1)
    str_2 = " Use '"
    section_3 = module_0.Section(str_2, str_2)
    var_2 = section_3.__repr__()
    assert var_2 == 'Section(title=" Use \'")'
    int_1 = var_2.__len__()
    assert int_1 == 23
    var_3 = var_2.__repr__()
    assert var_3 == "'Section(title=\" Use \\'\")'"
    var_4 = var_3.__repr__()
    assert var_4 == "'\\'Section(title=\" Use \\\\\\'\")\\''"
    none_type_0 = None
    set_0 = {none_type_0, none_type_0, none_type_0, none_type_0}
    link_1 = module_0.Link(none_type_0, set_0)
    str_3 = "gfRsC:6&{;|"
    section_4 = module_0.Section(str_3, str_3)
    list_0 = []
    section_5 = module_0.Section(section_4, list_0)
    str_4 = "v\n6u"
    link_2 = module_0.Link(str_1, str_4)


def test_case_537():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_2 = var_1.__repr__()
    assert var_2 == "'\"Link(title=\\'0_~6:m!(f5FgU,:rvz\\', url=None)\"'"
    str_1 = "page_context"
    section_0 = module_0.Section(str_1, str_1)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_2 = "' from the site because it conflicts with '"
    list_0 = []
    section_1 = module_0.Section(str_2, list_0)
    section_2 = module_0.Section(section_1, list_0)
    section_3 = module_0.Section(str_2, list_0)
    str_3 = " Use '"
    section_4 = module_0.Section(str_3, str_3)
    var_3 = section_4.__repr__()
    assert var_3 == 'Section(title=" Use \'")'
    int_0 = var_3.__len__()
    assert int_0 == 23
    str_4 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_4, none_type_1)
    int_1 = var_3.__len__()
    assert int_1 == 23
    int_2 = var_3.__len__()
    assert int_2 == 23
    dict_0 = {}
    str_5 = 'y\x0c[fN"W:2&:SWyz~W'
    link_2 = module_0.Link(dict_0, str_5)
    str_6 = " Use '"
    section_5 = module_0.Section(str_6, str_6)
    var_4 = section_5.__repr__()
    assert var_4 == 'Section(title=" Use \'")'
    str_7 = "gfRsC:6&{;|"
    section_6 = module_0.Section(str_7, str_7)
    str_8 = "relative_to_docs"
    link_3 = module_0.Link(str_8, section_6)
    bytes_0 = b"\xac\xb0\x17a\xfaT/\xf7\xc9"
    section_7 = module_0.Section(bytes_0, bytes_0)
    str_9 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_4 = module_0.Link(str_9, none_type_2)
    var_5 = link_4.__repr__()
    assert var_5 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_6 = var_5.__repr__()
    assert var_6 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_10 = var_5.__str__()
    assert str_10 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_11 = " Use '"
    section_8 = module_0.Section(str_11, str_11)
    var_7 = section_8.__repr__()
    assert var_7 == 'Section(title=" Use \'")'
    int_3 = var_7.__len__()
    assert int_3 == 23
    str_12 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_5 = module_0.Link(str_12, none_type_3)
    int_4 = var_7.__len__()
    assert int_4 == 23
    iterator_0 = var_3.__iter__()


def test_case_538():
    str_0 = "$9.}1Av5,.}"
    link_0 = module_0.Link(str_0, str_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "$9.}1Av5,.}"
    assert link_0.url == "$9.}1Av5,.}"
    str_1 = "page_context"
    section_0 = module_0.Section(str_1, str_1)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_1 = module_0.Link(str_2, none_type_0)
    var_0 = link_1.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = section_0.__repr__()
    assert var_1 == "Section(title='page_context')"
    var_2 = var_0.__repr__()
    assert var_2 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""


def test_case_539():
    str_0 = 'C5B_`:"E&+;Y['
    link_0 = module_0.Link(str_0, str_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == 'C5B_`:"E&+;Y['
    assert link_0.url == 'C5B_`:"E&+;Y['
    str_1 = "page_context"
    section_0 = module_0.Section(str_1, str_1)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_2 = "' from the site because it conflicts with '"
    list_0 = []
    section_1 = module_0.Section(str_2, list_0)
    str_3 = " Use '"
    section_2 = module_0.Section(str_3, str_3)
    var_0 = section_2.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    str_4 = "gfRsC:6&{;|"
    section_3 = module_0.Section(str_4, str_4)
    str_5 = "relative_to_docs"
    link_1 = module_0.Link(str_5, section_3)
    section_4 = module_0.Section(section_2, var_0)
    assert section_4.children == 'Section(title=" Use \'")'
    list_1 = [section_4]
    section_5 = module_0.Section(link_1, list_1)


def test_case_540():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    int_0 = var_1.__len__()
    assert int_0 == 44
    str_1 = "gfRsC:6&{;|"
    section_0 = module_0.Section(str_1, str_1)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "gfRsC:6&{;|"
    assert section_0.children == "gfRsC:6&{;|"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_2 = section_0.__repr__()
    assert var_2 == "Section(title='gfRsC:6&{;|')"
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_2, none_type_1)
    var_3 = link_1.__repr__()
    assert var_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_4 = var_3.__repr__()
    assert var_4 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_3 = var_3.__str__()
    assert str_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_4 = 'C5B_`:"E&+;Y['
    link_2 = module_0.Link(str_4, str_4)
    int_1 = var_3.__len__()
    assert int_1 == 42
    str_5 = " Use '"
    section_1 = module_0.Section(str_5, str_5)
    var_5 = section_1.__repr__()
    assert var_5 == 'Section(title=" Use \'")'
    str_6 = "gfRsC:6&{;|"
    section_2 = module_0.Section(str_6, str_6)
    str_7 = "relative_to_docs"
    link_3 = module_0.Link(str_7, section_2)
    bool_0 = True
    section_3 = module_0.Section(bool_0, bool_0)
    str_8 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_4 = module_0.Link(str_8, none_type_2)
    var_6 = link_4.__repr__()
    assert var_6 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_7 = var_6.__repr__()
    assert var_7 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    section_4 = module_0.Section(none_type_2, var_7)
    assert section_4.children == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_8 = section_4.__repr__()
    assert var_8 == "Section(title=None)"
    str_9 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_5 = module_0.Link(str_9, none_type_3)
    var_9 = link_5.__repr__()
    assert var_9 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_10 = var_9.__repr__()
    assert var_10 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_11 = var_9.__repr__()
    assert var_11 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_10 = "page_context"
    section_5 = module_0.Section(str_10, str_10)
    str_11 = "' from the site because it conflicts with '"
    list_0 = []
    section_6 = module_0.Section(str_11, list_0)
    var_12 = section_6.__repr__()
    assert var_12 == "Section(title=\"' from the site because it conflicts with '\")"
    str_12 = "\\l;/\nKHZ=K\nU\no|2{loH"
    link_6 = module_0.Link(str_10, str_12)
    str_13 = var_6.__str__()
    assert str_13 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"


def test_case_541():
    none_type_0 = None
    section_0 = module_0.Section(none_type_0, none_type_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title is None
    assert section_0.children is None
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_0 = module_0.Link(str_0, none_type_1)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_1 = var_0.__str__()
    assert str_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_2 = var_0.__repr__()
    assert var_2 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_2 = "page_context"
    section_1 = module_0.Section(str_2, str_2)
    str_3 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_1 = module_0.Link(str_3, none_type_2)
    var_3 = link_1.__repr__()
    assert var_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_4 = section_1.__repr__()
    assert var_4 == "Section(title='page_context')"
    str_4 = 'C5B_`:"E&+;Y['
    link_2 = module_0.Link(str_4, str_4)
    none_type_3 = None
    section_2 = module_0.Section(none_type_3, none_type_3)
    var_5 = module_1.urlsplit(none_type_3)
    iterator_0 = var_5.__iter__()
    str_5 = "jXt{G!+9"
    int_0 = -1857
    link_3 = module_0.Link(str_5, int_0)
    str_6 = var_1.__str__()
    assert str_6 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""


def test_case_542():
    bool_0 = True
    section_0 = module_0.Section(bool_0, bool_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title is True
    assert section_0.children is True
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    section_1 = module_0.Section(none_type_0, var_1)
    assert section_1.children == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_2 = section_1.__repr__()
    assert var_2 == "Section(title=None)"
    str_1 = " Use '"
    section_2 = module_0.Section(str_1, str_1)
    var_3 = section_2.__repr__()
    assert var_3 == 'Section(title=" Use \'")'
    section_3 = module_0.Section(str_1, var_3)
    assert section_3.children == 'Section(title=" Use \'")'
    iterator_0 = var_2.__iter__()


def test_case_543():
    none_type_0 = None
    str_0 = "\n        Perform validation for a value.\n\n        The run_validation method should be implemented by subclasses.\n        "
    link_0 = module_0.Link(none_type_0, str_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title is None
    assert (
        link_0.url
        == "\n        Perform validation for a value.\n\n        The run_validation method should be implemented by subclasses.\n        "
    )
    var_0 = link_0.__repr__()
    assert (
        var_0
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    str_1 = var_0.__str__()
    assert (
        str_1
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    str_2 = " Use '"
    section_0 = module_0.Section(str_2, str_2)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_1 = section_0.__repr__()
    assert var_1 == 'Section(title=" Use \'")'
    str_3 = 'C5B_`:"E&+;Y['
    link_1 = module_0.Link(str_3, str_3)
    int_0 = var_1.__len__()
    assert int_0 == 23
    str_4 = "$9.}1Av5,.}"
    link_2 = module_0.Link(str_4, str_4)
    var_2 = var_1.__repr__()
    assert var_2 == "'Section(title=\" Use \\'\")'"
    str_5 = " Use '"
    section_1 = module_0.Section(str_5, str_5)
    var_3 = section_1.__repr__()
    assert var_3 == 'Section(title=" Use \'")'
    var_4 = var_3.__repr__()
    assert var_4 == "'Section(title=\" Use \\'\")'"
    dict_0 = {}
    str_6 = 'y\x0c[fN"W:2&:SWyz~W'
    link_3 = module_0.Link(dict_0, str_6)
    section_2 = module_0.Section(str_5, var_4)
    assert section_2.children == "'Section(title=\" Use \\'\")'"
    str_7 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_4 = module_0.Link(str_7, none_type_1)
    var_5 = link_4.__repr__()
    assert var_5 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_6 = var_5.__repr__()
    assert var_6 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_8 = var_5.__str__()
    assert str_8 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_9 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_5 = module_0.Link(str_9, none_type_2)
    bytes_0 = b"\x802c35Z\xf8"
    link_6 = module_0.Link(link_5, bytes_0)
    var_7 = link_5.__repr__()
    assert var_7 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    int_1 = var_7.__len__()
    assert int_1 == 42
    none_type_3 = None
    section_3 = module_0.Section(none_type_3, none_type_3)
    var_8 = module_1.urlsplit(none_type_3)
    iterator_0 = var_8.__iter__()
    str_10 = " Use '"
    section_4 = module_0.Section(str_10, str_10)
    var_9 = section_4.__repr__()
    assert var_9 == 'Section(title=" Use \'")'
    int_2 = var_9.__len__()
    assert int_2 == 23
    var_10 = var_9.__repr__()
    assert var_10 == "'Section(title=\" Use \\'\")'"
    str_11 = 'C5B_`:"E&+;Y['
    link_7 = module_0.Link(str_11, str_11)
    str_12 = var_9.__str__()
    assert str_12 == 'Section(title=" Use \'")'


def test_case_544():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    iterator_0 = var_0.__iter__()
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_1, none_type_1)
    str_2 = " Use '"
    section_0 = module_0.Section(str_2, str_2)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_2 = section_0.__repr__()
    assert var_2 == 'Section(title=" Use \'")'
    int_0 = var_2.__len__()
    assert int_0 == 23
    str_3 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_2 = module_0.Link(str_3, none_type_2)
    var_3 = link_2.__repr__()
    assert var_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_4 = var_3.__repr__()
    assert var_4 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_5 = var_3.__repr__()
    assert var_5 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    bool_0 = True
    section_1 = module_0.Section(bool_0, bool_0)
    str_4 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_3 = module_0.Link(str_4, none_type_3)
    var_6 = link_3.__repr__()
    assert var_6 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_7 = var_6.__repr__()
    assert var_7 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    section_2 = module_0.Section(none_type_3, var_7)
    assert section_2.children == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_8 = section_2.__repr__()
    assert var_8 == "Section(title=None)"
    str_5 = " Use '"
    section_3 = module_0.Section(str_5, str_5)
    var_9 = section_3.__repr__()
    assert var_9 == 'Section(title=" Use \'")'
    int_1 = var_9.__len__()
    assert int_1 == 23
    var_10 = var_9.__repr__()
    assert var_10 == "'Section(title=\" Use \\'\")'"
    var_11 = var_9.__repr__()
    assert var_11 == "'Section(title=\" Use \\'\")'"
    str_6 = var_11.__str__()
    assert str_6 == "'Section(title=\" Use \\'\")'"


def test_case_545():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    var_1 = var_0.__repr__()
    assert var_1 == "'Section(title=\" Use \\'\")'"
    str_1 = " Use '"
    section_1 = module_0.Section(str_1, str_1)
    var_2 = section_1.__repr__()
    assert var_2 == 'Section(title=" Use \'")'
    str_2 = "gfRsC:6&{;|"
    section_2 = module_0.Section(str_2, str_2)
    str_3 = "relative_to_docs"
    link_0 = module_0.Link(str_3, section_2)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "relative_to_docs"
    assert (
        f"{type(link_0.url).__module__}.{type(link_0.url).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    str_4 = " Use '"
    section_3 = module_0.Section(str_4, str_4)
    var_3 = section_3.__repr__()
    assert var_3 == 'Section(title=" Use \'")'
    str_5 = "gfRsC:6&{;|"
    section_4 = module_0.Section(str_5, str_5)
    str_6 = "relative_to_docs"
    link_1 = module_0.Link(str_6, section_4)
    section_5 = module_0.Section(section_3, var_3)
    assert section_5.children == 'Section(title=" Use \'")'
    int_0 = var_3.__len__()
    assert int_0 == 23
    str_7 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_2 = module_0.Link(str_7, none_type_0)
    bytes_0 = b"\x802c35Z\xf8"
    link_3 = module_0.Link(link_2, bytes_0)
    dict_0 = {}
    str_8 = 'y\x0c[fN"W:2&:SWyz~W'
    link_4 = module_0.Link(dict_0, str_8)
    var_4 = link_3.__repr__()
    assert (
        var_4
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )
    none_type_1 = None
    str_9 = "\n        Perform validation for a value.\n\n        The run_validation method should be implemented by subclasses.\n        "
    link_5 = module_0.Link(none_type_1, str_9)
    var_5 = link_5.__repr__()
    assert (
        var_5
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    str_10 = var_5.__str__()
    assert (
        str_10
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    str_11 = " Use '"
    section_6 = module_0.Section(str_11, str_11)
    var_6 = section_6.__repr__()
    assert var_6 == 'Section(title=" Use \'")'
    str_12 = " Use '"
    section_7 = module_0.Section(str_12, str_12)
    var_7 = section_7.__repr__()
    assert var_7 == 'Section(title=" Use \'")'
    section_8 = module_0.Section(str_12, var_7)
    assert section_8.children == 'Section(title=" Use \'")'
    str_13 = " Use '"
    section_9 = module_0.Section(str_13, str_13)
    var_8 = section_9.__repr__()
    assert var_8 == 'Section(title=" Use \'")'
    int_1 = var_8.__len__()
    assert int_1 == 23
    str_14 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_6 = module_0.Link(str_14, none_type_2)
    int_2 = var_8.__len__()
    assert int_2 == 23
    int_3 = var_8.__len__()
    assert int_3 == 23
    int_4 = var_2.__len__()
    assert int_4 == 23


def test_case_546():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    str_1 = "gfRsC:6&{;|"
    section_1 = module_0.Section(str_1, str_1)
    str_2 = "relative_to_docs"
    link_0 = module_0.Link(str_2, section_1)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "relative_to_docs"
    assert (
        f"{type(link_0.url).__module__}.{type(link_0.url).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    section_2 = module_0.Section(section_0, var_0)
    assert section_2.children == 'Section(title=" Use \'")'
    int_0 = var_0.__len__()
    assert int_0 == 23
    str_3 = " Use '"
    section_3 = module_0.Section(str_3, str_3)
    var_1 = section_3.__repr__()
    assert var_1 == 'Section(title=" Use \'")'
    str_4 = 'C5B_`:"E&+;Y['
    link_1 = module_0.Link(str_4, str_4)
    int_1 = var_1.__len__()
    assert int_1 == 23
    section_4 = module_0.Section(var_1, var_1)
    assert section_4.title == 'Section(title=" Use \'")'
    assert section_4.children == 'Section(title=" Use \'")'
    link_2 = module_0.Link(section_3, str_3)
    str_5 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_3 = module_0.Link(str_5, none_type_0)
    var_2 = link_3.__repr__()
    assert var_2 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_3 = var_2.__repr__()
    assert var_3 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    iterator_0 = var_2.__iter__()
    dict_0 = {}
    str_6 = 'y\x0c[fN"W:2&:SWyz~W'
    link_4 = module_0.Link(dict_0, str_6)
    section_5 = module_0.Section(str_6, str_6)
    section_6 = module_0.Section(str_6, str_6)
    int_2 = var_0.__len__()
    assert int_2 == 23


def test_case_547():
    str_0 = "page_context"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = "' from the site because it conflicts with '"
    list_0 = []
    section_1 = module_0.Section(str_1, list_0)
    var_0 = section_1.__repr__()
    assert var_0 == "Section(title=\"' from the site because it conflicts with '\")"
    section_2 = module_0.Section(str_1, section_0)
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_2, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    bytes_0 = b"\x802c35Z\xf8"
    link_1 = module_0.Link(link_0, bytes_0)
    dict_0 = {}
    str_3 = 'y\x0c[fN"W:2&:SWyz~W'
    link_2 = module_0.Link(dict_0, str_3)
    var_1 = link_1.__repr__()
    assert (
        var_1
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )
    bool_0 = True
    link_3 = module_0.Link(bool_0, bool_0)
    str_4 = " Use '"
    section_3 = module_0.Section(str_4, str_4)
    var_2 = section_3.__repr__()
    assert var_2 == 'Section(title=" Use \'")'
    str_5 = "gfRsC:6&{;|"
    section_4 = module_0.Section(str_5, str_5)
    str_6 = "relative_to_docs"
    link_4 = module_0.Link(str_6, section_4)
    str_7 = "page_context"
    section_5 = module_0.Section(str_7, str_7)
    str_8 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_5 = module_0.Link(str_8, none_type_1)
    var_3 = link_5.__repr__()
    assert var_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_4 = var_3.__repr__()
    assert var_4 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    iterator_0 = var_3.__iter__()
    str_9 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_6 = module_0.Link(str_9, none_type_2)
    var_5 = link_6.__repr__()
    assert var_5 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_6 = var_5.__repr__()
    assert var_6 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    iterator_1 = var_5.__iter__()
    var_7 = var_5.__repr__()
    assert var_7 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_10 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_7 = module_0.Link(str_10, none_type_3)
    bytes_1 = b"\x802c35Z\xf8"
    link_8 = module_0.Link(link_7, bytes_1)
    str_11 = " Use '"
    section_6 = module_0.Section(str_11, str_11)
    var_8 = section_6.__repr__()
    assert var_8 == 'Section(title=" Use \'")'
    str_12 = "0_~6:m!(f5FgU,:rvz"
    none_type_4 = None
    link_9 = module_0.Link(str_12, none_type_4)
    bytes_2 = b"\x802c35Z\xf8"
    link_10 = module_0.Link(link_9, bytes_2)
    iterator_2 = var_8.__iter__()
    str_13 = "2P`3>}m"
    link_11 = module_0.Link(str_13, var_4)
    assert link_11.url == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""


def test_case_548():
    bool_0 = True
    section_0 = module_0.Section(bool_0, bool_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title is True
    assert section_0.children is True
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    iterator_0 = var_0.__iter__()
    none_type_1 = None
    str_1 = "\n        Perform validation for a value.\n\n        The run_validation method should be implemented by subclasses.\n        "
    link_1 = module_0.Link(none_type_1, str_1)
    var_2 = link_1.__repr__()
    assert (
        var_2
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    str_2 = var_2.__str__()
    assert (
        str_2
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    bool_1 = True
    link_2 = module_0.Link(bool_1, bool_1)
    var_3 = var_2.__repr__()
    assert (
        var_3
        == "\"Link(title=[blank], url='\\\\n        Perform validation for a value.\\\\n\\\\n        The run_validation method should be implemented by subclasses.\\\\n        ')\""
    )
    str_3 = "$9.}1Av5,.}"
    link_3 = module_0.Link(str_3, str_3)
    str_4 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_4 = module_0.Link(str_4, none_type_2)
    bytes_0 = b"\x802c35Z\xf8"
    link_5 = module_0.Link(link_4, bytes_0)
    var_4 = link_4.__repr__()
    assert var_4 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    iterator_1 = var_4.__iter__()
    str_5 = var_3.__str__()
    assert (
        str_5
        == "\"Link(title=[blank], url='\\\\n        Perform validation for a value.\\\\n\\\\n        The run_validation method should be implemented by subclasses.\\\\n        ')\""
    )


def test_case_549():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    var_1 = var_0.__repr__()
    assert var_1 == "'Section(title=\" Use \\'\")'"
    str_1 = " Use '"
    section_1 = module_0.Section(str_1, str_1)
    var_2 = section_1.__repr__()
    assert var_2 == 'Section(title=" Use \'")'
    str_2 = "gfRsC:6&{;|"
    section_2 = module_0.Section(str_2, str_2)
    str_3 = "relative_to_docs"
    link_0 = module_0.Link(str_3, section_2)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "relative_to_docs"
    assert (
        f"{type(link_0.url).__module__}.{type(link_0.url).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    str_4 = "page_context"
    section_3 = module_0.Section(str_4, str_4)
    str_5 = "' from the site because it conflicts with '"
    list_0 = []
    section_4 = module_0.Section(str_5, list_0)
    var_3 = section_4.__repr__()
    assert var_3 == "Section(title=\"' from the site because it conflicts with '\")"
    section_5 = module_0.Section(str_5, section_3)
    str_6 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_1 = module_0.Link(str_6, none_type_0)
    bytes_0 = b"\x802c35Z\xf8"
    link_2 = module_0.Link(link_1, bytes_0)
    bool_0 = True
    section_6 = module_0.Section(bool_0, bool_0)
    var_4 = link_2.__repr__()
    assert (
        var_4
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )
    str_7 = var_4.__str__()
    assert (
        str_7
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )
    section_7 = module_0.Section(none_type_0, str_0)


def test_case_550():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_2 = var_0.__repr__()
    assert var_2 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_1 = "jXt{G!+9"
    int_0 = -1857
    link_1 = module_0.Link(str_1, int_0)
    str_2 = " Use '"
    section_0 = module_0.Section(str_2, str_2)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_3 = section_0.__repr__()
    assert var_3 == 'Section(title=" Use \'")'
    section_1 = module_0.Section(str_2, var_3)
    assert section_1.children == 'Section(title=" Use \'")'
    var_4 = section_1.__repr__()
    assert var_4 == 'Section(title=" Use \'")'


def test_case_551():
    str_0 = "jXt{G!+9"
    int_0 = -1857
    link_0 = module_0.Link(str_0, int_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "jXt{G!+9"
    assert link_0.url == -1857
    str_1 = " Use '"
    section_0 = module_0.Section(str_1, str_1)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    int_1 = var_0.__len__()
    assert int_1 == 23
    var_1 = var_0.__repr__()
    assert var_1 == "'Section(title=\" Use \\'\")'"
    str_2 = "gfRsC:6&{;|"
    section_1 = module_0.Section(str_2, str_2)
    str_3 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_1 = module_0.Link(str_3, none_type_0)
    var_2 = link_1.__repr__()
    assert var_2 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_3 = var_2.__repr__()
    assert var_3 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_4 = var_2.__repr__()
    assert var_4 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_5 = link_1.__repr__()
    assert var_5 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    dict_0 = {}
    str_4 = 'y\x0c[fN"W:2&:SWyz~W'
    link_2 = module_0.Link(dict_0, str_4)
    section_2 = module_0.Section(str_4, str_4)
    none_type_1 = None
    set_0 = {none_type_1, none_type_1, none_type_1, none_type_1}
    link_3 = module_0.Link(none_type_1, set_0)
    str_5 = "page_context"
    section_3 = module_0.Section(str_5, str_5)
    str_6 = "' from the site because it conflicts with '"
    list_0 = []
    section_4 = module_0.Section(str_6, list_0)
    var_6 = section_4.__repr__()
    assert var_6 == "Section(title=\"' from the site because it conflicts with '\")"
    section_5 = module_0.Section(str_6, section_3)
    int_2 = var_6.__len__()
    assert int_2 == 60
    str_7 = " Use '"
    section_6 = module_0.Section(str_7, str_7)
    var_7 = section_6.__repr__()
    assert var_7 == 'Section(title=" Use \'")'
    var_8 = var_7.__repr__()
    assert var_8 == "'Section(title=\" Use \\'\")'"
    str_8 = var_7.__str__()
    assert str_8 == 'Section(title=" Use \'")'


def test_case_552():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    var_1 = var_0.__repr__()
    assert var_1 == "'Section(title=\" Use \\'\")'"
    var_2 = var_0.__repr__()
    assert var_2 == "'Section(title=\" Use \\'\")'"
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_1, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_3 = link_0.__repr__()
    assert var_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_4 = var_3.__repr__()
    assert var_4 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_5 = var_4.__repr__()
    assert var_5 == "'\"Link(title=\\'0_~6:m!(f5FgU,:rvz\\', url=None)\"'"
    str_2 = "page_context"
    section_1 = module_0.Section(str_2, str_2)
    str_3 = "' from the site because it conflicts with '"
    list_0 = []
    section_2 = module_0.Section(str_3, list_0)
    navigation_0 = module_0.Navigation(str_1, list_0)


def test_case_553():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_1, none_type_1)
    bytes_0 = b"\x802c35Z\xf8"
    link_2 = module_0.Link(link_1, bytes_0)
    var_0 = link_1.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    section_0 = module_0.Section(link_1, none_type_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert (
        f"{type(section_0.title).__module__}.{type(section_0.title).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert section_0.children is None
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )


def test_case_554():
    str_0 = "page_context"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = "' from the site because it conflicts with '"
    list_0 = []
    section_1 = module_0.Section(str_1, list_0)
    none_type_0 = None
    str_2 = "\n        Perform validation for a value.\n\n        The run_validation method should be implemented by subclasses.\n        "
    link_0 = module_0.Link(none_type_0, str_2)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title is None
    assert (
        link_0.url
        == "\n        Perform validation for a value.\n\n        The run_validation method should be implemented by subclasses.\n        "
    )
    var_0 = link_0.__repr__()
    assert (
        var_0
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    str_3 = var_0.__str__()
    assert (
        str_3
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    bool_0 = True
    link_1 = module_0.Link(bool_0, bool_0)
    var_1 = var_0.__repr__()
    assert (
        var_1
        == "\"Link(title=[blank], url='\\\\n        Perform validation for a value.\\\\n\\\\n        The run_validation method should be implemented by subclasses.\\\\n        ')\""
    )
    str_4 = "gfRsC:6&{;|"
    section_2 = module_0.Section(str_4, str_4)
    var_2 = section_2.__repr__()
    assert var_2 == "Section(title='gfRsC:6&{;|')"
    str_5 = " Use '"
    section_3 = module_0.Section(str_5, str_5)
    var_3 = section_3.__repr__()
    assert var_3 == 'Section(title=" Use \'")'
    var_4 = var_3.__repr__()
    assert var_4 == "'Section(title=\" Use \\'\")'"
    var_5 = var_3.__repr__()
    assert var_5 == "'Section(title=\" Use \\'\")'"
    str_6 = "page_context"
    section_4 = module_0.Section(str_6, str_6)
    str_7 = "' from the site because it conflicts with '"
    list_1 = []
    section_5 = module_0.Section(str_7, list_1)
    section_6 = module_0.Section(section_5, list_1)
    section_7 = module_0.Section(str_7, list_1)
    str_8 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_2 = module_0.Link(str_8, none_type_1)
    var_6 = link_2.__repr__()
    assert var_6 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_7 = var_6.__repr__()
    assert var_7 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_8 = var_7.__repr__()
    assert var_8 == "'\"Link(title=\\'0_~6:m!(f5FgU,:rvz\\', url=None)\"'"
    str_9 = "page_context"
    section_8 = module_0.Section(str_9, str_9)
    str_10 = "' from the site because it conflicts with '"
    list_2 = []
    section_9 = module_0.Section(str_10, list_2)
    str_11 = "localhost"
    link_3 = module_0.Link(str_10, str_11)
    var_9 = var_7.__repr__()
    assert var_9 == "'\"Link(title=\\'0_~6:m!(f5FgU,:rvz\\', url=None)\"'"


def test_case_555():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_1 = var_0.__str__()
    assert str_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_2 = 'C5B_`:"E&+;Y['
    link_1 = module_0.Link(str_2, str_2)
    int_0 = var_0.__len__()
    assert int_0 == 42
    str_3 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_2 = module_0.Link(str_3, none_type_1)
    var_2 = link_2.__repr__()
    assert var_2 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_3 = var_2.__repr__()
    assert var_3 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_4 = var_2.__str__()
    assert str_4 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_4 = var_2.__repr__()
    assert var_4 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_5 = " Use '"
    section_0 = module_0.Section(str_5, str_5)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_5 = section_0.__repr__()
    assert var_5 == 'Section(title=" Use \'")'
    int_1 = var_5.__len__()
    assert int_1 == 23
    str_6 = " Use '"
    section_1 = module_0.Section(str_6, str_6)
    var_6 = section_1.__repr__()
    assert var_6 == 'Section(title=" Use \'")'
    bool_0 = True
    section_2 = module_0.Section(bool_0, bool_0)
    str_7 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_3 = module_0.Link(str_7, none_type_2)
    var_7 = link_3.__repr__()
    assert var_7 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_8 = var_7.__repr__()
    assert var_8 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    section_3 = module_0.Section(none_type_2, var_8)
    assert section_3.children == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_8 = "gfRsC:6&{;|"
    section_4 = module_0.Section(str_8, str_8)
    list_0 = []
    section_5 = module_0.Section(section_4, list_0)
    str_9 = " Use '"
    section_6 = module_0.Section(str_9, str_9)
    var_9 = section_6.__repr__()
    assert var_9 == 'Section(title=" Use \'")'
    var_10 = var_9.__repr__()
    assert var_10 == "'Section(title=\" Use \\'\")'"
    bool_1 = True
    link_4 = module_0.Link(bool_1, bool_1)
    str_10 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_5 = module_0.Link(str_10, none_type_3)
    var_11 = link_5.__repr__()
    assert var_11 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_12 = var_11.__repr__()
    assert var_12 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_13 = var_11.__repr__()
    assert var_13 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_11 = "page_context"
    section_7 = module_0.Section(str_11, str_11)
    str_12 = "' from the site because it conflicts with '"
    list_1 = []
    section_8 = module_0.Section(str_12, list_1)
    var_14 = section_7.__repr__()
    assert var_14 == "Section(title='page_context')"
    iterator_0 = var_1.__iter__()


def test_case_556():
    str_0 = "gfRsC:6&{;|"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "gfRsC:6&{;|"
    assert section_0.children == "gfRsC:6&{;|"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    list_0 = []
    section_1 = module_0.Section(section_0, list_0)
    str_1 = " Use '"
    section_2 = module_0.Section(str_1, str_1)
    var_0 = section_2.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_2, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_1 = link_0.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    int_0 = var_1.__len__()
    assert int_0 == 42
    str_3 = " Use '"
    section_3 = module_0.Section(str_3, str_3)
    var_2 = section_3.__repr__()
    assert var_2 == 'Section(title=" Use \'")'
    str_4 = "gfRsC:6&{;|"
    section_4 = module_0.Section(str_4, str_4)
    str_5 = "relative_to_docs"
    link_1 = module_0.Link(str_5, section_4)
    section_5 = module_0.Section(section_3, var_2)
    assert section_5.children == 'Section(title=" Use \'")'
    str_6 = " Use '"
    section_6 = module_0.Section(str_6, str_6)
    var_3 = section_6.__repr__()
    assert var_3 == 'Section(title=" Use \'")'
    var_4 = var_3.__repr__()
    assert var_4 == "'Section(title=\" Use \\'\")'"
    set_0 = set()
    navigation_0 = module_0.Navigation(set_0, set_0)
    assert (
        f"{type(navigation_0).__module__}.{type(navigation_0).__qualname__}"
        == "mkdocs.structure.nav.Navigation"
    )
    assert len(navigation_0) == 0
    str_7 = navigation_0.__str__()
    iterator_0 = var_4.__iter__()
    str_8 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_2 = module_0.Link(str_8, none_type_1)
    var_5 = link_2.__repr__()
    assert var_5 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_6 = var_5.__repr__()
    assert var_6 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_9 = var_5.__str__()
    assert str_9 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_10 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_3 = module_0.Link(str_10, none_type_2)
    var_7 = link_3.__repr__()
    assert var_7 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_8 = var_7.__repr__()
    assert var_8 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_11 = var_7.__str__()
    assert str_11 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_12 = 'C5B_`:"E&+;Y['
    link_4 = module_0.Link(str_12, str_12)
    int_1 = var_7.__len__()
    assert int_1 == 42
    str_13 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_5 = module_0.Link(str_13, none_type_3)
    var_9 = link_5.__repr__()
    assert var_9 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_10 = var_9.__repr__()
    assert var_10 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_11 = var_10.__repr__()
    assert var_11 == "'\"Link(title=\\'0_~6:m!(f5FgU,:rvz\\', url=None)\"'"
    str_14 = " Use '"
    section_7 = module_0.Section(str_14, str_14)
    var_12 = section_7.__repr__()
    assert var_12 == 'Section(title=" Use \'")'
    int_2 = var_12.__len__()
    assert int_2 == 23
    str_15 = "0_~6:m!(f5FgU,:rvz"
    none_type_4 = None
    link_6 = module_0.Link(str_15, none_type_4)
    int_3 = var_12.__len__()
    assert int_3 == 23
    int_4 = var_12.__len__()
    assert int_4 == 23
    str_16 = "gfRsC:6&{;|"
    section_8 = module_0.Section(str_16, str_16)
    var_13 = section_8.__repr__()
    assert var_13 == "Section(title='gfRsC:6&{;|')"
    bool_0 = True
    section_9 = module_0.Section(bool_0, bool_0)
    list_1 = [var_13, var_13]
    section_10 = module_0.Section(section_8, list_1)
    assert section_10.children == [
        "Section(title='gfRsC:6&{;|')",
        "Section(title='gfRsC:6&{;|')",
    ]
    var_14 = var_13.__repr__()
    assert var_14 == "\"Section(title='gfRsC:6&{;|')\""


def test_case_557():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    str_1 = 'C5B_`:"E&+;Y['
    link_0 = module_0.Link(str_1, str_1)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == 'C5B_`:"E&+;Y['
    assert link_0.url == 'C5B_`:"E&+;Y['
    int_0 = var_0.__len__()
    assert int_0 == 23
    section_1 = module_0.Section(str_0, var_0)
    assert section_1.children == 'Section(title=" Use \'")'
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_1 = module_0.Link(str_2, none_type_0)
    var_1 = link_1.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_2 = var_1.__repr__()
    assert var_2 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_3 = var_2.__repr__()
    assert var_3 == "'\"Link(title=\\'0_~6:m!(f5FgU,:rvz\\', url=None)\"'"
    str_3 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_2 = module_0.Link(str_3, none_type_1)
    var_4 = link_2.__repr__()
    assert var_4 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_5 = var_4.__repr__()
    assert var_5 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_4 = "$9.}1Av5,.}"
    link_3 = module_0.Link(str_4, str_4)
    str_5 = " Use '"
    section_2 = module_0.Section(str_5, str_5)
    var_6 = section_2.__repr__()
    assert var_6 == 'Section(title=" Use \'")'
    str_6 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_4 = module_0.Link(str_6, none_type_2)
    bytes_0 = b"\x802c35Z\xf8"
    link_5 = module_0.Link(link_4, bytes_0)
    iterator_0 = var_6.__iter__()
    bool_0 = True
    link_6 = module_0.Link(bool_0, bool_0)
    str_7 = "Return the name of the file without its extension."
    section_3 = module_0.Section(str_7, str_5)


def test_case_558():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_2 = var_1.__repr__()
    assert var_2 == "'\"Link(title=\\'0_~6:m!(f5FgU,:rvz\\', url=None)\"'"
    str_1 = "page_context"
    section_0 = module_0.Section(str_1, str_1)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_2 = "' from the site because it conflicts with '"
    list_0 = []
    section_1 = module_0.Section(str_2, list_0)
    var_3 = section_1.__repr__()
    assert var_3 == "Section(title=\"' from the site because it conflicts with '\")"
    section_2 = module_0.Section(str_2, section_0)
    int_0 = var_3.__len__()
    assert int_0 == 60
    str_3 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_3, none_type_1)
    bytes_0 = b"\x802c35Z\xf8"
    link_2 = module_0.Link(link_1, bytes_0)
    var_4 = link_1.__repr__()
    assert var_4 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    none_type_2 = None
    set_0 = {none_type_2, none_type_2, none_type_2, none_type_2}
    link_3 = module_0.Link(none_type_2, set_0)
    str_4 = " Use '"
    section_3 = module_0.Section(str_4, str_4)
    var_5 = section_3.__repr__()
    assert var_5 == 'Section(title=" Use \'")'
    int_1 = var_5.__len__()
    assert int_1 == 23
    iterator_0 = var_2.__iter__()


def test_case_559():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_2 = var_0.__repr__()
    assert var_2 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    none_type_1 = None
    section_0 = module_0.Section(none_type_1, none_type_1)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title is None
    assert section_0.children is None
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_3 = module_1.urlsplit(none_type_1)
    iterator_0 = var_3.__iter__()
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_1 = module_0.Link(str_1, none_type_2)
    bytes_0 = b"\x802c35Z\xf8"
    link_2 = module_0.Link(link_1, bytes_0)
    var_4 = link_1.__repr__()
    assert var_4 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    iterator_1 = var_4.__iter__()
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_3 = module_0.Link(str_2, none_type_3)
    var_5 = link_3.__repr__()
    assert var_5 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_6 = var_5.__repr__()
    assert var_6 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    bytes_1 = b"\xac\xb0\x17a\xfaT/\xf7\xc9"
    section_1 = module_0.Section(bytes_1, bytes_1)
    str_3 = "0_~6:m!(f5FgU,:rvz"
    none_type_4 = None
    link_4 = module_0.Link(str_3, none_type_4)
    bytes_2 = b"\x802c35Z\xf8"
    link_5 = module_0.Link(link_4, bytes_2)
    bool_0 = True
    section_2 = module_0.Section(bool_0, bool_0)
    var_7 = link_5.__repr__()
    assert (
        var_7
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )
    str_4 = var_7.__str__()
    assert (
        str_4
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )
    var_8 = var_2.__repr__()
    assert var_8 == "'\"Link(title=\\'0_~6:m!(f5FgU,:rvz\\', url=None)\"'"


def test_case_560():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    iterator_0 = var_0.__iter__()
    bool_0 = True
    section_0 = module_0.Section(bool_0, bool_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title is True
    assert section_0.children is True
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = "gfRsC:6&{;|"
    section_1 = module_0.Section(str_1, str_1)
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_2, none_type_1)
    bytes_0 = b"\x802c35Z\xf8"
    link_2 = module_0.Link(link_1, bytes_0)
    var_2 = link_1.__repr__()
    assert var_2 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_3 = section_0.__repr__()
    assert var_3 == "Section(title=True)"


def test_case_561():
    str_0 = "page_context"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = "gfRsC:6&{;|"
    section_1 = module_0.Section(str_1, str_1)
    var_0 = section_1.__repr__()
    assert var_0 == "Section(title='gfRsC:6&{;|')"
    bool_0 = True
    section_2 = module_0.Section(bool_0, bool_0)
    list_0 = [var_0, var_0]
    section_3 = module_0.Section(section_1, list_0)
    assert section_3.children == [
        "Section(title='gfRsC:6&{;|')",
        "Section(title='gfRsC:6&{;|')",
    ]
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_2, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_1 = link_0.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_2 = var_1.__repr__()
    assert var_2 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_3 = var_1.__repr__()
    assert var_3 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    bool_1 = True
    section_4 = module_0.Section(bool_1, bool_1)
    str_3 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_3, none_type_1)
    bytes_0 = b"\x802c35Z\xf8"
    link_2 = module_0.Link(link_1, bytes_0)
    dict_0 = {}
    str_4 = 'y\x0c[fN"W:2&:SWyz~W'
    link_3 = module_0.Link(dict_0, str_4)
    var_4 = link_2.__repr__()
    assert (
        var_4
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )
    str_5 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_4 = module_0.Link(str_5, none_type_2)
    var_5 = link_4.__repr__()
    assert var_5 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_6 = var_5.__repr__()
    assert var_6 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_7 = var_5.__repr__()
    assert var_7 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_8 = link_4.__repr__()
    assert var_8 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_6 = "page_context"
    section_5 = module_0.Section(str_6, str_6)
    str_7 = " Use '"
    section_6 = module_0.Section(str_7, str_7)
    var_9 = section_6.__repr__()
    assert var_9 == 'Section(title=" Use \'")'
    var_10 = var_9.__repr__()
    assert var_10 == "'Section(title=\" Use \\'\")'"
    link_5 = module_0.Link(var_10, section_5)
    assert link_5.title == "'Section(title=\" Use \\'\")'"
    none_type_3 = None
    set_0 = {none_type_3, none_type_3, none_type_3, none_type_3}
    link_6 = module_0.Link(none_type_3, set_0)
    var_11 = var_9.__repr__()
    assert var_11 == "'Section(title=\" Use \\'\")'"


def test_case_562():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    var_1 = var_0.__repr__()
    assert var_1 == "'Section(title=\" Use \\'\")'"
    dict_0 = {}
    str_1 = 'y\x0c[fN"W:2&:SWyz~W'
    link_0 = module_0.Link(dict_0, str_1)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == {}
    assert link_0.url == 'y\x0c[fN"W:2&:SWyz~W'
    section_1 = module_0.Section(str_0, var_1)
    assert section_1.children == "'Section(title=\" Use \\'\")'"
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_1 = module_0.Link(str_2, none_type_0)
    bytes_0 = b"\x802c35Z\xf8"
    link_2 = module_0.Link(link_1, bytes_0)
    var_2 = link_1.__repr__()
    assert var_2 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    int_0 = var_2.__len__()
    assert int_0 == 42
    str_3 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_3 = module_0.Link(str_3, none_type_1)
    var_3 = link_3.__repr__()
    assert var_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_4 = var_3.__repr__()
    assert var_4 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_5 = var_4.__repr__()
    assert var_5 == "'\"Link(title=\\'0_~6:m!(f5FgU,:rvz\\', url=None)\"'"
    str_4 = " Use '"
    section_2 = module_0.Section(str_4, str_4)
    var_6 = section_2.__repr__()
    assert var_6 == 'Section(title=" Use \'")'
    int_1 = var_6.__len__()
    assert int_1 == 23
    var_7 = var_6.__repr__()
    assert var_7 == "'Section(title=\" Use \\'\")'"
    link_4 = module_0.Link(int_1, var_6)
    assert link_4.title == 23
    assert link_4.url == 'Section(title=" Use \'")'
    var_8 = var_6.__repr__()
    assert var_8 == "'Section(title=\" Use \\'\")'"


def test_case_563():
    bool_0 = True
    link_0 = module_0.Link(bool_0, bool_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title is True
    assert link_0.url is True
    str_0 = "page_context"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = " Use '"
    section_1 = module_0.Section(str_1, str_1)
    var_0 = section_1.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    str_2 = 'C5B_`:"E&+;Y['
    link_1 = module_0.Link(str_2, str_2)
    int_0 = var_0.__len__()
    assert int_0 == 23
    section_2 = module_0.Section(var_0, var_0)
    assert section_2.title == 'Section(title=" Use \'")'
    assert section_2.children == 'Section(title=" Use \'")'
    link_2 = module_0.Link(bool_0, str_1)


def test_case_564():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_1, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    bytes_0 = b"\x802c35Z\xf8"
    link_1 = module_0.Link(link_0, bytes_0)
    iterator_0 = var_0.__iter__()
    int_0 = var_0.__len__()
    assert int_0 == 23


def test_case_565():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    str_1 = 'C5B_`:"E&+;Y['
    link_0 = module_0.Link(str_1, str_1)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == 'C5B_`:"E&+;Y['
    assert link_0.url == 'C5B_`:"E&+;Y['
    int_0 = var_0.__len__()
    assert int_0 == 23
    str_2 = "$9.}1Av5,.}"
    link_1 = module_0.Link(str_2, str_2)
    var_1 = var_0.__repr__()
    assert var_1 == "'Section(title=\" Use \\'\")'"
    none_type_0 = None
    set_0 = {none_type_0, none_type_0, none_type_0, none_type_0}
    link_2 = module_0.Link(none_type_0, set_0)
    str_3 = "' is included in the 'nav' configuration."
    link_3 = module_0.Link(str_3, str_3)
    str_4 = " Use '"
    section_1 = module_0.Section(str_4, str_4)
    var_2 = section_1.__repr__()
    assert var_2 == 'Section(title=" Use \'")'
    str_5 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_4 = module_0.Link(str_5, none_type_1)
    bytes_0 = b"\x802c35Z\xf8"
    link_5 = module_0.Link(link_4, bytes_0)
    iterator_0 = var_2.__iter__()
    str_6 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_6 = module_0.Link(str_6, none_type_2)
    var_3 = link_6.__repr__()
    assert var_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_4 = var_3.__repr__()
    assert var_4 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_7 = var_3.__str__()
    assert str_7 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_8 = 'C5B_`:"E&+;Y['
    link_7 = module_0.Link(str_8, str_8)
    int_1 = var_3.__len__()
    assert int_1 == 42
    str_9 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_8 = module_0.Link(str_9, none_type_3)
    bytes_1 = b"\x802c35Z\xf8"
    link_9 = module_0.Link(link_8, bytes_1)
    dict_0 = {}
    str_10 = 'y\x0c[fN"W:2&:SWyz~W'
    link_10 = module_0.Link(dict_0, str_10)
    var_5 = link_9.__repr__()
    assert (
        var_5
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )
    bytes_2 = b"\xac\xb0\x17a\xfaT/\xf7\xc9"
    section_2 = module_0.Section(bytes_2, bytes_2)
    str_11 = "page_context"
    section_3 = module_0.Section(str_11, str_11)
    str_12 = " Use '"
    section_4 = module_0.Section(str_12, str_12)
    var_6 = section_4.__repr__()
    assert var_6 == 'Section(title=" Use \'")'
    str_13 = "gfRsC:6&{;|"
    section_5 = module_0.Section(str_13, str_13)
    str_14 = "0_~6:m!(f5FgU,:rvz"
    none_type_4 = None
    link_11 = module_0.Link(str_14, none_type_4)
    var_7 = link_11.__repr__()
    assert var_7 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_8 = var_7.__repr__()
    assert var_8 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_9 = var_7.__repr__()
    assert var_9 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_10 = link_11.__repr__()
    assert var_10 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    iterator_1 = var_0.__iter__()


def test_case_566():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    str_1 = "gfRsC:6&{;|"
    section_1 = module_0.Section(str_1, str_1)
    str_2 = "relative_to_docs"
    link_0 = module_0.Link(str_2, section_1)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "relative_to_docs"
    assert (
        f"{type(link_0.url).__module__}.{type(link_0.url).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    section_2 = module_0.Section(section_0, var_0)
    assert section_2.children == 'Section(title=" Use \'")'
    str_3 = "page_context"
    section_3 = module_0.Section(str_3, str_3)
    str_4 = "' from the site because it conflicts with '"
    list_0 = []
    section_4 = module_0.Section(str_4, list_0)
    str_5 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_1 = module_0.Link(str_5, none_type_0)
    var_1 = link_1.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_6 = "page_context"
    section_5 = module_0.Section(str_6, str_6)
    str_7 = "' from the site because it conflicts with '"
    list_1 = []
    section_6 = module_0.Section(str_7, list_1)
    section_7 = module_0.Section(section_6, list_1)
    str_8 = " Use '"
    section_8 = module_0.Section(str_8, str_8)
    var_2 = section_8.__repr__()
    assert var_2 == 'Section(title=" Use \'")'
    var_3 = var_2.__repr__()
    assert var_3 == "'Section(title=\" Use \\'\")'"
    var_4 = var_2.__repr__()
    assert var_4 == "'Section(title=\" Use \\'\")'"
    str_9 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_2 = module_0.Link(str_9, none_type_1)
    var_5 = link_2.__repr__()
    assert var_5 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_6 = var_5.__repr__()
    assert var_6 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_10 = var_5.__str__()
    assert str_10 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    int_0 = var_3.__len__()
    assert int_0 == 26


def test_case_567():
    str_0 = "page_context"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = " Use '"
    section_1 = module_0.Section(str_1, str_1)
    var_0 = section_1.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    var_1 = var_0.__repr__()
    assert var_1 == "'Section(title=\" Use \\'\")'"
    link_0 = module_0.Link(var_1, section_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "'Section(title=\" Use \\'\")'"
    assert (
        f"{type(link_0.url).__module__}.{type(link_0.url).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_1 = module_0.Link(str_2, none_type_0)
    bytes_0 = b"\x802c35Z\xf8"
    link_2 = module_0.Link(link_1, bytes_0)
    var_2 = link_1.__repr__()
    assert var_2 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_3 = link_2.__repr__()
    assert (
        var_3
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )


def test_case_568():
    bool_0 = True
    section_0 = module_0.Section(bool_0, bool_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title is True
    assert section_0.children is True
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    section_1 = module_0.Section(none_type_0, var_1)
    assert section_1.children == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_1, none_type_1)
    var_2 = link_1.__repr__()
    assert var_2 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_2 = " Use '"
    section_2 = module_0.Section(str_2, str_2)
    var_3 = section_2.__repr__()
    assert var_3 == 'Section(title=" Use \'")'
    str_3 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_2 = module_0.Link(str_3, none_type_2)
    bytes_0 = b"\x802c35Z\xf8"
    link_3 = module_0.Link(link_2, bytes_0)
    iterator_0 = var_3.__iter__()
    str_4 = "page_context"
    section_3 = module_0.Section(str_4, str_4)
    str_5 = "jXt{G!+9"
    int_0 = -1857
    link_4 = module_0.Link(str_5, int_0)
    str_6 = "page_context"
    section_4 = module_0.Section(str_6, str_6)
    str_7 = "' from the site because it conflicts with '"
    list_0 = []
    section_5 = module_0.Section(str_7, list_0)
    var_4 = section_5.__repr__()
    assert var_4 == "Section(title=\"' from the site because it conflicts with '\")"
    str_8 = "gfRsC:6&{;|"
    section_6 = module_0.Section(str_8, str_8)
    var_5 = section_6.__repr__()
    assert var_5 == "Section(title='gfRsC:6&{;|')"
    bool_1 = True
    section_7 = module_0.Section(bool_1, bool_1)
    list_1 = [var_5, var_5]
    section_8 = module_0.Section(section_6, list_1)
    assert section_8.children == [
        "Section(title='gfRsC:6&{;|')",
        "Section(title='gfRsC:6&{;|')",
    ]
    str_9 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_5 = module_0.Link(str_9, none_type_3)
    var_6 = link_5.__repr__()
    assert var_6 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_7 = var_6.__repr__()
    assert var_7 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_8 = var_6.__repr__()
    assert var_8 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    int_1 = var_2.__len__()
    assert int_1 == 42


def test_case_569():
    none_type_0 = None
    var_0 = module_1.urlsplit(none_type_0)
    var_1 = var_0.__repr__()


def test_case_570():
    str_0 = "page_context"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = "' from the site because it conflicts with '"
    list_0 = []
    section_1 = module_0.Section(str_1, list_0)
    str_2 = "page_context"
    section_2 = module_0.Section(str_2, str_2)
    str_3 = "' from the site because it conflicts with '"
    list_1 = []
    section_3 = module_0.Section(str_3, list_1)
    var_0 = section_2.__repr__()
    assert var_0 == "Section(title='page_context')"
    str_4 = " Use '"
    section_4 = module_0.Section(str_4, str_4)
    var_1 = section_4.__repr__()
    assert var_1 == 'Section(title=" Use \'")'
    int_0 = var_1.__len__()
    assert int_0 == 23
    str_5 = "$]:"
    section_5 = module_0.Section(str_5, var_0)
    assert section_5.children == "Section(title='page_context')"


def test_case_571():
    str_0 = "page_context"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_1, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = section_0.__repr__()
    assert var_1 == "Section(title='page_context')"
    str_2 = "page_context"
    section_1 = module_0.Section(str_2, str_2)
    str_3 = " Use '"
    section_2 = module_0.Section(str_3, str_3)
    var_2 = section_2.__repr__()
    assert var_2 == 'Section(title=" Use \'")'
    var_3 = var_2.__repr__()
    assert var_3 == "'Section(title=\" Use \\'\")'"
    link_1 = module_0.Link(var_3, section_1)
    assert link_1.title == "'Section(title=\" Use \\'\")'"
    none_type_1 = None
    section_3 = module_0.Section(none_type_1, none_type_1)
    str_4 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_2 = module_0.Link(str_4, none_type_2)
    bytes_0 = b"\x802c35Z\xf8"
    link_3 = module_0.Link(link_2, bytes_0)
    var_4 = link_2.__repr__()
    assert var_4 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_5 = var_4.__repr__()
    assert var_5 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_5 = "$9.}1Av5,.}"
    link_4 = module_0.Link(str_5, str_5)
    str_6 = " Use '"
    section_4 = module_0.Section(str_6, str_6)
    var_6 = section_4.__repr__()
    assert var_6 == 'Section(title=" Use \'")'
    var_7 = var_6.__repr__()
    assert var_7 == "'Section(title=\" Use \\'\")'"
    dict_0 = {}
    str_7 = 'y\x0c[fN"W:2&:SWyz~W'
    link_5 = module_0.Link(dict_0, str_7)
    section_5 = module_0.Section(str_6, var_7)
    assert section_5.children == "'Section(title=\" Use \\'\")'"
    str_8 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_6 = module_0.Link(str_8, none_type_3)
    var_8 = link_6.__repr__()
    assert var_8 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_9 = var_8.__repr__()
    assert var_9 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_9 = var_8.__str__()
    assert str_9 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_10 = var_8.__repr__()
    assert var_10 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_10 = "gfRsC:6&{;|"
    section_6 = module_0.Section(str_10, str_10)
    str_11 = " Use '"
    section_7 = module_0.Section(str_11, str_11)
    var_11 = section_7.__repr__()
    assert var_11 == 'Section(title=" Use \'")'
    int_0 = var_11.__len__()
    assert int_0 == 23
    var_12 = var_11.__repr__()
    assert var_12 == "'Section(title=\" Use \\'\")'"
    var_13 = var_12.__repr__()
    assert var_13 == "'\\'Section(title=\" Use \\\\\\'\")\\''"
    var_14 = link_2.__repr__()
    assert var_14 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"


def test_case_572():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_1, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    bytes_0 = b"\x802c35Z\xf8"
    link_1 = module_0.Link(link_0, bytes_0)
    iterator_0 = var_0.__iter__()
    bool_0 = True
    link_2 = module_0.Link(bool_0, bool_0)
    str_2 = "page_context"
    section_1 = module_0.Section(str_2, str_2)
    str_3 = " Use '"
    section_2 = module_0.Section(str_3, str_3)
    var_1 = section_2.__repr__()
    assert var_1 == 'Section(title=" Use \'")'
    str_4 = 'C5B_`:"E&+;Y['
    link_3 = module_0.Link(str_4, str_4)
    int_0 = var_1.__len__()
    assert int_0 == 23
    str_5 = " Use '"
    section_3 = module_0.Section(str_5, str_5)
    var_2 = section_3.__repr__()
    assert var_2 == 'Section(title=" Use \'")'
    section_4 = module_0.Section(str_5, var_2)
    assert section_4.children == 'Section(title=" Use \'")'
    dict_0 = {}
    str_6 = 'y\x0c[fN"W:2&:SWyz~W'
    link_4 = module_0.Link(dict_0, str_6)
    none_type_1 = None
    str_7 = "\n        Perform validation for a value.\n\n        The run_validation method should be implemented by subclasses.\n        "
    link_5 = module_0.Link(none_type_1, str_7)
    var_3 = link_5.__repr__()
    assert (
        var_3
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    str_8 = var_3.__str__()
    assert (
        str_8
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    str_9 = " Use '"
    section_5 = module_0.Section(str_9, str_9)
    var_4 = section_5.__repr__()
    assert var_4 == 'Section(title=" Use \'")'
    str_10 = "gfRsC:6&{;|"
    section_6 = module_0.Section(str_10, str_10)
    str_11 = "relative_to_docs"
    link_6 = module_0.Link(str_11, section_6)
    section_7 = module_0.Section(section_5, var_4)
    assert section_7.children == 'Section(title=" Use \'")'
    str_12 = "page_context"
    section_8 = module_0.Section(str_12, str_12)
    str_13 = "' from the site because it conflicts with '"
    list_0 = []
    section_9 = module_0.Section(str_13, list_0)
    section_10 = module_0.Section(section_9, list_0)
    section_11 = module_0.Section(str_13, list_0)
    str_14 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_7 = module_0.Link(str_14, none_type_2)
    bytes_1 = b"\x802c35Z\xf8"
    link_8 = module_0.Link(link_7, bytes_1)
    var_5 = link_7.__repr__()
    assert var_5 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    iterator_1 = var_5.__iter__()
    str_15 = var_2.__str__()
    assert str_15 == 'Section(title=" Use \'")'


def test_case_573():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    bytes_0 = b"\x802c35Z\xf8"
    link_1 = module_0.Link(link_0, bytes_0)
    dict_0 = {}
    str_1 = 'y\x0c[fN"W:2&:SWyz~W'
    link_2 = module_0.Link(dict_0, str_1)
    var_0 = link_1.__repr__()
    assert (
        var_0
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_3 = module_0.Link(str_2, none_type_1)
    str_3 = "gfRsC:6&{;|"
    section_0 = module_0.Section(str_3, str_3)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "gfRsC:6&{;|"
    assert section_0.children == "gfRsC:6&{;|"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_4 = " Use '"
    section_1 = module_0.Section(str_4, str_4)
    var_1 = section_1.__repr__()
    assert var_1 == 'Section(title=" Use \'")'
    int_0 = var_1.__len__()
    assert int_0 == 23
    var_2 = var_1.__repr__()
    assert var_2 == "'Section(title=\" Use \\'\")'"
    var_3 = var_2.__repr__()
    assert var_3 == "'\\'Section(title=\" Use \\\\\\'\")\\''"
    bool_0 = True
    section_2 = module_0.Section(bool_0, bool_0)
    str_5 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_4 = module_0.Link(str_5, none_type_2)
    var_4 = link_4.__repr__()
    assert var_4 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_5 = var_4.__repr__()
    assert var_5 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    section_3 = module_0.Section(none_type_2, var_5)
    assert section_3.children == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_6 = section_3.__repr__()
    assert var_6 == "Section(title=None)"
    str_6 = "page_context"
    section_4 = module_0.Section(str_6, str_6)
    str_7 = "' from the site because it conflicts with '"
    list_0 = []
    section_5 = module_0.Section(str_7, list_0)
    str_8 = "localhost"
    link_5 = module_0.Link(str_7, str_8)
    str_9 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_6 = module_0.Link(str_9, none_type_3)
    var_7 = link_6.__repr__()
    assert var_7 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_8 = var_7.__repr__()
    assert var_8 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_10 = var_7.__str__()
    assert str_10 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_11 = 'C5B_`:"E&+;Y['
    link_7 = module_0.Link(str_11, str_11)
    int_1 = var_7.__len__()
    assert int_1 == 42
    str_12 = "gfRsC:6&{;|"
    section_6 = module_0.Section(str_12, str_12)
    var_9 = section_6.__repr__()
    assert var_9 == "Section(title='gfRsC:6&{;|')"
    bool_1 = True
    section_7 = module_0.Section(bool_1, bool_1)
    list_1 = [var_9, var_9]
    section_8 = module_0.Section(section_6, list_1)
    assert section_8.children == [
        "Section(title='gfRsC:6&{;|')",
        "Section(title='gfRsC:6&{;|')",
    ]
    iterator_0 = var_9.__iter__()


def test_case_574():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    section_1 = module_0.Section(str_0, var_0)
    assert section_1.children == 'Section(title=" Use \'")'
    str_1 = " Use '"
    section_2 = module_0.Section(str_1, str_1)
    var_1 = section_2.__repr__()
    assert var_1 == 'Section(title=" Use \'")'
    var_2 = var_1.__repr__()
    assert var_2 == "'Section(title=\" Use \\'\")'"
    dict_0 = {}
    str_2 = 'y\x0c[fN"W:2&:SWyz~W'
    link_0 = module_0.Link(dict_0, str_2)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == {}
    assert link_0.url == 'y\x0c[fN"W:2&:SWyz~W'
    section_3 = module_0.Section(str_1, var_2)
    assert section_3.children == "'Section(title=\" Use \\'\")'"
    str_3 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_1 = module_0.Link(str_3, none_type_0)
    var_3 = link_1.__repr__()
    assert var_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_4 = var_3.__repr__()
    assert var_4 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_4 = var_3.__str__()
    assert str_4 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_5 = 'C5B_`:"E&+;Y['
    link_2 = module_0.Link(str_5, str_5)
    int_0 = var_3.__len__()
    assert int_0 == 42
    str_6 = "$9.}1Av5,.}"
    link_3 = module_0.Link(str_6, str_6)
    str_7 = " Use '"
    section_4 = module_0.Section(str_7, str_7)
    var_5 = section_4.__repr__()
    assert var_5 == 'Section(title=" Use \'")'
    str_8 = 'C5B_`:"E&+;Y['
    link_4 = module_0.Link(str_8, str_8)
    int_1 = var_5.__len__()
    assert int_1 == 23
    section_5 = module_0.Section(var_5, var_5)
    assert section_5.title == 'Section(title=" Use \'")'
    assert section_5.children == 'Section(title=" Use \'")'
    link_5 = module_0.Link(section_4, str_7)
    str_9 = "gfRsC:6&{;|"
    section_6 = module_0.Section(str_9, str_9)
    str_10 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_6 = module_0.Link(str_10, none_type_1)
    bytes_0 = b"\x802c35Z\xf8"
    link_7 = module_0.Link(link_6, bytes_0)
    var_6 = link_6.__repr__()
    assert var_6 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_7 = var_6.__repr__()
    assert var_7 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    int_2 = var_0.__len__()
    assert int_2 == 23


def test_case_575():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_1 = "' is included in the 'nav' configuration."
    link_1 = module_0.Link(str_1, str_1)
    str_2 = " Use '"
    section_0 = module_0.Section(str_2, str_2)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_2 = section_0.__repr__()
    assert var_2 == 'Section(title=" Use \'")'
    int_0 = var_2.__len__()
    assert int_0 == 23
    str_3 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_2 = module_0.Link(str_3, none_type_1)
    int_1 = var_2.__len__()
    assert int_1 == 23
    int_2 = var_2.__len__()
    assert int_2 == 23
    str_4 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_3 = module_0.Link(str_4, none_type_2)
    var_3 = link_3.__repr__()
    assert var_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_4 = var_3.__repr__()
    assert var_4 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_5 = var_3.__str__()
    assert str_5 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_6 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_4 = module_0.Link(str_6, none_type_3)
    bytes_0 = b"\x802c35Z\xf8"
    link_5 = module_0.Link(link_4, bytes_0)
    int_3 = var_0.__len__()
    assert int_3 == 42


def test_case_576():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    int_0 = var_0.__len__()
    assert int_0 == 23
    str_1 = "gfRsC:6&{;|"
    section_1 = module_0.Section(str_1, str_1)
    str_2 = " Use '"
    section_2 = module_0.Section(str_2, str_2)
    var_1 = section_2.__repr__()
    assert var_1 == 'Section(title=" Use \'")'
    int_1 = var_1.__len__()
    assert int_1 == 23
    var_2 = var_1.__repr__()
    assert var_2 == "'Section(title=\" Use \\'\")'"
    var_3 = var_2.__repr__()
    assert var_3 == "'\\'Section(title=\" Use \\\\\\'\")\\''"
    str_3 = " Use '"
    section_3 = module_0.Section(str_3, str_3)
    var_4 = section_3.__repr__()
    assert var_4 == 'Section(title=" Use \'")'
    int_2 = var_4.__len__()
    assert int_2 == 23
    str_4 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_4, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    int_3 = var_4.__len__()
    assert int_3 == 23
    int_4 = var_4.__len__()
    assert int_4 == 23
    str_5 = " Use '"
    section_4 = module_0.Section(str_5, str_5)
    var_5 = section_4.__repr__()
    assert var_5 == 'Section(title=" Use \'")'
    str_6 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_6, none_type_1)
    var_6 = link_1.__repr__()
    assert var_6 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    int_5 = var_6.__len__()
    assert int_5 == 42
    str_7 = "page_context"
    section_5 = module_0.Section(str_7, str_7)
    str_8 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_2 = module_0.Link(str_8, none_type_2)
    var_7 = link_2.__repr__()
    assert var_7 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_8 = section_5.__repr__()
    assert var_8 == "Section(title='page_context')"
    str_9 = "gfRsC:6&{;|"
    section_6 = module_0.Section(str_9, str_9)
    var_9 = section_6.__repr__()
    assert var_9 == "Section(title='gfRsC:6&{;|')"
    str_10 = "x"
    section_7 = module_0.Section(str_10, str_10)
    dict_0 = {}
    str_11 = 'y\x0c[fN"W:2&:SWyz~W'
    link_3 = module_0.Link(dict_0, str_11)
    section_8 = module_0.Section(str_11, str_11)
    str_12 = "8697BS@ND5I\\J.((F6-"
    link_4 = module_0.Link(str_12, section_4)


def test_case_577():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    int_0 = var_0.__len__()
    assert int_0 == 23
    var_1 = var_0.__repr__()
    assert var_1 == "'Section(title=\" Use \\'\")'"
    link_0 = module_0.Link(int_0, var_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == 23
    assert link_0.url == 'Section(title=" Use \'")'
    str_1 = "page_context"
    section_1 = module_0.Section(str_1, str_1)
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_1 = module_0.Link(str_2, none_type_0)
    var_2 = link_1.__repr__()
    assert var_2 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_3 = section_1.__repr__()
    assert var_3 == "Section(title='page_context')"
    str_3 = "page_context"
    section_2 = module_0.Section(str_3, str_3)
    str_4 = "' from the site because it conflicts with '"
    list_0 = []
    section_3 = module_0.Section(str_4, list_0)
    str_5 = "page_context"
    section_4 = module_0.Section(str_5, str_5)
    str_6 = " Use '"
    section_5 = module_0.Section(str_6, str_6)
    var_4 = section_5.__repr__()
    assert var_4 == 'Section(title=" Use \'")'
    var_5 = var_4.__repr__()
    assert var_5 == "'Section(title=\" Use \\'\")'"
    str_7 = "page_context"
    section_6 = module_0.Section(str_7, str_7)
    str_8 = "' from the site because it conflicts with '"
    list_1 = []
    section_7 = module_0.Section(str_8, list_1)
    var_6 = section_7.__repr__()
    assert var_6 == "Section(title=\"' from the site because it conflicts with '\")"
    section_8 = module_0.Section(str_8, section_6)
    int_1 = var_6.__len__()
    assert int_1 == 60
    str_9 = " Use '"
    section_9 = module_0.Section(str_9, str_9)
    var_7 = section_9.__repr__()
    assert var_7 == 'Section(title=" Use \'")'
    int_2 = var_7.__len__()
    assert int_2 == 23
    section_10 = module_0.Section(var_7, int_2)
    assert section_10.title == 'Section(title=" Use \'")'
    assert section_10.children == 23
    str_10 = "gfRsC:6&{;|"
    section_11 = module_0.Section(str_10, str_10)
    var_8 = section_11.__repr__()
    assert var_8 == "Section(title='gfRsC:6&{;|')"
    bool_0 = True
    section_12 = module_0.Section(bool_0, bool_0)
    list_2 = [var_8, var_8]
    section_13 = module_0.Section(section_11, list_2)
    assert section_13.children == [
        "Section(title='gfRsC:6&{;|')",
        "Section(title='gfRsC:6&{;|')",
    ]
    str_11 = var_8.__str__()
    assert str_11 == "Section(title='gfRsC:6&{;|')"


def test_case_578():
    bool_0 = True
    section_0 = module_0.Section(bool_0, bool_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title is True
    assert section_0.children is True
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    section_1 = module_0.Section(none_type_0, var_1)
    assert section_1.children == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    none_type_1 = None
    set_0 = {none_type_1, none_type_1, none_type_1, none_type_1}
    link_1 = module_0.Link(none_type_1, set_0)
    str_1 = " Use '"
    section_2 = module_0.Section(str_1, str_1)
    var_2 = section_2.__repr__()
    assert var_2 == 'Section(title=" Use \'")'
    int_0 = var_2.__len__()
    assert int_0 == 23
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_2 = module_0.Link(str_2, none_type_2)
    int_1 = var_2.__len__()
    assert int_1 == 23
    str_3 = " Use '"
    section_3 = module_0.Section(str_3, str_3)
    var_3 = section_3.__repr__()
    assert var_3 == 'Section(title=" Use \'")'
    var_4 = var_3.__repr__()
    assert var_4 == "'Section(title=\" Use \\'\")'"
    str_4 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_3 = module_0.Link(str_4, none_type_3)
    var_5 = link_3.__repr__()
    assert var_5 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_6 = var_5.__repr__()
    assert var_6 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_7 = var_5.__repr__()
    assert var_7 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_5 = "page_context"
    section_4 = module_0.Section(str_5, str_5)
    str_6 = " Use '"
    section_5 = module_0.Section(str_6, str_6)
    var_8 = section_5.__repr__()
    assert var_8 == 'Section(title=" Use \'")'
    var_9 = var_8.__repr__()
    assert var_9 == "'Section(title=\" Use \\'\")'"
    link_4 = module_0.Link(var_9, section_4)
    assert link_4.title == "'Section(title=\" Use \\'\")'"
    str_7 = " Use '"
    section_6 = module_0.Section(str_7, str_7)
    var_10 = section_6.__repr__()
    assert var_10 == 'Section(title=" Use \'")'
    str_8 = 'C5B_`:"E&+;Y['
    link_5 = module_0.Link(str_8, str_8)
    int_2 = var_10.__len__()
    assert int_2 == 23
    str_9 = " Use '"
    section_7 = module_0.Section(str_9, str_9)
    var_11 = section_7.__repr__()
    assert var_11 == 'Section(title=" Use \'")'
    var_12 = var_11.__repr__()
    assert var_12 == "'Section(title=\" Use \\'\")'"
    dict_0 = {}
    str_10 = 'y\x0c[fN"W:2&:SWyz~W'
    link_6 = module_0.Link(dict_0, str_10)
    section_8 = module_0.Section(str_9, var_12)
    assert section_8.children == "'Section(title=\" Use \\'\")'"
    link_7 = module_0.Link(var_9, var_0)
    assert link_7.title == "'Section(title=\" Use \\'\")'"
    assert link_7.url == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"


def test_case_579():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_1 = var_0.__str__()
    assert str_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_2 = var_0.__repr__()
    assert var_2 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_2 = " Use '"
    section_0 = module_0.Section(str_2, str_2)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_3 = section_0.__repr__()
    assert var_3 == 'Section(title=" Use \'")'
    var_4 = var_3.__repr__()
    assert var_4 == "'Section(title=\" Use \\'\")'"
    var_5 = var_3.__repr__()
    assert var_5 == "'Section(title=\" Use \\'\")'"
    none_type_1 = None
    section_1 = module_0.Section(none_type_1, none_type_1)
    var_6 = module_1.urlsplit(none_type_1)
    iterator_0 = var_6.__iter__()
    none_type_2 = None
    set_0 = {none_type_2, none_type_2, none_type_2, none_type_2}
    link_1 = module_0.Link(none_type_2, set_0)
    str_3 = "gfRsC:6&{;|"
    section_2 = module_0.Section(str_3, str_3)
    var_7 = section_2.__repr__()
    assert var_7 == "Section(title='gfRsC:6&{;|')"
    none_type_3 = None
    str_4 = "\n        Perform validation for a value.\n\n        The run_validation method should be implemented by subclasses.\n        "
    link_2 = module_0.Link(none_type_3, str_4)
    var_8 = link_2.__repr__()
    assert (
        var_8
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    str_5 = var_8.__str__()
    assert (
        str_5
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    bool_0 = True
    section_3 = module_0.Section(bool_0, bool_0)
    str_6 = "0_~6:m!(f5FgU,:rvz"
    none_type_4 = None
    link_3 = module_0.Link(str_6, none_type_4)
    var_9 = link_3.__repr__()
    assert var_9 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_10 = var_9.__repr__()
    assert var_10 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    section_4 = module_0.Section(none_type_4, var_10)
    assert section_4.children == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_11 = section_4.__repr__()
    assert var_11 == "Section(title=None)"
    str_7 = "0_~6:m!(f5FgU,:rvz"
    none_type_5 = None
    link_4 = module_0.Link(str_7, none_type_5)
    var_12 = link_4.__repr__()
    assert var_12 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_13 = var_12.__repr__()
    assert var_13 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_8 = var_12.__str__()
    assert str_8 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    set_1 = set()
    navigation_0 = module_0.Navigation(set_1, set_1)
    assert (
        f"{type(navigation_0).__module__}.{type(navigation_0).__qualname__}"
        == "mkdocs.structure.nav.Navigation"
    )
    assert len(navigation_0) == 0
    str_9 = navigation_0.__str__()
    link_5 = module_0.Link(var_8, str_9)
    assert (
        link_5.title
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )


def test_case_580():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    var_1 = var_0.__repr__()
    assert var_1 == "'Section(title=\" Use \\'\")'"
    str_1 = "page_context"
    section_1 = module_0.Section(str_1, str_1)
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_2, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_2 = link_0.__repr__()
    assert var_2 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_3 = section_1.__repr__()
    assert var_3 == "Section(title='page_context')"
    str_3 = " Use '"
    section_2 = module_0.Section(str_3, str_3)
    var_4 = section_2.__repr__()
    assert var_4 == 'Section(title=" Use \'")'
    str_4 = 'C5B_`:"E&+;Y['
    link_1 = module_0.Link(str_4, str_4)
    int_0 = var_4.__len__()
    assert int_0 == 23
    section_3 = module_0.Section(str_3, var_4)
    assert section_3.children == 'Section(title=" Use \'")'
    dict_0 = {}
    link_2 = module_0.Link(dict_0, var_0)
    assert link_2.url == 'Section(title=" Use \'")'


def test_case_581():
    str_0 = "x"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "x"
    assert section_0.children == "x"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = " Use '"
    section_1 = module_0.Section(str_1, str_1)
    var_0 = section_1.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    int_0 = var_0.__len__()
    assert int_0 == 23
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_2, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    int_1 = var_0.__len__()
    assert int_1 == 23
    str_3 = " Use '"
    section_2 = module_0.Section(str_3, str_3)
    var_1 = section_2.__repr__()
    assert var_1 == 'Section(title=" Use \'")'
    var_2 = var_1.__repr__()
    assert var_2 == "'Section(title=\" Use \\'\")'"
    set_0 = set()
    navigation_0 = module_0.Navigation(set_0, set_0)
    assert (
        f"{type(navigation_0).__module__}.{type(navigation_0).__qualname__}"
        == "mkdocs.structure.nav.Navigation"
    )
    assert len(navigation_0) == 0
    str_4 = navigation_0.__str__()
    iterator_0 = var_2.__iter__()
    str_5 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_5, none_type_1)
    var_3 = link_1.__repr__()
    assert var_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_4 = var_3.__repr__()
    assert var_4 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    iterator_1 = var_3.__iter__()
    var_5 = var_3.__repr__()
    assert var_5 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_6 = "gfRsC:6&{;|"
    section_3 = module_0.Section(str_6, str_6)
    str_7 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_2 = module_0.Link(str_7, none_type_2)
    var_6 = link_2.__repr__()
    assert var_6 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_7 = var_6.__repr__()
    assert var_7 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_8 = var_6.__repr__()
    assert var_8 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_9 = link_2.__repr__()
    assert var_9 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_8 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_3 = module_0.Link(str_8, none_type_3)
    var_10 = link_3.__repr__()
    assert var_10 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_11 = var_10.__repr__()
    assert var_11 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_12 = var_10.__repr__()
    assert var_12 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_9 = "gfRsC:6&{;|"
    section_4 = module_0.Section(str_9, str_9)
    list_0 = []
    section_5 = module_0.Section(section_4, list_0)
    none_type_4 = None
    var_13 = module_1.urlsplit(none_type_4)
    var_14 = var_13.__repr__()
    iterator_2 = navigation_0.__iter__()


def test_case_582():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    str_1 = "gfRsC:6&{;|"
    section_1 = module_0.Section(str_1, str_1)
    str_2 = "relative_to_docs"
    link_0 = module_0.Link(str_2, section_1)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "relative_to_docs"
    assert (
        f"{type(link_0.url).__module__}.{type(link_0.url).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    section_2 = module_0.Section(section_0, var_0)
    assert section_2.children == 'Section(title=" Use \'")'
    int_0 = var_0.__len__()
    assert int_0 == 23
    str_3 = "page_context"
    section_3 = module_0.Section(str_3, str_3)
    str_4 = "' from the site because it conflicts with '"
    list_0 = []
    section_4 = module_0.Section(str_4, list_0)
    var_1 = section_4.__repr__()
    assert var_1 == "Section(title=\"' from the site because it conflicts with '\")"
    str_5 = "\\l;/\nKHZ=K\nU\no|2{loH"
    link_1 = module_0.Link(str_3, str_5)
    str_6 = " Use '"
    section_5 = module_0.Section(str_6, str_6)
    var_2 = section_5.__repr__()
    assert var_2 == 'Section(title=" Use \'")'
    str_7 = 'C5B_`:"E&+;Y['
    link_2 = module_0.Link(str_7, str_7)
    int_1 = var_2.__len__()
    assert int_1 == 23
    str_8 = "gfRsC:6&{;|"
    section_6 = module_0.Section(str_8, str_8)
    var_3 = section_6.__repr__()
    assert var_3 == "Section(title='gfRsC:6&{;|')"
    bool_0 = True
    section_7 = module_0.Section(bool_0, bool_0)
    list_1 = [var_3, var_3]
    section_8 = module_0.Section(section_6, list_1)
    assert section_8.children == [
        "Section(title='gfRsC:6&{;|')",
        "Section(title='gfRsC:6&{;|')",
    ]
    str_9 = " Use '"
    section_9 = module_0.Section(str_9, str_9)
    var_4 = section_9.__repr__()
    assert var_4 == 'Section(title=" Use \'")'
    str_10 = "gfRsC:6&{;|"
    section_10 = module_0.Section(str_10, str_10)
    str_11 = "relative_to_docs"
    link_3 = module_0.Link(str_11, section_10)
    section_11 = module_0.Section(section_9, var_4)
    assert section_11.children == 'Section(title=" Use \'")'
    none_type_0 = None
    str_12 = "\n        Perform validation for a value.\n\n        The run_validation method should be implemented by subclasses.\n        "
    link_4 = module_0.Link(none_type_0, str_12)
    var_5 = link_4.__repr__()
    assert (
        var_5
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    str_13 = var_5.__str__()
    assert (
        str_13
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    str_14 = " Use '"
    section_12 = module_0.Section(str_14, str_14)
    var_6 = section_12.__repr__()
    assert var_6 == 'Section(title=" Use \'")'
    section_13 = module_0.Section(str_14, var_6)
    assert section_13.children == 'Section(title=" Use \'")'
    none_type_1 = None
    section_14 = module_0.Section(none_type_1, none_type_1)
    var_7 = module_1.urlsplit(none_type_1)
    iterator_0 = var_7.__iter__()
    var_8 = var_4.__repr__()
    assert var_8 == "'Section(title=\" Use \\'\")'"


def test_case_583():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_1 = var_0.__str__()
    assert str_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_2 = var_0.__repr__()
    assert var_2 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_2 = "page_context"
    section_0 = module_0.Section(str_2, str_2)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_3 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_3, none_type_1)
    var_3 = link_1.__repr__()
    assert var_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_4 = section_0.__repr__()
    assert var_4 == "Section(title='page_context')"
    var_5 = var_0.__repr__()
    assert var_5 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""


def test_case_584():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_2 = var_1.__repr__()
    assert var_2 == "'\"Link(title=\\'0_~6:m!(f5FgU,:rvz\\', url=None)\"'"
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_1, none_type_1)
    var_3 = link_1.__repr__()
    assert var_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_4 = var_3.__repr__()
    assert var_4 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_2 = var_3.__str__()
    assert str_2 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_3 = 'C5B_`:"E&+;Y['
    link_2 = module_0.Link(str_3, str_3)
    int_0 = var_3.__len__()
    assert int_0 == 42
    str_4 = "gfRsC:6&{;|"
    section_0 = module_0.Section(str_4, str_4)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "gfRsC:6&{;|"
    assert section_0.children == "gfRsC:6&{;|"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_5 = section_0.__repr__()
    assert var_5 == "Section(title='gfRsC:6&{;|')"
    str_5 = "page_context"
    section_1 = module_0.Section(str_5, str_5)
    str_6 = "' from the site because it conflicts with '"
    list_0 = []
    section_2 = module_0.Section(str_6, list_0)
    str_7 = "localhost"
    link_3 = module_0.Link(str_6, str_7)
    str_8 = "page_context"
    section_3 = module_0.Section(str_8, str_8)
    str_9 = "' from the site because it conflicts with '"
    list_1 = []
    section_4 = module_0.Section(str_9, list_1)
    var_6 = section_3.__repr__()
    assert var_6 == "Section(title='page_context')"
    str_10 = "page_context"
    section_5 = module_0.Section(str_10, str_10)
    str_11 = " Use '"
    section_6 = module_0.Section(str_11, str_11)
    var_7 = section_6.__repr__()
    assert var_7 == 'Section(title=" Use \'")'
    var_8 = var_7.__repr__()
    assert var_8 == "'Section(title=\" Use \\'\")'"
    link_4 = module_0.Link(var_8, section_5)
    assert link_4.title == "'Section(title=\" Use \\'\")'"
    none_type_2 = None
    section_7 = module_0.Section(none_type_2, none_type_2)
    str_12 = " Use '"
    section_8 = module_0.Section(str_12, str_12)
    var_9 = section_8.__repr__()
    assert var_9 == 'Section(title=" Use \'")'
    int_1 = var_9.__len__()
    assert int_1 == 23
    dict_0 = {}
    str_13 = 'y\x0c[fN"W:2&:SWyz~W'
    link_5 = module_0.Link(dict_0, str_13)
    section_9 = module_0.Section(str_13, str_13)
    section_10 = module_0.Section(str_13, str_13)
    dict_1 = {}
    str_14 = 'y\x0c[fN"W:2&:SWyz~W'
    link_6 = module_0.Link(dict_1, str_14)
    str_15 = var_2.__str__()
    assert str_15 == "'\"Link(title=\\'0_~6:m!(f5FgU,:rvz\\', url=None)\"'"


def test_case_585():
    str_0 = "page_context"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = "' from the site because it conflicts with '"
    list_0 = []
    section_1 = module_0.Section(str_1, list_0)
    var_0 = section_0.__repr__()
    assert var_0 == "Section(title='page_context')"
    str_2 = " Use '"
    section_2 = module_0.Section(str_2, str_2)
    var_1 = section_2.__repr__()
    assert var_1 == 'Section(title=" Use \'")'
    str_3 = 'C5B_`:"E&+;Y['
    link_0 = module_0.Link(str_3, str_3)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == 'C5B_`:"E&+;Y['
    assert link_0.url == 'C5B_`:"E&+;Y['
    int_0 = var_1.__len__()
    assert int_0 == 23
    section_3 = module_0.Section(var_1, var_1)
    assert section_3.title == 'Section(title=" Use \'")'
    assert section_3.children == 'Section(title=" Use \'")'
    str_4 = " Use '"
    section_4 = module_0.Section(str_4, str_4)
    var_2 = section_4.__repr__()
    assert var_2 == 'Section(title=" Use \'")'
    str_5 = 'C5B_`:"E&+;Y['
    link_1 = module_0.Link(str_5, str_5)
    int_1 = var_2.__len__()
    assert int_1 == 23
    section_5 = module_0.Section(str_4, var_2)
    assert section_5.children == 'Section(title=" Use \'")'
    str_6 = "page_context"
    section_6 = module_0.Section(str_6, str_6)
    str_7 = "' from the site because it conflicts with '"
    list_1 = []
    section_7 = module_0.Section(str_7, list_1)
    var_3 = section_7.__repr__()
    assert var_3 == "Section(title=\"' from the site because it conflicts with '\")"
    section_8 = module_0.Section(str_7, section_6)
    int_2 = var_3.__len__()
    assert int_2 == 60
    var_4 = var_2.__repr__()
    assert var_4 == "'Section(title=\" Use \\'\")'"


def test_case_586():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    str_1 = 'C5B_`:"E&+;Y['
    link_0 = module_0.Link(str_1, str_1)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == 'C5B_`:"E&+;Y['
    assert link_0.url == 'C5B_`:"E&+;Y['
    int_0 = var_0.__len__()
    assert int_0 == 23
    section_1 = module_0.Section(var_0, var_0)
    assert section_1.title == 'Section(title=" Use \'")'
    assert section_1.children == 'Section(title=" Use \'")'
    str_2 = " Use '"
    section_2 = module_0.Section(str_2, str_2)
    var_1 = section_2.__repr__()
    assert var_1 == 'Section(title=" Use \'")'
    str_3 = "gfRsC:6&{;|"
    section_3 = module_0.Section(str_3, str_3)
    str_4 = "relative_to_docs"
    link_1 = module_0.Link(str_4, section_3)
    section_4 = module_0.Section(section_2, var_1)
    assert section_4.children == 'Section(title=" Use \'")'
    int_1 = var_1.__len__()
    assert int_1 == 23
    str_5 = " Use '"
    section_5 = module_0.Section(str_5, str_5)
    var_2 = section_5.__repr__()
    assert var_2 == 'Section(title=" Use \'")'
    int_2 = var_2.__len__()
    assert int_2 == 23
    section_6 = module_0.Section(var_2, int_2)
    assert section_6.title == 'Section(title=" Use \'")'
    assert section_6.children == 23
    str_6 = "page_context"
    section_7 = module_0.Section(str_6, str_6)
    str_7 = "' from the site because it conflicts with '"
    list_0 = []
    section_8 = module_0.Section(str_7, list_0)
    str_8 = "localhost"
    link_2 = module_0.Link(str_7, str_8)
    str_9 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_3 = module_0.Link(str_9, none_type_0)
    var_3 = link_3.__repr__()
    assert var_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_4 = var_3.__repr__()
    assert var_4 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_5 = var_4.__repr__()
    assert var_5 == "'\"Link(title=\\'0_~6:m!(f5FgU,:rvz\\', url=None)\"'"
    str_10 = " Use '"
    section_9 = module_0.Section(str_10, str_10)
    var_6 = section_9.__repr__()
    assert var_6 == 'Section(title=" Use \'")'
    str_11 = "gfRsC:6&{;|"
    section_10 = module_0.Section(str_11, str_11)
    str_12 = "relative_to_docs"
    link_4 = module_0.Link(str_12, section_10)
    str_13 = "EFT8@M2{U4M6EU|irRO9"
    link_5 = module_0.Link(var_3, str_13)
    assert link_5.title == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"


def test_case_587():
    bool_0 = True
    section_0 = module_0.Section(bool_0, bool_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title is True
    assert section_0.children is True
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_0 = " Use '"
    section_1 = module_0.Section(str_0, str_0)
    var_0 = section_1.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    str_1 = 'C5B_`:"E&+;Y['
    link_0 = module_0.Link(str_1, str_1)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == 'C5B_`:"E&+;Y['
    assert link_0.url == 'C5B_`:"E&+;Y['
    int_0 = var_0.__len__()
    assert int_0 == 23
    none_type_0 = None
    section_2 = module_0.Section(none_type_0, none_type_0)
    var_1 = module_1.urlsplit(none_type_0)
    iterator_0 = var_1.__iter__()
    str_2 = "x"
    section_3 = module_0.Section(str_2, str_2)
    int_1 = var_0.__len__()
    assert int_1 == 23


def test_case_588():
    str_0 = "page_context"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = "page_context"
    section_1 = module_0.Section(str_1, str_1)
    str_2 = "' from the site because it conflicts with '"
    list_0 = []
    section_2 = module_0.Section(str_2, list_0)
    var_0 = section_1.__repr__()
    assert var_0 == "Section(title='page_context')"
    str_3 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_3, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    dict_0 = {}
    str_4 = 'y\x0c[fN"W:2&:SWyz~W'
    link_1 = module_0.Link(dict_0, str_4)
    section_3 = module_0.Section(str_4, str_4)
    section_4 = module_0.Section(str_4, str_4)
    str_5 = 'C5B_`:"E&+;Y['
    link_2 = module_0.Link(str_5, str_5)
    str_6 = " Use '"
    section_5 = module_0.Section(str_6, str_6)
    var_1 = section_5.__repr__()
    assert var_1 == 'Section(title=" Use \'")'
    int_0 = var_1.__len__()
    assert int_0 == 23
    var_2 = var_1.__repr__()
    assert var_2 == "'Section(title=\" Use \\'\")'"
    link_3 = module_0.Link(int_0, var_1)
    assert link_3.title == 23
    assert link_3.url == 'Section(title=" Use \'")'
    str_7 = "xiUKYiP\tqV.hq].ZP\\"
    link_4 = module_0.Link(str_7, str_4)


def test_case_589():
    str_0 = 'C5B_`:"E&+;Y['
    link_0 = module_0.Link(str_0, str_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == 'C5B_`:"E&+;Y['
    assert link_0.url == 'C5B_`:"E&+;Y['
    str_1 = "page_context"
    section_0 = module_0.Section(str_1, str_1)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_2 = "' from the site because it conflicts with '"
    list_0 = []
    section_1 = module_0.Section(str_2, list_0)
    var_0 = section_0.__repr__()
    assert var_0 == "Section(title='page_context')"
    str_3 = " Use '"
    section_2 = module_0.Section(str_3, str_3)
    var_1 = section_2.__repr__()
    assert var_1 == 'Section(title=" Use \'")'
    section_3 = module_0.Section(str_3, var_1)
    assert section_3.children == 'Section(title=" Use \'")'
    iterator_0 = var_1.__iter__()


def test_case_590():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_1, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_1 = link_0.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    int_0 = var_1.__len__()
    assert int_0 == 42
    int_1 = var_0.__len__()
    assert int_1 == 23


def test_case_591():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_2 = var_0.__repr__()
    assert var_2 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_3 = link_0.__repr__()
    assert var_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_1 = "gfRsC:6&{;|"
    section_0 = module_0.Section(str_1, str_1)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "gfRsC:6&{;|"
    assert section_0.children == "gfRsC:6&{;|"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    list_0 = []
    section_1 = module_0.Section(section_0, list_0)
    str_2 = "page_context"
    section_2 = module_0.Section(str_2, str_2)
    str_3 = "' from the site because it conflicts with '"
    list_1 = []
    section_3 = module_0.Section(str_3, list_1)
    var_4 = section_3.__repr__()
    assert var_4 == "Section(title=\"' from the site because it conflicts with '\")"
    str_4 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_4, none_type_1)
    bytes_0 = b"\x802c35Z\xf8"
    link_2 = module_0.Link(link_1, bytes_0)
    dict_0 = {}
    str_5 = 'y\x0c[fN"W:2&:SWyz~W'
    link_3 = module_0.Link(dict_0, str_5)
    var_5 = link_2.__repr__()
    assert (
        var_5
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )
    str_6 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_4 = module_0.Link(str_6, none_type_2)
    var_6 = link_4.__repr__()
    assert var_6 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_7 = var_6.__repr__()
    assert var_7 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_8 = var_7.__repr__()
    assert var_8 == "'\"Link(title=\\'0_~6:m!(f5FgU,:rvz\\', url=None)\"'"
    str_7 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_5 = module_0.Link(str_7, none_type_3)
    var_9 = link_5.__repr__()
    assert var_9 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_10 = var_9.__repr__()
    assert var_10 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_8 = var_9.__str__()
    assert str_8 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_9 = 'C5B_`:"E&+;Y['
    link_6 = module_0.Link(str_9, str_9)
    int_0 = var_9.__len__()
    assert int_0 == 42
    bool_0 = True
    section_4 = module_0.Section(bool_0, bool_0)
    str_10 = "0_~6:m!(f5FgU,:rvz"
    none_type_4 = None
    link_7 = module_0.Link(str_10, none_type_4)
    var_11 = link_7.__repr__()
    assert var_11 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_12 = var_11.__repr__()
    assert var_12 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    section_5 = module_0.Section(none_type_4, var_12)
    assert section_5.children == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_11 = "' is included in the 'nav' configuration."
    link_8 = module_0.Link(str_11, str_11)
    var_13 = link_5.__repr__()
    assert var_13 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"


def test_case_592():
    none_type_0 = None
    section_0 = module_0.Section(none_type_0, none_type_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title is None
    assert section_0.children is None
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_0 = " Use '"
    section_1 = module_0.Section(str_0, str_0)
    var_0 = section_1.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    str_1 = 'C5B_`:"E&+;Y['
    link_0 = module_0.Link(str_1, str_1)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == 'C5B_`:"E&+;Y['
    assert link_0.url == 'C5B_`:"E&+;Y['
    int_0 = var_0.__len__()
    assert int_0 == 23
    section_2 = module_0.Section(str_0, var_0)
    assert section_2.children == 'Section(title=" Use \'")'
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_2, none_type_1)
    var_1 = link_1.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_2 = var_1.__repr__()
    assert var_2 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    int_1 = var_2.__len__()
    assert int_1 == 44
    bool_0 = True
    section_3 = module_0.Section(bool_0, bool_0)
    str_3 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_2 = module_0.Link(str_3, none_type_2)
    var_3 = link_2.__repr__()
    assert var_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_4 = var_3.__repr__()
    assert var_4 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    section_4 = module_0.Section(none_type_2, var_4)
    assert section_4.children == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_5 = section_4.__repr__()
    assert var_5 == "Section(title=None)"
    iterator_0 = var_5.__iter__()


def test_case_593():
    str_0 = "gfRsC:6&{;|"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "gfRsC:6&{;|"
    assert section_0.children == "gfRsC:6&{;|"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == "Section(title='gfRsC:6&{;|')"
    bool_0 = True
    section_1 = module_0.Section(bool_0, bool_0)
    list_0 = [var_0, var_0]
    section_2 = module_0.Section(section_0, list_0)
    assert section_2.children == [
        "Section(title='gfRsC:6&{;|')",
        "Section(title='gfRsC:6&{;|')",
    ]
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_1, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    bytes_0 = b"\x802c35Z\xf8"
    link_1 = module_0.Link(link_0, bytes_0)
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_2 = module_0.Link(str_2, none_type_1)
    bytes_1 = b"\x802c35Z\xf8"
    link_3 = module_0.Link(link_2, bytes_1)
    dict_0 = {}
    str_3 = 'y\x0c[fN"W:2&:SWyz~W'
    link_4 = module_0.Link(dict_0, str_3)
    var_1 = link_3.__repr__()
    assert (
        var_1
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )
    var_2 = section_1.__repr__()
    assert var_2 == "Section(title=True)"


def test_case_594():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    bytes_0 = b"\x802c35Z\xf8"
    link_1 = module_0.Link(link_0, bytes_0)
    dict_0 = {}
    str_1 = 'y\x0c[fN"W:2&:SWyz~W'
    link_2 = module_0.Link(dict_0, str_1)
    var_0 = link_1.__repr__()
    assert (
        var_0
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )
    str_2 = " Use '"
    section_0 = module_0.Section(str_2, str_2)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_1 = section_0.__repr__()
    assert var_1 == 'Section(title=" Use \'")'
    str_3 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_3 = module_0.Link(str_3, none_type_1)
    bytes_1 = b"\x802c35Z\xf8"
    link_4 = module_0.Link(link_3, bytes_1)
    iterator_0 = var_1.__iter__()
    none_type_2 = None
    str_4 = "\n        Perform validation for a value.\n\n        The run_validation method should be implemented by subclasses.\n        "
    link_5 = module_0.Link(none_type_2, str_4)
    var_2 = link_5.__repr__()
    assert (
        var_2
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    str_5 = var_2.__str__()
    assert (
        str_5
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    iterator_1 = var_2.__iter__()


def test_case_595():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_1 = var_0.__str__()
    assert str_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_2, none_type_1)
    bytes_0 = b"\x802c35Z\xf8"
    link_2 = module_0.Link(link_1, bytes_0)
    var_2 = link_1.__repr__()
    assert var_2 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    iterator_0 = var_2.__iter__()
    str_3 = " Use '"
    section_0 = module_0.Section(str_3, str_3)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_3 = section_0.__repr__()
    assert var_3 == 'Section(title=" Use \'")'
    str_4 = 'C5B_`:"E&+;Y['
    link_3 = module_0.Link(str_4, str_4)
    int_0 = var_3.__len__()
    assert int_0 == 23
    section_1 = module_0.Section(str_3, var_3)
    assert section_1.children == 'Section(title=" Use \'")'
    str_5 = "page_context"
    section_2 = module_0.Section(str_5, str_5)
    str_6 = "' from the site because it conflicts with '"
    list_0 = []
    section_3 = module_0.Section(str_6, list_0)
    var_4 = section_2.__repr__()
    assert var_4 == "Section(title='page_context')"
    str_7 = "page_context"
    section_4 = module_0.Section(str_7, str_7)
    str_8 = "' from the site because it conflicts with '"
    list_1 = []
    section_5 = module_0.Section(str_8, list_1)
    str_9 = "gfRsC:6&{;|"
    section_6 = module_0.Section(str_9, str_9)
    str_10 = " Use '"
    section_7 = module_0.Section(str_10, str_10)
    var_5 = section_7.__repr__()
    assert var_5 == 'Section(title=" Use \'")'
    var_6 = var_5.__repr__()
    assert var_6 == "'Section(title=\" Use \\'\")'"
    set_0 = set()
    navigation_0 = module_0.Navigation(set_0, set_0)
    assert (
        f"{type(navigation_0).__module__}.{type(navigation_0).__qualname__}"
        == "mkdocs.structure.nav.Navigation"
    )
    assert len(navigation_0) == 0
    str_11 = navigation_0.__str__()
    iterator_1 = var_6.__iter__()
    set_1 = set()
    navigation_1 = module_0.Navigation(set_1, set_1)
    str_12 = navigation_1.__str__()
    str_13 = "page_context"
    section_8 = module_0.Section(str_13, str_13)
    str_14 = "' from the site because it conflicts with '"
    list_2 = []
    section_9 = module_0.Section(str_14, list_2)
    var_7 = section_9.__repr__()
    assert var_7 == "Section(title=\"' from the site because it conflicts with '\")"
    section_10 = module_0.Section(str_14, section_8)
    iterator_2 = var_0.__iter__()


def test_case_596():
    str_0 = "page_context"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = "' from the site because it conflicts with '"
    list_0 = []
    section_1 = module_0.Section(str_1, list_0)
    var_0 = section_1.__repr__()
    assert var_0 == "Section(title=\"' from the site because it conflicts with '\")"
    section_2 = module_0.Section(str_1, section_0)
    int_0 = var_0.__len__()
    assert int_0 == 60
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_2, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_1 = link_0.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_2 = var_1.__repr__()
    assert var_2 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_3 = var_1.__str__()
    assert str_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_3 = var_1.__repr__()
    assert var_3 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_4 = " Use '"
    section_3 = module_0.Section(str_4, str_4)
    var_4 = section_3.__repr__()
    assert var_4 == 'Section(title=" Use \'")'
    var_5 = var_4.__repr__()
    assert var_5 == "'Section(title=\" Use \\'\")'"
    var_6 = var_4.__repr__()
    assert var_6 == "'Section(title=\" Use \\'\")'"
    str_5 = " Use '"
    section_4 = module_0.Section(str_5, str_5)
    var_7 = section_4.__repr__()
    assert var_7 == 'Section(title=" Use \'")'
    str_6 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_6, none_type_1)
    var_8 = link_1.__repr__()
    assert var_8 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    int_1 = var_8.__len__()
    assert int_1 == 42
    int_2 = var_7.__len__()
    assert int_2 == 23
    bool_0 = True
    section_5 = module_0.Section(bool_0, bool_0)
    str_7 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_2 = module_0.Link(str_7, none_type_2)
    var_9 = link_2.__repr__()
    assert var_9 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_10 = var_9.__repr__()
    assert var_10 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    section_6 = module_0.Section(none_type_2, var_10)
    assert section_6.children == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_11 = section_6.__repr__()
    assert var_11 == "Section(title=None)"
    str_8 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_3 = module_0.Link(str_8, none_type_3)
    var_12 = link_3.__repr__()
    assert var_12 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_13 = var_12.__repr__()
    assert var_13 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    iterator_0 = var_12.__iter__()
    dict_0 = {}
    str_9 = 'y\x0c[fN"W:2&:SWyz~W'
    link_4 = module_0.Link(dict_0, str_9)
    section_7 = module_0.Section(str_9, str_9)
    section_8 = module_0.Section(str_9, str_9)
    var_14 = link_1.__repr__()
    assert var_14 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"


def test_case_597():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_2 = var_1.__repr__()
    assert var_2 == "'\"Link(title=\\'0_~6:m!(f5FgU,:rvz\\', url=None)\"'"
    dict_0 = {}
    str_1 = 'y\x0c[fN"W:2&:SWyz~W'
    link_1 = module_0.Link(dict_0, str_1)
    section_0 = module_0.Section(str_1, str_1)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == 'y\x0c[fN"W:2&:SWyz~W'
    assert section_0.children == 'y\x0c[fN"W:2&:SWyz~W'
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    bool_0 = True
    link_2 = module_0.Link(bool_0, bool_0)
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_3 = module_0.Link(str_2, none_type_1)
    var_3 = link_3.__repr__()
    assert var_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_4 = var_3.__repr__()
    assert var_4 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_3 = var_3.__str__()
    assert str_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_4 = 'C5B_`:"E&+;Y['
    link_4 = module_0.Link(str_4, str_4)
    int_0 = var_3.__len__()
    assert int_0 == 42
    str_5 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_5 = module_0.Link(str_5, none_type_2)
    bytes_0 = b"\x802c35Z\xf8"
    link_6 = module_0.Link(link_5, bytes_0)
    var_5 = link_5.__repr__()
    assert var_5 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_6 = var_5.__repr__()
    assert var_6 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    link_7 = module_0.Link(none_type_0, str_3)
    assert link_7.url == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"


def test_case_598():
    none_type_0 = None
    section_0 = module_0.Section(none_type_0, none_type_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title is None
    assert section_0.children is None
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_0 = "gfRsC:6&{;|"
    section_1 = module_0.Section(str_0, str_0)
    var_0 = section_1.__repr__()
    assert var_0 == "Section(title='gfRsC:6&{;|')"
    bool_0 = True
    section_2 = module_0.Section(bool_0, bool_0)
    list_0 = [var_0, var_0]
    section_3 = module_0.Section(section_1, list_0)
    assert section_3.children == [
        "Section(title='gfRsC:6&{;|')",
        "Section(title='gfRsC:6&{;|')",
    ]
    dict_0 = {}
    str_1 = 'y\x0c[fN"W:2&:SWyz~W'
    link_0 = module_0.Link(dict_0, str_1)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == {}
    assert link_0.url == 'y\x0c[fN"W:2&:SWyz~W'
    section_4 = module_0.Section(str_1, str_1)
    str_2 = " Use '"
    section_5 = module_0.Section(str_2, str_2)
    var_1 = section_5.__repr__()
    assert var_1 == 'Section(title=" Use \'")'
    var_2 = var_1.__repr__()
    assert var_2 == "'Section(title=\" Use \\'\")'"
    bool_1 = True
    section_6 = module_0.Section(bool_1, bool_1)
    str_3 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_3, none_type_1)
    bytes_0 = b"\x802c35Z\xf8"
    link_2 = module_0.Link(link_1, bytes_0)
    var_3 = link_1.__repr__()
    assert var_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_4 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_3 = module_0.Link(str_4, none_type_2)
    var_4 = link_3.__repr__()
    assert var_4 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_5 = var_4.__repr__()
    assert var_5 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    int_0 = var_5.__len__()
    assert int_0 == 44
    str_5 = " Use '"
    section_7 = module_0.Section(str_5, str_5)
    var_6 = section_7.__repr__()
    assert var_6 == 'Section(title=" Use \'")'
    str_6 = 'C5B_`:"E&+;Y['
    link_4 = module_0.Link(str_6, str_6)
    int_1 = var_6.__len__()
    assert int_1 == 23
    section_8 = module_0.Section(str_5, var_6)
    assert section_8.children == 'Section(title=" Use \'")'
    none_type_3 = None
    section_9 = module_0.Section(none_type_3, none_type_3)
    var_7 = module_1.urlsplit(none_type_3)
    iterator_0 = var_7.__iter__()
    str_7 = " Use '"
    section_10 = module_0.Section(str_7, str_7)
    var_8 = section_10.__repr__()
    assert var_8 == 'Section(title=" Use \'")'
    str_8 = 'C5B_`:"E&+;Y['
    link_5 = module_0.Link(str_8, str_8)
    int_2 = var_8.__len__()
    assert int_2 == 23
    section_11 = module_0.Section(var_8, var_8)
    assert section_11.title == 'Section(title=" Use \'")'
    assert section_11.children == 'Section(title=" Use \'")'
    str_9 = var_6.__str__()
    assert str_9 == 'Section(title=" Use \'")'


def test_case_599():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    bytes_0 = b"\x802c35Z\xf8"
    link_1 = module_0.Link(link_0, bytes_0)
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_1 = 'C5B_`:"E&+;Y['
    link_2 = module_0.Link(str_1, str_1)
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_3 = module_0.Link(str_2, none_type_1)
    var_1 = link_3.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_2 = var_1.__repr__()
    assert var_2 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    int_0 = var_2.__len__()
    assert int_0 == 44
    str_3 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_4 = module_0.Link(str_3, none_type_2)
    var_3 = link_4.__repr__()
    assert var_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_4 = var_3.__repr__()
    assert var_4 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_5 = var_3.__repr__()
    assert var_5 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_6 = link_4.__repr__()
    assert var_6 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    none_type_3 = None
    str_4 = "\n        Perform validation for a value.\n\n        The run_validation method should be implemented by subclasses.\n        "
    link_5 = module_0.Link(none_type_3, str_4)
    var_7 = link_5.__repr__()
    assert (
        var_7
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    str_5 = var_7.__str__()
    assert (
        str_5
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    var_8 = var_1.__repr__()
    assert var_8 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""


def test_case_600():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    int_0 = var_0.__len__()
    assert int_0 == 23
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_1, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_1 = link_0.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_2 = var_1.__repr__()
    assert var_2 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_3 = var_1.__repr__()
    assert var_3 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    set_0 = set()
    navigation_0 = module_0.Navigation(set_0, set_0)
    assert (
        f"{type(navigation_0).__module__}.{type(navigation_0).__qualname__}"
        == "mkdocs.structure.nav.Navigation"
    )
    assert len(navigation_0) == 0
    str_2 = navigation_0.__str__()
    str_3 = "gfRsC:6&{;|"
    section_1 = module_0.Section(str_3, str_3)
    int_1 = var_0.__len__()
    assert int_1 == 23


def test_case_601():
    str_0 = 'C5B_`:"E&+;Y['
    link_0 = module_0.Link(str_0, str_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == 'C5B_`:"E&+;Y['
    assert link_0.url == 'C5B_`:"E&+;Y['
    none_type_0 = None
    section_0 = module_0.Section(none_type_0, none_type_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title is None
    assert section_0.children is None
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = module_1.urlsplit(none_type_0)
    iterator_0 = var_0.__iter__()
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_1, none_type_1)
    bytes_0 = b"\x802c35Z\xf8"
    link_2 = module_0.Link(link_1, bytes_0)
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_3 = module_0.Link(str_2, none_type_2)
    bytes_1 = b"\x802c35Z\xf8"
    link_4 = module_0.Link(link_3, bytes_1)
    var_1 = link_3.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_2 = var_1.__repr__()
    assert var_2 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    dict_0 = {}
    str_3 = 'y\x0c[fN"W:2&:SWyz~W'
    link_5 = module_0.Link(dict_0, str_3)
    section_1 = module_0.Section(str_3, str_3)
    section_2 = module_0.Section(str_3, str_3)
    str_4 = " Use '"
    section_3 = module_0.Section(str_4, str_4)
    var_3 = section_3.__repr__()
    assert var_3 == 'Section(title=" Use \'")'
    int_0 = var_3.__len__()
    assert int_0 == 23
    str_5 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_6 = module_0.Link(str_5, none_type_3)
    int_1 = var_3.__len__()
    assert int_1 == 23
    int_2 = var_3.__len__()
    assert int_2 == 23
    none_type_4 = None
    section_4 = module_0.Section(none_type_4, none_type_4)
    bool_0 = True
    link_7 = module_0.Link(bool_0, bool_0)
    var_4 = section_4.__repr__()
    assert var_4 == "Section(title=None)"


def test_case_602():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_2 = var_1.__repr__()
    assert var_2 == "'\"Link(title=\\'0_~6:m!(f5FgU,:rvz\\', url=None)\"'"
    str_1 = " Use '"
    section_0 = module_0.Section(str_1, str_1)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_3 = section_0.__repr__()
    assert var_3 == 'Section(title=" Use \'")'
    int_0 = var_3.__len__()
    assert int_0 == 23
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_2, none_type_1)
    int_1 = var_3.__len__()
    assert int_1 == 23
    str_3 = "Y0"
    str_4 = "node"
    link_2 = module_0.Link(str_3, str_4)


def test_case_603():
    dict_0 = {}
    str_0 = 'y\x0c[fN"W:2&:SWyz~W'
    link_0 = module_0.Link(dict_0, str_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == {}
    assert link_0.url == 'y\x0c[fN"W:2&:SWyz~W'
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == 'y\x0c[fN"W:2&:SWyz~W'
    assert section_0.children == 'y\x0c[fN"W:2&:SWyz~W'
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    section_1 = module_0.Section(str_0, str_0)
    str_1 = "gfRsC:6&{;|"
    section_2 = module_0.Section(str_1, str_1)
    str_2 = " Use '"
    section_3 = module_0.Section(str_2, str_2)
    var_0 = section_3.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    int_0 = var_0.__len__()
    assert int_0 == 23
    str_3 = "page_context"
    section_4 = module_0.Section(str_3, str_3)
    str_4 = "' from the site because it conflicts with '"
    list_0 = []
    section_5 = module_0.Section(str_4, list_0)
    str_5 = "page_context"
    section_6 = module_0.Section(str_5, str_5)
    str_6 = " Use '"
    section_7 = module_0.Section(str_6, str_6)
    var_1 = section_7.__repr__()
    assert var_1 == 'Section(title=" Use \'")'
    var_2 = var_1.__repr__()
    assert var_2 == "'Section(title=\" Use \\'\")'"
    link_1 = module_0.Link(var_2, section_6)
    assert link_1.title == "'Section(title=\" Use \\'\")'"
    str_7 = "$9.}1Av5,.}"
    link_2 = module_0.Link(str_7, str_7)
    str_8 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_3 = module_0.Link(str_8, none_type_0)
    var_3 = link_3.__repr__()
    assert var_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_4 = var_3.__repr__()
    assert var_4 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_9 = var_3.__str__()
    assert str_9 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_5 = var_3.__repr__()
    assert var_5 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    iterator_0 = var_4.__iter__()


def test_case_604():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    int_0 = var_0.__len__()
    assert int_0 == 23
    str_1 = " Use '"
    section_1 = module_0.Section(str_1, str_1)
    var_1 = section_1.__repr__()
    assert var_1 == 'Section(title=" Use \'")'
    var_2 = var_1.__repr__()
    assert var_2 == "'Section(title=\" Use \\'\")'"
    str_2 = "gfRsC:6&{;|"
    section_2 = module_0.Section(str_2, str_2)
    str_3 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_3, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_3 = link_0.__repr__()
    assert var_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_4 = var_3.__repr__()
    assert var_4 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_5 = var_3.__repr__()
    assert var_5 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_6 = link_0.__repr__()
    assert var_6 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_4 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_4, none_type_1)
    var_7 = link_1.__repr__()
    assert var_7 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_8 = var_7.__repr__()
    assert var_8 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    iterator_0 = var_7.__iter__()
    var_9 = var_7.__repr__()
    assert var_9 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_5 = " Use '"
    section_3 = module_0.Section(str_5, str_5)
    var_10 = section_3.__repr__()
    assert var_10 == 'Section(title=" Use \'")'
    str_6 = "gfRsC:6&{;|"
    section_4 = module_0.Section(str_6, str_6)
    str_7 = "relative_to_docs"
    link_2 = module_0.Link(str_7, section_4)
    section_5 = module_0.Section(section_3, var_10)
    assert section_5.children == 'Section(title=" Use \'")'
    int_1 = var_10.__len__()
    assert int_1 == 23
    str_8 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_3 = module_0.Link(str_8, none_type_2)
    var_11 = link_3.__repr__()
    assert var_11 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_12 = var_11.__repr__()
    assert var_12 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_9 = var_11.__str__()
    assert str_9 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_13 = var_11.__repr__()
    assert var_13 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_10 = "gfRsC:6&{;|"
    section_6 = module_0.Section(str_10, str_10)
    var_14 = var_2.__repr__()
    assert var_14 == "'\\'Section(title=\" Use \\\\\\'\")\\''"


def test_case_605():
    str_0 = "page_context"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = "' from the site because it conflicts with '"
    list_0 = []
    section_1 = module_0.Section(str_1, list_0)
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_2, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_3 = var_0.__str__()
    assert str_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_2 = var_0.__repr__()
    assert var_2 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    dict_0 = {}
    str_4 = 'y\x0c[fN"W:2&:SWyz~W'
    link_1 = module_0.Link(dict_0, str_4)
    section_2 = module_0.Section(str_4, str_4)
    section_3 = module_0.Section(str_4, str_4)
    str_5 = "page_context"
    section_4 = module_0.Section(str_5, str_5)
    str_6 = "' from the site because it conflicts with '"
    list_1 = []
    section_5 = module_0.Section(str_6, list_1)
    str_7 = "localhost"
    link_2 = module_0.Link(str_6, str_7)
    str_8 = "9QENV}j]:A6J5"
    section_6 = module_0.Section(str_8, str_8)


def test_case_606():
    bool_0 = True
    section_0 = module_0.Section(bool_0, bool_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title is True
    assert section_0.children is True
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    section_1 = module_0.Section(none_type_0, var_1)
    assert section_1.children == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_1, none_type_1)
    bytes_0 = b"\x802c35Z\xf8"
    link_2 = module_0.Link(link_1, bytes_0)
    var_2 = link_1.__repr__()
    assert var_2 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    int_0 = var_2.__len__()
    assert int_0 == 42
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_3 = module_0.Link(str_2, none_type_2)
    link_4 = module_0.Link(var_0, var_0)
    assert link_4.title == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    assert link_4.url == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"


def test_case_607():
    str_0 = "page_context"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = "' from the site because it conflicts with '"
    list_0 = []
    section_1 = module_0.Section(str_1, list_0)
    str_2 = "localhost"
    link_0 = module_0.Link(str_1, str_2)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "' from the site because it conflicts with '"
    assert link_0.url == "localhost"
    str_3 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_1 = module_0.Link(str_3, none_type_0)
    bytes_0 = b"\x802c35Z\xf8"
    link_2 = module_0.Link(link_1, bytes_0)
    var_0 = link_1.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    int_0 = var_0.__len__()
    assert int_0 == 42
    str_4 = "gfRsC:6&{;|"
    section_2 = module_0.Section(str_4, str_4)
    list_1 = []
    section_3 = module_0.Section(section_2, list_1)
    str_5 = "gfRsC:6&{;|"
    section_4 = module_0.Section(str_5, str_5)
    str_6 = " Use '"
    section_5 = module_0.Section(str_6, str_6)
    var_1 = section_5.__repr__()
    assert var_1 == 'Section(title=" Use \'")'
    int_1 = var_1.__len__()
    assert int_1 == 23
    var_2 = var_1.__repr__()
    assert var_2 == "'Section(title=\" Use \\'\")'"
    var_3 = var_2.__repr__()
    assert var_3 == "'\\'Section(title=\" Use \\\\\\'\")\\''"
    str_7 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_3 = module_0.Link(str_7, none_type_1)
    var_4 = link_3.__repr__()
    assert var_4 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_5 = var_4.__repr__()
    assert var_5 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_8 = var_4.__str__()
    assert str_8 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_9 = " Use '"
    section_6 = module_0.Section(str_9, str_9)
    var_6 = section_6.__repr__()
    assert var_6 == 'Section(title=" Use \'")'
    var_7 = var_6.__repr__()
    assert var_7 == "'Section(title=\" Use \\'\")'"
    set_0 = set()
    navigation_0 = module_0.Navigation(set_0, set_0)
    assert (
        f"{type(navigation_0).__module__}.{type(navigation_0).__qualname__}"
        == "mkdocs.structure.nav.Navigation"
    )
    assert len(navigation_0) == 0
    str_10 = navigation_0.__str__()
    iterator_0 = var_7.__iter__()
    str_11 = " Use '"
    section_7 = module_0.Section(str_11, str_11)
    var_8 = section_7.__repr__()
    assert var_8 == 'Section(title=" Use \'")'
    int_2 = var_8.__len__()
    assert int_2 == 23
    section_8 = module_0.Section(var_8, int_2)
    assert section_8.title == 'Section(title=" Use \'")'
    assert section_8.children == 23
    str_12 = "gfRsC:6&{;|"
    section_9 = module_0.Section(str_12, str_12)
    str_13 = "page_context"
    section_10 = module_0.Section(str_13, str_13)
    str_14 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_4 = module_0.Link(str_14, none_type_2)
    var_9 = link_4.__repr__()
    assert var_9 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_10 = var_9.__repr__()
    assert var_10 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_15 = var_9.__str__()
    assert str_15 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_16 = 'C5B_`:"E&+;Y['
    link_5 = module_0.Link(str_16, str_16)
    int_3 = var_9.__len__()
    assert int_3 == 42
    iterator_1 = var_0.__iter__()


def test_case_608():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    int_0 = var_1.__len__()
    assert int_0 == 44
    str_1 = "gfRsC:6&{;|"
    section_0 = module_0.Section(str_1, str_1)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "gfRsC:6&{;|"
    assert section_0.children == "gfRsC:6&{;|"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_2 = section_0.__repr__()
    assert var_2 == "Section(title='gfRsC:6&{;|')"
    bool_0 = True
    section_1 = module_0.Section(bool_0, bool_0)
    list_0 = [var_2, var_2]
    section_2 = module_0.Section(section_0, list_0)
    assert section_2.children == [
        "Section(title='gfRsC:6&{;|')",
        "Section(title='gfRsC:6&{;|')",
    ]
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_2, none_type_1)
    bytes_0 = b"\x802c35Z\xf8"
    link_2 = module_0.Link(link_1, bytes_0)
    bool_1 = True
    section_3 = module_0.Section(bool_1, bool_1)
    var_3 = link_2.__repr__()
    assert (
        var_3
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )
    str_3 = var_3.__str__()
    assert (
        str_3
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )
    str_4 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_3 = module_0.Link(str_4, none_type_2)
    bytes_1 = b"\x802c35Z\xf8"
    link_4 = module_0.Link(link_3, bytes_1)
    var_4 = link_3.__repr__()
    assert var_4 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    int_1 = var_4.__len__()
    assert int_1 == 42
    none_type_3 = None
    section_4 = module_0.Section(none_type_3, none_type_3)
    var_5 = module_1.urlsplit(none_type_3)
    iterator_0 = var_5.__iter__()
    str_5 = "0_~6:m!(f5FgU,:rvz"
    none_type_4 = None
    link_5 = module_0.Link(str_5, none_type_4)
    var_6 = link_3.__repr__()
    assert var_6 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"


def test_case_609():
    none_type_0 = None
    set_0 = {none_type_0, none_type_0, none_type_0, none_type_0}
    link_0 = module_0.Link(none_type_0, set_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title is None
    assert link_0.url == {None}
    bool_0 = True
    link_1 = module_0.Link(bool_0, bool_0)
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    var_1 = var_0.__repr__()
    assert var_1 == "'Section(title=\" Use \\'\")'"
    str_1 = "page_context"
    section_1 = module_0.Section(str_1, str_1)
    str_2 = "' from the site because it conflicts with '"
    list_0 = []
    section_2 = module_0.Section(str_2, list_0)
    str_3 = "localhost"
    link_2 = module_0.Link(str_2, str_3)
    str_4 = "' is included in the 'nav' configuration."
    link_3 = module_0.Link(str_4, str_4)
    var_2 = link_0.__repr__()
    assert var_2 == "Link(title=[blank], url={None})"


def test_case_610():
    str_0 = "page_context"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    link_0 = module_0.Link(str_0, section_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "page_context"
    assert (
        f"{type(link_0.url).__module__}.{type(link_0.url).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )


def test_case_611():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    bytes_0 = b"\x802c35Z\xf8"
    link_1 = module_0.Link(link_0, bytes_0)
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_1 = " Use '"
    section_0 = module_0.Section(str_1, str_1)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_2 = section_0.__repr__()
    assert var_2 == 'Section(title=" Use \'")'
    str_2 = "gfRsC:6&{;|"
    section_1 = module_0.Section(str_2, str_2)
    str_3 = "relative_to_docs"
    link_2 = module_0.Link(str_3, section_1)
    section_2 = module_0.Section(section_0, var_2)
    assert section_2.children == 'Section(title=" Use \'")'
    int_0 = var_2.__len__()
    assert int_0 == 23
    str_4 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_3 = module_0.Link(str_4, none_type_1)
    var_3 = link_3.__repr__()
    assert var_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_4 = var_3.__repr__()
    assert var_4 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_5 = var_3.__str__()
    assert str_5 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_6 = " Use '"
    section_3 = module_0.Section(str_6, str_6)
    var_5 = section_3.__repr__()
    assert var_5 == 'Section(title=" Use \'")'
    str_7 = "gfRsC:6&{;|"
    section_4 = module_0.Section(str_7, str_7)
    var_6 = section_4.__repr__()
    assert var_6 == "Section(title='gfRsC:6&{;|')"
    bool_0 = True
    section_5 = module_0.Section(bool_0, bool_0)
    list_0 = [var_6, var_6]
    section_6 = module_0.Section(section_4, list_0)
    assert section_6.children == [
        "Section(title='gfRsC:6&{;|')",
        "Section(title='gfRsC:6&{;|')",
    ]
    str_8 = "gfRsC:6&{;|"
    section_7 = module_0.Section(str_8, str_8)
    list_1 = []
    section_8 = module_0.Section(section_7, list_1)
    iterator_0 = var_2.__iter__()


def test_case_612():
    str_0 = "x"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "x"
    assert section_0.children == "x"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = "page_context"
    section_1 = module_0.Section(str_1, str_1)
    str_2 = "' from the site because it conflicts with '"
    list_0 = []
    section_2 = module_0.Section(str_2, list_0)
    var_0 = section_2.__repr__()
    assert var_0 == "Section(title=\"' from the site because it conflicts with '\")"
    str_3 = "\\l;/\nKHZ=K\nU\no|2{loH"
    link_0 = module_0.Link(str_1, str_3)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "page_context"
    assert link_0.url == "\\l;/\nKHZ=K\nU\no|2{loH"
    bytes_0 = b"\xac\xb0\x17a\xfaT/\xf7\xc9"
    section_3 = module_0.Section(bytes_0, bytes_0)
    str_4 = '5eobv3h.*p"`HLX3'
    section_4 = module_0.Section(str_4, section_2)


def test_case_613():
    str_0 = "' is included in the 'nav' configuration."
    link_0 = module_0.Link(str_0, str_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "' is included in the 'nav' configuration."
    assert link_0.url == "' is included in the 'nav' configuration."
    none_type_0 = None
    section_0 = module_0.Section(none_type_0, none_type_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title is None
    assert section_0.children is None
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = module_1.urlsplit(none_type_0)
    iterator_0 = var_0.__iter__()
    str_1 = " Use '"
    section_1 = module_0.Section(str_1, str_1)
    var_1 = section_1.__repr__()
    assert var_1 == 'Section(title=" Use \'")'
    var_2 = var_1.__repr__()
    assert var_2 == "'Section(title=\" Use \\'\")'"
    str_2 = "page_context"
    section_2 = module_0.Section(str_2, str_2)
    str_3 = "' from the site because it conflicts with '"
    list_0 = []
    section_3 = module_0.Section(str_3, list_0)
    var_3 = section_3.__repr__()
    assert var_3 == "Section(title=\"' from the site because it conflicts with '\")"
    section_4 = module_0.Section(str_3, section_2)
    section_5 = module_0.Section(str_0, var_2)
    assert section_5.children == "'Section(title=\" Use \\'\")'"


def test_case_614():
    str_0 = "gfRsC:6&{;|"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "gfRsC:6&{;|"
    assert section_0.children == "gfRsC:6&{;|"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_1, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_2 = var_0.__repr__()
    assert var_2 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_3 = link_0.__repr__()
    assert var_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_2 = "page_context"
    section_1 = module_0.Section(str_2, str_2)
    str_3 = "' from the site because it conflicts with '"
    list_0 = []
    section_2 = module_0.Section(str_3, list_0)
    none_type_1 = None
    str_4 = "\n        Perform validation for a value.\n\n        The run_validation method should be implemented by subclasses.\n        "
    link_1 = module_0.Link(none_type_1, str_4)
    var_4 = link_1.__repr__()
    assert (
        var_4
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    str_5 = var_4.__str__()
    assert (
        str_5
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    int_0 = var_1.__len__()
    assert int_0 == 44


def test_case_615():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    str_1 = "gfRsC:6&{;|"
    section_1 = module_0.Section(str_1, str_1)
    str_2 = "relative_to_docs"
    link_0 = module_0.Link(str_2, section_1)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "relative_to_docs"
    assert (
        f"{type(link_0.url).__module__}.{type(link_0.url).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    section_2 = module_0.Section(section_0, var_0)
    assert section_2.children == 'Section(title=" Use \'")'
    int_0 = var_0.__len__()
    assert int_0 == 23
    str_3 = "page_context"
    section_3 = module_0.Section(str_3, str_3)
    str_4 = "' from the site because it conflicts with '"
    list_0 = []
    section_4 = module_0.Section(str_4, list_0)
    var_1 = section_3.__repr__()
    assert var_1 == "Section(title='page_context')"
    str_5 = "page_context"
    section_5 = module_0.Section(str_5, str_5)
    str_6 = "' from the site because it conflicts with '"
    list_1 = []
    section_6 = module_0.Section(str_6, list_1)
    var_2 = section_6.__repr__()
    assert var_2 == "Section(title=\"' from the site because it conflicts with '\")"
    section_7 = module_0.Section(str_6, section_5)
    int_1 = var_2.__len__()
    assert int_1 == 60
    dict_0 = {}
    str_7 = 'y\x0c[fN"W:2&:SWyz~W'
    link_1 = module_0.Link(dict_0, str_7)
    bool_0 = True
    section_8 = module_0.Section(bool_0, bool_0)
    str_8 = " Use '"
    section_9 = module_0.Section(str_8, str_8)
    var_3 = section_9.__repr__()
    assert var_3 == 'Section(title=" Use \'")'
    str_9 = 'C5B_`:"E&+;Y['
    link_2 = module_0.Link(str_9, str_9)
    int_2 = var_3.__len__()
    assert int_2 == 23
    section_10 = module_0.Section(var_3, var_3)
    assert section_10.title == 'Section(title=" Use \'")'
    assert section_10.children == 'Section(title=" Use \'")'
    none_type_0 = None
    var_4 = module_1.urlsplit(none_type_0)
    var_5 = var_4.__repr__()
    str_10 = var_5.__str__()


def test_case_616():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    bytes_0 = b"\x802c35Z\xf8"
    link_1 = module_0.Link(link_0, bytes_0)
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_2 = module_0.Link(str_1, none_type_1)
    var_2 = link_2.__repr__()
    assert var_2 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_3 = var_2.__repr__()
    assert var_3 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_4 = var_3.__repr__()
    assert var_4 == "'\"Link(title=\\'0_~6:m!(f5FgU,:rvz\\', url=None)\"'"
    var_5 = link_1.__repr__()
    assert (
        var_5
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )


def test_case_617():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    str_1 = 'C5B_`:"E&+;Y['
    link_0 = module_0.Link(str_1, str_1)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == 'C5B_`:"E&+;Y['
    assert link_0.url == 'C5B_`:"E&+;Y['
    int_0 = var_0.__len__()
    assert int_0 == 23
    section_1 = module_0.Section(var_0, var_0)
    assert section_1.title == 'Section(title=" Use \'")'
    assert section_1.children == 'Section(title=" Use \'")'
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_1 = module_0.Link(str_2, none_type_0)
    bytes_0 = b"\x802c35Z\xf8"
    link_2 = module_0.Link(link_1, bytes_0)
    var_1 = link_1.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_2 = var_1.__repr__()
    assert var_2 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_3 = "' is included in the 'nav' configuration."
    link_3 = module_0.Link(str_3, str_3)
    var_3 = var_2.__repr__()
    assert var_3 == "'\"Link(title=\\'0_~6:m!(f5FgU,:rvz\\', url=None)\"'"


def test_case_618():
    none_type_0 = None
    set_0 = {none_type_0, none_type_0, none_type_0, none_type_0}
    link_0 = module_0.Link(none_type_0, set_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title is None
    assert link_0.url == {None}
    str_0 = "gfRsC:6&{;|"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "gfRsC:6&{;|"
    assert section_0.children == "gfRsC:6&{;|"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    list_0 = []
    section_1 = module_0.Section(section_0, list_0)
    bool_0 = True
    section_2 = module_0.Section(bool_0, bool_0)
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_1, none_type_1)
    var_0 = link_1.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    section_3 = module_0.Section(none_type_1, var_1)
    assert section_3.children == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_2 = section_3.__repr__()
    assert var_2 == "Section(title=None)"
    bool_1 = True
    link_2 = module_0.Link(bool_1, bool_1)
    str_2 = " Use '"
    section_4 = module_0.Section(str_2, str_2)
    var_3 = section_4.__repr__()
    assert var_3 == 'Section(title=" Use \'")'
    int_0 = var_3.__len__()
    assert int_0 == 23
    str_3 = " Use '"
    section_5 = module_0.Section(str_3, str_3)
    var_4 = section_5.__repr__()
    assert var_4 == 'Section(title=" Use \'")'
    str_4 = 'C5B_`:"E&+;Y['
    link_3 = module_0.Link(str_4, str_4)
    int_1 = var_4.__len__()
    assert int_1 == 23
    section_6 = module_0.Section(str_3, var_4)
    assert section_6.children == 'Section(title=" Use \'")'
    str_5 = "page_context"
    section_7 = module_0.Section(str_5, str_5)
    str_6 = "' from the site because it conflicts with '"
    list_1 = []
    section_8 = module_0.Section(str_6, list_1)
    section_9 = module_0.Section(section_8, list_1)
    section_10 = module_0.Section(str_6, list_1)
    iterator_0 = var_3.__iter__()


def test_case_619():
    none_type_0 = None
    str_0 = "\n        Perform validation for a value.\n\n        The run_validation method should be implemented by subclasses.\n        "
    link_0 = module_0.Link(none_type_0, str_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title is None
    assert (
        link_0.url
        == "\n        Perform validation for a value.\n\n        The run_validation method should be implemented by subclasses.\n        "
    )
    var_0 = link_0.__repr__()
    assert (
        var_0
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    str_1 = var_0.__str__()
    assert (
        str_1
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    bool_0 = True
    link_1 = module_0.Link(bool_0, bool_0)
    var_1 = var_0.__repr__()
    assert (
        var_1
        == "\"Link(title=[blank], url='\\\\n        Perform validation for a value.\\\\n\\\\n        The run_validation method should be implemented by subclasses.\\\\n        ')\""
    )
    str_2 = "page_context"
    section_0 = module_0.Section(str_2, str_2)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_3 = "' from the site because it conflicts with '"
    list_0 = []
    section_1 = module_0.Section(str_3, list_0)
    var_2 = section_1.__repr__()
    assert var_2 == "Section(title=\"' from the site because it conflicts with '\")"
    section_2 = module_0.Section(str_3, section_0)
    int_0 = var_2.__len__()
    assert int_0 == 60
    str_4 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_2 = module_0.Link(str_4, none_type_1)
    var_3 = link_2.__repr__()
    assert var_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_4 = var_3.__repr__()
    assert var_4 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    iterator_0 = var_3.__iter__()
    var_5 = var_3.__repr__()
    assert var_5 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_5 = " Use '"
    section_3 = module_0.Section(str_5, str_5)
    var_6 = section_3.__repr__()
    assert var_6 == 'Section(title=" Use \'")'
    str_6 = 'C5B_`:"E&+;Y['
    link_3 = module_0.Link(str_6, str_6)
    int_1 = var_6.__len__()
    assert int_1 == 23
    section_4 = module_0.Section(str_5, var_6)
    assert section_4.children == 'Section(title=" Use \'")'
    iterator_1 = var_0.__iter__()


def test_case_620():
    str_0 = "gfRsC:6&{;|"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "gfRsC:6&{;|"
    assert section_0.children == "gfRsC:6&{;|"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == "Section(title='gfRsC:6&{;|')"
    bool_0 = True
    section_1 = module_0.Section(bool_0, bool_0)
    list_0 = [var_0, var_0]
    section_2 = module_0.Section(section_0, list_0)
    assert section_2.children == [
        "Section(title='gfRsC:6&{;|')",
        "Section(title='gfRsC:6&{;|')",
    ]
    str_1 = " Use '"
    section_3 = module_0.Section(str_1, str_1)
    var_1 = section_3.__repr__()
    assert var_1 == 'Section(title=" Use \'")'
    str_2 = "gfRsC:6&{;|"
    section_4 = module_0.Section(str_2, str_2)
    str_3 = "relative_to_docs"
    link_0 = module_0.Link(str_3, section_4)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "relative_to_docs"
    assert (
        f"{type(link_0.url).__module__}.{type(link_0.url).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    section_5 = module_0.Section(section_3, var_1)
    assert section_5.children == 'Section(title=" Use \'")'
    int_0 = var_1.__len__()
    assert int_0 == 23
    var_2 = var_1.__repr__()
    assert var_2 == "'Section(title=\" Use \\'\")'"


def test_case_621():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_1 = var_0.__str__()
    assert str_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_2 = 'C5B_`:"E&+;Y['
    link_1 = module_0.Link(str_2, str_2)
    int_0 = var_0.__len__()
    assert int_0 == 42
    str_3 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_2 = module_0.Link(str_3, none_type_1)
    var_2 = link_2.__repr__()
    assert var_2 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_3 = var_2.__repr__()
    assert var_3 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    iterator_0 = var_2.__iter__()
    var_4 = var_2.__repr__()
    assert var_4 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    bool_0 = True
    section_0 = module_0.Section(bool_0, bool_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title is True
    assert section_0.children is True
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    none_type_2 = None
    str_4 = "\n        Perform validation for a value.\n\n        The run_validation method should be implemented by subclasses.\n        "
    link_3 = module_0.Link(none_type_2, str_4)
    var_5 = link_3.__repr__()
    assert (
        var_5
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    str_5 = var_5.__str__()
    assert (
        str_5
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    str_6 = " Use '"
    section_1 = module_0.Section(str_6, str_6)
    var_6 = section_1.__repr__()
    assert var_6 == 'Section(title=" Use \'")'
    var_7 = var_6.__repr__()
    assert var_7 == "'Section(title=\" Use \\'\")'"
    set_0 = set()
    navigation_0 = module_0.Navigation(set_0, set_0)
    assert (
        f"{type(navigation_0).__module__}.{type(navigation_0).__qualname__}"
        == "mkdocs.structure.nav.Navigation"
    )
    assert len(navigation_0) == 0
    str_7 = navigation_0.__str__()
    iterator_1 = var_7.__iter__()
    str_8 = "\tts+ibz1X><_>tpe_(x"
    link_4 = module_0.Link(var_2, str_8)
    assert link_4.title == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"


def test_case_622():
    set_0 = set()
    navigation_0 = module_0.Navigation(set_0, set_0)
    assert (
        f"{type(navigation_0).__module__}.{type(navigation_0).__qualname__}"
        == "mkdocs.structure.nav.Navigation"
    )
    assert len(navigation_0) == 0
    str_0 = navigation_0.__str__()
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_1, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    iterator_0 = var_0.__iter__()
    var_2 = var_0.__repr__()
    assert var_2 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    none_type_1 = None
    section_0 = module_0.Section(none_type_1, none_type_1)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title is None
    assert section_0.children is None
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_3 = module_1.urlsplit(none_type_1)
    iterator_1 = var_3.__iter__()
    str_2 = "gfRsC:6&{;|"
    section_1 = module_0.Section(str_2, str_2)
    str_3 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_1 = module_0.Link(str_3, none_type_2)
    var_4 = link_1.__repr__()
    assert var_4 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_5 = var_4.__repr__()
    assert var_5 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_6 = var_4.__repr__()
    assert var_6 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_7 = link_1.__repr__()
    assert var_7 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_4 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_2 = module_0.Link(str_4, none_type_3)
    var_8 = link_2.__repr__()
    assert var_8 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_9 = var_8.__repr__()
    assert var_9 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_10 = var_9.__repr__()
    assert var_10 == "'\"Link(title=\\'0_~6:m!(f5FgU,:rvz\\', url=None)\"'"
    str_5 = "0_~6:m!(f5FgU,:rvz"
    none_type_4 = None
    link_3 = module_0.Link(str_5, none_type_4)
    bytes_0 = b"\x802c35Z\xf8"
    link_4 = module_0.Link(link_3, bytes_0)
    var_11 = link_3.__repr__()
    assert var_11 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_6 = " Use '"
    section_2 = module_0.Section(str_6, str_6)
    var_12 = section_2.__repr__()
    assert var_12 == 'Section(title=" Use \'")'
    str_7 = "0_~6:m!(f5FgU,:rvz"
    none_type_5 = None
    link_5 = module_0.Link(str_7, none_type_5)
    bytes_1 = b"\x802c35Z\xf8"
    link_6 = module_0.Link(link_5, bytes_1)
    iterator_2 = var_12.__iter__()
    bool_0 = True
    section_3 = module_0.Section(bool_0, bool_0)
    str_8 = "0_~6:m!(f5FgU,:rvz"
    none_type_6 = None
    link_7 = module_0.Link(str_8, none_type_6)
    var_13 = link_7.__repr__()
    assert var_13 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_14 = var_13.__repr__()
    assert var_14 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    section_4 = module_0.Section(none_type_6, var_14)
    assert section_4.children == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_15 = section_4.__repr__()
    assert var_15 == "Section(title=None)"
    none_type_7 = None
    var_16 = module_1.urlsplit(none_type_7)
    var_17 = var_16.__repr__()
    str_9 = "page_context"
    section_5 = module_0.Section(str_9, str_9)
    str_10 = "' from the site because it conflicts with '"
    list_0 = []
    section_6 = module_0.Section(str_10, list_0)
    var_18 = section_6.__repr__()
    assert var_18 == "Section(title=\"' from the site because it conflicts with '\")"
    section_7 = module_0.Section(str_10, section_5)
    int_0 = var_18.__len__()
    assert int_0 == 60
    section_8 = module_0.Section(var_0, var_16)
    assert section_8.title == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"


def test_case_623():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_1, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    bytes_0 = b"\x802c35Z\xf8"
    link_1 = module_0.Link(link_0, bytes_0)
    iterator_0 = var_0.__iter__()
    tuple_0 = ()
    navigation_0 = module_0.Navigation(section_0, tuple_0)


def test_case_624():
    str_0 = "page_context"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_1, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = section_0.__repr__()
    assert var_1 == "Section(title='page_context')"
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_2, none_type_1)
    var_2 = link_1.__repr__()
    assert var_2 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_3 = var_2.__repr__()
    assert var_3 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_3 = var_2.__str__()
    assert str_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_4 = 'C5B_`:"E&+;Y['
    link_2 = module_0.Link(str_4, str_4)
    int_0 = var_2.__len__()
    assert int_0 == 42
    str_5 = " Use '"
    section_1 = module_0.Section(str_5, str_5)
    var_4 = section_1.__repr__()
    assert var_4 == 'Section(title=" Use \'")'
    str_6 = 'C5B_`:"E&+;Y['
    link_3 = module_0.Link(str_6, str_6)
    int_1 = var_4.__len__()
    assert int_1 == 23
    none_type_2 = None
    str_7 = "\n        Perform validation for a value.\n\n        The run_validation method should be implemented by subclasses.\n        "
    link_4 = module_0.Link(none_type_2, str_7)
    var_5 = link_4.__repr__()
    assert (
        var_5
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    str_8 = var_5.__str__()
    assert (
        str_8
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    str_9 = " Use '"
    section_2 = module_0.Section(str_9, str_9)
    var_6 = section_2.__repr__()
    assert var_6 == 'Section(title=" Use \'")'
    str_10 = "gfRsC:6&{;|"
    section_3 = module_0.Section(str_10, str_10)
    str_11 = "relative_to_docs"
    link_5 = module_0.Link(str_11, section_3)
    section_4 = module_0.Section(section_2, var_6)
    assert section_4.children == 'Section(title=" Use \'")'
    int_2 = var_1.__len__()
    assert int_2 == 29


def test_case_625():
    bool_0 = True
    link_0 = module_0.Link(bool_0, bool_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title is True
    assert link_0.url is True
    str_0 = "page_context"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = "' from the site because it conflicts with '"
    list_0 = []
    section_1 = module_0.Section(str_1, list_0)
    section_2 = module_0.Section(section_1, list_0)
    section_3 = module_0.Section(str_1, list_0)
    str_2 = " Use '"
    section_4 = module_0.Section(str_2, str_2)
    var_0 = section_4.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    int_0 = var_0.__len__()
    assert int_0 == 23
    var_1 = var_0.__repr__()
    assert var_1 == "'Section(title=\" Use \\'\")'"
    link_1 = module_0.Link(int_0, var_0)
    assert link_1.title == 23
    assert link_1.url == 'Section(title=" Use \'")'
    int_1 = var_1.__len__()
    assert int_1 == 26


def test_case_626():
    str_0 = "page_context"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = "' from the site because it conflicts with '"
    list_0 = []
    section_1 = module_0.Section(str_1, list_0)
    var_0 = section_1.__repr__()
    assert var_0 == "Section(title=\"' from the site because it conflicts with '\")"
    section_2 = module_0.Section(str_1, section_0)
    int_0 = var_0.__len__()
    assert int_0 == 60
    str_2 = " Use '"
    section_3 = module_0.Section(str_2, str_2)
    var_1 = section_3.__repr__()
    assert var_1 == 'Section(title=" Use \'")'
    var_2 = var_1.__repr__()
    assert var_2 == "'Section(title=\" Use \\'\")'"
    dict_0 = {}
    str_3 = 'y\x0c[fN"W:2&:SWyz~W'
    link_0 = module_0.Link(dict_0, str_3)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == {}
    assert link_0.url == 'y\x0c[fN"W:2&:SWyz~W'
    section_4 = module_0.Section(str_2, var_2)
    assert section_4.children == "'Section(title=\" Use \\'\")'"
    list_1 = [section_4, section_3, section_4]
    section_5 = module_0.Section(var_2, list_1)
    assert section_5.title == "'Section(title=\" Use \\'\")'"


def test_case_627():
    str_0 = "page_context"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = "' from the site because it conflicts with '"
    list_0 = []
    section_1 = module_0.Section(str_1, list_0)
    var_0 = section_1.__repr__()
    assert var_0 == "Section(title=\"' from the site because it conflicts with '\")"
    bool_0 = True
    link_0 = module_0.Link(bool_0, bool_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title is True
    assert link_0.url is True
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_1 = module_0.Link(str_2, none_type_0)
    var_1 = link_1.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_2 = var_1.__repr__()
    assert var_2 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    iterator_0 = var_1.__iter__()
    bool_1 = True
    section_2 = module_0.Section(bool_1, bool_1)
    str_3 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_2 = module_0.Link(str_3, none_type_1)
    var_3 = link_2.__repr__()
    assert var_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_4 = var_3.__repr__()
    assert var_4 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    section_3 = module_0.Section(none_type_1, var_4)
    assert section_3.children == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_5 = section_3.__repr__()
    assert var_5 == "Section(title=None)"
    str_4 = "-poFd05e"
    link_3 = module_0.Link(section_0, str_4)


def test_case_628():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    int_0 = var_0.__len__()
    assert int_0 == 23
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_1, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    int_1 = var_0.__len__()
    assert int_1 == 23
    int_2 = var_0.__len__()
    assert int_2 == 23
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_2, none_type_1)
    bytes_0 = b"\x802c35Z\xf8"
    link_2 = module_0.Link(link_1, bytes_0)
    dict_0 = {}
    str_3 = 'y\x0c[fN"W:2&:SWyz~W'
    link_3 = module_0.Link(dict_0, str_3)
    var_1 = link_2.__repr__()
    assert (
        var_1
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )
    str_4 = "page_context"
    section_1 = module_0.Section(str_4, str_4)
    str_5 = "' from the site because it conflicts with '"
    list_0 = []
    section_2 = module_0.Section(str_5, list_0)
    section_3 = module_0.Section(section_2, list_0)
    str_6 = " Use '"
    section_4 = module_0.Section(str_6, str_6)
    var_2 = section_4.__repr__()
    assert var_2 == 'Section(title=" Use \'")'
    var_3 = var_2.__repr__()
    assert var_3 == "'Section(title=\" Use \\'\")'"
    bool_0 = True
    link_4 = module_0.Link(bool_0, bool_0)
    var_4 = var_2.__repr__()
    assert var_4 == "'Section(title=\" Use \\'\")'"


def test_case_629():
    dict_0 = {}
    str_0 = 'y\x0c[fN"W:2&:SWyz~W'
    link_0 = module_0.Link(dict_0, str_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == {}
    assert link_0.url == 'y\x0c[fN"W:2&:SWyz~W'
    var_0 = module_1.urlsplit(str_0)
    var_1 = var_0.__repr__()
    iterator_0 = var_1.__iter__()


def test_case_630():
    str_0 = "gfRsC:6&{;|"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "gfRsC:6&{;|"
    assert section_0.children == "gfRsC:6&{;|"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = " Use '"
    section_1 = module_0.Section(str_1, str_1)
    var_0 = section_1.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    int_0 = var_0.__len__()
    assert int_0 == 23
    var_1 = var_0.__repr__()
    assert var_1 == "'Section(title=\" Use \\'\")'"
    var_2 = var_1.__repr__()
    assert var_2 == "'\\'Section(title=\" Use \\\\\\'\")\\''"
    str_2 = " Use '"
    section_2 = module_0.Section(str_2, str_2)
    var_3 = section_2.__repr__()
    assert var_3 == 'Section(title=" Use \'")'
    str_3 = " Use '"
    section_3 = module_0.Section(str_3, str_3)
    var_4 = section_3.__repr__()
    assert var_4 == 'Section(title=" Use \'")'
    str_4 = "gfRsC:6&{;|"
    section_4 = module_0.Section(str_4, str_4)
    str_5 = "relative_to_docs"
    link_0 = module_0.Link(str_5, section_4)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "relative_to_docs"
    assert (
        f"{type(link_0.url).__module__}.{type(link_0.url).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    str_6 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_1 = module_0.Link(str_6, none_type_0)
    var_5 = link_1.__repr__()
    assert var_5 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_6 = var_5.__repr__()
    assert var_6 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_7 = var_5.__repr__()
    assert var_7 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    none_type_1 = None
    section_5 = module_0.Section(none_type_1, none_type_1)
    var_8 = module_1.urlsplit(none_type_1)
    iterator_0 = var_8.__iter__()
    str_7 = " Use '"
    section_6 = module_0.Section(str_7, str_7)
    var_9 = section_6.__repr__()
    assert var_9 == 'Section(title=" Use \'")'
    str_8 = "gfRsC:6&{;|"
    section_7 = module_0.Section(str_8, str_8)
    str_9 = "relative_to_docs"
    link_2 = module_0.Link(str_9, section_7)
    section_8 = module_0.Section(section_6, var_9)
    assert section_8.children == 'Section(title=" Use \'")'
    int_1 = var_9.__len__()
    assert int_1 == 23
    str_10 = " Use '"
    section_9 = module_0.Section(str_10, str_10)
    var_10 = section_9.__repr__()
    assert var_10 == 'Section(title=" Use \'")'
    int_2 = var_10.__len__()
    assert int_2 == 23
    var_11 = var_10.__repr__()
    assert var_11 == "'Section(title=\" Use \\'\")'"
    link_3 = module_0.Link(int_2, var_10)
    assert link_3.title == 23
    assert link_3.url == 'Section(title=" Use \'")'
    link_4 = module_0.Link(var_7, int_0)
    assert link_4.title == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    assert link_4.url == 23


def test_case_631():
    bool_0 = True
    section_0 = module_0.Section(bool_0, bool_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title is True
    assert section_0.children is True
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    int_0 = var_1.__len__()
    assert int_0 == 44
    str_1 = "gfRsC:6&{;|"
    section_1 = module_0.Section(str_1, str_1)
    str_2 = " Use '"
    section_2 = module_0.Section(str_2, str_2)
    var_2 = section_2.__repr__()
    assert var_2 == 'Section(title=" Use \'")'
    str_3 = "gfRsC:6&{;|"
    section_3 = module_0.Section(str_3, str_3)
    str_4 = "relative_to_docs"
    link_1 = module_0.Link(str_4, section_3)
    section_4 = module_0.Section(section_2, var_2)
    assert section_4.children == 'Section(title=" Use \'")'
    int_1 = var_2.__len__()
    assert int_1 == 23
    str_5 = " Use '"
    section_5 = module_0.Section(str_5, str_5)
    var_3 = section_5.__repr__()
    assert var_3 == 'Section(title=" Use \'")'
    var_4 = var_3.__repr__()
    assert var_4 == "'Section(title=\" Use \\'\")'"
    str_6 = " Use '"
    section_6 = module_0.Section(str_6, str_6)
    var_5 = section_6.__repr__()
    assert var_5 == 'Section(title=" Use \'")'
    str_7 = "gfRsC:6&{;|"
    section_7 = module_0.Section(str_7, str_7)
    str_8 = "relative_to_docs"
    link_2 = module_0.Link(str_8, section_7)
    section_8 = module_0.Section(section_6, var_5)
    assert section_8.children == 'Section(title=" Use \'")'
    int_2 = var_3.__len__()
    assert int_2 == 23


def test_case_632():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    iterator_0 = var_0.__iter__()
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_1, none_type_1)
    var_2 = link_1.__repr__()
    assert var_2 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_3 = var_2.__repr__()
    assert var_3 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_2 = "gfRsC:6&{;|"
    section_0 = module_0.Section(str_2, str_2)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "gfRsC:6&{;|"
    assert section_0.children == "gfRsC:6&{;|"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_3 = " Use '"
    section_1 = module_0.Section(str_3, str_3)
    var_4 = section_1.__repr__()
    assert var_4 == 'Section(title=" Use \'")'
    int_0 = var_4.__len__()
    assert int_0 == 23
    var_5 = var_4.__repr__()
    assert var_5 == "'Section(title=\" Use \\'\")'"
    var_6 = var_5.__repr__()
    assert var_6 == "'\\'Section(title=\" Use \\\\\\'\")\\''"
    bool_0 = True
    section_2 = module_0.Section(bool_0, bool_0)
    str_4 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_2 = module_0.Link(str_4, none_type_2)
    var_7 = link_2.__repr__()
    assert var_7 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_8 = var_7.__repr__()
    assert var_8 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    section_3 = module_0.Section(none_type_2, var_8)
    assert section_3.children == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_5 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_3 = module_0.Link(str_5, none_type_3)
    bytes_0 = b"\x802c35Z\xf8"
    link_4 = module_0.Link(link_3, bytes_0)
    var_9 = link_3.__repr__()
    assert var_9 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    iterator_1 = var_9.__iter__()
    var_10 = link_0.__repr__()
    assert var_10 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"


def test_case_633():
    bool_0 = True
    section_0 = module_0.Section(bool_0, bool_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title is True
    assert section_0.children is True
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    section_1 = module_0.Section(none_type_0, var_1)
    assert section_1.children == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_2 = section_1.__repr__()
    assert var_2 == "Section(title=None)"
    str_1 = " Use '"
    section_2 = module_0.Section(str_1, str_1)
    var_3 = section_2.__repr__()
    assert var_3 == 'Section(title=" Use \'")'
    str_2 = "gfRsC:6&{;|"
    section_3 = module_0.Section(str_2, str_2)
    str_3 = "relative_to_docs"
    link_1 = module_0.Link(str_3, section_3)
    section_4 = module_0.Section(section_2, var_3)
    assert section_4.children == 'Section(title=" Use \'")'
    int_0 = var_3.__len__()
    assert int_0 == 23
    str_4 = " Use '"
    section_5 = module_0.Section(str_4, str_4)
    var_4 = section_5.__repr__()
    assert var_4 == 'Section(title=" Use \'")'
    int_1 = var_4.__len__()
    assert int_1 == 23
    str_5 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_2 = module_0.Link(str_5, none_type_1)
    int_2 = var_4.__len__()
    assert int_2 == 23
    str_6 = "page_context"
    section_6 = module_0.Section(str_6, str_6)
    str_7 = "' from the site because it conflicts with '"
    list_0 = []
    section_7 = module_0.Section(str_7, list_0)
    str_8 = "localhost"
    link_3 = module_0.Link(str_7, str_8)
    str_9 = " Use '"
    section_8 = module_0.Section(str_9, str_9)
    var_5 = section_8.__repr__()
    assert var_5 == 'Section(title=" Use \'")'
    str_10 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_4 = module_0.Link(str_10, none_type_2)
    var_6 = link_4.__repr__()
    assert var_6 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    int_3 = var_6.__len__()
    assert int_3 == 42
    int_4 = var_5.__len__()
    assert int_4 == 23
    none_type_3 = None
    set_0 = {none_type_3, none_type_3, none_type_3, none_type_3}
    link_5 = module_0.Link(none_type_3, set_0)
    set_1 = set()
    navigation_0 = module_0.Navigation(set_1, set_1)
    assert (
        f"{type(navigation_0).__module__}.{type(navigation_0).__qualname__}"
        == "mkdocs.structure.nav.Navigation"
    )
    assert len(navigation_0) == 0
    str_11 = navigation_0.__str__()
    str_12 = "0_~6:m!(f5FgU,:rvz"
    none_type_4 = None
    link_6 = module_0.Link(str_12, none_type_4)
    var_7 = link_6.__repr__()
    assert var_7 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_8 = var_7.__repr__()
    assert var_8 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_13 = " Use '"
    section_9 = module_0.Section(str_13, str_13)
    var_9 = section_9.__repr__()
    assert var_9 == 'Section(title=" Use \'")'
    var_10 = var_9.__repr__()
    assert var_10 == "'Section(title=\" Use \\'\")'"
    int_5 = var_0.__len__()
    assert int_5 == 42


def test_case_634():
    bool_0 = True
    section_0 = module_0.Section(bool_0, bool_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title is True
    assert section_0.children is True
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    section_1 = module_0.Section(none_type_0, var_1)
    assert section_1.children == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_2 = section_1.__repr__()
    assert var_2 == "Section(title=None)"
    none_type_1 = None
    str_1 = "\n        Perform validation for a value.\n\n        The run_validation method should be implemented by subclasses.\n        "
    link_1 = module_0.Link(none_type_1, str_1)
    var_3 = link_1.__repr__()
    assert (
        var_3
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    str_2 = var_3.__str__()
    assert (
        str_2
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    str_3 = "gfRsC:6&{;|"
    section_2 = module_0.Section(str_3, str_3)
    var_4 = section_2.__repr__()
    assert var_4 == "Section(title='gfRsC:6&{;|')"
    str_4 = " Use '"
    section_3 = module_0.Section(str_4, str_4)
    var_5 = section_3.__repr__()
    assert var_5 == 'Section(title=" Use \'")'
    str_5 = "page_context"
    section_4 = module_0.Section(str_5, str_5)
    str_6 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_2 = module_0.Link(str_6, none_type_2)
    var_6 = link_2.__repr__()
    assert var_6 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_7 = section_4.__repr__()
    assert var_7 == "Section(title='page_context')"
    str_7 = "page_context"
    section_5 = module_0.Section(str_7, str_7)
    str_8 = "' from the site because it conflicts with '"
    list_0 = []
    section_6 = module_0.Section(str_8, list_0)
    section_7 = module_0.Section(section_6, list_0)
    section_8 = module_0.Section(str_8, list_0)
    var_8 = section_8.__repr__()
    assert var_8 == "Section(title=\"' from the site because it conflicts with '\")"


def test_case_635():
    str_0 = "page_context"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = "' from the site because it conflicts with '"
    list_0 = []
    section_1 = module_0.Section(str_1, list_0)
    var_0 = section_1.__repr__()
    assert var_0 == "Section(title=\"' from the site because it conflicts with '\")"
    section_2 = module_0.Section(str_1, section_0)
    dict_0 = {}
    str_2 = 'y\x0c[fN"W:2&:SWyz~W'
    link_0 = module_0.Link(dict_0, str_2)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == {}
    assert link_0.url == 'y\x0c[fN"W:2&:SWyz~W'
    section_3 = module_0.Section(str_2, str_2)
    section_4 = module_0.Section(str_2, str_2)
    str_3 = " Use '"
    section_5 = module_0.Section(str_3, str_3)
    var_1 = section_5.__repr__()
    assert var_1 == 'Section(title=" Use \'")'
    str_4 = "gfRsC:6&{;|"
    section_6 = module_0.Section(str_4, str_4)
    str_5 = "relative_to_docs"
    link_1 = module_0.Link(str_5, section_6)
    section_7 = module_0.Section(section_5, var_1)
    assert section_7.children == 'Section(title=" Use \'")'
    none_type_0 = None
    set_0 = {none_type_0, none_type_0, none_type_0, none_type_0}
    link_2 = module_0.Link(none_type_0, set_0)
    str_6 = " Use '"
    section_8 = module_0.Section(str_6, str_6)
    var_2 = section_8.__repr__()
    assert var_2 == 'Section(title=" Use \'")'
    str_7 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_3 = module_0.Link(str_7, none_type_1)
    var_3 = link_3.__repr__()
    assert var_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    int_0 = var_3.__len__()
    assert int_0 == 42
    int_1 = var_2.__len__()
    assert int_1 == 23
    link_4 = module_0.Link(section_3, section_7)


def test_case_636():
    str_0 = 'C5B_`:"E&+;Y['
    link_0 = module_0.Link(str_0, str_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == 'C5B_`:"E&+;Y['
    assert link_0.url == 'C5B_`:"E&+;Y['
    str_1 = " Use '"
    section_0 = module_0.Section(str_1, str_1)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    int_0 = var_0.__len__()
    assert int_0 == 23
    str_2 = "page_context"
    section_1 = module_0.Section(str_2, str_2)
    str_3 = " Use '"
    section_2 = module_0.Section(str_3, str_3)
    var_1 = section_2.__repr__()
    assert var_1 == 'Section(title=" Use \'")'
    str_4 = 'C5B_`:"E&+;Y['
    link_1 = module_0.Link(str_4, str_4)
    int_1 = var_1.__len__()
    assert int_1 == 23
    section_3 = module_0.Section(str_3, var_1)
    assert section_3.children == 'Section(title=" Use \'")'
    none_type_0 = None
    section_4 = module_0.Section(none_type_0, none_type_0)
    str_5 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_2 = module_0.Link(str_5, none_type_1)
    var_2 = link_2.__repr__()
    assert var_2 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_3 = var_2.__repr__()
    assert var_3 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_4 = var_2.__repr__()
    assert var_4 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_5 = link_2.__repr__()
    assert var_5 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_6 = var_1.__repr__()
    assert var_6 == "'Section(title=\" Use \\'\")'"


def test_case_637():
    dict_0 = {}
    str_0 = 'y\x0c[fN"W:2&:SWyz~W'
    link_0 = module_0.Link(dict_0, str_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == {}
    assert link_0.url == 'y\x0c[fN"W:2&:SWyz~W'
    var_0 = module_1.urlsplit(str_0)
    var_1 = var_0.__repr__()
    iterator_0 = var_1.__iter__()
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_1 = module_0.Link(str_1, none_type_0)
    bytes_0 = b"\x802c35Z\xf8"
    link_2 = module_0.Link(link_1, bytes_0)
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_3 = module_0.Link(str_2, none_type_1)
    var_2 = link_3.__repr__()
    assert var_2 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_3 = var_2.__repr__()
    assert var_3 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_3 = var_2.__str__()
    assert str_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_4 = 'C5B_`:"E&+;Y['
    link_4 = module_0.Link(str_4, str_4)
    int_0 = var_2.__len__()
    assert int_0 == 42
    str_5 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_5 = module_0.Link(str_5, none_type_2)
    bytes_1 = b"\x802c35Z\xf8"
    link_6 = module_0.Link(link_5, bytes_1)
    bool_0 = True
    section_0 = module_0.Section(bool_0, bool_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title is True
    assert section_0.children is True
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_4 = link_6.__repr__()
    assert (
        var_4
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )
    str_6 = var_4.__str__()
    assert (
        str_6
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )
    bool_1 = True
    section_1 = module_0.Section(bool_1, bool_1)
    str_7 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_7 = module_0.Link(str_7, none_type_3)
    var_5 = link_7.__repr__()
    assert var_5 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_6 = var_5.__repr__()
    assert var_6 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    section_2 = module_0.Section(none_type_3, var_6)
    assert section_2.children == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_8 = "0_~6:m!(f5FgU,:rvz"
    none_type_4 = None
    link_8 = module_0.Link(str_8, none_type_4)
    var_7 = link_8.__repr__()
    assert var_7 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_8 = var_7.__repr__()
    assert var_8 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_9 = var_8.__repr__()
    assert var_9 == "'\"Link(title=\\'0_~6:m!(f5FgU,:rvz\\', url=None)\"'"
    str_9 = "0_~6:m!(f5FgU,:rvz"
    none_type_5 = None
    link_9 = module_0.Link(str_9, none_type_5)
    var_10 = link_9.__repr__()
    assert var_10 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_11 = var_10.__repr__()
    assert var_11 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_12 = var_10.__repr__()
    assert var_12 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_10 = "0_~6:m!(f5FgU,:rvz"
    none_type_6 = None
    link_10 = module_0.Link(str_10, none_type_6)
    var_13 = link_10.__repr__()
    assert var_13 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_14 = var_13.__repr__()
    assert var_14 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_15 = var_14.__repr__()
    assert var_15 == "'\"Link(title=\\'0_~6:m!(f5FgU,:rvz\\', url=None)\"'"
    str_11 = "gfRsC:6&{;|"
    section_3 = module_0.Section(str_11, str_11)
    var_16 = section_3.__repr__()
    assert var_16 == "Section(title='gfRsC:6&{;|')"
    bool_2 = True
    section_4 = module_0.Section(bool_2, bool_2)
    list_0 = [var_16, var_16]
    section_5 = module_0.Section(section_3, list_0)
    assert section_5.children == [
        "Section(title='gfRsC:6&{;|')",
        "Section(title='gfRsC:6&{;|')",
    ]
    var_17 = link_4.__repr__()
    assert var_17 == "Link(title='C5B_`:\"E&+;Y[', url='C5B_`:\"E&+;Y[')"


def test_case_638():
    str_0 = "x"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "x"
    assert section_0.children == "x"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    none_type_0 = None
    var_0 = module_1.urlsplit(none_type_0)
    var_1 = var_0.__repr__()
    str_1 = " Use '"
    section_1 = module_0.Section(str_1, str_1)
    var_2 = section_1.__repr__()
    assert var_2 == 'Section(title=" Use \'")'
    str_2 = 'C5B_`:"E&+;Y['
    link_0 = module_0.Link(str_2, str_2)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == 'C5B_`:"E&+;Y['
    assert link_0.url == 'C5B_`:"E&+;Y['
    int_0 = var_2.__len__()
    assert int_0 == 23
    str_3 = " Use '"
    section_2 = module_0.Section(str_3, str_3)
    var_3 = section_2.__repr__()
    assert var_3 == 'Section(title=" Use \'")'
    var_4 = var_3.__repr__()
    assert var_4 == "'Section(title=\" Use \\'\")'"
    dict_0 = {}
    str_4 = 'y\x0c[fN"W:2&:SWyz~W'
    link_1 = module_0.Link(dict_0, str_4)
    section_3 = module_0.Section(str_3, var_4)
    assert section_3.children == "'Section(title=\" Use \\'\")'"
    str_5 = " Use '"
    section_4 = module_0.Section(str_5, str_5)
    var_5 = section_4.__repr__()
    assert var_5 == 'Section(title=" Use \'")'
    str_6 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_2 = module_0.Link(str_6, none_type_1)
    var_6 = link_2.__repr__()
    assert var_6 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    int_1 = var_6.__len__()
    assert int_1 == 42
    str_7 = "page_context"
    section_5 = module_0.Section(str_7, str_7)
    str_8 = "' from the site because it conflicts with '"
    list_0 = []
    section_6 = module_0.Section(str_8, list_0)
    str_9 = " Use '"
    section_7 = module_0.Section(str_9, str_9)
    var_7 = section_7.__repr__()
    assert var_7 == 'Section(title=" Use \'")'
    str_10 = "gfRsC:6&{;|"
    section_8 = module_0.Section(str_10, str_10)
    str_11 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_3 = module_0.Link(str_11, none_type_2)
    var_8 = link_3.__repr__()
    assert var_8 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_9 = var_8.__repr__()
    assert var_9 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_10 = var_8.__repr__()
    assert var_10 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_11 = link_3.__repr__()
    assert var_11 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    section_9 = module_0.Section(var_4, link_3)
    assert section_9.title == "'Section(title=\" Use \\'\")'"


def test_case_639():
    str_0 = "page_context"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = "' from the site because it conflicts with '"
    list_0 = []
    section_1 = module_0.Section(str_1, list_0)
    var_0 = section_1.__repr__()
    assert var_0 == "Section(title=\"' from the site because it conflicts with '\")"
    section_2 = module_0.Section(str_1, section_0)
    int_0 = var_0.__len__()
    assert int_0 == 60
    bool_0 = True
    link_0 = module_0.Link(bool_0, bool_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title is True
    assert link_0.url is True
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_1 = module_0.Link(str_2, none_type_0)
    bytes_0 = b"\x802c35Z\xf8"
    link_2 = module_0.Link(link_1, bytes_0)
    var_1 = link_1.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_2 = var_1.__repr__()
    assert var_2 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_3 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_3 = module_0.Link(str_3, none_type_1)
    var_3 = link_3.__repr__()
    assert var_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_4 = var_3.__repr__()
    assert var_4 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_4 = var_3.__str__()
    assert str_4 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_5 = var_3.__repr__()
    assert var_5 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_5 = "gfRsC:6&{;|"
    section_3 = module_0.Section(str_5, str_5)
    var_6 = section_3.__repr__()
    assert var_6 == "Section(title='gfRsC:6&{;|')"
    bool_1 = True
    section_4 = module_0.Section(bool_1, bool_1)
    list_1 = [var_6, var_6]
    section_5 = module_0.Section(section_3, list_1)
    assert section_5.children == [
        "Section(title='gfRsC:6&{;|')",
        "Section(title='gfRsC:6&{;|')",
    ]
    none_type_2 = None
    str_6 = "\n        Perform validation for a value.\n\n        The run_validation method should be implemented by subclasses.\n        "
    link_4 = module_0.Link(none_type_2, str_6)
    var_7 = link_4.__repr__()
    assert (
        var_7
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    str_7 = var_7.__str__()
    assert (
        str_7
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    bool_2 = True
    link_5 = module_0.Link(bool_2, bool_2)
    var_8 = var_7.__repr__()
    assert (
        var_8
        == "\"Link(title=[blank], url='\\\\n        Perform validation for a value.\\\\n\\\\n        The run_validation method should be implemented by subclasses.\\\\n        ')\""
    )
    str_8 = "page_context"
    section_6 = module_0.Section(str_8, str_8)
    str_9 = "page_context"
    section_7 = module_0.Section(str_9, str_9)
    str_10 = "' from the site because it conflicts with '"
    list_2 = []
    section_8 = module_0.Section(str_10, list_2)
    dict_0 = {}
    str_11 = 'y\x0c[fN"W:2&:SWyz~W'
    link_6 = module_0.Link(dict_0, str_11)
    var_9 = module_1.urlsplit(str_11)
    var_10 = var_9.__repr__()
    iterator_0 = var_10.__iter__()
    str_12 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_7 = module_0.Link(str_12, none_type_3)
    bytes_1 = b"\x802c35Z\xf8"
    link_8 = module_0.Link(link_7, bytes_1)
    int_1 = var_4.__len__()
    assert int_1 == 44


def test_case_640():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_2 = var_1.__repr__()
    assert var_2 == "'\"Link(title=\\'0_~6:m!(f5FgU,:rvz\\', url=None)\"'"
    str_1 = " Use '"
    section_0 = module_0.Section(str_1, str_1)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_3 = section_0.__repr__()
    assert var_3 == 'Section(title=" Use \'")'
    str_2 = 'C5B_`:"E&+;Y['
    link_1 = module_0.Link(str_2, str_2)
    int_0 = var_3.__len__()
    assert int_0 == 23
    str_3 = "$9.}1Av5,.}"
    link_2 = module_0.Link(str_3, str_3)
    var_4 = var_3.__repr__()
    assert var_4 == "'Section(title=\" Use \\'\")'"
    bool_0 = True
    section_1 = module_0.Section(bool_0, bool_0)
    str_4 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_3 = module_0.Link(str_4, none_type_1)
    var_5 = link_3.__repr__()
    assert var_5 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_6 = var_5.__repr__()
    assert var_6 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    section_2 = module_0.Section(none_type_1, var_6)
    assert section_2.children == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_5 = "x"
    section_3 = module_0.Section(str_5, str_5)
    link_4 = module_0.Link(var_1, str_4)
    assert link_4.title == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""


def test_case_641():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    var_1 = var_0.__repr__()
    assert var_1 == "'Section(title=\" Use \\'\")'"
    dict_0 = {}
    str_1 = 'y\x0c[fN"W:2&:SWyz~W'
    link_0 = module_0.Link(dict_0, str_1)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == {}
    assert link_0.url == 'y\x0c[fN"W:2&:SWyz~W'
    section_1 = module_0.Section(str_0, var_1)
    assert section_1.children == "'Section(title=\" Use \\'\")'"
    none_type_0 = None
    section_2 = module_0.Section(none_type_0, none_type_0)
    str_2 = "gfRsC:6&{;|"
    section_3 = module_0.Section(str_2, str_2)
    str_3 = "gfRsC:6&{;|"
    section_4 = module_0.Section(str_3, str_3)
    var_2 = section_4.__repr__()
    assert var_2 == "Section(title='gfRsC:6&{;|')"
    bool_0 = True
    section_5 = module_0.Section(bool_0, bool_0)
    list_0 = [var_2, var_2]
    section_6 = module_0.Section(section_4, list_0)
    assert section_6.children == [
        "Section(title='gfRsC:6&{;|')",
        "Section(title='gfRsC:6&{;|')",
    ]
    str_4 = "page_context"
    section_7 = module_0.Section(str_4, str_4)
    str_5 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_5, none_type_1)
    var_3 = link_1.__repr__()
    assert var_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_4 = section_7.__repr__()
    assert var_4 == "Section(title='page_context')"
    str_6 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_2 = module_0.Link(str_6, none_type_2)
    var_5 = link_2.__repr__()
    assert var_5 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_6 = var_5.__repr__()
    assert var_6 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_7 = var_6.__repr__()
    assert var_7 == "'\"Link(title=\\'0_~6:m!(f5FgU,:rvz\\', url=None)\"'"
    str_7 = " Use '"
    section_8 = module_0.Section(str_7, str_7)
    var_8 = section_8.__repr__()
    assert var_8 == 'Section(title=" Use \'")'
    str_8 = "gfRsC:6&{;|"
    section_9 = module_0.Section(str_8, str_8)
    str_9 = "relative_to_docs"
    link_3 = module_0.Link(str_9, section_9)
    section_10 = module_0.Section(section_8, var_8)
    assert section_10.children == 'Section(title=" Use \'")'
    int_0 = var_8.__len__()
    assert int_0 == 23
    none_type_3 = None
    section_11 = module_0.Section(none_type_3, none_type_3)
    var_9 = module_1.urlsplit(none_type_3)
    iterator_0 = var_9.__iter__()
    none_type_4 = None
    set_0 = {none_type_4, none_type_4, none_type_4, none_type_4}
    link_4 = module_0.Link(none_type_4, set_0)
    int_1 = var_2.__len__()
    assert int_1 == 28


def test_case_642():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    var_1 = var_0.__repr__()
    assert var_1 == "'Section(title=\" Use \\'\")'"
    dict_0 = {}
    str_1 = 'y\x0c[fN"W:2&:SWyz~W'
    link_0 = module_0.Link(dict_0, str_1)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == {}
    assert link_0.url == 'y\x0c[fN"W:2&:SWyz~W'
    section_1 = module_0.Section(str_0, var_1)
    assert section_1.children == "'Section(title=\" Use \\'\")'"
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_1 = module_0.Link(str_2, none_type_0)
    var_2 = link_1.__repr__()
    assert var_2 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_3 = var_2.__repr__()
    assert var_3 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_3 = var_2.__str__()
    assert str_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_4 = var_2.__repr__()
    assert var_4 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_4 = " Use '"
    section_2 = module_0.Section(str_4, str_4)
    var_5 = section_2.__repr__()
    assert var_5 == 'Section(title=" Use \'")'
    var_6 = var_5.__repr__()
    assert var_6 == "'Section(title=\" Use \\'\")'"
    str_5 = " Use '"
    section_3 = module_0.Section(str_5, str_5)
    var_7 = section_3.__repr__()
    assert var_7 == 'Section(title=" Use \'")'
    str_6 = 'C5B_`:"E&+;Y['
    link_2 = module_0.Link(str_6, str_6)
    int_0 = var_7.__len__()
    assert int_0 == 23
    str_7 = " Use '"
    section_4 = module_0.Section(str_7, str_7)
    var_8 = section_4.__repr__()
    assert var_8 == 'Section(title=" Use \'")'
    str_8 = "gfRsC:6&{;|"
    section_5 = module_0.Section(str_8, str_8)
    str_9 = "relative_to_docs"
    link_3 = module_0.Link(str_9, section_5)
    section_6 = module_0.Section(section_4, var_8)
    assert section_6.children == 'Section(title=" Use \'")'
    int_1 = var_8.__len__()
    assert int_1 == 23
    str_10 = " Use '"
    section_7 = module_0.Section(str_10, str_10)
    var_9 = section_7.__repr__()
    assert var_9 == 'Section(title=" Use \'")'
    str_11 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_4 = module_0.Link(str_11, none_type_1)
    var_10 = link_4.__repr__()
    assert var_10 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    int_2 = var_10.__len__()
    assert int_2 == 42
    int_3 = var_9.__len__()
    assert int_3 == 23
    str_12 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_5 = module_0.Link(str_12, none_type_2)
    bytes_0 = b"\x802c35Z\xf8"
    link_6 = module_0.Link(link_5, bytes_0)
    var_11 = link_5.__repr__()
    assert var_11 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    iterator_0 = var_11.__iter__()
    str_13 = "gfRsC:6&{;|"
    section_8 = module_0.Section(str_13, str_13)
    list_0 = []
    section_9 = module_0.Section(section_8, list_0)
    dict_1 = {}
    str_14 = 'y\x0c[fN"W:2&:SWyz~W'
    link_7 = module_0.Link(dict_1, str_14)
    var_12 = module_1.urlsplit(str_14)
    var_13 = var_12.__repr__()
    iterator_1 = var_13.__iter__()
    str_15 = " Use '"
    section_10 = module_0.Section(str_15, str_15)
    var_14 = section_10.__repr__()
    assert var_14 == 'Section(title=" Use \'")'
    var_15 = var_14.__repr__()
    assert var_15 == "'Section(title=\" Use \\'\")'"
    list_1 = [link_6]
    section_11 = module_0.Section(var_8, list_1)
    assert section_11.title == 'Section(title=" Use \'")'


def test_case_643():
    str_0 = "gfRsC:6&{;|"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "gfRsC:6&{;|"
    assert section_0.children == "gfRsC:6&{;|"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == "Section(title='gfRsC:6&{;|')"
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_1, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_1 = link_0.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_2 = var_1.__repr__()
    assert var_2 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_2 = var_1.__str__()
    assert str_2 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_3 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_3, none_type_1)
    bytes_0 = b"\x802c35Z\xf8"
    link_2 = module_0.Link(link_1, bytes_0)
    var_3 = link_1.__repr__()
    assert var_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    int_0 = var_3.__len__()
    assert int_0 == 42
    str_4 = " Use '"
    section_1 = module_0.Section(str_4, str_4)
    var_4 = section_1.__repr__()
    assert var_4 == 'Section(title=" Use \'")'
    str_5 = 'C5B_`:"E&+;Y['
    link_3 = module_0.Link(str_5, str_5)
    int_1 = var_4.__len__()
    assert int_1 == 23
    section_2 = module_0.Section(str_4, var_4)
    assert section_2.children == 'Section(title=" Use \'")'
    int_2 = var_0.__len__()
    assert int_2 == 28


def test_case_644():
    str_0 = "page_context"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = "' from the site because it conflicts with '"
    list_0 = []
    section_1 = module_0.Section(str_1, list_0)
    var_0 = section_1.__repr__()
    assert var_0 == "Section(title=\"' from the site because it conflicts with '\")"
    str_2 = "\\l;/\nKHZ=K\nU\no|2{loH"
    link_0 = module_0.Link(str_0, str_2)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "page_context"
    assert link_0.url == "\\l;/\nKHZ=K\nU\no|2{loH"
    str_3 = " Use '"
    section_2 = module_0.Section(str_3, str_3)
    var_1 = section_2.__repr__()
    assert var_1 == 'Section(title=" Use \'")'
    str_4 = "gfRsC:6&{;|"
    section_3 = module_0.Section(str_4, str_4)
    str_5 = "relative_to_docs"
    link_1 = module_0.Link(str_5, section_3)
    bool_0 = True
    section_4 = module_0.Section(bool_0, bool_0)
    str_6 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_2 = module_0.Link(str_6, none_type_0)
    var_2 = link_2.__repr__()
    assert var_2 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_3 = var_2.__repr__()
    assert var_3 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    section_5 = module_0.Section(none_type_0, var_3)
    assert section_5.children == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_7 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_3 = module_0.Link(str_7, none_type_1)
    var_4 = link_3.__repr__()
    assert var_4 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_5 = var_4.__repr__()
    assert var_5 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_8 = var_4.__str__()
    assert str_8 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_9 = 'C5B_`:"E&+;Y['
    link_4 = module_0.Link(str_9, str_9)
    int_0 = var_4.__len__()
    assert int_0 == 42
    none_type_2 = None
    section_6 = module_0.Section(none_type_2, none_type_2)
    str_10 = "gfRsC:6&{;|"
    section_7 = module_0.Section(str_10, str_10)
    str_11 = " Use '"
    section_8 = module_0.Section(str_11, str_11)
    var_6 = section_8.__repr__()
    assert var_6 == 'Section(title=" Use \'")'
    int_1 = var_6.__len__()
    assert int_1 == 23
    var_7 = var_6.__repr__()
    assert var_7 == "'Section(title=\" Use \\'\")'"
    var_8 = var_7.__repr__()
    assert var_8 == "'\\'Section(title=\" Use \\\\\\'\")\\''"
    str_12 = " Use '"
    section_9 = module_0.Section(str_12, str_12)
    var_9 = section_9.__repr__()
    assert var_9 == 'Section(title=" Use \'")'
    var_10 = var_9.__repr__()
    assert var_10 == "'Section(title=\" Use \\'\")'"
    var_11 = var_9.__repr__()
    assert var_11 == "'Section(title=\" Use \\'\")'"
    str_13 = " Use '"
    section_10 = module_0.Section(str_13, str_13)
    var_12 = section_10.__repr__()
    assert var_12 == 'Section(title=" Use \'")'
    str_14 = 'C5B_`:"E&+;Y['
    link_5 = module_0.Link(str_14, str_14)
    int_2 = var_12.__len__()
    assert int_2 == 23
    section_11 = module_0.Section(var_12, var_12)
    assert section_11.title == 'Section(title=" Use \'")'
    assert section_11.children == 'Section(title=" Use \'")'
    str_15 = "page_context"
    section_12 = module_0.Section(str_15, str_15)
    str_16 = "' from the site because it conflicts with '"
    list_1 = []
    section_13 = module_0.Section(str_16, list_1)
    section_14 = module_0.Section(section_13, list_1)
    section_15 = module_0.Section(str_16, list_1)
    iterator_0 = var_5.__iter__()


def test_case_645():
    str_0 = "page_context"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = "' from the site because it conflicts with '"
    list_0 = []
    section_1 = module_0.Section(str_1, list_0)
    section_2 = module_0.Section(section_1, list_0)
    section_3 = module_0.Section(str_1, list_0)
    str_2 = " Use '"
    section_4 = module_0.Section(str_2, str_2)
    var_0 = section_4.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    var_1 = var_0.__repr__()
    assert var_1 == "'Section(title=\" Use \\'\")'"
    var_2 = var_0.__repr__()
    assert var_2 == "'Section(title=\" Use \\'\")'"
    bool_0 = True
    section_5 = module_0.Section(bool_0, bool_0)
    str_3 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_3, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_3 = link_0.__repr__()
    assert var_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_4 = var_3.__repr__()
    assert var_4 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    section_6 = module_0.Section(none_type_0, var_4)
    assert section_6.children == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_5 = section_6.__repr__()
    assert var_5 == "Section(title=None)"
    str_4 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_4, none_type_1)
    var_6 = link_1.__repr__()
    assert var_6 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_7 = var_6.__repr__()
    assert var_7 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_8 = var_6.__repr__()
    assert var_8 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_9 = link_1.__repr__()
    assert var_9 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    link_2 = module_0.Link(str_0, var_4)
    assert link_2.url == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""


def test_case_646():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_2 = var_1.__repr__()
    assert var_2 == "'\"Link(title=\\'0_~6:m!(f5FgU,:rvz\\', url=None)\"'"
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_1, none_type_1)
    var_3 = link_1.__repr__()
    assert var_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_4 = var_3.__repr__()
    assert var_4 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_2 = var_3.__str__()
    assert str_2 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_3 = " Use '"
    section_0 = module_0.Section(str_3, str_3)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_5 = section_0.__repr__()
    assert var_5 == 'Section(title=" Use \'")'
    str_4 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_2 = module_0.Link(str_4, none_type_2)
    var_6 = link_2.__repr__()
    assert var_6 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    int_0 = var_6.__len__()
    assert int_0 == 42
    str_5 = "page_context"
    section_1 = module_0.Section(str_5, str_5)
    str_6 = "' from the site because it conflicts with '"
    list_0 = []
    section_2 = module_0.Section(str_6, list_0)
    str_7 = "localhost"
    link_3 = module_0.Link(str_6, str_7)
    str_8 = "jXt{G!+9"
    int_1 = -1857
    link_4 = module_0.Link(str_8, int_1)
    str_9 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_5 = module_0.Link(str_9, none_type_3)
    var_7 = link_5.__repr__()
    assert var_7 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_8 = var_7.__repr__()
    assert var_8 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_9 = var_7.__repr__()
    assert var_9 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    int_2 = var_5.__len__()
    assert int_2 == 23


def test_case_647():
    str_0 = "jXt{G!+9"
    int_0 = -1857
    link_0 = module_0.Link(str_0, int_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "jXt{G!+9"
    assert link_0.url == -1857
    str_1 = "$9.}1Av5,.}"
    link_1 = module_0.Link(str_1, str_1)
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_2 = module_0.Link(str_2, none_type_0)
    bytes_0 = b"\x802c35Z\xf8"
    link_3 = module_0.Link(link_2, bytes_0)
    str_3 = "page_context"
    section_0 = module_0.Section(str_3, str_3)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_4 = "' from the site because it conflicts with '"
    list_0 = []
    section_1 = module_0.Section(str_4, list_0)
    var_0 = section_1.__repr__()
    assert var_0 == "Section(title=\"' from the site because it conflicts with '\")"
    str_5 = "\\l;/\nKHZ=K\nU\no|2{loH"
    link_4 = module_0.Link(str_3, str_5)
    str_6 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_5 = module_0.Link(str_6, none_type_1)
    var_1 = link_5.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_2 = var_1.__repr__()
    assert var_2 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_3 = var_2.__repr__()
    assert var_3 == "'\"Link(title=\\'0_~6:m!(f5FgU,:rvz\\', url=None)\"'"
    str_7 = "' is included in the 'nav' configuration."
    link_6 = module_0.Link(str_7, str_7)
    str_8 = ")\t2Zu;H"
    link_7 = module_0.Link(str_3, str_8)


def test_case_648():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    var_1 = var_0.__repr__()
    assert var_1 == "'Section(title=\" Use \\'\")'"
    set_0 = set()
    navigation_0 = module_0.Navigation(set_0, set_0)
    assert (
        f"{type(navigation_0).__module__}.{type(navigation_0).__qualname__}"
        == "mkdocs.structure.nav.Navigation"
    )
    assert len(navigation_0) == 0
    str_1 = navigation_0.__str__()
    iterator_0 = var_1.__iter__()
    str_2 = "gfRsC:6&{;|"
    section_1 = module_0.Section(str_2, str_2)
    str_3 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_3, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_2 = link_0.__repr__()
    assert var_2 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_3 = var_2.__repr__()
    assert var_3 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_4 = var_2.__repr__()
    assert var_4 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_5 = link_0.__repr__()
    assert var_5 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_4 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_4, none_type_1)
    dict_0 = {}
    str_5 = 'y\x0c[fN"W:2&:SWyz~W'
    link_2 = module_0.Link(dict_0, str_5)
    section_2 = module_0.Section(str_5, str_5)
    section_3 = module_0.Section(str_5, str_5)
    str_6 = "gfRsC:6&{;|"
    section_4 = module_0.Section(str_6, str_6)
    list_0 = []
    section_5 = module_0.Section(section_4, list_0)
    link_3 = module_0.Link(var_5, str_1)
    assert link_3.title == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"


def test_case_649():
    str_0 = 'C5B_`:"E&+;Y['
    link_0 = module_0.Link(str_0, str_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == 'C5B_`:"E&+;Y['
    assert link_0.url == 'C5B_`:"E&+;Y['
    str_1 = "page_context"
    section_0 = module_0.Section(str_1, str_1)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    link_1 = module_0.Link(str_1, section_0)
    str_2 = " Use '"
    section_1 = module_0.Section(str_2, str_2)
    var_0 = section_1.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    str_3 = "gfRsC:6&{;|"
    section_2 = module_0.Section(str_3, str_3)
    str_4 = "relative_to_docs"
    link_2 = module_0.Link(str_4, section_2)
    section_3 = module_0.Section(section_1, var_0)
    assert section_3.children == 'Section(title=" Use \'")'
    int_0 = var_0.__len__()
    assert int_0 == 23
    str_5 = " Use '"
    section_4 = module_0.Section(str_5, str_5)
    var_1 = section_4.__repr__()
    assert var_1 == 'Section(title=" Use \'")'
    int_1 = var_1.__len__()
    assert int_1 == 23
    str_6 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_3 = module_0.Link(str_6, none_type_0)
    var_2 = link_3.__repr__()
    assert var_2 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_3 = var_2.__repr__()
    assert var_3 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_4 = var_2.__repr__()
    assert var_4 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_7 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_4 = module_0.Link(str_7, none_type_1)
    bytes_0 = b"\x802c35Z\xf8"
    link_5 = module_0.Link(link_4, bytes_0)
    bool_0 = True
    section_5 = module_0.Section(bool_0, bool_0)
    var_5 = link_5.__repr__()
    assert (
        var_5
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )
    str_8 = var_5.__str__()
    assert (
        str_8
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )
    section_6 = module_0.Section(link_1, link_0)


def test_case_650():
    str_0 = "page_context"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = "' from the site because it conflicts with '"
    list_0 = []
    section_1 = module_0.Section(str_1, list_0)
    var_0 = section_1.__repr__()
    assert var_0 == "Section(title=\"' from the site because it conflicts with '\")"
    section_2 = module_0.Section(str_1, section_0)
    str_2 = " Use '"
    section_3 = module_0.Section(str_2, str_2)
    var_1 = section_3.__repr__()
    assert var_1 == 'Section(title=" Use \'")'
    str_3 = 'C5B_`:"E&+;Y['
    link_0 = module_0.Link(str_3, str_3)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == 'C5B_`:"E&+;Y['
    assert link_0.url == 'C5B_`:"E&+;Y['
    int_0 = var_1.__len__()
    assert int_0 == 23
    section_4 = module_0.Section(var_1, var_1)
    assert section_4.title == 'Section(title=" Use \'")'
    assert section_4.children == 'Section(title=" Use \'")'
    str_4 = " Use '"
    section_5 = module_0.Section(str_4, str_4)
    var_2 = section_5.__repr__()
    assert var_2 == 'Section(title=" Use \'")'
    str_5 = "gfRsC:6&{;|"
    section_6 = module_0.Section(str_5, str_5)
    str_6 = "relative_to_docs"
    link_1 = module_0.Link(str_6, section_6)
    section_7 = module_0.Section(section_5, var_2)
    assert section_7.children == 'Section(title=" Use \'")'
    int_1 = var_2.__len__()
    assert int_1 == 23
    var_3 = var_0.__repr__()
    assert (
        var_3 == "'Section(title=\"\\' from the site because it conflicts with \\'\")'"
    )


def test_case_651():
    str_0 = "$9.}1Av5,.}"
    link_0 = module_0.Link(str_0, str_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "$9.}1Av5,.}"
    assert link_0.url == "$9.}1Av5,.}"
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_1 = module_0.Link(str_1, none_type_0)
    bytes_0 = b"\x802c35Z\xf8"
    link_2 = module_0.Link(link_1, bytes_0)
    var_0 = link_1.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_2 = var_0.__str__()
    assert str_2 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"


def test_case_652():
    str_0 = "jXt{G!+9"
    int_0 = -1857
    link_0 = module_0.Link(str_0, int_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "jXt{G!+9"
    assert link_0.url == -1857
    list_0 = []
    navigation_0 = module_0.Navigation(str_0, list_0)


def test_case_653():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    int_0 = var_0.__len__()
    assert int_0 == 23
    section_1 = module_0.Section(var_0, int_0)
    assert section_1.title == 'Section(title=" Use \'")'
    assert section_1.children == 23
    str_1 = " Use '"
    section_2 = module_0.Section(str_1, str_1)
    var_1 = section_2.__repr__()
    assert var_1 == 'Section(title=" Use \'")'
    var_2 = var_1.__repr__()
    assert var_2 == "'Section(title=\" Use \\'\")'"
    dict_0 = {}
    str_2 = 'y\x0c[fN"W:2&:SWyz~W'
    link_0 = module_0.Link(dict_0, str_2)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == {}
    assert link_0.url == 'y\x0c[fN"W:2&:SWyz~W'
    section_3 = module_0.Section(str_1, var_2)
    assert section_3.children == "'Section(title=\" Use \\'\")'"
    int_1 = var_0.__len__()
    assert int_1 == 23


def test_case_654():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    bytes_0 = b"\x802c35Z\xf8"
    link_1 = module_0.Link(link_0, bytes_0)
    bool_0 = True
    section_0 = module_0.Section(bool_0, bool_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title is True
    assert section_0.children is True
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = link_1.__repr__()
    assert (
        var_0
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )
    str_1 = var_0.__str__()
    assert (
        str_1
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )
    str_2 = 'C5B_`:"E&+;Y['
    link_2 = module_0.Link(str_2, str_2)
    str_3 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_3 = module_0.Link(str_3, none_type_1)
    var_1 = link_3.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_2 = var_1.__repr__()
    assert var_2 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_3 = var_2.__repr__()
    assert var_3 == "'\"Link(title=\\'0_~6:m!(f5FgU,:rvz\\', url=None)\"'"
    str_4 = "page_context"
    section_1 = module_0.Section(str_4, str_4)
    str_5 = "' from the site because it conflicts with '"
    list_0 = []
    section_2 = module_0.Section(str_5, list_0)
    var_4 = section_2.__repr__()
    assert var_4 == "Section(title=\"' from the site because it conflicts with '\")"
    str_6 = "x"
    section_3 = module_0.Section(str_6, str_6)
    str_7 = " Use '"
    section_4 = module_0.Section(str_7, str_7)
    var_5 = section_4.__repr__()
    assert var_5 == 'Section(title=" Use \'")'
    str_8 = "gfRsC:6&{;|"
    section_5 = module_0.Section(str_8, str_8)
    str_9 = "relative_to_docs"
    link_4 = module_0.Link(str_9, section_5)
    section_6 = module_0.Section(section_4, var_5)
    assert section_6.children == 'Section(title=" Use \'")'
    section_7 = module_0.Section(var_5, var_3)
    assert section_7.title == 'Section(title=" Use \'")'
    assert section_7.children == "'\"Link(title=\\'0_~6:m!(f5FgU,:rvz\\', url=None)\"'"


def test_case_655():
    bool_0 = True
    section_0 = module_0.Section(bool_0, bool_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title is True
    assert section_0.children is True
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    section_1 = module_0.Section(none_type_0, var_1)
    assert section_1.children == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_1 = "page_context"
    section_2 = module_0.Section(str_1, str_1)
    str_2 = "' from the site because it conflicts with '"
    list_0 = []
    section_3 = module_0.Section(str_2, list_0)
    section_4 = module_0.Section(section_3, list_0)
    str_3 = " Use '"
    section_5 = module_0.Section(str_3, str_3)
    var_2 = section_5.__repr__()
    assert var_2 == 'Section(title=" Use \'")'
    str_4 = 'C5B_`:"E&+;Y['
    link_1 = module_0.Link(str_4, str_4)
    int_0 = var_2.__len__()
    assert int_0 == 23
    section_6 = module_0.Section(var_2, var_2)
    assert section_6.title == 'Section(title=" Use \'")'
    assert section_6.children == 'Section(title=" Use \'")'
    str_5 = " Use '"
    section_7 = module_0.Section(str_5, str_5)
    var_3 = section_7.__repr__()
    assert var_3 == 'Section(title=" Use \'")'
    var_4 = var_3.__repr__()
    assert var_4 == "'Section(title=\" Use \\'\")'"
    var_5 = var_3.__repr__()
    assert var_5 == "'Section(title=\" Use \\'\")'"
    dict_0 = {}
    str_6 = 'y\x0c[fN"W:2&:SWyz~W'
    link_2 = module_0.Link(dict_0, str_6)
    str_7 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_3 = module_0.Link(str_7, none_type_1)
    bytes_0 = b"\x802c35Z\xf8"
    link_4 = module_0.Link(link_3, bytes_0)
    var_6 = link_3.__repr__()
    assert var_6 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_7 = var_6.__repr__()
    assert var_7 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    iterator_0 = var_0.__iter__()


def test_case_656():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_1, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_1 = link_0.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    int_0 = var_1.__len__()
    assert int_0 == 42
    int_1 = var_0.__len__()
    assert int_1 == 23
    section_1 = module_0.Section(str_1, var_0)
    assert section_1.children == 'Section(title=" Use \'")'


def test_case_657():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    var_1 = var_0.__repr__()
    assert var_1 == "'Section(title=\" Use \\'\")'"
    str_1 = " Use '"
    section_1 = module_0.Section(str_1, str_1)
    var_2 = section_1.__repr__()
    assert var_2 == 'Section(title=" Use \'")'
    int_0 = var_2.__len__()
    assert int_0 == 23
    var_3 = var_2.__repr__()
    assert var_3 == "'Section(title=\" Use \\'\")'"
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_2, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_4 = link_0.__repr__()
    assert var_4 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_5 = var_4.__repr__()
    assert var_5 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_6 = var_4.__repr__()
    assert var_6 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_3 = " Use '"
    section_2 = module_0.Section(str_3, str_3)
    var_7 = section_2.__repr__()
    assert var_7 == 'Section(title=" Use \'")'
    str_4 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_4, none_type_1)
    var_8 = link_1.__repr__()
    assert var_8 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    int_1 = var_8.__len__()
    assert int_1 == 42
    int_2 = var_7.__len__()
    assert int_2 == 23
    int_3 = var_2.__len__()
    assert int_3 == 23


def test_case_658():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    str_1 = 'C5B_`:"E&+;Y['
    link_0 = module_0.Link(str_1, str_1)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == 'C5B_`:"E&+;Y['
    assert link_0.url == 'C5B_`:"E&+;Y['
    int_0 = var_0.__len__()
    assert int_0 == 23
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_1 = module_0.Link(str_2, none_type_0)
    str_3 = "1*_~XK\n=v)d'\"$xb7"
    link_2 = module_0.Link(str_2, str_3)


def test_case_659():
    str_0 = "gfRsC:6&{;|"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "gfRsC:6&{;|"
    assert section_0.children == "gfRsC:6&{;|"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = " Use '"
    section_1 = module_0.Section(str_1, str_1)
    var_0 = section_1.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    int_0 = var_0.__len__()
    assert int_0 == 23
    var_1 = var_0.__repr__()
    assert var_1 == "'Section(title=\" Use \\'\")'"
    var_2 = var_1.__repr__()
    assert var_2 == "'\\'Section(title=\" Use \\\\\\'\")\\''"
    str_2 = " Use '"
    section_2 = module_0.Section(str_2, str_2)
    var_3 = section_2.__repr__()
    assert var_3 == 'Section(title=" Use \'")'
    str_3 = "gfRsC:6&{;|"
    section_3 = module_0.Section(str_3, str_3)
    str_4 = "relative_to_docs"
    link_0 = module_0.Link(str_4, section_3)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "relative_to_docs"
    assert (
        f"{type(link_0.url).__module__}.{type(link_0.url).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    none_type_0 = None
    section_4 = module_0.Section(none_type_0, none_type_0)
    var_4 = module_1.urlsplit(none_type_0)
    iterator_0 = var_4.__iter__()
    str_5 = " Use '"
    section_5 = module_0.Section(str_5, str_5)
    var_5 = section_5.__repr__()
    assert var_5 == 'Section(title=" Use \'")'
    str_6 = 'C5B_`:"E&+;Y['
    link_1 = module_0.Link(str_6, str_6)
    int_1 = var_5.__len__()
    assert int_1 == 23
    section_6 = module_0.Section(var_5, var_5)
    assert section_6.title == 'Section(title=" Use \'")'
    assert section_6.children == 'Section(title=" Use \'")'
    str_7 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_2 = module_0.Link(str_7, none_type_1)
    bytes_0 = b"\x802c35Z\xf8"
    link_3 = module_0.Link(link_2, bytes_0)
    str_8 = " Use '"
    section_7 = module_0.Section(str_8, str_8)
    var_6 = section_7.__repr__()
    assert var_6 == 'Section(title=" Use \'")'
    var_7 = var_6.__repr__()
    assert var_7 == "'Section(title=\" Use \\'\")'"
    dict_0 = {}
    str_9 = 'y\x0c[fN"W:2&:SWyz~W'
    link_4 = module_0.Link(dict_0, str_9)
    section_8 = module_0.Section(str_8, var_7)
    assert section_8.children == "'Section(title=\" Use \\'\")'"
    str_10 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_5 = module_0.Link(str_10, none_type_2)
    var_8 = link_5.__repr__()
    assert var_8 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_9 = var_8.__repr__()
    assert var_9 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    int_2 = var_9.__len__()
    assert int_2 == 44
    set_0 = set()
    navigation_0 = module_0.Navigation(set_0, set_0)
    assert (
        f"{type(navigation_0).__module__}.{type(navigation_0).__qualname__}"
        == "mkdocs.structure.nav.Navigation"
    )
    assert len(navigation_0) == 0
    str_11 = navigation_0.__str__()
    str_12 = " Use '"
    section_9 = module_0.Section(str_12, str_12)
    var_10 = section_9.__repr__()
    assert var_10 == 'Section(title=" Use \'")'
    str_13 = 'C5B_`:"E&+;Y['
    link_6 = module_0.Link(str_13, str_13)
    int_3 = var_10.__len__()
    assert int_3 == 23
    section_10 = module_0.Section(str_12, var_10)
    assert section_10.children == 'Section(title=" Use \'")'
    bool_0 = True
    section_11 = module_0.Section(bool_0, bool_0)
    iterator_1 = var_1.__iter__()


def test_case_660():
    str_0 = "page_context"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = "' from the site because it conflicts with '"
    list_0 = []
    section_1 = module_0.Section(str_1, list_0)
    section_2 = module_0.Section(section_1, list_0)
    str_2 = " Use '"
    section_3 = module_0.Section(str_2, str_2)
    var_0 = section_3.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    str_3 = "gfRsC:6&{;|"
    section_4 = module_0.Section(str_3, str_3)
    str_4 = "relative_to_docs"
    link_0 = module_0.Link(str_4, section_4)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "relative_to_docs"
    assert (
        f"{type(link_0.url).__module__}.{type(link_0.url).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    section_5 = module_0.Section(section_3, var_0)
    assert section_5.children == 'Section(title=" Use \'")'
    link_1 = module_0.Link(str_3, var_0)
    assert link_1.url == 'Section(title=" Use \'")'


def test_case_661():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_2 = var_1.__repr__()
    assert var_2 == "'\"Link(title=\\'0_~6:m!(f5FgU,:rvz\\', url=None)\"'"
    str_1 = "page_context"
    section_0 = module_0.Section(str_1, str_1)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_2 = "' from the site because it conflicts with '"
    list_0 = []
    section_1 = module_0.Section(str_2, list_0)
    var_3 = section_1.__repr__()
    assert var_3 == "Section(title=\"' from the site because it conflicts with '\")"
    section_2 = module_0.Section(str_2, section_0)
    none_type_1 = None
    str_3 = "\n        Perform validation for a value.\n\n        The run_validation method should be implemented by subclasses.\n        "
    link_1 = module_0.Link(none_type_1, str_3)
    var_4 = link_1.__repr__()
    assert (
        var_4
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    str_4 = var_4.__str__()
    assert (
        str_4
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    str_5 = " Use '"
    section_3 = module_0.Section(str_5, str_5)
    var_5 = section_3.__repr__()
    assert var_5 == 'Section(title=" Use \'")'
    str_6 = 'C5B_`:"E&+;Y['
    link_2 = module_0.Link(str_6, str_6)
    int_0 = var_5.__len__()
    assert int_0 == 23
    section_4 = module_0.Section(var_5, var_5)
    assert section_4.title == 'Section(title=" Use \'")'
    assert section_4.children == 'Section(title=" Use \'")'
    str_7 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_3 = module_0.Link(str_7, none_type_2)
    var_6 = link_3.__repr__()
    assert var_6 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_7 = var_6.__repr__()
    assert var_7 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_8 = " Use '"
    section_5 = module_0.Section(str_8, str_8)
    var_8 = section_5.__repr__()
    assert var_8 == 'Section(title=" Use \'")'
    var_9 = var_8.__repr__()
    assert var_9 == "'Section(title=\" Use \\'\")'"
    str_9 = " Use '"
    section_6 = module_0.Section(str_9, str_9)
    var_10 = section_6.__repr__()
    assert var_10 == 'Section(title=" Use \'")'
    str_10 = 'C5B_`:"E&+;Y['
    link_4 = module_0.Link(str_10, str_10)
    int_1 = var_10.__len__()
    assert int_1 == 23
    section_7 = module_0.Section(var_10, var_10)
    assert section_7.title == 'Section(title=" Use \'")'
    assert section_7.children == 'Section(title=" Use \'")'
    link_5 = module_0.Link(section_6, str_9)
    str_11 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_6 = module_0.Link(str_11, none_type_3)
    var_11 = link_6.__repr__()
    assert var_11 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_12 = var_11.__repr__()
    assert var_12 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    iterator_0 = var_11.__iter__()
    str_12 = "page_context"
    section_8 = module_0.Section(str_12, str_12)
    str_13 = "' from the site because it conflicts with '"
    list_1 = []
    section_9 = module_0.Section(str_13, list_1)
    section_10 = module_0.Section(section_9, list_1)
    var_13 = var_6.__repr__()
    assert var_13 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""


def test_case_662():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_1 = var_0.__str__()
    assert str_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_2 = 'C5B_`:"E&+;Y['
    link_1 = module_0.Link(str_2, str_2)
    int_0 = var_0.__len__()
    assert int_0 == 42
    str_3 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_2 = module_0.Link(str_3, none_type_1)
    var_2 = link_2.__repr__()
    assert var_2 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_3 = var_2.__repr__()
    assert var_3 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_4 = var_2.__str__()
    assert str_4 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_5 = " Use '"
    section_0 = module_0.Section(str_5, str_5)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_4 = section_0.__repr__()
    assert var_4 == 'Section(title=" Use \'")'
    str_6 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_3 = module_0.Link(str_6, none_type_2)
    var_5 = link_3.__repr__()
    assert var_5 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_6 = var_5.__repr__()
    assert var_6 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_7 = "gfRsC:6&{;|"
    section_1 = module_0.Section(str_7, str_7)
    str_8 = " Use '"
    section_2 = module_0.Section(str_8, str_8)
    var_7 = section_2.__repr__()
    assert var_7 == 'Section(title=" Use \'")'
    int_1 = var_7.__len__()
    assert int_1 == 23
    var_8 = var_7.__repr__()
    assert var_8 == "'Section(title=\" Use \\'\")'"
    var_9 = var_8.__repr__()
    assert var_9 == "'\\'Section(title=\" Use \\\\\\'\")\\''"
    str_9 = "page_context"
    section_3 = module_0.Section(str_9, str_9)
    str_10 = "' from the site because it conflicts with '"
    list_0 = []
    section_4 = module_0.Section(str_10, list_0)
    var_10 = section_4.__repr__()
    assert var_10 == "Section(title=\"' from the site because it conflicts with '\")"
    str_11 = "\\l;/\nKHZ=K\nU\no|2{loH"
    link_4 = module_0.Link(str_9, str_11)
    str_12 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_5 = module_0.Link(str_12, none_type_3)
    var_11 = link_5.__repr__()
    assert var_11 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_12 = var_11.__repr__()
    assert var_12 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_13 = var_11.__str__()
    assert str_13 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_13 = var_11.__repr__()
    assert var_13 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_14 = " Use '"
    section_5 = module_0.Section(str_14, str_14)
    var_14 = section_5.__repr__()
    assert var_14 == 'Section(title=" Use \'")'
    str_15 = "0_~6:m!(f5FgU,:rvz"
    none_type_4 = None
    link_6 = module_0.Link(str_15, none_type_4)
    var_15 = link_6.__repr__()
    assert var_15 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    int_2 = var_15.__len__()
    assert int_2 == 42
    str_16 = " Use '"
    section_6 = module_0.Section(str_16, str_16)
    var_16 = section_6.__repr__()
    assert var_16 == 'Section(title=" Use \'")'
    int_3 = var_16.__len__()
    assert int_3 == 23
    var_17 = var_16.__repr__()
    assert var_17 == "'Section(title=\" Use \\'\")'"
    str_17 = "0_~6:m!(f5FgU,:rvz"
    none_type_5 = None
    link_7 = module_0.Link(str_17, none_type_5)
    iterator_0 = var_13.__iter__()


def test_case_663():
    str_0 = "$9.}1Av5,.}"
    link_0 = module_0.Link(str_0, str_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "$9.}1Av5,.}"
    assert link_0.url == "$9.}1Av5,.}"
    none_type_0 = None
    str_1 = "\n        Perform validation for a value.\n\n        The run_validation method should be implemented by subclasses.\n        "
    link_1 = module_0.Link(none_type_0, str_1)
    var_0 = link_1.__repr__()
    assert (
        var_0
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    str_2 = var_0.__str__()
    assert (
        str_2
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    bool_0 = True
    link_2 = module_0.Link(bool_0, bool_0)
    var_1 = var_0.__repr__()
    assert (
        var_1
        == "\"Link(title=[blank], url='\\\\n        Perform validation for a value.\\\\n\\\\n        The run_validation method should be implemented by subclasses.\\\\n        ')\""
    )
    str_3 = "page_context"
    section_0 = module_0.Section(str_3, str_3)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_4 = " Use '"
    section_1 = module_0.Section(str_4, str_4)
    var_2 = section_1.__repr__()
    assert var_2 == 'Section(title=" Use \'")'
    var_3 = var_2.__repr__()
    assert var_3 == "'Section(title=\" Use \\'\")'"
    link_3 = module_0.Link(var_3, section_0)
    assert link_3.title == "'Section(title=\" Use \\'\")'"
    set_0 = set()
    navigation_0 = module_0.Navigation(set_0, set_0)
    assert (
        f"{type(navigation_0).__module__}.{type(navigation_0).__qualname__}"
        == "mkdocs.structure.nav.Navigation"
    )
    assert len(navigation_0) == 0
    str_5 = navigation_0.__str__()
    str_6 = var_1.__str__()
    assert (
        str_6
        == "\"Link(title=[blank], url='\\\\n        Perform validation for a value.\\\\n\\\\n        The run_validation method should be implemented by subclasses.\\\\n        ')\""
    )


def test_case_664():
    str_0 = "gfRsC:6&{;|"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "gfRsC:6&{;|"
    assert section_0.children == "gfRsC:6&{;|"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_1, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_2 = var_0.__repr__()
    assert var_2 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_3 = link_0.__repr__()
    assert var_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_2 = "gfRsC:6&{;|"
    section_1 = module_0.Section(str_2, str_2)
    var_4 = section_1.__repr__()
    assert var_4 == "Section(title='gfRsC:6&{;|')"
    str_3 = " Use '"
    section_2 = module_0.Section(str_3, str_3)
    var_5 = section_2.__repr__()
    assert var_5 == 'Section(title=" Use \'")'
    str_4 = 'C5B_`:"E&+;Y['
    link_1 = module_0.Link(str_4, str_4)
    int_0 = var_5.__len__()
    assert int_0 == 23
    str_5 = "$9.}1Av5,.}"
    link_2 = module_0.Link(str_5, str_5)
    var_6 = var_5.__repr__()
    assert var_6 == "'Section(title=\" Use \\'\")'"
    str_6 = " Use '"
    section_3 = module_0.Section(str_6, str_6)
    var_7 = section_3.__repr__()
    assert var_7 == 'Section(title=" Use \'")'
    int_1 = var_7.__len__()
    assert int_1 == 23
    var_8 = var_7.__repr__()
    assert var_8 == "'Section(title=\" Use \\'\")'"
    str_7 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_3 = module_0.Link(str_7, none_type_1)
    var_9 = link_3.__repr__()
    assert var_9 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_10 = var_9.__repr__()
    assert var_10 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    iterator_0 = var_9.__iter__()
    var_11 = var_9.__repr__()
    assert var_11 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_8 = "page_context"
    section_4 = module_0.Section(str_8, str_8)
    str_9 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_4 = module_0.Link(str_9, none_type_2)
    var_12 = link_4.__repr__()
    assert var_12 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_13 = section_4.__repr__()
    assert var_13 == "Section(title='page_context')"
    str_10 = "gfRsC:6&{;|"
    section_5 = module_0.Section(str_10, str_10)
    str_11 = "page_context"
    section_6 = module_0.Section(str_11, str_11)
    str_12 = " Use '"
    section_7 = module_0.Section(str_12, str_12)
    var_14 = section_7.__repr__()
    assert var_14 == 'Section(title=" Use \'")'
    var_15 = var_14.__repr__()
    assert var_15 == "'Section(title=\" Use \\'\")'"
    link_5 = module_0.Link(var_15, section_6)
    assert link_5.title == "'Section(title=\" Use \\'\")'"
    str_13 = " Use '"
    section_8 = module_0.Section(str_13, str_13)
    var_16 = section_8.__repr__()
    assert var_16 == 'Section(title=" Use \'")'
    int_2 = var_16.__len__()
    assert int_2 == 23
    str_14 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_6 = module_0.Link(str_14, none_type_3)
    int_3 = var_16.__len__()
    assert int_3 == 23
    bool_0 = True
    section_9 = module_0.Section(bool_0, bool_0)
    str_15 = "0_~6:m!(f5FgU,:rvz"
    none_type_4 = None
    link_7 = module_0.Link(str_15, none_type_4)
    var_17 = link_7.__repr__()
    assert var_17 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_18 = var_17.__repr__()
    assert var_18 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    section_10 = module_0.Section(none_type_4, var_18)
    assert section_10.children == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_19 = section_10.__repr__()
    assert var_19 == "Section(title=None)"
    var_20 = var_1.__repr__()
    assert var_20 == "'\"Link(title=\\'0_~6:m!(f5FgU,:rvz\\', url=None)\"'"


def test_case_665():
    bool_0 = True
    section_0 = module_0.Section(bool_0, bool_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title is True
    assert section_0.children is True
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_1 = var_0.__str__()
    assert str_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_2 = var_0.__repr__()
    assert var_2 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_2 = " Use '"
    section_1 = module_0.Section(str_2, str_2)
    var_3 = section_1.__repr__()
    assert var_3 == 'Section(title=" Use \'")'
    int_0 = var_3.__len__()
    assert int_0 == 23
    var_4 = var_3.__repr__()
    assert var_4 == "'Section(title=\" Use \\'\")'"
    link_1 = module_0.Link(int_0, var_3)
    assert link_1.title == 23
    assert link_1.url == 'Section(title=" Use \'")'
    dict_0 = {}
    str_3 = 'y\x0c[fN"W:2&:SWyz~W'
    link_2 = module_0.Link(dict_0, str_3)
    section_2 = module_0.Section(str_3, str_3)
    section_3 = module_0.Section(str_3, str_3)
    str_4 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_3 = module_0.Link(str_4, none_type_1)
    bytes_0 = b"\x802c35Z\xf8"
    link_4 = module_0.Link(link_3, bytes_0)
    var_5 = link_3.__repr__()
    assert var_5 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_5 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_5 = module_0.Link(str_5, none_type_2)
    var_6 = link_5.__repr__()
    assert var_6 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_7 = var_6.__repr__()
    assert var_7 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    int_1 = var_7.__len__()
    assert int_1 == 44
    str_6 = "gfRsC:6&{;|"
    section_4 = module_0.Section(str_6, str_6)
    str_7 = " Use '"
    section_5 = module_0.Section(str_7, str_7)
    var_8 = section_5.__repr__()
    assert var_8 == 'Section(title=" Use \'")'
    int_2 = var_8.__len__()
    assert int_2 == 23
    var_9 = var_8.__repr__()
    assert var_9 == "'Section(title=\" Use \\'\")'"
    var_10 = var_9.__repr__()
    assert var_10 == "'\\'Section(title=\" Use \\\\\\'\")\\''"
    section_6 = module_0.Section(var_5, int_0)
    assert section_6.title == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    assert section_6.children == 23


def test_case_666():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    int_0 = var_0.__len__()
    assert int_0 == 23
    var_1 = var_0.__repr__()
    assert var_1 == "'Section(title=\" Use \\'\")'"
    str_1 = "page_context"
    section_1 = module_0.Section(str_1, str_1)
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_2, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_2 = link_0.__repr__()
    assert var_2 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_3 = section_1.__repr__()
    assert var_3 == "Section(title='page_context')"
    none_type_1 = None
    set_0 = {none_type_1, none_type_1, none_type_1, none_type_1}
    link_1 = module_0.Link(none_type_1, set_0)
    iterator_0 = var_2.__iter__()


def test_case_667():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_1 = var_0.__str__()
    assert str_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_2 = 'C5B_`:"E&+;Y['
    link_1 = module_0.Link(str_2, str_2)
    int_0 = var_0.__len__()
    assert int_0 == 42
    str_3 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_2 = module_0.Link(str_3, none_type_1)
    bytes_0 = b"\x802c35Z\xf8"
    link_3 = module_0.Link(link_2, bytes_0)
    var_2 = link_2.__repr__()
    assert var_2 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    iterator_0 = var_2.__iter__()
    str_4 = " Use '"
    section_0 = module_0.Section(str_4, str_4)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_3 = section_0.__repr__()
    assert var_3 == 'Section(title=" Use \'")'
    str_5 = "gfRsC:6&{;|"
    section_1 = module_0.Section(str_5, str_5)
    str_6 = "relative_to_docs"
    link_4 = module_0.Link(str_6, section_1)
    bool_0 = True
    link_5 = module_0.Link(bool_0, bool_0)
    none_type_2 = None
    str_7 = "\n        Perform validation for a value.\n\n        The run_validation method should be implemented by subclasses.\n        "
    link_6 = module_0.Link(none_type_2, str_7)
    var_4 = link_6.__repr__()
    assert (
        var_4
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    str_8 = var_4.__str__()
    assert (
        str_8
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    str_9 = " Use '"
    section_2 = module_0.Section(str_9, str_9)
    var_5 = section_2.__repr__()
    assert var_5 == 'Section(title=" Use \'")'
    int_1 = var_5.__len__()
    assert int_1 == 23
    var_6 = var_5.__repr__()
    assert var_6 == "'Section(title=\" Use \\'\")'"
    str_10 = " Use '"
    section_3 = module_0.Section(str_10, str_10)
    var_7 = section_3.__repr__()
    assert var_7 == 'Section(title=" Use \'")'
    section_4 = module_0.Section(str_10, var_7)
    assert section_4.children == 'Section(title=" Use \'")'
    str_11 = "page_context"
    section_5 = module_0.Section(str_11, str_11)
    link_7 = module_0.Link(str_11, section_5)
    str_12 = " Use '"
    section_6 = module_0.Section(str_12, str_12)
    var_8 = section_6.__repr__()
    assert var_8 == 'Section(title=" Use \'")'
    str_13 = "gfRsC:6&{;|"
    section_7 = module_0.Section(str_13, str_13)
    str_14 = "relative_to_docs"
    link_8 = module_0.Link(str_14, section_7)
    section_8 = module_0.Section(section_6, var_8)
    assert section_8.children == 'Section(title=" Use \'")'
    int_2 = var_8.__len__()
    assert int_2 == 23
    dict_0 = {}
    str_15 = 'y\x0c[fN"W:2&:SWyz~W'
    link_9 = module_0.Link(dict_0, str_15)
    str_16 = var_3.__str__()
    assert str_16 == 'Section(title=" Use \'")'


def test_case_668():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_2 = var_1.__repr__()
    assert var_2 == "'\"Link(title=\\'0_~6:m!(f5FgU,:rvz\\', url=None)\"'"
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_1, none_type_1)
    var_3 = link_1.__repr__()
    assert var_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_4 = var_3.__repr__()
    assert var_4 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_5 = var_3.__repr__()
    assert var_5 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    iterator_0 = var_4.__iter__()


def test_case_669():
    str_0 = "page_context"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    link_0 = module_0.Link(str_0, section_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "page_context"
    assert (
        f"{type(link_0.url).__module__}.{type(link_0.url).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    str_1 = " Use '"
    section_1 = module_0.Section(str_1, str_1)
    var_0 = section_1.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    str_2 = 'C5B_`:"E&+;Y['
    link_1 = module_0.Link(str_2, str_2)
    int_0 = var_0.__len__()
    assert int_0 == 23
    section_2 = module_0.Section(str_1, var_0)
    assert section_2.children == 'Section(title=" Use \'")'
    str_3 = " Use '"
    section_3 = module_0.Section(str_3, str_3)
    var_1 = section_3.__repr__()
    assert var_1 == 'Section(title=" Use \'")'
    str_4 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_2 = module_0.Link(str_4, none_type_0)
    bytes_0 = b"\x802c35Z\xf8"
    link_3 = module_0.Link(link_2, bytes_0)
    iterator_0 = var_1.__iter__()
    bytes_1 = b"\xac\xb0\x17a\xfaT/\xf7\xc9"
    section_4 = module_0.Section(bytes_1, bytes_1)
    str_5 = "gfRsC:6&{;|"
    section_5 = module_0.Section(str_5, str_5)
    var_2 = section_5.__repr__()
    assert var_2 == "Section(title='gfRsC:6&{;|')"
    bool_0 = True
    section_6 = module_0.Section(bool_0, bool_0)
    list_0 = [var_2, var_2]
    section_7 = module_0.Section(section_5, list_0)
    assert section_7.children == [
        "Section(title='gfRsC:6&{;|')",
        "Section(title='gfRsC:6&{;|')",
    ]
    str_6 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_4 = module_0.Link(str_6, none_type_1)
    var_3 = link_4.__repr__()
    assert var_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_4 = var_3.__repr__()
    assert var_4 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_5 = var_4.__repr__()
    assert var_5 == "'\"Link(title=\\'0_~6:m!(f5FgU,:rvz\\', url=None)\"'"
    str_7 = "$'WQJnZWT=,%l\"H2OV"
    link_5 = module_0.Link(var_5, str_7)
    assert link_5.title == "'\"Link(title=\\'0_~6:m!(f5FgU,:rvz\\', url=None)\"'"


@pytest.mark.xfail(strict=True)
def test_case_670():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    module_0.get_navigation(none_type_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_671():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    module_2.file_sort_key(link_0)


@pytest.mark.xfail(strict=True)
def test_case_672():
    none_type_0 = None
    module_2.file_sort_key(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_673():
    int_0 = 1263
    module_3.nest_paths(int_0)


@pytest.mark.xfail(strict=True)
def test_case_674():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    module_0.get_navigation(str_0, var_0)


@pytest.mark.xfail(strict=True)
def test_case_675():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    module_0.Navigation(var_0, var_0)


@pytest.mark.xfail(strict=True)
def test_case_676():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    str_1 = " Use '"
    section_0 = module_0.Section(str_1, str_1)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_2, none_type_1)
    var_1 = link_1.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    module_0.Navigation(var_1, link_1)


@pytest.mark.xfail(strict=True)
def test_case_677():
    str_0 = "<&>Z\x0c#MM|FIl\\}"
    click_exception_0 = module_4.ClickException(str_0)
    list_0 = [click_exception_0, str_0]
    none_type_0 = None
    module_0.Navigation(list_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_678():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    bytes_0 = b"\x802c35Z\xf8"
    link_1 = module_0.Link(link_0, bytes_0)
    dict_0 = {}
    str_1 = 'y\x0c[fN"W:2&:SWyz~W'
    link_2 = module_0.Link(dict_0, str_1)
    module_0.get_navigation(bytes_0, link_0)


@pytest.mark.xfail(strict=True)
def test_case_679():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    var_1 = var_0.__repr__()
    assert var_1 == "'Section(title=\" Use \\'\")'"
    str_1 = " Use '"
    section_1 = module_0.Section(str_1, str_1)
    var_2 = section_1.__repr__()
    assert var_2 == 'Section(title=" Use \'")'
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_2, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    module_0.get_navigation(str_1, var_1)


@pytest.mark.xfail(strict=True)
def test_case_680():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    module_3.nest_paths(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_681():
    dict_0 = {}
    str_0 = 'y\x0c[fN"W:2&:SWyz~W'
    link_0 = module_0.Link(dict_0, str_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == {}
    assert link_0.url == 'y\x0c[fN"W:2&:SWyz~W'
    none_type_0 = None
    module_0.get_navigation(dict_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_682():
    float_0 = -110.0
    module_0.Navigation(float_0, float_0)


@pytest.mark.xfail(strict=True)
def test_case_683():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    module_0.Navigation(var_0, var_0)


@pytest.mark.xfail(strict=True)
def test_case_684():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_1 = " Use '"
    section_0 = module_0.Section(str_1, str_1)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_2 = section_0.__repr__()
    assert var_2 == 'Section(title=" Use \'")'
    var_3 = var_2.__repr__()
    assert var_3 == "'Section(title=\" Use \\'\")'"
    dict_0 = {}
    str_2 = 'y\x0c[fN"W:2&:SWyz~W'
    link_1 = module_0.Link(dict_0, str_2)
    str_3 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_2 = module_0.Link(str_3, none_type_1)
    bytes_0 = b"\x802c35Z\xf8"
    link_3 = module_0.Link(link_2, bytes_0)
    str_4 = " Use '"
    section_1 = module_0.Section(str_4, str_4)
    var_4 = section_1.__repr__()
    assert var_4 == 'Section(title=" Use \'")'
    str_5 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_4 = module_0.Link(str_5, none_type_2)
    var_5 = link_4.__repr__()
    assert var_5 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_6 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_5 = module_0.Link(str_6, none_type_3)
    bytes_1 = b"\x802c35Z\xf8"
    link_6 = module_0.Link(link_5, bytes_1)
    dict_1 = {}
    str_7 = 'y\x0c[fN"W:2&:SWyz~W'
    link_7 = module_0.Link(dict_1, str_7)
    var_6 = link_6.__repr__()
    assert (
        var_6
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )
    str_8 = "0_~6:m!(f5FgU,:rvz"
    none_type_4 = None
    link_8 = module_0.Link(str_8, none_type_4)
    list_0 = [link_2, none_type_1, str_2]
    module_0.Navigation(list_0, list_0)


@pytest.mark.xfail(strict=True)
def test_case_685():
    dict_0 = {}
    str_0 = 'y\x0c[fN"W:2&:SWyz~W'
    link_0 = module_0.Link(dict_0, str_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == {}
    assert link_0.url == 'y\x0c[fN"W:2&:SWyz~W'
    str_1 = " Use '"
    section_0 = module_0.Section(str_1, str_1)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    var_1 = var_0.__repr__()
    assert var_1 == "'Section(title=\" Use \\'\")'"
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_1 = module_0.Link(str_2, none_type_0)
    bytes_0 = b"\x802c35Z\xf8"
    link_2 = module_0.Link(link_1, bytes_0)
    var_2 = link_1.__repr__()
    assert var_2 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_3 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_3 = module_0.Link(str_3, none_type_1)
    var_3 = link_3.__repr__()
    assert var_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_4 = " Use '"
    section_1 = module_0.Section(str_4, str_4)
    var_4 = section_1.__repr__()
    assert var_4 == 'Section(title=" Use \'")'
    str_5 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_4 = module_0.Link(str_5, none_type_2)
    bytes_1 = b"\x802c35Z\xf8"
    link_5 = module_0.Link(link_4, bytes_1)
    dict_1 = {}
    str_6 = 'y\x0c[fN"W:2&:SWyz~W'
    link_6 = module_0.Link(dict_1, str_6)
    var_5 = link_5.__repr__()
    assert (
        var_5
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )
    str_7 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_7 = module_0.Link(str_7, none_type_3)
    str_8 = "0_~6:m!(f5FgU,:rvz"
    none_type_4 = None
    link_8 = module_0.Link(str_8, none_type_4)
    var_6 = link_8.__repr__()
    assert var_6 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_7 = var_6.__repr__()
    assert var_7 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_9 = "0_~6:m!(f5FgU,:rvz"
    none_type_5 = None
    link_9 = module_0.Link(str_9, none_type_5)
    bytes_2 = b"\x802c35Z\xf8"
    link_10 = module_0.Link(link_9, bytes_2)
    module_0.Navigation(section_0, str_9)


@pytest.mark.xfail(strict=True)
def test_case_686():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    bytes_0 = b"\x802c35Z\xf8"
    link_1 = module_0.Link(link_0, bytes_0)
    dict_0 = {}
    str_1 = 'y\x0c[fN"W:2&:SWyz~W'
    link_2 = module_0.Link(dict_0, str_1)
    var_0 = link_1.__repr__()
    assert (
        var_0
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )
    dict_1 = {}
    str_2 = 'y\x0c[fN"W:2&:SWyz~W'
    link_3 = module_0.Link(dict_1, str_2)
    str_3 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_4 = module_0.Link(str_3, none_type_1)
    var_1 = link_4.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_4 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_5 = module_0.Link(str_4, none_type_2)
    str_5 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_6 = module_0.Link(str_5, none_type_3)
    bytes_1 = b"\x802c35Z\xf8"
    link_7 = module_0.Link(link_6, bytes_1)
    str_6 = " Use '"
    section_0 = module_0.Section(str_6, str_6)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_2 = section_0.__repr__()
    assert var_2 == 'Section(title=" Use \'")'
    str_7 = " Use '"
    section_1 = module_0.Section(str_7, str_7)
    var_3 = section_1.__repr__()
    assert var_3 == 'Section(title=" Use \'")'
    var_4 = var_3.__repr__()
    assert var_4 == "'Section(title=\" Use \\'\")'"
    str_8 = "0_~6:m!(f5FgU,:rvz"
    none_type_4 = None
    link_8 = module_0.Link(str_8, none_type_4)
    bytes_2 = b"\x802c35Z\xf8"
    link_9 = module_0.Link(link_8, bytes_2)
    var_5 = link_8.__repr__()
    assert var_5 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    module_0.get_navigation(section_0, str_6)


@pytest.mark.xfail(strict=True)
def test_case_687():
    none_type_0 = None
    module_0.get_navigation(none_type_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_688():
    none_type_0 = None
    var_0 = module_1.urlsplit(none_type_0)
    var_1 = var_0.__repr__()
    var_2 = var_1.__repr__()
    module_2.file_sort_key(var_2)


@pytest.mark.xfail(strict=True)
def test_case_689():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    var_1 = var_0.__repr__()
    assert var_1 == "'Section(title=\" Use \\'\")'"
    build_error_0 = module_5.BuildError(var_0)
    assert build_error_0.message == 'Section(title=" Use \'")'
    module_0.get_navigation(var_1, build_error_0)


@pytest.mark.xfail(strict=True)
def test_case_690():
    dict_0 = {}
    str_0 = 'y\x0c[fN"W:2&:SWyz~W'
    link_0 = module_0.Link(dict_0, str_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == {}
    assert link_0.url == 'y\x0c[fN"W:2&:SWyz~W'
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_1 = module_0.Link(str_1, none_type_0)
    bytes_0 = b"\x802c35Z\xf8"
    link_2 = module_0.Link(link_1, bytes_0)
    var_0 = link_1.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_3 = module_0.Link(str_2, none_type_1)
    bytes_1 = b"\x802c35Z\xf8"
    link_4 = module_0.Link(link_3, bytes_1)
    str_3 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_5 = module_0.Link(str_3, none_type_2)
    str_4 = " Use '"
    section_0 = module_0.Section(str_4, str_4)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_1 = section_0.__repr__()
    assert var_1 == 'Section(title=" Use \'")'
    var_2 = var_1.__repr__()
    assert var_2 == "'Section(title=\" Use \\'\")'"
    str_5 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_6 = module_0.Link(str_5, none_type_3)
    bytes_2 = b"\x802c35Z\xf8"
    link_7 = module_0.Link(link_6, bytes_2)
    dict_1 = {}
    str_6 = 'y\x0c[fN"W:2&:SWyz~W'
    link_8 = module_0.Link(dict_1, str_6)
    var_3 = link_7.__repr__()
    assert (
        var_3
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )
    str_7 = "0_~6:m!(f5FgU,:rvz"
    none_type_4 = None
    link_9 = module_0.Link(str_7, none_type_4)
    var_4 = link_9.__repr__()
    assert var_4 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_5 = var_4.__repr__()
    assert var_5 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_8 = " Use '"
    section_1 = module_0.Section(str_8, str_8)
    var_6 = section_1.__repr__()
    assert var_6 == 'Section(title=" Use \'")'
    module_0.Navigation(var_1, link_9)


@pytest.mark.xfail(strict=True)
def test_case_691():
    bool_0 = True
    click_exception_0 = module_4.ClickException(bool_0)
    module_0.get_navigation(click_exception_0, bool_0)


@pytest.mark.xfail(strict=True)
def test_case_692():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_1, none_type_1)
    bytes_0 = b"\x802c35Z\xf8"
    link_2 = module_0.Link(link_1, bytes_0)
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_3 = module_0.Link(str_2, none_type_2)
    bytes_1 = b"\x802c35Z\xf8"
    link_4 = module_0.Link(link_3, bytes_1)
    var_0 = link_3.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    dict_0 = {}
    str_3 = 'y\x0c[fN"W:2&:SWyz~W'
    link_5 = module_0.Link(dict_0, str_3)
    str_4 = " Use '"
    section_0 = module_0.Section(str_4, str_4)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_1 = section_0.__repr__()
    assert var_1 == 'Section(title=" Use \'")'
    int_0 = var_1.__len__()
    assert int_0 == 23
    module_0.get_navigation(bytes_0, var_0)


@pytest.mark.xfail(strict=True)
def test_case_693():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    bytes_0 = b"\x802c35Z\xf8"
    link_1 = module_0.Link(link_0, bytes_0)
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_1 = " Use '"
    section_0 = module_0.Section(str_1, str_1)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_1 = section_0.__repr__()
    assert var_1 == 'Section(title=" Use \'")'
    var_2 = var_1.__repr__()
    assert var_2 == "'Section(title=\" Use \\'\")'"
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_2 = module_0.Link(str_2, none_type_1)
    bytes_1 = b"\x802c35Z\xf8"
    link_3 = module_0.Link(link_2, bytes_1)
    dict_0 = {}
    str_3 = 'y\x0c[fN"W:2&:SWyz~W'
    link_4 = module_0.Link(dict_0, str_3)
    var_3 = link_3.__repr__()
    assert (
        var_3
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )
    str_4 = " Use '"
    section_1 = module_0.Section(str_4, str_4)
    var_4 = section_1.__repr__()
    assert var_4 == 'Section(title=" Use \'")'
    int_0 = var_4.__len__()
    assert int_0 == 23
    str_5 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_5 = module_0.Link(str_5, none_type_2)
    var_5 = link_5.__repr__()
    assert var_5 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_6 = var_5.__repr__()
    assert var_6 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_6 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_6 = module_0.Link(str_6, none_type_3)
    var_7 = link_6.__repr__()
    assert var_7 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_7 = "0_~6:m!(f5FgU,:rvz"
    none_type_4 = None
    link_7 = module_0.Link(str_7, none_type_4)
    set_0 = {none_type_3, bytes_0}
    module_0.get_navigation(var_5, set_0)


@pytest.mark.xfail(strict=True)
def test_case_694():
    str_0 = "page_context"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_1, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    bytes_0 = b"\x802c35Z\xf8"
    link_1 = module_0.Link(link_0, bytes_0)
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_2 = module_0.Link(str_2, none_type_1)
    var_0 = link_2.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_3 = " Use '"
    section_1 = module_0.Section(str_3, str_3)
    var_2 = section_1.__repr__()
    assert var_2 == 'Section(title=" Use \'")'
    var_3 = var_2.__repr__()
    assert var_3 == "'Section(title=\" Use \\'\")'"
    str_4 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_3 = module_0.Link(str_4, none_type_2)
    bytes_1 = b"\x802c35Z\xf8"
    link_4 = module_0.Link(link_3, bytes_1)
    dict_0 = {}
    str_5 = 'y\x0c[fN"W:2&:SWyz~W'
    link_5 = module_0.Link(dict_0, str_5)
    var_4 = link_4.__repr__()
    assert (
        var_4
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )
    str_6 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_6 = module_0.Link(str_6, none_type_3)
    bytes_2 = b"\x802c35Z\xf8"
    link_7 = module_0.Link(link_6, bytes_2)
    var_5 = link_6.__repr__()
    assert var_5 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_7 = " Use '"
    section_2 = module_0.Section(str_7, str_7)
    var_6 = section_2.__repr__()
    assert var_6 == 'Section(title=" Use \'")'
    int_0 = 500
    list_0 = [var_3, int_0, str_6]
    module_0.get_navigation(list_0, str_6)


@pytest.mark.xfail(strict=True)
def test_case_695():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    str_1 = " Use '"
    section_1 = module_0.Section(str_1, str_1)
    var_1 = section_1.__repr__()
    assert var_1 == 'Section(title=" Use \'")'
    var_2 = var_1.__repr__()
    assert var_2 == "'Section(title=\" Use \\'\")'"
    str_2 = "page_context"
    section_2 = module_0.Section(str_2, str_2)
    str_3 = "' from the site because it conflicts with '"
    list_0 = []
    section_3 = module_0.Section(str_3, list_0)
    str_4 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_4, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    bytes_0 = b"\x802c35Z\xf8"
    link_1 = module_0.Link(link_0, bytes_0)
    var_3 = link_0.__repr__()
    assert var_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    module_0.Navigation(str_4, var_2)


@pytest.mark.xfail(strict=True)
def test_case_696():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    bytes_0 = b"\x802c35Z\xf8"
    link_1 = module_0.Link(link_0, bytes_0)
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_2 = module_0.Link(str_1, none_type_1)
    var_0 = link_2.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_2 = var_0.__str__()
    assert str_2 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_3 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_3 = module_0.Link(str_3, none_type_2)
    str_4 = "page_context"
    section_0 = module_0.Section(str_4, str_4)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_5 = "' from the site because it conflicts with '"
    list_0 = []
    section_1 = module_0.Section(str_5, list_0)
    module_0.Navigation(str_4, str_3)


@pytest.mark.xfail(strict=True)
def test_case_697():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    bytes_0 = b"\x802c35Z\xf8"
    link_1 = module_0.Link(link_0, bytes_0)
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_2 = module_0.Link(str_1, none_type_1)
    bytes_1 = b"\x802c35Z\xf8"
    link_3 = module_0.Link(link_2, bytes_1)
    str_2 = " Use '"
    section_0 = module_0.Section(str_2, str_2)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_1 = section_0.__repr__()
    assert var_1 == 'Section(title=" Use \'")'
    var_2 = var_1.__repr__()
    assert var_2 == "'Section(title=\" Use \\'\")'"
    str_3 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_4 = module_0.Link(str_3, none_type_2)
    var_3 = link_4.__repr__()
    assert var_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_4 = var_3.__repr__()
    assert var_4 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_4 = var_3.__str__()
    assert str_4 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    module_0.Navigation(var_4, var_1)


@pytest.mark.xfail(strict=True)
def test_case_698():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = module_1.urlsplit(none_type_0, none_type_0)
    list_0 = [var_0, var_0]
    module_0.Navigation(link_0, list_0)


@pytest.mark.xfail(strict=True)
def test_case_699():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    bytes_0 = b"\x802c35Z\xf8"
    link_1 = module_0.Link(link_0, bytes_0)
    dict_0 = {}
    str_1 = 'y\x0c[fN"W:2&:SWyz~W'
    link_2 = module_0.Link(dict_0, str_1)
    var_0 = link_1.__repr__()
    assert (
        var_0
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )
    str_2 = "page_context"
    section_0 = module_0.Section(str_2, str_2)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    dict_1 = {}
    str_3 = 'y\x0c[fN"W:2&:SWyz~W'
    link_3 = module_0.Link(dict_1, str_3)
    str_4 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_4 = module_0.Link(str_4, none_type_1)
    bytes_1 = b"\x802c35Z\xf8"
    link_5 = module_0.Link(link_4, bytes_1)
    var_1 = link_4.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_5 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_6 = module_0.Link(str_5, none_type_2)
    bytes_2 = b"\x802c35Z\xf8"
    link_7 = module_0.Link(link_6, bytes_2)
    str_6 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_8 = module_0.Link(str_6, none_type_3)
    var_2 = link_8.__repr__()
    assert var_2 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_3 = var_2.__repr__()
    assert var_3 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_7 = var_2.__str__()
    assert str_7 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_8 = "0_~6:m!(f5FgU,:rvz"
    none_type_4 = None
    link_9 = module_0.Link(str_8, none_type_4)
    module_0.get_navigation(var_0, none_type_2)


@pytest.mark.xfail(strict=True)
def test_case_700():
    bool_0 = True
    module_3.nest_paths(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_701():
    none_type_0 = None
    build_error_0 = module_5.BuildError(none_type_0)
    module_1.urlsplit(build_error_0)


@pytest.mark.xfail(strict=True)
def test_case_702():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    bytes_0 = b"\x802c35Z\xf8"
    link_1 = module_0.Link(link_0, bytes_0)
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    dict_0 = {}
    str_1 = 'y\x0c[fN"W:2&:SWyz~W'
    link_2 = module_0.Link(dict_0, str_1)
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_3 = module_0.Link(str_2, none_type_1)
    var_1 = link_3.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_2 = var_1.__repr__()
    assert var_2 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_3 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_4 = module_0.Link(str_3, none_type_2)
    var_3 = link_4.__repr__()
    assert var_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_4 = "page_context"
    section_0 = module_0.Section(str_4, str_4)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_5 = "' from the site because it conflicts with '"
    list_0 = []
    section_1 = module_0.Section(str_5, list_0)
    str_6 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_5 = module_0.Link(str_6, none_type_3)
    module_0.get_navigation(str_6, link_2)


@pytest.mark.xfail(strict=True)
def test_case_703():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    int_0 = var_0.__len__()
    assert int_0 == 23
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_1, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    bytes_0 = b"\x802c35Z\xf8"
    link_1 = module_0.Link(link_0, bytes_0)
    var_1 = link_0.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_2 = module_0.Link(str_2, none_type_1)
    var_2 = link_2.__repr__()
    assert var_2 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_3 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_3 = module_0.Link(str_3, none_type_2)
    var_3 = link_3.__repr__()
    assert var_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_4 = var_3.__repr__()
    assert var_4 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    module_0.get_navigation(str_2, link_3)


@pytest.mark.xfail(strict=True)
def test_case_704():
    str_0 = "page_context"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = "' from the site because it conflicts with '"
    list_0 = []
    section_1 = module_0.Section(str_1, list_0)
    str_2 = " Use '"
    section_2 = module_0.Section(str_2, str_2)
    var_0 = section_2.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    int_0 = var_0.__len__()
    assert int_0 == 23
    str_3 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_3, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_1 = link_0.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_2 = var_1.__repr__()
    assert var_2 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_4 = var_1.__str__()
    assert str_4 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_5 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_5, none_type_1)
    bytes_0 = b"\x802c35Z\xf8"
    link_2 = module_0.Link(link_1, bytes_0)
    dict_0 = {}
    str_6 = 'y\x0c[fN"W:2&:SWyz~W'
    link_3 = module_0.Link(dict_0, str_6)
    var_3 = link_2.__repr__()
    assert (
        var_3
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )
    str_7 = " Use '"
    section_3 = module_0.Section(str_7, str_7)
    var_4 = section_3.__repr__()
    assert var_4 == 'Section(title=" Use \'")'
    var_5 = var_4.__repr__()
    assert var_5 == "'Section(title=\" Use \\'\")'"
    str_8 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_4 = module_0.Link(str_8, none_type_2)
    bytes_1 = b"\x802c35Z\xf8"
    link_5 = module_0.Link(link_4, bytes_1)
    str_9 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_6 = module_0.Link(str_9, none_type_3)
    var_6 = link_6.__repr__()
    assert var_6 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    module_0.Navigation(str_6, var_0)


@pytest.mark.xfail(strict=True)
def test_case_705():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_1, none_type_1)
    var_0 = link_1.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_2 = var_0.__str__()
    assert str_2 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_3 = " Use '"
    section_0 = module_0.Section(str_3, str_3)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_2 = section_0.__repr__()
    assert var_2 == 'Section(title=" Use \'")'
    int_0 = var_2.__len__()
    assert int_0 == 23
    module_0.Navigation(none_type_0, var_0)


@pytest.mark.xfail(strict=True)
def test_case_706():
    str_0 = "page_context"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    list_0 = [section_0, str_0]
    module_0.Navigation(list_0, section_0)


@pytest.mark.xfail(strict=True)
def test_case_707():
    str_0 = "page_context"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_1, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    bytes_0 = b"\x802c35Z\xf8"
    link_1 = module_0.Link(link_0, bytes_0)
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_2 = module_0.Link(str_2, none_type_1)
    var_0 = link_2.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_3 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_3 = module_0.Link(str_3, none_type_2)
    bytes_1 = b"\x802c35Z\xf8"
    link_4 = module_0.Link(link_3, bytes_1)
    var_1 = link_3.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    module_0.Navigation(var_1, var_1)


@pytest.mark.xfail(strict=True)
def test_case_708():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    bytes_0 = b"\x802c35Z\xf8"
    link_1 = module_0.Link(link_0, bytes_0)
    dict_0 = {}
    str_1 = 'y\x0c[fN"W:2&:SWyz~W'
    link_2 = module_0.Link(dict_0, str_1)
    var_0 = link_1.__repr__()
    assert (
        var_0
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )
    str_2 = " Use '"
    section_0 = module_0.Section(str_2, str_2)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_1 = section_0.__repr__()
    assert var_1 == 'Section(title=" Use \'")'
    str_3 = "page_context"
    section_1 = module_0.Section(str_3, str_3)
    str_4 = "' from the site because it conflicts with '"
    list_0 = []
    section_2 = module_0.Section(str_4, list_0)
    str_5 = "localhost"
    link_3 = module_0.Link(str_4, str_5)
    dict_1 = {}
    str_6 = 'y\x0c[fN"W:2&:SWyz~W'
    link_4 = module_0.Link(dict_1, str_6)
    module_0.get_navigation(str_0, section_2)


@pytest.mark.xfail(strict=True)
def test_case_709():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    bool_0 = False
    module_2.file_sort_key(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_710():
    none_type_0 = None
    bool_0 = True
    module_6.Page(none_type_0, none_type_0, bool_0)


@pytest.mark.xfail(strict=True)
def test_case_711():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    bytes_0 = b"\x802c35Z\xf8"
    link_1 = module_0.Link(link_0, bytes_0)
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_2 = module_0.Link(str_1, none_type_1)
    var_1 = link_2.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_2 = var_1.__repr__()
    assert var_2 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_2 = "page_context"
    section_0 = module_0.Section(str_2, str_2)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_3 = "page_context"
    section_1 = module_0.Section(str_3, str_3)
    str_4 = "' from the site because it conflicts with '"
    list_0 = []
    section_2 = module_0.Section(str_4, list_0)
    str_5 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_3 = module_0.Link(str_5, none_type_2)
    bytes_1 = b"\x802c35Z\xf8"
    link_4 = module_0.Link(link_3, bytes_1)
    str_6 = "page_context"
    section_3 = module_0.Section(str_6, str_6)
    str_7 = "' from the site because it conflicts with '"
    list_1 = []
    section_4 = module_0.Section(str_7, list_1)
    str_8 = "localhost"
    link_5 = module_0.Link(str_7, str_8)
    str_9 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_6 = module_0.Link(str_9, none_type_3)
    bytes_2 = b"\x802c35Z\xf8"
    link_7 = module_0.Link(link_6, bytes_2)
    dict_0 = {}
    str_10 = 'y\x0c[fN"W:2&:SWyz~W'
    link_8 = module_0.Link(dict_0, str_10)
    var_3 = link_7.__repr__()
    assert (
        var_3
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )
    str_11 = "0_~6:m!(f5FgU,:rvz"
    none_type_4 = None
    link_9 = module_0.Link(str_11, none_type_4)
    var_4 = link_9.__repr__()
    assert var_4 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_5 = var_4.__repr__()
    assert var_5 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_12 = var_4.__str__()
    assert str_12 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_13 = " Use '"
    section_5 = module_0.Section(str_13, str_13)
    var_6 = section_5.__repr__()
    assert var_6 == 'Section(title=" Use \'")'
    int_0 = var_6.__len__()
    assert int_0 == 23
    dict_1 = {}
    str_14 = 'y\x0c[fN"W:2&:SWyz~W'
    link_10 = module_0.Link(dict_1, str_14)
    module_2.file_sort_key(var_4)


@pytest.mark.xfail(strict=True)
def test_case_712():
    int_0 = 7
    module_1.urlsplit(int_0, int_0)


@pytest.mark.xfail(strict=True)
def test_case_713():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_1, none_type_1)
    bytes_0 = b"\x802c35Z\xf8"
    link_2 = module_0.Link(link_1, bytes_0)
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_3 = module_0.Link(str_2, none_type_2)
    bytes_1 = b"\x802c35Z\xf8"
    link_4 = module_0.Link(link_3, bytes_1)
    dict_0 = {}
    str_3 = 'y\x0c[fN"W:2&:SWyz~W'
    link_5 = module_0.Link(dict_0, str_3)
    var_2 = link_4.__repr__()
    assert (
        var_2
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )
    str_4 = " Use '"
    section_0 = module_0.Section(str_4, str_4)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_3 = section_0.__repr__()
    assert var_3 == 'Section(title=" Use \'")'
    int_0 = var_3.__len__()
    assert int_0 == 23
    str_5 = " Use '"
    section_1 = module_0.Section(str_5, str_5)
    var_4 = section_1.__repr__()
    assert var_4 == 'Section(title=" Use \'")'
    var_5 = var_4.__repr__()
    assert var_5 == "'Section(title=\" Use \\'\")'"
    str_6 = "page_context"
    section_2 = module_0.Section(str_6, str_6)
    module_0.get_navigation(var_5, var_5)


@pytest.mark.xfail(strict=True)
def test_case_714():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    bytes_0 = b"\x802c35Z\xf8"
    link_1 = module_0.Link(link_0, bytes_0)
    dict_0 = {}
    str_1 = 'y\x0c[fN"W:2&:SWyz~W'
    link_2 = module_0.Link(dict_0, str_1)
    var_0 = link_1.__repr__()
    assert (
        var_0
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )
    str_2 = "page_context"
    section_0 = module_0.Section(str_2, str_2)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_3 = "' from the site because it conflicts with '"
    list_0 = []
    section_1 = module_0.Section(str_3, list_0)
    str_4 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_3 = module_0.Link(str_4, none_type_1)
    var_1 = link_3.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    dict_1 = {}
    str_5 = 'y\x0c[fN"W:2&:SWyz~W'
    link_4 = module_0.Link(dict_1, str_5)
    str_6 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_5 = module_0.Link(str_6, none_type_2)
    var_2 = link_5.__repr__()
    assert var_2 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_3 = var_2.__repr__()
    assert var_3 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_7 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_6 = module_0.Link(str_7, none_type_3)
    str_8 = "0_~6:m!(f5FgU,:rvz"
    none_type_4 = None
    link_7 = module_0.Link(str_8, none_type_4)
    var_4 = link_7.__repr__()
    assert var_4 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_5 = var_4.__repr__()
    assert var_5 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_9 = var_4.__str__()
    assert str_9 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    module_0.get_navigation(link_3, str_3)


@pytest.mark.xfail(strict=True)
def test_case_715():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    var_1 = var_0.__repr__()
    assert var_1 == "'Section(title=\" Use \\'\")'"
    dict_0 = {}
    str_1 = 'y\x0c[fN"W:2&:SWyz~W'
    link_0 = module_0.Link(dict_0, str_1)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == {}
    assert link_0.url == 'y\x0c[fN"W:2&:SWyz~W'
    str_2 = " Use '"
    section_1 = module_0.Section(str_2, str_2)
    var_2 = section_1.__repr__()
    assert var_2 == 'Section(title=" Use \'")'
    str_3 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_1 = module_0.Link(str_3, none_type_0)
    bytes_0 = b"\x802c35Z\xf8"
    link_2 = module_0.Link(link_1, bytes_0)
    dict_1 = {}
    str_4 = 'y\x0c[fN"W:2&:SWyz~W'
    link_3 = module_0.Link(dict_1, str_4)
    var_3 = link_2.__repr__()
    assert (
        var_3
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )
    str_5 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_4 = module_0.Link(str_5, none_type_1)
    str_6 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_5 = module_0.Link(str_6, none_type_2)
    var_4 = link_5.__repr__()
    assert var_4 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    module_2.file_sort_key(var_2)


@pytest.mark.xfail(strict=True)
def test_case_716():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    int_0 = var_0.__len__()
    assert int_0 == 23
    dict_0 = {}
    str_1 = 'y\x0c[fN"W:2&:SWyz~W'
    link_0 = module_0.Link(dict_0, str_1)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == {}
    assert link_0.url == 'y\x0c[fN"W:2&:SWyz~W'
    module_0.Navigation(var_0, section_0)


@pytest.mark.xfail(strict=True)
def test_case_717():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    bytes_0 = b"\x802c35Z\xf8"
    link_1 = module_0.Link(link_0, bytes_0)
    str_1 = " Use '"
    section_0 = module_0.Section(str_1, str_1)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    int_0 = var_0.__len__()
    assert int_0 == 23
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_2 = module_0.Link(str_2, none_type_1)
    var_1 = link_2.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_2 = var_1.__repr__()
    assert var_2 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_3 = "page_context"
    section_1 = module_0.Section(str_3, str_3)
    str_4 = "' from the site because it conflicts with '"
    list_0 = []
    section_2 = module_0.Section(str_4, list_0)
    str_5 = "page_context"
    section_3 = module_0.Section(str_5, str_5)
    str_6 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_3 = module_0.Link(str_6, none_type_2)
    bytes_1 = b"\x802c35Z\xf8"
    link_4 = module_0.Link(link_3, bytes_1)
    dict_0 = {}
    str_7 = 'y\x0c[fN"W:2&:SWyz~W'
    link_5 = module_0.Link(dict_0, str_7)
    var_3 = link_4.__repr__()
    assert (
        var_3
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )
    str_8 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_6 = module_0.Link(str_8, none_type_3)
    var_4 = link_6.__repr__()
    assert var_4 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    dict_1 = {}
    str_9 = 'y\x0c[fN"W:2&:SWyz~W'
    link_7 = module_0.Link(dict_1, str_9)
    str_10 = "0_~6:m!(f5FgU,:rvz"
    none_type_4 = None
    link_8 = module_0.Link(str_10, none_type_4)
    str_11 = "0_~6:m!(f5FgU,:rvz"
    none_type_5 = None
    link_9 = module_0.Link(str_11, none_type_5)
    bytes_2 = b"\x802c35Z\xf8"
    link_10 = module_0.Link(link_9, bytes_2)
    var_5 = link_9.__repr__()
    assert var_5 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    module_0.get_navigation(bytes_1, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_718():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    bytes_0 = b"\x802c35Z\xf8"
    link_1 = module_0.Link(link_0, bytes_0)
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_2 = module_0.Link(str_1, none_type_1)
    var_1 = link_2.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_2 = var_1.__repr__()
    assert var_2 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_2 = var_1.__str__()
    assert str_2 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    list_0 = [var_1, var_0, var_1]
    module_0.Navigation(str_1, list_0)


@pytest.mark.xfail(strict=True)
def test_case_719():
    str_0 = "page_context"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = "' from the site because it conflicts with '"
    list_0 = []
    section_1 = module_0.Section(str_1, list_0)
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_2, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    bytes_0 = b"\x802c35Z\xf8"
    link_1 = module_0.Link(link_0, bytes_0)
    dict_0 = {}
    str_3 = 'y\x0c[fN"W:2&:SWyz~W'
    link_2 = module_0.Link(dict_0, str_3)
    var_0 = link_1.__repr__()
    assert (
        var_0
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )
    str_4 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_3 = module_0.Link(str_4, none_type_1)
    var_1 = link_3.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_2 = var_1.__repr__()
    assert var_2 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_5 = " Use '"
    section_2 = module_0.Section(str_5, str_5)
    var_3 = section_2.__repr__()
    assert var_3 == 'Section(title=" Use \'")'
    var_4 = var_3.__repr__()
    assert var_4 == "'Section(title=\" Use \\'\")'"
    module_0.Navigation(link_0, var_2)


@pytest.mark.xfail(strict=True)
def test_case_720():
    none_type_0 = None
    module_6.Page(none_type_0, none_type_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_721():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    bytes_0 = b"\x802c35Z\xf8"
    link_1 = module_0.Link(link_0, bytes_0)
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_1 = "page_context"
    section_0 = module_0.Section(str_1, str_1)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_2 = "' from the site because it conflicts with '"
    list_0 = []
    section_1 = module_0.Section(str_2, list_0)
    str_3 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_2 = module_0.Link(str_3, none_type_1)
    var_1 = link_2.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_2 = var_1.__repr__()
    assert var_2 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_4 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_3 = module_0.Link(str_4, none_type_2)
    var_3 = link_3.__repr__()
    assert var_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_4 = var_3.__repr__()
    assert var_4 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_5 = var_3.__str__()
    assert str_5 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_6 = " Use '"
    section_2 = module_0.Section(str_6, str_6)
    var_5 = section_2.__repr__()
    assert var_5 == 'Section(title=" Use \'")'
    int_0 = var_5.__len__()
    assert int_0 == 23
    module_0.get_navigation(none_type_0, var_0)


@pytest.mark.xfail(strict=True)
def test_case_722():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    var_1 = var_0.__repr__()
    assert var_1 == "'Section(title=\" Use \\'\")'"
    str_1 = "page_context"
    section_1 = module_0.Section(str_1, str_1)
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_2, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_2 = link_0.__repr__()
    assert var_2 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    module_0.get_navigation(str_1, str_0)


@pytest.mark.xfail(strict=True)
def test_case_723():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    bytes_0 = b"\x802c35Z\xf8"
    link_1 = module_0.Link(link_0, bytes_0)
    var_0 = link_1.__repr__()
    assert (
        var_0
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )
    tuple_0 = (var_0,)
    tuple_1 = (tuple_0, var_0, var_0)
    module_0.get_navigation(tuple_1, tuple_1)


@pytest.mark.xfail(strict=True)
def test_case_724():
    str_0 = "page_context"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = "' from the site because it conflicts with '"
    list_0 = []
    section_1 = module_0.Section(str_1, list_0)
    str_2 = "page_context"
    section_2 = module_0.Section(str_2, str_2)
    str_3 = "' from the site because it conflicts with '"
    list_1 = []
    section_3 = module_0.Section(str_3, list_1)
    var_0 = section_3.__repr__()
    assert var_0 == "Section(title=\"' from the site because it conflicts with '\")"
    str_4 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_4, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_1 = link_0.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_2 = var_1.__repr__()
    assert var_2 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_5 = var_1.__str__()
    assert str_5 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_6 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_6, none_type_1)
    bytes_0 = b"\x802c35Z\xf8"
    link_2 = module_0.Link(link_1, bytes_0)
    str_7 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_3 = module_0.Link(str_7, none_type_2)
    var_3 = link_3.__repr__()
    assert var_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_8 = " Use '"
    section_4 = module_0.Section(str_8, str_8)
    var_4 = section_4.__repr__()
    assert var_4 == 'Section(title=" Use \'")'
    var_5 = var_4.__repr__()
    assert var_5 == "'Section(title=\" Use \\'\")'"
    module_0.Navigation(none_type_1, section_0)


@pytest.mark.xfail(strict=True)
def test_case_725():
    str_0 = "page_context"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = "' from the site because it conflicts with '"
    list_0 = []
    section_1 = module_0.Section(str_1, list_0)
    str_2 = "localhost"
    link_0 = module_0.Link(str_1, str_2)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "' from the site because it conflicts with '"
    assert link_0.url == "localhost"
    str_3 = "page_context"
    section_2 = module_0.Section(str_3, str_3)
    str_4 = "' from the site because it conflicts with '"
    list_1 = []
    section_3 = module_0.Section(str_4, list_1)
    var_0 = section_3.__repr__()
    assert var_0 == "Section(title=\"' from the site because it conflicts with '\")"
    str_5 = "page_context"
    section_4 = module_0.Section(str_5, str_5)
    str_6 = "' from the site because it conflicts with '"
    list_2 = []
    section_5 = module_0.Section(str_6, list_2)
    str_7 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_1 = module_0.Link(str_7, none_type_0)
    var_1 = link_1.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_8 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_2 = module_0.Link(str_8, none_type_1)
    var_2 = link_2.__repr__()
    assert var_2 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_3 = var_2.__repr__()
    assert var_3 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_9 = var_2.__str__()
    assert str_9 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    dict_0 = {}
    str_10 = 'y\x0c[fN"W:2&:SWyz~W'
    link_3 = module_0.Link(dict_0, str_10)
    module_0.get_navigation(var_2, section_4)


@pytest.mark.xfail(strict=True)
def test_case_726():
    bytes_0 = b"# "
    tuple_0 = ()
    list_0 = [bytes_0, tuple_0, bytes_0, tuple_0]
    module_0.Navigation(list_0, list_0)


@pytest.mark.xfail(strict=True)
def test_case_727():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    var_1 = var_0.__repr__()
    assert var_1 == "'Section(title=\" Use \\'\")'"
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_1, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_2 = link_0.__repr__()
    assert var_2 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_3 = var_2.__repr__()
    assert var_3 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_2 = var_2.__str__()
    assert str_2 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_3 = "page_context"
    section_1 = module_0.Section(str_3, str_3)
    str_4 = "' from the site because it conflicts with '"
    list_0 = []
    section_2 = module_0.Section(str_4, list_0)
    str_5 = "localhost"
    link_1 = module_0.Link(str_4, str_5)
    str_6 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_2 = module_0.Link(str_6, none_type_1)
    bytes_0 = b"\x802c35Z\xf8"
    link_3 = module_0.Link(link_2, bytes_0)
    str_7 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_4 = module_0.Link(str_7, none_type_2)
    module_0.Navigation(str_2, str_3)


@pytest.mark.xfail(strict=True)
def test_case_728():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    bytes_0 = b"\x802c35Z\xf8"
    link_1 = module_0.Link(link_0, bytes_0)
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_1 = "page_context"
    section_0 = module_0.Section(str_1, str_1)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_2 = "' from the site because it conflicts with '"
    list_0 = []
    section_1 = module_0.Section(str_2, list_0)
    str_3 = "localhost"
    link_2 = module_0.Link(str_2, str_3)
    str_4 = "page_context"
    section_2 = module_0.Section(str_4, str_4)
    str_5 = "' from the site because it conflicts with '"
    list_1 = []
    section_3 = module_0.Section(str_5, list_1)
    str_6 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_3 = module_0.Link(str_6, none_type_1)
    var_1 = link_3.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_7 = " Use '"
    section_4 = module_0.Section(str_7, str_7)
    var_2 = section_4.__repr__()
    assert var_2 == 'Section(title=" Use \'")'
    str_8 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_4 = module_0.Link(str_8, none_type_2)
    var_3 = link_4.__repr__()
    assert var_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_4 = var_3.__repr__()
    assert var_4 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_9 = var_3.__str__()
    assert str_9 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    dict_0 = {}
    str_10 = 'y\x0c[fN"W:2&:SWyz~W'
    link_5 = module_0.Link(dict_0, str_10)
    str_11 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_6 = module_0.Link(str_11, none_type_3)
    bytes_1 = b"\x802c35Z\xf8"
    link_7 = module_0.Link(link_6, bytes_1)
    str_12 = " Use '"
    section_5 = module_0.Section(str_12, str_12)
    var_5 = section_5.__repr__()
    assert var_5 == 'Section(title=" Use \'")'
    int_0 = var_5.__len__()
    assert int_0 == 23
    str_13 = " Use '"
    section_6 = module_0.Section(str_13, str_13)
    var_6 = section_6.__repr__()
    assert var_6 == 'Section(title=" Use \'")'
    var_7 = var_6.__repr__()
    assert var_7 == "'Section(title=\" Use \\'\")'"
    float_0 = 500.11659
    module_0.get_navigation(float_0, str_2)


@pytest.mark.xfail(strict=True)
def test_case_729():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    str_1 = "page_context"
    section_0 = module_0.Section(str_1, str_1)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_2 = "' from the site because it conflicts with '"
    list_0 = []
    section_1 = module_0.Section(str_2, list_0)
    str_3 = "localhost"
    link_1 = module_0.Link(str_2, str_3)
    str_4 = "page_context"
    section_2 = module_0.Section(str_4, str_4)
    str_5 = "' from the site because it conflicts with '"
    list_1 = []
    section_3 = module_0.Section(str_5, list_1)
    var_0 = section_3.__repr__()
    assert var_0 == "Section(title=\"' from the site because it conflicts with '\")"
    str_6 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_2 = module_0.Link(str_6, none_type_1)
    var_1 = link_2.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_7 = " Use '"
    section_4 = module_0.Section(str_7, str_7)
    var_2 = section_4.__repr__()
    assert var_2 == 'Section(title=" Use \'")'
    str_8 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_3 = module_0.Link(str_8, none_type_2)
    bytes_0 = b"\x802c35Z\xf8"
    link_4 = module_0.Link(link_3, bytes_0)
    str_9 = "page_context"
    section_5 = module_0.Section(str_9, str_9)
    str_10 = "' from the site because it conflicts with '"
    list_2 = []
    section_6 = module_0.Section(str_10, list_2)
    str_11 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_5 = module_0.Link(str_11, none_type_3)
    bytes_1 = b"\x802c35Z\xf8"
    link_6 = module_0.Link(link_5, bytes_1)
    var_3 = link_5.__repr__()
    assert var_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    module_0.Navigation(var_0, var_2)


@pytest.mark.xfail(strict=True)
def test_case_730():
    none_type_0 = None
    module_0.get_navigation(none_type_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_731():
    none_type_0 = None
    var_0 = module_1.urlsplit(none_type_0)
    mk_docs_exception_0 = module_5.MkDocsException(var_0)
    module_0.get_navigation(mk_docs_exception_0, mk_docs_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_732():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    str_1 = "page_context"
    section_0 = module_0.Section(str_1, str_1)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_2 = "' from the site because it conflicts with '"
    list_0 = []
    section_1 = module_0.Section(str_2, list_0)
    str_3 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_3, none_type_1)
    bytes_0 = b"\x802c35Z\xf8"
    link_2 = module_0.Link(link_1, bytes_0)
    var_0 = link_1.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    module_0.get_navigation(link_1, none_type_1)


@pytest.mark.xfail(strict=True)
def test_case_733():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_1 = " Use '"
    section_0 = module_0.Section(str_1, str_1)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_2 = section_0.__repr__()
    assert var_2 == 'Section(title=" Use \'")'
    int_0 = var_2.__len__()
    assert int_0 == 23
    module_0.Navigation(section_0, link_0)


@pytest.mark.xfail(strict=True)
def test_case_734():
    bool_0 = True
    module_0.get_navigation(bool_0, bool_0)


@pytest.mark.xfail(strict=True)
def test_case_735():
    str_0 = "page_context"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = "' from the site because it conflicts with '"
    list_0 = []
    section_1 = module_0.Section(str_1, list_0)
    var_0 = section_1.__repr__()
    assert var_0 == "Section(title=\"' from the site because it conflicts with '\")"
    str_2 = "page_context"
    section_2 = module_0.Section(str_2, str_2)
    str_3 = "' from the site because it conflicts with '"
    list_1 = []
    section_3 = module_0.Section(str_3, list_1)
    str_4 = "localhost"
    link_0 = module_0.Link(str_3, str_4)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "' from the site because it conflicts with '"
    assert link_0.url == "localhost"
    module_0.get_navigation(list_0, str_1)


@pytest.mark.xfail(strict=True)
def test_case_736():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_1 = var_0.__str__()
    assert str_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_2 = " Use '"
    section_0 = module_0.Section(str_2, str_2)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_2 = section_0.__repr__()
    assert var_2 == 'Section(title=" Use \'")'
    var_3 = var_2.__repr__()
    assert var_3 == "'Section(title=\" Use \\'\")'"
    str_3 = "page_context"
    section_1 = module_0.Section(str_3, str_3)
    str_4 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_4, none_type_1)
    bytes_0 = b"\x802c35Z\xf8"
    link_2 = module_0.Link(link_1, bytes_0)
    var_4 = link_1.__repr__()
    assert var_4 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    dict_0 = {}
    str_5 = 'y\x0c[fN"W:2&:SWyz~W'
    link_3 = module_0.Link(dict_0, str_5)
    str_6 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_4 = module_0.Link(str_6, none_type_2)
    bytes_1 = b"\x802c35Z\xf8"
    link_5 = module_0.Link(link_4, bytes_1)
    str_7 = "page_context"
    section_2 = module_0.Section(str_7, str_7)
    str_8 = "' from the site because it conflicts with '"
    list_0 = []
    section_3 = module_0.Section(str_8, list_0)
    var_5 = section_3.__repr__()
    assert var_5 == "Section(title=\"' from the site because it conflicts with '\")"
    str_9 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_6 = module_0.Link(str_9, none_type_3)
    var_6 = link_6.__repr__()
    assert var_6 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_10 = " Use '"
    section_4 = module_0.Section(str_10, str_10)
    var_7 = section_4.__repr__()
    assert var_7 == 'Section(title=" Use \'")'
    int_0 = var_7.__len__()
    assert int_0 == 23
    str_11 = "0_~6:m!(f5FgU,:rvz"
    none_type_4 = None
    link_7 = module_0.Link(str_11, none_type_4)
    int_1 = var_7.__len__()
    assert int_1 == 23
    module_0.get_navigation(section_1, int_1)


@pytest.mark.xfail(strict=True)
def test_case_737():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    var_1 = var_0.__repr__()
    assert var_1 == "'Section(title=\" Use \\'\")'"
    str_1 = " Use '"
    section_1 = module_0.Section(str_1, str_1)
    var_2 = section_1.__repr__()
    assert var_2 == 'Section(title=" Use \'")'
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_2, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_3 = link_0.__repr__()
    assert var_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_3 = "page_context"
    section_2 = module_0.Section(str_3, str_3)
    str_4 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_4, none_type_1)
    var_4 = link_1.__repr__()
    assert var_4 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_5 = var_4.__repr__()
    assert var_5 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_5 = var_4.__str__()
    assert str_5 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_6 = var_4.__repr__()
    assert var_6 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_6 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_2 = module_0.Link(str_6, none_type_2)
    bytes_0 = b"\x802c35Z\xf8"
    link_3 = module_0.Link(link_2, bytes_0)
    str_7 = " Use '"
    section_3 = module_0.Section(str_7, str_7)
    var_7 = section_3.__repr__()
    assert var_7 == 'Section(title=" Use \'")'
    int_0 = var_7.__len__()
    assert int_0 == 23
    str_8 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_4 = module_0.Link(str_8, none_type_3)
    int_1 = var_7.__len__()
    assert int_1 == 23
    str_9 = "0_~6:m!(f5FgU,:rvz"
    none_type_4 = None
    link_5 = module_0.Link(str_9, none_type_4)
    bytes_1 = b"\x802c35Z\xf8"
    link_6 = module_0.Link(link_5, bytes_1)
    dict_0 = {}
    str_10 = 'y\x0c[fN"W:2&:SWyz~W'
    link_7 = module_0.Link(dict_0, str_10)
    var_8 = link_6.__repr__()
    assert (
        var_8
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )
    str_11 = "0_~6:m!(f5FgU,:rvz"
    none_type_5 = None
    link_8 = module_0.Link(str_11, none_type_5)
    bytes_2 = b"\x802c35Z\xf8"
    link_9 = module_0.Link(link_8, bytes_2)
    var_9 = link_8.__repr__()
    assert var_9 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    module_0.Navigation(var_5, var_9)


@pytest.mark.xfail(strict=True)
def test_case_738():
    bool_0 = False
    str_0 = "[ \\t\\n\\r\\f\\v]+"
    link_0 = module_0.Link(str_0, str_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "[ \\t\\n\\r\\f\\v]+"
    assert link_0.url == "[ \\t\\n\\r\\f\\v]+"
    var_0 = link_0.__repr__()
    assert (
        var_0
        == "Link(title='[ \\\\t\\\\n\\\\r\\\\f\\\\v]+', url='[ \\\\t\\\\n\\\\r\\\\f\\\\v]+')"
    )
    var_0.render(bool_0, bool_0)


@pytest.mark.xfail(strict=True)
def test_case_739():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    int_0 = var_0.__len__()
    assert int_0 == 23
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_1, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    int_1 = var_0.__len__()
    assert int_1 == 23
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_2, none_type_1)
    bytes_0 = b"\x802c35Z\xf8"
    link_2 = module_0.Link(link_1, bytes_0)
    str_3 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_3 = module_0.Link(str_3, none_type_2)
    var_1 = link_3.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_4 = "page_context"
    section_1 = module_0.Section(str_4, str_4)
    str_5 = "' from the site because it conflicts with '"
    list_0 = []
    section_2 = module_0.Section(str_5, list_0)
    str_6 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_4 = module_0.Link(str_6, none_type_3)
    var_2 = link_4.__repr__()
    assert var_2 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_3 = var_2.__repr__()
    assert var_3 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_7 = var_2.__str__()
    assert str_7 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_4 = var_2.__repr__()
    assert var_4 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_8 = " Use '"
    section_3 = module_0.Section(str_8, str_8)
    var_5 = section_3.__repr__()
    assert var_5 == 'Section(title=" Use \'")'
    var_6 = var_5.__repr__()
    assert var_6 == "'Section(title=\" Use \\'\")'"
    str_9 = "0_~6:m!(f5FgU,:rvz"
    none_type_4 = None
    link_5 = module_0.Link(str_9, none_type_4)
    str_10 = "0_~6:m!(f5FgU,:rvz"
    none_type_5 = None
    link_6 = module_0.Link(str_10, none_type_5)
    var_7 = link_6.__repr__()
    assert var_7 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_8 = var_7.__repr__()
    assert var_8 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_11 = "page_context"
    section_4 = module_0.Section(str_11, str_11)
    str_12 = "' from the site because it conflicts with '"
    list_1 = []
    section_5 = module_0.Section(str_12, list_1)
    var_9 = section_5.__repr__()
    assert var_9 == "Section(title=\"' from the site because it conflicts with '\")"
    module_0.Navigation(var_9, var_2)


@pytest.mark.xfail(strict=True)
def test_case_740():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    str_1 = "page_context"
    section_0 = module_0.Section(str_1, str_1)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_2 = "' from the site because it conflicts with '"
    list_0 = []
    section_1 = module_0.Section(str_2, list_0)
    str_3 = "localhost"
    link_1 = module_0.Link(str_2, str_3)
    dict_0 = {}
    str_4 = 'y\x0c[fN"W:2&:SWyz~W'
    link_2 = module_0.Link(dict_0, str_4)
    str_5 = " Use '"
    section_2 = module_0.Section(str_5, str_5)
    var_0 = section_2.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    section_3 = module_0.Section(str_5, var_0)
    assert section_3.children == 'Section(title=" Use \'")'
    str_6 = " Use '"
    section_4 = module_0.Section(str_6, str_6)
    var_1 = section_4.__repr__()
    assert var_1 == 'Section(title=" Use \'")'
    str_7 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_3 = module_0.Link(str_7, none_type_1)
    bytes_0 = b"\x802c35Z\xf8"
    link_4 = module_0.Link(link_3, bytes_0)
    var_2 = link_3.__repr__()
    assert var_2 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_8 = " Use '"
    section_5 = module_0.Section(str_8, str_8)
    var_3 = section_5.__repr__()
    assert var_3 == 'Section(title=" Use \'")'
    var_4 = var_3.__repr__()
    assert var_4 == "'Section(title=\" Use \\'\")'"
    str_9 = " Use '"
    section_6 = module_0.Section(str_9, str_9)
    var_5 = section_6.__repr__()
    assert var_5 == 'Section(title=" Use \'")'
    int_0 = var_5.__len__()
    assert int_0 == 23
    str_10 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_5 = module_0.Link(str_10, none_type_2)
    int_1 = var_5.__len__()
    assert int_1 == 23
    module_0.get_navigation(str_3, link_4)


@pytest.mark.xfail(strict=True)
def test_case_741():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_1 = var_0.__str__()
    assert str_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_2 = var_0.__repr__()
    assert var_2 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_2 = "page_context"
    section_0 = module_0.Section(str_2, str_2)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_3 = "' from the site because it conflicts with '"
    list_0 = []
    section_1 = module_0.Section(str_3, list_0)
    str_4 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_4, none_type_1)
    var_3 = link_1.__repr__()
    assert var_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_4 = var_3.__repr__()
    assert var_4 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_5 = var_3.__str__()
    assert str_5 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    module_0.get_navigation(var_0, str_2)


@pytest.mark.xfail(strict=True)
def test_case_742():
    none_type_0 = None
    module_0.get_navigation(none_type_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_743():
    bool_0 = True
    module_2.file_sort_key(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_744():
    str_0 = "page_context"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = "' from the site because it conflicts with '"
    list_0 = []
    section_1 = module_0.Section(str_1, list_0)
    str_2 = "localhost"
    link_0 = module_0.Link(str_1, str_2)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "' from the site because it conflicts with '"
    assert link_0.url == "localhost"
    str_3 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_1 = module_0.Link(str_3, none_type_0)
    bytes_0 = b"\x802c35Z\xf8"
    link_2 = module_0.Link(link_1, bytes_0)
    module_0.get_navigation(none_type_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_745():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    str_1 = " Use '"
    section_1 = module_0.Section(str_1, str_1)
    var_1 = section_1.__repr__()
    assert var_1 == 'Section(title=" Use \'")'
    int_0 = var_1.__len__()
    assert int_0 == 23
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_2, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    int_1 = var_1.__len__()
    assert int_1 == 23
    str_3 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_3, none_type_1)
    bytes_0 = b"\x802c35Z\xf8"
    link_2 = module_0.Link(link_1, bytes_0)
    dict_0 = {}
    str_4 = 'y\x0c[fN"W:2&:SWyz~W'
    link_3 = module_0.Link(dict_0, str_4)
    var_2 = link_2.__repr__()
    assert (
        var_2
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )
    str_5 = "page_context"
    section_2 = module_0.Section(str_5, str_5)
    str_6 = "' from the site because it conflicts with '"
    list_0 = []
    section_3 = module_0.Section(str_6, list_0)
    str_7 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_4 = module_0.Link(str_7, none_type_2)
    var_3 = link_4.__repr__()
    assert var_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_4 = var_3.__repr__()
    assert var_4 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_8 = var_3.__str__()
    assert str_8 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_9 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_5 = module_0.Link(str_9, none_type_3)
    bytes_1 = b"\x802c35Z\xf8"
    link_6 = module_0.Link(link_5, bytes_1)
    var_5 = link_5.__repr__()
    assert var_5 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_10 = "0_~6:m!(f5FgU,:rvz"
    none_type_4 = None
    link_7 = module_0.Link(str_10, none_type_4)
    bytes_2 = b"\x802c35Z\xf8"
    link_8 = module_0.Link(link_7, bytes_2)
    dict_1 = {}
    str_11 = 'y\x0c[fN"W:2&:SWyz~W'
    link_9 = module_0.Link(dict_1, str_11)
    str_12 = " Use '"
    section_4 = module_0.Section(str_12, str_12)
    var_6 = section_4.__repr__()
    assert var_6 == 'Section(title=" Use \'")'
    int_2 = var_6.__len__()
    assert int_2 == 23
    str_13 = " Use '"
    section_5 = module_0.Section(str_13, str_13)
    var_7 = section_5.__repr__()
    assert var_7 == 'Section(title=" Use \'")'
    section_6 = module_0.Section(str_13, var_7)
    assert section_6.children == 'Section(title=" Use \'")'
    var_3.validate_anchor_links(files=str_10, log_level=none_type_1)


@pytest.mark.xfail(strict=True)
def test_case_746():
    str_0 = "page_context"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = "' from the site because it conflicts with '"
    list_0 = []
    section_1 = module_0.Section(str_1, list_0)
    str_2 = "localhost"
    link_0 = module_0.Link(str_1, str_2)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "' from the site because it conflicts with '"
    assert link_0.url == "localhost"
    module_1.urlsplit(link_0, str_1)


@pytest.mark.xfail(strict=True)
def test_case_747():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    bytes_0 = b"\x802c35Z\xf8"
    link_1 = module_0.Link(link_0, bytes_0)
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_1 = "gfRsC:6&{;|"
    section_0 = module_0.Section(str_1, str_1)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "gfRsC:6&{;|"
    assert section_0.children == "gfRsC:6&{;|"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    build_error_0 = module_5.BuildError(var_0)
    assert build_error_0.message == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    dict_0 = {str_1: build_error_0}
    module_0.Navigation(var_0, dict_0)


@pytest.mark.xfail(strict=True)
def test_case_748():
    str_0 = "page_context"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = "' from the site because it conflicts with '"
    list_0 = []
    section_1 = module_0.Section(str_1, list_0)
    str_2 = "localhost"
    link_0 = module_0.Link(str_1, str_2)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "' from the site because it conflicts with '"
    assert link_0.url == "localhost"
    module_3.nest_paths(section_0)


@pytest.mark.xfail(strict=True)
def test_case_749():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    str_1 = "gfRsC:6&{;|"
    section_1 = module_0.Section(str_1, str_1)
    str_2 = "relative_to_docs"
    link_0 = module_0.Link(str_2, section_1)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "relative_to_docs"
    assert (
        f"{type(link_0.url).__module__}.{type(link_0.url).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    str_3 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_1 = module_0.Link(str_3, none_type_0)
    var_1 = link_1.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_2 = var_1.__repr__()
    assert var_2 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_4 = var_1.__str__()
    assert str_4 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    module_0.get_navigation(str_1, var_2)


@pytest.mark.xfail(strict=True)
def test_case_750():
    bytes_0 = b"v{Aw\xe6"
    mk_docs_exception_0 = module_5.MkDocsException(bytes_0)
    str_0 = "{@(or7t\x0c"
    module_0.get_navigation(mk_docs_exception_0, str_0)


@pytest.mark.xfail(strict=True)
def test_case_751():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    var_1 = var_0.__repr__()
    assert var_1 == "'Section(title=\" Use \\'\")'"
    module_2.file_sort_key(var_0)


@pytest.mark.xfail(strict=True)
def test_case_752():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_1 = "page_context"
    section_0 = module_0.Section(str_1, str_1)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_2, none_type_1)
    str_3 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_2 = module_0.Link(str_3, none_type_2)
    bytes_0 = b"\x802c35Z\xf8"
    link_3 = module_0.Link(link_2, bytes_0)
    str_4 = " Use '"
    section_1 = module_0.Section(str_4, str_4)
    var_1 = section_1.__repr__()
    assert var_1 == 'Section(title=" Use \'")'
    int_0 = var_1.__len__()
    assert int_0 == 23
    str_5 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_4 = module_0.Link(str_5, none_type_3)
    int_1 = var_1.__len__()
    assert int_1 == 23
    str_6 = " Use '"
    section_2 = module_0.Section(str_6, str_6)
    var_2 = section_2.__repr__()
    assert var_2 == 'Section(title=" Use \'")'
    section_3 = module_0.Section(str_6, var_2)
    assert section_3.children == 'Section(title=" Use \'")'
    str_7 = " Use '"
    section_4 = module_0.Section(str_7, str_7)
    var_3 = section_4.__repr__()
    assert var_3 == 'Section(title=" Use \'")'
    str_8 = "gfRsC:6&{;|"
    section_5 = module_0.Section(str_8, str_8)
    str_9 = "relative_to_docs"
    link_5 = module_0.Link(str_9, section_5)
    str_10 = "0_~6:m!(f5FgU,:rvz"
    none_type_4 = None
    link_6 = module_0.Link(str_10, none_type_4)
    var_4 = link_6.__repr__()
    assert var_4 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_5 = var_4.__repr__()
    assert var_5 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_11 = var_4.__str__()
    assert str_11 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_12 = "gfRsC:6&{;|"
    section_6 = module_0.Section(str_12, str_12)
    var_6 = section_6.__repr__()
    assert var_6 == "Section(title='gfRsC:6&{;|')"
    str_13 = "0_~6:m!(f5FgU,:rvz"
    none_type_5 = None
    link_7 = module_0.Link(str_13, none_type_5)
    bytes_1 = b"\x802c35Z\xf8"
    link_8 = module_0.Link(link_7, bytes_1)
    dict_0 = {}
    str_14 = 'y\x0c[fN"W:2&:SWyz~W'
    link_9 = module_0.Link(dict_0, str_14)
    var_7 = link_8.__repr__()
    assert (
        var_7
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )
    module_0.Navigation(var_3, str_0)


@pytest.mark.xfail(strict=True)
def test_case_753():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    section_1 = module_0.Section(str_0, var_0)
    assert section_1.children == 'Section(title=" Use \'")'
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_1, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_1 = link_0.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_2 = var_1.__repr__()
    assert var_2 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_2 = var_1.__str__()
    assert str_2 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_3 = var_1.__repr__()
    assert var_3 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_3 = "page_context"
    section_2 = module_0.Section(str_3, str_3)
    str_4 = "gfRsC:6&{;|"
    section_3 = module_0.Section(str_4, str_4)
    var_4 = section_3.__repr__()
    assert var_4 == "Section(title='gfRsC:6&{;|')"
    str_5 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_5, none_type_1)
    bytes_0 = b"\x802c35Z\xf8"
    link_2 = module_0.Link(link_1, bytes_0)
    str_6 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_3 = module_0.Link(str_6, none_type_2)
    bytes_1 = b"\x802c35Z\xf8"
    link_4 = module_0.Link(link_3, bytes_1)
    dict_0 = {}
    str_7 = 'y\x0c[fN"W:2&:SWyz~W'
    link_5 = module_0.Link(dict_0, str_7)
    var_5 = link_4.__repr__()
    assert (
        var_5
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )
    str_8 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_6 = module_0.Link(str_8, none_type_3)
    var_6 = link_6.__repr__()
    assert var_6 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    module_0.get_navigation(var_1, str_8)


@pytest.mark.xfail(strict=True)
def test_case_754():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    bytes_0 = b"\x802c35Z\xf8"
    link_1 = module_0.Link(link_0, bytes_0)
    dict_0 = {}
    str_1 = 'y\x0c[fN"W:2&:SWyz~W'
    link_2 = module_0.Link(dict_0, str_1)
    var_0 = link_1.__repr__()
    assert (
        var_0
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )
    str_2 = "page_context"
    section_0 = module_0.Section(str_2, str_2)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_3 = "' from the site because it conflicts with '"
    list_0 = []
    section_1 = module_0.Section(str_3, list_0)
    var_1 = section_1.__repr__()
    assert var_1 == "Section(title=\"' from the site because it conflicts with '\")"
    module_0.get_navigation(list_0, var_0)


@pytest.mark.xfail(strict=True)
def test_case_755():
    int_0 = -274
    list_0 = [int_0, int_0]
    module_2.file_sort_key(list_0)


@pytest.mark.xfail(strict=True)
def test_case_756():
    str_0 = "gfRsC:6&{;|"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "gfRsC:6&{;|"
    assert section_0.children == "gfRsC:6&{;|"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    none_type_0 = None
    module_2.file_sort_key(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_757():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    dict_0 = {}
    str_1 = 'y\x0c[fN"W:2&:SWyz~W'
    link_0 = module_0.Link(dict_0, str_1)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == {}
    assert link_0.url == 'y\x0c[fN"W:2&:SWyz~W'
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_1 = module_0.Link(str_2, none_type_0)
    var_1 = link_1.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_3 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_2 = module_0.Link(str_3, none_type_1)
    var_2 = link_2.__repr__()
    assert var_2 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_3 = var_2.__repr__()
    assert var_3 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_4 = var_2.__str__()
    assert str_4 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_4 = var_2.__repr__()
    assert var_4 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    dict_1 = {}
    str_5 = 'y\x0c[fN"W:2&:SWyz~W'
    link_3 = module_0.Link(dict_1, str_5)
    section_1 = module_0.Section(str_5, str_5)
    str_6 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_4 = module_0.Link(str_6, none_type_2)
    var_5 = link_4.__repr__()
    assert var_5 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_6 = var_5.__repr__()
    assert var_6 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_7 = var_5.__str__()
    assert str_7 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_8 = " Use '"
    section_2 = module_0.Section(str_8, str_8)
    var_7 = section_2.__repr__()
    assert var_7 == 'Section(title=" Use \'")'
    var_8 = var_7.__repr__()
    assert var_8 == "'Section(title=\" Use \\'\")'"
    str_9 = "page_context"
    section_3 = module_0.Section(str_9, str_9)
    str_10 = "' from the site because it conflicts with '"
    list_0 = []
    section_4 = module_0.Section(str_10, list_0)
    var_9 = section_4.__repr__()
    assert var_9 == "Section(title=\"' from the site because it conflicts with '\")"
    module_2.file_sort_key(var_4)


@pytest.mark.xfail(strict=True)
def test_case_758():
    none_type_0 = None
    module_3.nest_paths(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_759():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_1, none_type_1)
    var_0 = link_1.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_2 = var_1.__repr__()
    assert var_2 == "'\"Link(title=\\'0_~6:m!(f5FgU,:rvz\\', url=None)\"'"
    str_2 = "page_context"
    section_0 = module_0.Section(str_2, str_2)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_3 = "' from the site because it conflicts with '"
    list_0 = []
    section_1 = module_0.Section(str_3, list_0)
    str_4 = "localhost"
    link_2 = module_0.Link(str_3, str_4)
    str_5 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_3 = module_0.Link(str_5, none_type_2)
    bytes_0 = b"\x802c35Z\xf8"
    link_4 = module_0.Link(link_3, bytes_0)
    str_6 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_5 = module_0.Link(str_6, none_type_3)
    bytes_1 = b"\x802c35Z\xf8"
    link_6 = module_0.Link(link_5, bytes_1)
    var_3 = link_5.__repr__()
    assert var_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_7 = "page_context"
    section_2 = module_0.Section(str_7, str_7)
    str_8 = "' from the site because it conflicts with '"
    list_1 = []
    section_3 = module_0.Section(str_8, list_1)
    module_0.get_navigation(str_5, link_2)


@pytest.mark.xfail(strict=True)
def test_case_760():
    str_0 = "page_context"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = "' from the site because it conflicts with '"
    list_0 = []
    section_1 = module_0.Section(str_1, list_0)
    module_0.Navigation(list_0, section_1)


@pytest.mark.xfail(strict=True)
def test_case_761():
    str_0 = "page_context"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = "' from the site because it conflicts with '"
    list_0 = []
    section_1 = module_0.Section(str_1, list_0)
    str_2 = "localhost"
    link_0 = module_0.Link(str_1, str_2)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "' from the site because it conflicts with '"
    assert link_0.url == "localhost"
    str_3 = " Use '"
    section_2 = module_0.Section(str_3, str_3)
    var_0 = section_2.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    int_0 = var_0.__len__()
    assert int_0 == 23
    str_4 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_1 = module_0.Link(str_4, none_type_0)
    int_1 = var_0.__len__()
    assert int_1 == 23
    str_5 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_2 = module_0.Link(str_5, none_type_1)
    var_1 = link_2.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_2 = var_1.__repr__()
    assert var_2 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_6 = var_1.__str__()
    assert str_6 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_7 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_3 = module_0.Link(str_7, none_type_2)
    str_8 = " Use '"
    section_3 = module_0.Section(str_8, str_8)
    var_3 = section_3.__repr__()
    assert var_3 == 'Section(title=" Use \'")'
    int_2 = var_3.__len__()
    assert int_2 == 23
    var_4 = var_3.__repr__()
    assert var_4 == "'Section(title=\" Use \\'\")'"
    module_0.get_navigation(str_7, str_8)


@pytest.mark.xfail(strict=True)
def test_case_762():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    module_0.Navigation(str_0, str_0)


@pytest.mark.xfail(strict=True)
def test_case_763():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    bytes_0 = b"\x802c35Z\xf8"
    link_1 = module_0.Link(link_0, bytes_0)
    dict_0 = {}
    str_1 = 'y\x0c[fN"W:2&:SWyz~W'
    link_2 = module_0.Link(dict_0, str_1)
    var_0 = link_1.__repr__()
    assert (
        var_0
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )
    module_0.get_navigation(bytes_0, var_0)


@pytest.mark.xfail(strict=True)
def test_case_764():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    bytes_0 = b"\x802c35Z\xf8"
    link_1 = module_0.Link(link_0, bytes_0)
    str_1 = "page_context"
    section_0 = module_0.Section(str_1, str_1)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_2 = "' from the site because it conflicts with '"
    list_0 = []
    section_1 = module_0.Section(str_2, list_0)
    str_3 = "localhost"
    link_2 = module_0.Link(str_2, str_3)
    var_0 = module_3.nest_paths(list_0)
    var_1 = var_0.__repr__()
    var_1.render(section_0, str_3)


@pytest.mark.xfail(strict=True)
def test_case_765():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    section_1 = module_0.Section(str_0, var_0)
    assert section_1.children == 'Section(title=" Use \'")'
    str_1 = " Use '"
    section_2 = module_0.Section(str_1, str_1)
    var_1 = section_2.__repr__()
    assert var_1 == 'Section(title=" Use \'")'
    int_0 = var_1.__len__()
    assert int_0 == 23
    module_0.get_navigation(str_1, var_0)


@pytest.mark.xfail(strict=True)
def test_case_766():
    none_type_0 = None
    var_0 = module_1.urlsplit(none_type_0)
    module_1.urlsplit(var_0, var_0)


@pytest.mark.xfail(strict=True)
def test_case_767():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    str_1 = "gfRsC:6&{;|"
    section_1 = module_0.Section(str_1, str_1)
    str_2 = "relative_to_docs"
    link_0 = module_0.Link(str_2, section_1)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "relative_to_docs"
    assert (
        f"{type(link_0.url).__module__}.{type(link_0.url).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    str_3 = "page_context"
    section_2 = module_0.Section(str_3, str_3)
    str_4 = " Use '"
    section_3 = module_0.Section(str_4, str_4)
    var_1 = section_3.__repr__()
    assert var_1 == 'Section(title=" Use \'")'
    str_5 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_1 = module_0.Link(str_5, none_type_0)
    var_2 = link_1.__repr__()
    assert var_2 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    int_0 = var_2.__len__()
    assert int_0 == 42
    var_0.validate_anchor_links(files=section_2, log_level=none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_768():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_2 = var_1.__repr__()
    assert var_2 == "'\"Link(title=\\'0_~6:m!(f5FgU,:rvz\\', url=None)\"'"
    module_0.get_navigation(none_type_0, var_2)


@pytest.mark.xfail(strict=True)
def test_case_769():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    bytes_0 = b"\x802c35Z\xf8"
    link_1 = module_0.Link(link_0, bytes_0)
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_1 = " Use '"
    section_0 = module_0.Section(str_1, str_1)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_1 = section_0.__repr__()
    assert var_1 == 'Section(title=" Use \'")'
    section_1 = module_0.Section(str_1, var_1)
    assert section_1.children == 'Section(title=" Use \'")'
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_2 = module_0.Link(str_2, none_type_1)
    bytes_1 = b"\x802c35Z\xf8"
    link_3 = module_0.Link(link_2, bytes_1)
    str_3 = "page_context"
    section_2 = module_0.Section(str_3, str_3)
    str_4 = "' from the site because it conflicts with '"
    list_0 = []
    section_3 = module_0.Section(str_4, list_0)
    str_5 = "localhost"
    link_4 = module_0.Link(str_4, str_5)
    str_6 = " Use '"
    section_4 = module_0.Section(str_6, str_6)
    var_2 = section_4.__repr__()
    assert var_2 == 'Section(title=" Use \'")'
    str_7 = "gfRsC:6&{;|"
    section_5 = module_0.Section(str_7, str_7)
    str_8 = "relative_to_docs"
    link_5 = module_0.Link(str_8, section_5)
    str_9 = " Use '"
    section_6 = module_0.Section(str_9, str_9)
    var_3 = section_6.__repr__()
    assert var_3 == 'Section(title=" Use \'")'
    int_0 = var_3.__len__()
    assert int_0 == 23
    str_10 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_6 = module_0.Link(str_10, none_type_2)
    var_4 = link_6.__repr__()
    assert var_4 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_5 = var_4.__repr__()
    assert var_5 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_6 = var_5.__repr__()
    assert var_6 == "'\"Link(title=\\'0_~6:m!(f5FgU,:rvz\\', url=None)\"'"
    str_11 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_7 = module_0.Link(str_11, none_type_3)
    var_7 = link_7.__repr__()
    assert var_7 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_12 = "gfRsC:6&{;|"
    section_7 = module_0.Section(str_12, str_12)
    str_13 = " Use '"
    section_8 = module_0.Section(str_13, str_13)
    var_8 = section_8.__repr__()
    assert var_8 == 'Section(title=" Use \'")'
    int_1 = var_8.__len__()
    assert int_1 == 23
    var_9 = var_8.__repr__()
    assert var_9 == "'Section(title=\" Use \\'\")'"
    var_10 = var_9.__repr__()
    assert var_10 == "'\\'Section(title=\" Use \\\\\\'\")\\''"
    str_14 = "0_~6:m!(f5FgU,:rvz"
    none_type_4 = None
    link_8 = module_0.Link(str_14, none_type_4)
    int_2 = 5
    module_3.nest_paths(int_2)


@pytest.mark.xfail(strict=True)
def test_case_770():
    str_0 = "gfRsC:6&{;|"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "gfRsC:6&{;|"
    assert section_0.children == "gfRsC:6&{;|"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = " Use '"
    section_1 = module_0.Section(str_1, str_1)
    var_0 = section_1.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    str_2 = "gfRsC:6&{;|"
    section_2 = module_0.Section(str_2, str_2)
    str_3 = "relative_to_docs"
    link_0 = module_0.Link(str_3, section_2)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "relative_to_docs"
    assert (
        f"{type(link_0.url).__module__}.{type(link_0.url).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    str_4 = "page_context"
    section_3 = module_0.Section(str_4, str_4)
    str_5 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_1 = module_0.Link(str_5, none_type_0)
    var_1 = link_1.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_2 = section_3.__repr__()
    assert var_2 == "Section(title='page_context')"
    str_6 = "gfRsC:6&{;|"
    section_4 = module_0.Section(str_6, str_6)
    var_3 = section_4.__repr__()
    assert var_3 == "Section(title='gfRsC:6&{;|')"
    str_7 = " Use '"
    section_5 = module_0.Section(str_7, str_7)
    var_4 = section_5.__repr__()
    assert var_4 == 'Section(title=" Use \'")'
    int_0 = var_4.__len__()
    assert int_0 == 23
    var_5 = var_4.__repr__()
    assert var_5 == "'Section(title=\" Use \\'\")'"
    str_8 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_2 = module_0.Link(str_8, none_type_1)
    bytes_0 = b"\x802c35Z\xf8"
    link_3 = module_0.Link(link_2, bytes_0)
    dict_0 = {}
    str_9 = 'y\x0c[fN"W:2&:SWyz~W'
    link_4 = module_0.Link(dict_0, str_9)
    var_6 = link_3.__repr__()
    assert (
        var_6
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )
    str_10 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_5 = module_0.Link(str_10, none_type_2)
    var_7 = link_5.__repr__()
    assert var_7 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    dict_1 = {}
    str_11 = 'y\x0c[fN"W:2&:SWyz~W'
    link_6 = module_0.Link(dict_1, str_11)
    section_6 = module_0.Section(str_11, str_11)
    str_12 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_7 = module_0.Link(str_12, none_type_3)
    bytes_1 = b"\x802c35Z\xf8"
    link_8 = module_0.Link(link_7, bytes_1)
    var_8 = link_7.__repr__()
    assert var_8 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    module_0.Navigation(var_4, var_1)


@pytest.mark.xfail(strict=True)
def test_case_771():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    dict_0 = {}
    str_1 = 'y\x0c[fN"W:2&:SWyz~W'
    link_1 = module_0.Link(dict_0, str_1)
    module_0.get_navigation(link_1, dict_0)


@pytest.mark.xfail(strict=True)
def test_case_772():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    str_1 = "gfRsC:6&{;|"
    section_1 = module_0.Section(str_1, str_1)
    str_2 = "relative_to_docs"
    link_0 = module_0.Link(str_2, section_1)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "relative_to_docs"
    assert (
        f"{type(link_0.url).__module__}.{type(link_0.url).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    section_2 = module_0.Section(section_0, var_0)
    assert section_2.children == 'Section(title=" Use \'")'
    str_3 = " Use '"
    section_3 = module_0.Section(str_3, str_3)
    var_1 = section_3.__repr__()
    assert var_1 == 'Section(title=" Use \'")'
    str_4 = "gfRsC:6&{;|"
    section_4 = module_0.Section(str_4, str_4)
    str_5 = "relative_to_docs"
    link_1 = module_0.Link(str_5, section_4)
    str_6 = "gfRsC:6&{;|"
    section_5 = module_0.Section(str_6, str_6)
    str_7 = "page_context"
    section_6 = module_0.Section(str_7, str_7)
    str_8 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_2 = module_0.Link(str_8, none_type_0)
    var_2 = link_2.__repr__()
    assert var_2 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_3 = var_2.__repr__()
    assert var_3 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_9 = var_2.__str__()
    assert str_9 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_10 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_3 = module_0.Link(str_10, none_type_1)
    var_4 = link_3.__repr__()
    assert var_4 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_11 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_4 = module_0.Link(str_11, none_type_2)
    var_5 = link_4.__repr__()
    assert var_5 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_6 = var_5.__repr__()
    assert var_6 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_7 = var_6.__repr__()
    assert var_7 == "'\"Link(title=\\'0_~6:m!(f5FgU,:rvz\\', url=None)\"'"
    none_type_3 = None
    str_12 = "\n        Perform validation for a value.\n\n        The run_validation method should be implemented by subclasses.\n        "
    link_5 = module_0.Link(none_type_3, str_12)
    var_8 = link_5.__repr__()
    assert (
        var_8
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    str_13 = var_8.__str__()
    assert (
        str_13
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    str_14 = "gfRsC:6&{;|"
    section_7 = module_0.Section(str_14, str_14)
    str_15 = " Use '"
    section_8 = module_0.Section(str_15, str_15)
    var_9 = section_8.__repr__()
    assert var_9 == 'Section(title=" Use \'")'
    int_0 = var_9.__len__()
    assert int_0 == 23
    var_10 = var_9.__repr__()
    assert var_10 == "'Section(title=\" Use \\'\")'"
    var_11 = var_10.__repr__()
    assert var_11 == "'\\'Section(title=\" Use \\\\\\'\")\\''"
    str_16 = "0_~6:m!(f5FgU,:rvz"
    none_type_4 = None
    link_6 = module_0.Link(str_16, none_type_4)
    bytes_0 = b"\x802c35Z\xf8"
    link_7 = module_0.Link(link_6, bytes_0)
    dict_0 = {}
    str_17 = 'y\x0c[fN"W:2&:SWyz~W'
    link_8 = module_0.Link(dict_0, str_17)
    var_12 = link_7.__repr__()
    assert (
        var_12
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )
    module_0.get_navigation(link_1, none_type_2)


@pytest.mark.xfail(strict=True)
def test_case_773():
    dict_0 = {}
    str_0 = 'y\x0c[fN"W:2&:SWyz~W'
    link_0 = module_0.Link(dict_0, str_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == {}
    assert link_0.url == 'y\x0c[fN"W:2&:SWyz~W'
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_1 = module_0.Link(str_1, none_type_0)
    var_0 = link_1.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_2 = var_0.__str__()
    assert str_2 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_3 = " Use '"
    section_0 = module_0.Section(str_3, str_3)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_2 = section_0.__repr__()
    assert var_2 == 'Section(title=" Use \'")'
    str_4 = "gfRsC:6&{;|"
    section_1 = module_0.Section(str_4, str_4)
    str_5 = "relative_to_docs"
    link_2 = module_0.Link(str_5, section_1)
    str_6 = " Use '"
    section_2 = module_0.Section(str_6, str_6)
    var_3 = section_2.__repr__()
    assert var_3 == 'Section(title=" Use \'")'
    var_4 = var_3.__repr__()
    assert var_4 == "'Section(title=\" Use \\'\")'"
    str_7 = "gfRsC:6&{;|"
    section_3 = module_0.Section(str_7, str_7)
    str_8 = " Use '"
    section_4 = module_0.Section(str_8, str_8)
    var_5 = section_4.__repr__()
    assert var_5 == 'Section(title=" Use \'")'
    int_0 = var_5.__len__()
    assert int_0 == 23
    var_6 = var_5.__repr__()
    assert var_6 == "'Section(title=\" Use \\'\")'"
    var_7 = var_6.__repr__()
    assert var_7 == "'\\'Section(title=\" Use \\\\\\'\")\\''"
    str_9 = " Use '"
    section_5 = module_0.Section(str_9, str_9)
    var_8 = section_5.__repr__()
    assert var_8 == 'Section(title=" Use \'")'
    int_1 = var_8.__len__()
    assert int_1 == 23
    var_9 = var_8.__repr__()
    assert var_9 == "'Section(title=\" Use \\'\")'"
    str_10 = "page_context"
    section_6 = module_0.Section(str_10, str_10)
    str_11 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_3 = module_0.Link(str_11, none_type_1)
    var_10 = link_3.__repr__()
    assert var_10 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_11 = section_6.__repr__()
    assert var_11 == "Section(title='page_context')"
    str_12 = " Use '"
    section_7 = module_0.Section(str_12, str_12)
    var_12 = section_7.__repr__()
    assert var_12 == 'Section(title=" Use \'")'
    int_2 = var_12.__len__()
    assert int_2 == 23
    str_13 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_4 = module_0.Link(str_13, none_type_2)
    int_3 = var_12.__len__()
    assert int_3 == 23
    str_14 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_5 = module_0.Link(str_14, none_type_3)
    str_15 = " Use '"
    section_8 = module_0.Section(str_15, str_15)
    var_13 = section_8.__repr__()
    assert var_13 == 'Section(title=" Use \'")'
    str_16 = "gfRsC:6&{;|"
    section_9 = module_0.Section(str_16, str_16)
    str_17 = "relative_to_docs"
    link_6 = module_0.Link(str_17, section_9)
    section_10 = module_0.Section(section_8, var_13)
    assert section_10.children == 'Section(title=" Use \'")'
    var_11.render(str_14, str_10)


@pytest.mark.xfail(strict=True)
def test_case_774():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    int_0 = var_0.__len__()
    assert int_0 == 23
    var_1 = var_0.__repr__()
    assert var_1 == "'Section(title=\" Use \\'\")'"
    str_1 = "page_context"
    section_1 = module_0.Section(str_1, str_1)
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_2, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_2 = link_0.__repr__()
    assert var_2 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_3 = section_1.__repr__()
    assert var_3 == "Section(title='page_context')"
    str_3 = " Use '"
    section_2 = module_0.Section(str_3, str_3)
    var_4 = section_2.__repr__()
    assert var_4 == 'Section(title=" Use \'")'
    int_1 = var_4.__len__()
    assert int_1 == 23
    str_4 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_4, none_type_1)
    int_2 = var_4.__len__()
    assert int_2 == 23
    str_5 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_2 = module_0.Link(str_5, none_type_2)
    var_5 = link_2.__repr__()
    assert var_5 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_6 = var_5.__repr__()
    assert var_6 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_6 = var_5.__str__()
    assert str_6 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_7 = var_5.__repr__()
    assert var_7 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_7 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_3 = module_0.Link(str_7, none_type_3)
    bytes_0 = b"\x802c35Z\xf8"
    link_4 = module_0.Link(link_3, bytes_0)
    module_0.Navigation(str_5, var_4)


@pytest.mark.xfail(strict=True)
def test_case_775():
    dict_0 = {}
    str_0 = 'y\x0c[fN"W:2&:SWyz~W'
    link_0 = module_0.Link(dict_0, str_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == {}
    assert link_0.url == 'y\x0c[fN"W:2&:SWyz~W'
    module_0.get_navigation(str_0, dict_0)


@pytest.mark.xfail(strict=True)
def test_case_776():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_1, none_type_1)
    var_2 = link_1.__repr__()
    assert var_2 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_3 = var_2.__repr__()
    assert var_3 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_4 = var_3.__repr__()
    assert var_4 == "'\"Link(title=\\'0_~6:m!(f5FgU,:rvz\\', url=None)\"'"
    str_2 = " Use '"
    section_0 = module_0.Section(str_2, str_2)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_5 = section_0.__repr__()
    assert var_5 == 'Section(title=" Use \'")'
    int_0 = var_5.__len__()
    assert int_0 == 23
    section_1 = module_0.Section(var_5, int_0)
    assert section_1.title == 'Section(title=" Use \'")'
    assert section_1.children == 23
    str_3 = " Use '"
    section_2 = module_0.Section(str_3, str_3)
    var_6 = section_2.__repr__()
    assert var_6 == 'Section(title=" Use \'")'
    int_1 = var_6.__len__()
    assert int_1 == 23
    var_7 = var_6.__repr__()
    assert var_7 == "'Section(title=\" Use \\'\")'"
    str_4 = "page_context"
    section_3 = module_0.Section(str_4, str_4)
    str_5 = "' from the site because it conflicts with '"
    list_0 = []
    section_4 = module_0.Section(str_5, list_0)
    var_8 = section_4.__repr__()
    assert var_8 == "Section(title=\"' from the site because it conflicts with '\")"
    str_6 = " Use '"
    section_5 = module_0.Section(str_6, str_6)
    var_9 = section_5.__repr__()
    assert var_9 == 'Section(title=" Use \'")'
    str_7 = "gfRsC:6&{;|"
    section_6 = module_0.Section(str_7, str_7)
    str_8 = "relative_to_docs"
    link_2 = module_0.Link(str_8, section_6)
    str_9 = " Use '"
    section_7 = module_0.Section(str_9, str_9)
    var_10 = section_7.__repr__()
    assert var_10 == 'Section(title=" Use \'")'
    str_10 = "gfRsC:6&{;|"
    section_8 = module_0.Section(str_10, str_10)
    str_11 = "relative_to_docs"
    link_3 = module_0.Link(str_11, section_8)
    section_9 = module_0.Section(section_7, var_10)
    assert section_9.children == 'Section(title=" Use \'")'
    str_12 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_4 = module_0.Link(str_12, none_type_2)
    bytes_0 = b"\x802c35Z\xf8"
    link_5 = module_0.Link(link_4, bytes_0)
    str_13 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_6 = module_0.Link(str_13, none_type_3)
    var_11 = link_6.__repr__()
    assert var_11 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_12 = var_11.__repr__()
    assert var_12 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_14 = var_11.__str__()
    assert str_14 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    module_0.get_navigation(var_9, var_3)


@pytest.mark.xfail(strict=True)
def test_case_777():
    str_0 = "page_context"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    module_2.file_sort_key(section_0)


@pytest.mark.xfail(strict=True)
def test_case_778():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    int_0 = var_0.__len__()
    assert int_0 == 23
    var_1 = var_0.__repr__()
    assert var_1 == "'Section(title=\" Use \\'\")'"
    str_1 = " Use '"
    section_1 = module_0.Section(str_1, str_1)
    var_2 = section_1.__repr__()
    assert var_2 == 'Section(title=" Use \'")'
    section_2 = module_0.Section(str_1, var_2)
    assert section_2.children == 'Section(title=" Use \'")'
    str_2 = "gfRsC:6&{;|"
    section_3 = module_0.Section(str_2, str_2)
    str_3 = " Use '"
    section_4 = module_0.Section(str_3, str_3)
    var_3 = section_4.__repr__()
    assert var_3 == 'Section(title=" Use \'")'
    int_1 = var_3.__len__()
    assert int_1 == 23
    var_4 = var_3.__repr__()
    assert var_4 == "'Section(title=\" Use \\'\")'"
    var_5 = var_4.__repr__()
    assert var_5 == "'\\'Section(title=\" Use \\\\\\'\")\\''"
    str_4 = " Use '"
    section_5 = module_0.Section(str_4, str_4)
    var_6 = section_5.__repr__()
    assert var_6 == 'Section(title=" Use \'")'
    int_2 = var_6.__len__()
    assert int_2 == 23
    dict_0 = {}
    str_5 = 'y\x0c[fN"W:2&:SWyz~W'
    link_0 = module_0.Link(dict_0, str_5)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == {}
    assert link_0.url == 'y\x0c[fN"W:2&:SWyz~W'
    section_6 = module_0.Section(str_5, str_5)
    str_6 = "page_context"
    section_7 = module_0.Section(str_6, str_6)
    str_7 = "' from the site because it conflicts with '"
    list_0 = []
    section_8 = module_0.Section(str_7, list_0)
    str_8 = " Use '"
    section_9 = module_0.Section(str_8, str_8)
    var_7 = section_9.__repr__()
    assert var_7 == 'Section(title=" Use \'")'
    str_9 = "gfRsC:6&{;|"
    section_10 = module_0.Section(str_9, str_9)
    str_10 = "relative_to_docs"
    link_1 = module_0.Link(str_10, section_10)
    module_0.Navigation(var_3, var_3)


@pytest.mark.xfail(strict=True)
def test_case_779():
    dict_0 = {}
    str_0 = 'y\x0c[fN"W:2&:SWyz~W'
    link_0 = module_0.Link(dict_0, str_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == {}
    assert link_0.url == 'y\x0c[fN"W:2&:SWyz~W'
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == 'y\x0c[fN"W:2&:SWyz~W'
    assert section_0.children == 'y\x0c[fN"W:2&:SWyz~W'
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = "page_context"
    section_1 = module_0.Section(str_1, str_1)
    str_2 = "' from the site because it conflicts with '"
    list_0 = []
    section_2 = module_0.Section(str_2, list_0)
    var_0 = section_1.__repr__()
    assert var_0 == "Section(title='page_context')"
    str_3 = " Use '"
    section_3 = module_0.Section(str_3, str_3)
    var_1 = section_3.__repr__()
    assert var_1 == 'Section(title=" Use \'")'
    str_4 = "gfRsC:6&{;|"
    section_4 = module_0.Section(str_4, str_4)
    str_5 = "relative_to_docs"
    link_1 = module_0.Link(str_5, section_4)
    str_6 = " Use '"
    section_5 = module_0.Section(str_6, str_6)
    var_2 = section_5.__repr__()
    assert var_2 == 'Section(title=" Use \'")'
    int_0 = var_2.__len__()
    assert int_0 == 23
    str_7 = " Use '"
    section_6 = module_0.Section(str_7, str_7)
    var_3 = section_6.__repr__()
    assert var_3 == 'Section(title=" Use \'")'
    int_1 = var_3.__len__()
    assert int_1 == 23
    var_4 = var_3.__repr__()
    assert var_4 == "'Section(title=\" Use \\'\")'"
    str_8 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_2 = module_0.Link(str_8, none_type_0)
    var_5 = link_2.__repr__()
    assert var_5 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_6 = var_5.__repr__()
    assert var_6 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_9 = var_5.__str__()
    assert str_9 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_7 = var_5.__repr__()
    assert var_7 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_10 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_3 = module_0.Link(str_10, none_type_1)
    str_11 = "page_context"
    section_7 = module_0.Section(str_11, str_11)
    str_12 = "' from the site because it conflicts with '"
    list_1 = []
    section_8 = module_0.Section(str_12, list_1)
    str_13 = "localhost"
    link_4 = module_0.Link(str_12, str_13)
    str_14 = " Use '"
    section_9 = module_0.Section(str_14, str_14)
    var_8 = section_9.__repr__()
    assert var_8 == 'Section(title=" Use \'")'
    int_2 = var_8.__len__()
    assert int_2 == 23
    section_10 = module_0.Section(var_8, int_2)
    assert section_10.title == 'Section(title=" Use \'")'
    assert section_10.children == 23
    module_0.get_navigation(link_1, section_1)


@pytest.mark.xfail(strict=True)
def test_case_780():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    str_1 = "gfRsC:6&{;|"
    section_1 = module_0.Section(str_1, str_1)
    str_2 = "relative_to_docs"
    link_0 = module_0.Link(str_2, section_1)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "relative_to_docs"
    assert (
        f"{type(link_0.url).__module__}.{type(link_0.url).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    str_3 = " Use '"
    section_2 = module_0.Section(str_3, str_3)
    var_1 = section_2.__repr__()
    assert var_1 == 'Section(title=" Use \'")'
    str_4 = "gfRsC:6&{;|"
    section_3 = module_0.Section(str_4, str_4)
    str_5 = "page_context"
    section_4 = module_0.Section(str_5, str_5)
    str_6 = "' from the site because it conflicts with '"
    list_0 = []
    section_5 = module_0.Section(str_6, list_0)
    str_7 = " Use '"
    section_6 = module_0.Section(str_7, str_7)
    var_2 = section_6.__repr__()
    assert var_2 == 'Section(title=" Use \'")'
    int_0 = var_2.__len__()
    assert int_0 == 23
    str_8 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_1 = module_0.Link(str_8, none_type_0)
    int_1 = var_2.__len__()
    assert int_1 == 23
    str_9 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_2 = module_0.Link(str_9, none_type_1)
    bytes_0 = b"\x802c35Z\xf8"
    link_3 = module_0.Link(link_2, bytes_0)
    str_10 = "page_context"
    section_7 = module_0.Section(str_10, str_10)
    module_0.get_navigation(section_3, var_2)


@pytest.mark.xfail(strict=True)
def test_case_781():
    str_0 = "page_context"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = "' from the site because it conflicts with '"
    list_0 = []
    section_1 = module_0.Section(str_1, list_0)
    var_0 = section_0.__repr__()
    assert var_0 == "Section(title='page_context')"
    module_0.Navigation(var_0, var_0)


@pytest.mark.xfail(strict=True)
def test_case_782():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    int_0 = var_0.__len__()
    assert int_0 == 23
    section_1 = module_0.Section(var_0, int_0)
    assert section_1.title == 'Section(title=" Use \'")'
    assert section_1.children == 23
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_1, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_1 = link_0.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_2 = var_1.__repr__()
    assert var_2 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_2 = var_1.__str__()
    assert str_2 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    module_0.Navigation(none_type_0, link_0)


@pytest.mark.xfail(strict=True)
def test_case_783():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    bytes_0 = b"\x802c35Z\xf8"
    link_1 = module_0.Link(link_0, bytes_0)
    str_1 = " Use '"
    section_0 = module_0.Section(str_1, str_1)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    str_2 = "gfRsC:6&{;|"
    section_1 = module_0.Section(str_2, str_2)
    str_3 = "relative_to_docs"
    link_2 = module_0.Link(str_3, section_1)
    section_2 = module_0.Section(section_0, var_0)
    assert section_2.children == 'Section(title=" Use \'")'
    str_4 = "page_context"
    section_3 = module_0.Section(str_4, str_4)
    str_5 = "' from the site because it conflicts with '"
    list_0 = []
    section_4 = module_0.Section(str_5, list_0)
    str_6 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_3 = module_0.Link(str_6, none_type_1)
    var_1 = link_3.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_7 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_4 = module_0.Link(str_7, none_type_2)
    var_2 = link_4.__repr__()
    assert var_2 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_3 = var_2.__repr__()
    assert var_3 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_4 = var_3.__repr__()
    assert var_4 == "'\"Link(title=\\'0_~6:m!(f5FgU,:rvz\\', url=None)\"'"
    str_8 = "gfRsC:6&{;|"
    section_5 = module_0.Section(str_8, str_8)
    str_9 = "page_context"
    section_6 = module_0.Section(str_9, str_9)
    str_10 = "' from the site because it conflicts with '"
    list_1 = []
    section_7 = module_0.Section(str_10, list_1)
    str_11 = "localhost"
    link_5 = module_0.Link(str_10, str_11)
    module_0.get_navigation(link_1, var_0)


@pytest.mark.xfail(strict=True)
def test_case_784():
    dict_0 = {}
    var_0 = module_3.nest_paths(dict_0)
    var_1 = var_0.__repr__()
    var_2 = var_1.__repr__()
    module_0.get_navigation(var_2, dict_0)


@pytest.mark.xfail(strict=True)
def test_case_785():
    str_0 = "page_context"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_1, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = section_0.__repr__()
    assert var_1 == "Section(title='page_context')"
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_2, none_type_1)
    var_2 = link_1.__repr__()
    assert var_2 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_3 = var_2.__repr__()
    assert var_3 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_4 = var_3.__repr__()
    assert var_4 == "'\"Link(title=\\'0_~6:m!(f5FgU,:rvz\\', url=None)\"'"
    str_3 = "page_context"
    section_1 = module_0.Section(str_3, str_3)
    str_4 = "' from the site because it conflicts with '"
    list_0 = []
    section_2 = module_0.Section(str_4, list_0)
    var_5 = section_2.__repr__()
    assert var_5 == "Section(title=\"' from the site because it conflicts with '\")"
    section_3 = module_0.Section(str_4, section_1)
    module_0.Navigation(var_2, link_0)


@pytest.mark.xfail(strict=True)
def test_case_786():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    str_1 = "gfRsC:6&{;|"
    section_1 = module_0.Section(str_1, str_1)
    str_2 = "relative_to_docs"
    link_0 = module_0.Link(str_2, section_1)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "relative_to_docs"
    assert (
        f"{type(link_0.url).__module__}.{type(link_0.url).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    section_2 = module_0.Section(section_0, var_0)
    assert section_2.children == 'Section(title=" Use \'")'
    none_type_0 = None
    module_0.Navigation(none_type_0, var_0)


@pytest.mark.xfail(strict=True)
def test_case_787():
    exception_0 = module_7.Exception()
    module_6.Page(exception_0, exception_0, exception_0)


@pytest.mark.xfail(strict=True)
def test_case_788():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_1 = var_0.__str__()
    assert str_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_2 = var_0.__repr__()
    assert var_2 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_2 = 'C5B_`:"E&+;Y['
    link_1 = module_0.Link(str_2, str_2)
    str_3 = " Use '"
    section_0 = module_0.Section(str_3, str_3)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_3 = section_0.__repr__()
    assert var_3 == 'Section(title=" Use \'")'
    section_1 = module_0.Section(str_3, var_3)
    assert section_1.children == 'Section(title=" Use \'")'
    dict_0 = {}
    str_4 = 'y\x0c[fN"W:2&:SWyz~W'
    link_2 = module_0.Link(dict_0, str_4)
    module_0.Navigation(var_1, var_0)


@pytest.mark.xfail(strict=True)
def test_case_789():
    set_0 = set()
    module_0.get_navigation(set_0, set_0)


@pytest.mark.xfail(strict=True)
def test_case_790():
    str_0 = "page_context"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = "' from the site because it conflicts with '"
    list_0 = []
    section_1 = module_0.Section(str_1, list_0)
    var_0 = section_1.__repr__()
    assert var_0 == "Section(title=\"' from the site because it conflicts with '\")"
    section_2 = module_0.Section(str_1, section_0)
    int_0 = var_0.__len__()
    assert int_0 == 60
    str_2 = " Use '"
    section_3 = module_0.Section(str_2, str_2)
    var_1 = section_3.__repr__()
    assert var_1 == 'Section(title=" Use \'")'
    section_4 = module_0.Section(str_2, var_1)
    assert section_4.children == 'Section(title=" Use \'")'
    str_3 = "gfRsC:6&{;|"
    section_5 = module_0.Section(str_3, str_3)
    str_4 = "page_context"
    section_6 = module_0.Section(str_4, str_4)
    str_5 = "' from the site because it conflicts with '"
    list_1 = []
    section_7 = module_0.Section(str_5, list_1)
    str_6 = "localhost"
    link_0 = module_0.Link(str_5, str_6)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "' from the site because it conflicts with '"
    assert link_0.url == "localhost"
    str_7 = " Use '"
    section_8 = module_0.Section(str_7, str_7)
    var_2 = section_8.__repr__()
    assert var_2 == 'Section(title=" Use \'")'
    str_8 = "gfRsC:6&{;|"
    section_9 = module_0.Section(str_8, str_8)
    str_9 = "relative_to_docs"
    link_1 = module_0.Link(str_9, section_9)
    list_2 = [section_9]
    module_0.Navigation(list_2, list_2)


@pytest.mark.xfail(strict=True)
def test_case_791():
    exception_0 = module_7.Exception()
    module_0.get_navigation(exception_0, exception_0)


@pytest.mark.xfail(strict=True)
def test_case_792():
    none_type_0 = None
    var_0 = module_1.urlsplit(none_type_0, none_type_0)
    list_0 = [var_0]
    module_0.Navigation(none_type_0, list_0)


@pytest.mark.xfail(strict=True)
def test_case_793():
    str_0 = "page_context"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = "' from the site because it conflicts with '"
    list_0 = []
    section_1 = module_0.Section(str_1, list_0)
    var_0 = section_1.__repr__()
    assert var_0 == "Section(title=\"' from the site because it conflicts with '\")"
    section_2 = module_0.Section(str_1, section_0)
    str_2 = "gfRsC:6&{;|"
    section_3 = module_0.Section(str_2, str_2)
    var_1 = section_3.__repr__()
    assert var_1 == "Section(title='gfRsC:6&{;|')"
    str_3 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_3, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    bytes_0 = b"\x802c35Z\xf8"
    link_1 = module_0.Link(link_0, bytes_0)
    str_4 = "page_context"
    section_4 = module_0.Section(str_4, str_4)
    str_5 = "' from the site because it conflicts with '"
    list_1 = []
    section_5 = module_0.Section(str_5, list_1)
    str_6 = "localhost"
    link_2 = module_0.Link(str_5, str_6)
    str_7 = " Use '"
    section_6 = module_0.Section(str_7, str_7)
    var_2 = section_6.__repr__()
    assert var_2 == 'Section(title=" Use \'")'
    str_8 = "gfRsC:6&{;|"
    section_7 = module_0.Section(str_8, str_8)
    str_9 = "relative_to_docs"
    link_3 = module_0.Link(str_9, section_7)
    section_8 = module_0.Section(section_6, var_2)
    assert section_8.children == 'Section(title=" Use \'")'
    str_10 = "page_context"
    section_9 = module_0.Section(str_10, str_10)
    str_11 = "' from the site because it conflicts with '"
    list_2 = []
    section_10 = module_0.Section(str_11, list_2)
    var_3 = module_3.nest_paths(var_2)
    var_1.read_source(var_3)


@pytest.mark.xfail(strict=True)
def test_case_794():
    str_0 = "page_context"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = "' from the site because it conflicts with '"
    list_0 = []
    section_1 = module_0.Section(str_1, list_0)
    str_2 = "page_context"
    section_2 = module_0.Section(str_2, str_2)
    str_3 = "' from the site because it conflicts with '"
    list_1 = []
    section_3 = module_0.Section(str_3, list_1)
    var_0 = section_3.__repr__()
    assert var_0 == "Section(title=\"' from the site because it conflicts with '\")"
    str_4 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_4, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    str_5 = "page_context"
    section_4 = module_0.Section(str_5, str_5)
    str_6 = "' from the site because it conflicts with '"
    list_2 = []
    section_5 = module_0.Section(str_6, list_2)
    var_1 = section_4.__repr__()
    assert var_1 == "Section(title='page_context')"
    str_7 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_7, none_type_1)
    var_2 = link_1.__repr__()
    assert var_2 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_3 = var_2.__repr__()
    assert var_3 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_8 = var_2.__str__()
    assert str_8 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_9 = " Use '"
    section_6 = module_0.Section(str_9, str_9)
    var_4 = section_6.__repr__()
    assert var_4 == 'Section(title=" Use \'")'
    int_0 = var_4.__len__()
    assert int_0 == 23
    str_10 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_2 = module_0.Link(str_10, none_type_2)
    int_1 = var_4.__len__()
    assert int_1 == 23
    str_11 = " Use '"
    section_7 = module_0.Section(str_11, str_11)
    var_5 = section_7.__repr__()
    assert var_5 == 'Section(title=" Use \'")'
    str_12 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_3 = module_0.Link(str_12, none_type_3)
    var_6 = link_3.__repr__()
    assert var_6 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    int_2 = var_6.__len__()
    assert int_2 == 42
    str_13 = "page_context"
    section_8 = module_0.Section(str_13, str_13)
    str_14 = "0_~6:m!(f5FgU,:rvz"
    none_type_4 = None
    link_4 = module_0.Link(str_14, none_type_4)
    var_7 = link_4.__repr__()
    assert var_7 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_8 = section_8.__repr__()
    assert var_8 == "Section(title='page_context')"
    str_15 = " Use '"
    section_9 = module_0.Section(str_15, str_15)
    var_9 = section_9.__repr__()
    assert var_9 == 'Section(title=" Use \'")'
    str_16 = "gfRsC:6&{;|"
    section_10 = module_0.Section(str_16, str_16)
    str_17 = "relative_to_docs"
    link_5 = module_0.Link(str_17, section_10)
    var_10 = link_1.__repr__()
    assert var_10 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    module_0.Navigation(none_type_1, var_10)


@pytest.mark.xfail(strict=True)
def test_case_795():
    none_type_0 = None
    module_3.nest_paths(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_796():
    str_0 = "page_context"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = "' from the site because it conflicts with '"
    list_0 = []
    section_1 = module_0.Section(str_1, list_0)
    none_type_0 = None
    str_2 = "\n        Perform validation for a value.\n\n        The run_validation method should be implemented by subclasses.\n        "
    link_0 = module_0.Link(none_type_0, str_2)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title is None
    assert (
        link_0.url
        == "\n        Perform validation for a value.\n\n        The run_validation method should be implemented by subclasses.\n        "
    )
    var_0 = link_0.__repr__()
    assert (
        var_0
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    str_3 = var_0.__str__()
    assert (
        str_3
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    str_4 = "page_context"
    section_2 = module_0.Section(str_4, str_4)
    str_5 = "' from the site because it conflicts with '"
    list_1 = []
    section_3 = module_0.Section(str_5, list_1)
    var_1 = section_2.__repr__()
    assert var_1 == "Section(title='page_context')"
    str_6 = "page_context"
    section_4 = module_0.Section(str_6, str_6)
    str_7 = "' from the site because it conflicts with '"
    list_2 = []
    section_5 = module_0.Section(str_7, list_2)
    var_2 = section_5.__repr__()
    assert var_2 == "Section(title=\"' from the site because it conflicts with '\")"
    section_6 = module_0.Section(str_7, section_4)
    str_8 = " Use '"
    section_7 = module_0.Section(str_8, str_8)
    var_3 = section_7.__repr__()
    assert var_3 == 'Section(title=" Use \'")'
    str_9 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_9, none_type_1)
    bytes_0 = b"\x802c35Z\xf8"
    link_2 = module_0.Link(link_1, bytes_0)
    var_4 = link_1.__repr__()
    assert var_4 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    iterator_0 = var_4.__iter__()
    str_10 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_3 = module_0.Link(str_10, none_type_2)
    var_5 = link_3.__repr__()
    assert var_5 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_6 = var_5.__repr__()
    assert var_6 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_11 = var_5.__str__()
    assert str_11 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_7 = var_5.__repr__()
    assert var_7 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_12 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_4 = module_0.Link(str_12, none_type_3)
    var_8 = link_4.__repr__()
    assert var_8 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_9 = var_8.__repr__()
    assert var_9 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_10 = var_9.__repr__()
    assert var_10 == "'\"Link(title=\\'0_~6:m!(f5FgU,:rvz\\', url=None)\"'"
    str_13 = "0_~6:m!(f5FgU,:rvz"
    none_type_4 = None
    link_5 = module_0.Link(str_13, none_type_4)
    var_11 = link_5.__repr__()
    assert var_11 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_12 = var_11.__repr__()
    assert var_12 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_14 = " Use '"
    section_8 = module_0.Section(str_14, str_14)
    var_13 = section_8.__repr__()
    assert var_13 == 'Section(title=" Use \'")'
    str_15 = "gfRsC:6&{;|"
    section_9 = module_0.Section(str_15, str_15)
    str_16 = "relative_to_docs"
    link_6 = module_0.Link(str_16, section_9)
    module_0.get_navigation(var_10, none_type_2)


@pytest.mark.xfail(strict=True)
def test_case_797():
    dict_0 = {}
    str_0 = 'y\x0c[fN"W:2&:SWyz~W'
    link_0 = module_0.Link(dict_0, str_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == {}
    assert link_0.url == 'y\x0c[fN"W:2&:SWyz~W'
    none_type_0 = None
    str_1 = "\n        Perform validation for a value.\n\n        The run_validation method should be implemented by subclasses.\n        "
    link_1 = module_0.Link(none_type_0, str_1)
    var_0 = link_1.__repr__()
    assert (
        var_0
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    str_2 = var_0.__str__()
    assert (
        str_2
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    module_0.get_navigation(link_0, var_0)


@pytest.mark.xfail(strict=True)
def test_case_798():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_1 = var_0.__str__()
    assert str_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_2 = var_0.__repr__()
    assert var_2 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_2 = " Use '"
    section_0 = module_0.Section(str_2, str_2)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_3 = section_0.__repr__()
    assert var_3 == 'Section(title=" Use \'")'
    var_4 = var_3.__repr__()
    assert var_4 == "'Section(title=\" Use \\'\")'"
    module_0.get_navigation(var_4, var_0)


@pytest.mark.xfail(strict=True)
def test_case_799():
    str_0 = "page_context"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = "' from the site because it conflicts with '"
    list_0 = []
    section_1 = module_0.Section(str_1, list_0)
    var_0 = section_0.__repr__()
    assert var_0 == "Section(title='page_context')"
    str_2 = 'C5B_`:"E&+;Y['
    link_0 = module_0.Link(str_2, str_2)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == 'C5B_`:"E&+;Y['
    assert link_0.url == 'C5B_`:"E&+;Y['
    str_3 = "page_context"
    section_2 = module_0.Section(str_3, str_3)
    str_4 = "' from the site because it conflicts with '"
    list_1 = []
    section_3 = module_0.Section(str_4, list_1)
    var_1 = section_3.__repr__()
    assert var_1 == "Section(title=\"' from the site because it conflicts with '\")"
    section_4 = module_0.Section(str_4, section_2)
    str_5 = " Use '"
    section_5 = module_0.Section(str_5, str_5)
    var_2 = section_5.__repr__()
    assert var_2 == 'Section(title=" Use \'")'
    str_6 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_1 = module_0.Link(str_6, none_type_0)
    var_3 = link_1.__repr__()
    assert var_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    int_0 = var_3.__len__()
    assert int_0 == 42
    var_4 = var_2.__repr__()
    assert var_4 == "'Section(title=\" Use \\'\")'"
    var_4.validate_anchor_links(files=str_3, log_level=section_5)


@pytest.mark.xfail(strict=True)
def test_case_800():
    none_type_0 = None
    str_0 = "\n        Perform validation for a value.\n\n        The run_validation method should be implemented by subclasses.\n        "
    link_0 = module_0.Link(none_type_0, str_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title is None
    assert (
        link_0.url
        == "\n        Perform validation for a value.\n\n        The run_validation method should be implemented by subclasses.\n        "
    )
    var_0 = link_0.__repr__()
    assert (
        var_0
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    str_1 = var_0.__str__()
    assert (
        str_1
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    str_2 = " Use '"
    section_0 = module_0.Section(str_2, str_2)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_1 = section_0.__repr__()
    assert var_1 == 'Section(title=" Use \'")'
    int_0 = var_1.__len__()
    assert int_0 == 23
    var_2 = var_1.__repr__()
    assert var_2 == "'Section(title=\" Use \\'\")'"
    str_3 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_3, none_type_1)
    var_3 = link_1.__repr__()
    assert var_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_4 = var_3.__repr__()
    assert var_4 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_4 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_2 = module_0.Link(str_4, none_type_2)
    bytes_0 = b"\x802c35Z\xf8"
    link_3 = module_0.Link(link_2, bytes_0)
    var_5 = link_2.__repr__()
    assert var_5 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    dict_0 = {}
    str_5 = 'y\x0c[fN"W:2&:SWyz~W'
    link_4 = module_0.Link(dict_0, str_5)
    section_1 = module_0.Section(str_5, str_5)
    str_6 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_5 = module_0.Link(str_6, none_type_3)
    bytes_1 = b"\x802c35Z\xf8"
    link_6 = module_0.Link(link_5, bytes_1)
    str_7 = "0_~6:m!(f5FgU,:rvz"
    none_type_4 = None
    link_7 = module_0.Link(str_7, none_type_4)
    var_6 = link_7.__repr__()
    assert var_6 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_7 = var_6.__repr__()
    assert var_7 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_8 = var_7.__repr__()
    assert var_8 == "'\"Link(title=\\'0_~6:m!(f5FgU,:rvz\\', url=None)\"'"
    str_8 = "gfRsC:6&{;|"
    section_2 = module_0.Section(str_8, str_8)
    str_9 = "0_~6:m!(f5FgU,:rvz"
    none_type_5 = None
    link_8 = module_0.Link(str_9, none_type_5)
    bytes_2 = b"\x802c35Z\xf8"
    link_9 = module_0.Link(link_8, bytes_2)
    var_9 = link_8.__repr__()
    assert var_9 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    iterator_0 = var_9.__iter__()
    module_0.Navigation(var_4, bytes_1)


@pytest.mark.xfail(strict=True)
def test_case_801():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    int_0 = var_0.__len__()
    assert int_0 == 23
    var_1 = var_0.__repr__()
    assert var_1 == "'Section(title=\" Use \\'\")'"
    str_1 = "page_context"
    section_1 = module_0.Section(str_1, str_1)
    str_2 = "' from the site because it conflicts with '"
    list_0 = []
    section_2 = module_0.Section(str_2, list_0)
    str_3 = "localhost"
    link_0 = module_0.Link(str_2, str_3)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "' from the site because it conflicts with '"
    assert link_0.url == "localhost"
    str_4 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_1 = module_0.Link(str_4, none_type_0)
    var_2 = link_1.__repr__()
    assert var_2 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_3 = var_2.__repr__()
    assert var_3 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_4 = var_3.__repr__()
    assert var_4 == "'\"Link(title=\\'0_~6:m!(f5FgU,:rvz\\', url=None)\"'"
    str_5 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_2 = module_0.Link(str_5, none_type_1)
    var_5 = link_2.__repr__()
    assert var_5 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_6 = var_5.__repr__()
    assert var_6 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_6 = var_5.__str__()
    assert str_6 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_7 = var_5.__repr__()
    assert var_7 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_7 = "page_context"
    section_3 = module_0.Section(str_7, str_7)
    str_8 = "' from the site because it conflicts with '"
    list_1 = []
    section_4 = module_0.Section(str_8, list_1)
    var_8 = section_4.__repr__()
    assert var_8 == "Section(title=\"' from the site because it conflicts with '\")"
    section_5 = module_0.Section(str_8, section_3)
    str_9 = "page_context"
    section_6 = module_0.Section(str_9, str_9)
    str_10 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_3 = module_0.Link(str_10, none_type_2)
    var_9 = link_3.__repr__()
    assert var_9 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_10 = section_6.__repr__()
    assert var_10 == "Section(title='page_context')"
    none_type_3 = None
    str_11 = "\n        Perform validation for a value.\n\n        The run_validation method should be implemented by subclasses.\n        "
    link_4 = module_0.Link(none_type_3, str_11)
    var_11 = link_4.__repr__()
    assert (
        var_11
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    str_12 = var_11.__str__()
    assert (
        str_12
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    str_13 = "0_~6:m!(f5FgU,:rvz"
    none_type_4 = None
    link_5 = module_0.Link(str_13, none_type_4)
    bytes_0 = b"\x802c35Z\xf8"
    link_6 = module_0.Link(link_5, bytes_0)
    dict_0 = {}
    str_14 = 'y\x0c[fN"W:2&:SWyz~W'
    link_7 = module_0.Link(dict_0, str_14)
    var_12 = link_6.__repr__()
    assert (
        var_12
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )
    str_15 = "page_context"
    section_7 = module_0.Section(str_15, str_15)
    str_16 = "' from the site because it conflicts with '"
    list_2 = []
    section_8 = module_0.Section(str_16, list_2)
    var_13 = section_8.__repr__()
    assert var_13 == "Section(title=\"' from the site because it conflicts with '\")"
    section_9 = module_0.Section(str_16, section_7)
    int_1 = var_13.__len__()
    assert int_1 == 60
    str_17 = "0_~6:m!(f5FgU,:rvz"
    none_type_5 = None
    link_8 = module_0.Link(str_17, none_type_5)
    bytes_1 = b"\x802c35Z\xf8"
    link_9 = module_0.Link(link_8, bytes_1)
    bool_0 = True
    bytes_2 = b"# "
    tuple_0 = (bool_0, bytes_2)
    list_3 = [tuple_0, str_7, str_4, str_7]
    module_0.get_navigation(list_3, str_15)


@pytest.mark.xfail(strict=True)
def test_case_802():
    str_0 = "page_context"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = "' from the site because it conflicts with '"
    list_0 = []
    section_1 = module_0.Section(str_1, list_0)
    var_0 = section_1.__repr__()
    assert var_0 == "Section(title=\"' from the site because it conflicts with '\")"
    section_2 = module_0.Section(str_1, section_0)
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_2, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    bytes_0 = b"\x802c35Z\xf8"
    link_1 = module_0.Link(link_0, bytes_0)
    str_3 = " Use '"
    section_3 = module_0.Section(str_3, str_3)
    var_1 = section_3.__repr__()
    assert var_1 == 'Section(title=" Use \'")'
    int_0 = var_1.__len__()
    assert int_0 == 23
    str_4 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_2 = module_0.Link(str_4, none_type_1)
    int_1 = var_1.__len__()
    assert int_1 == 23
    str_5 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_3 = module_0.Link(str_5, none_type_2)
    var_2 = link_3.__repr__()
    assert var_2 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_3 = var_2.__repr__()
    assert var_3 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_4 = var_3.__repr__()
    assert var_4 == "'\"Link(title=\\'0_~6:m!(f5FgU,:rvz\\', url=None)\"'"
    none_type_3 = None
    str_6 = "\n        Perform validation for a value.\n\n        The run_validation method should be implemented by subclasses.\n        "
    link_4 = module_0.Link(none_type_3, str_6)
    var_5 = link_4.__repr__()
    assert (
        var_5
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    str_7 = var_5.__str__()
    assert (
        str_7
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    module_0.Navigation(list_0, none_type_1)


@pytest.mark.xfail(strict=True)
def test_case_803():
    none_type_0 = None
    dict_0 = {
        none_type_0: none_type_0,
        none_type_0: none_type_0,
        none_type_0: none_type_0,
        none_type_0: none_type_0,
    }
    module_1.urlsplit(none_type_0, dict_0)


@pytest.mark.xfail(strict=True)
def test_case_804():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_2 = var_0.__repr__()
    assert var_2 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_1 = " Use '"
    section_0 = module_0.Section(str_1, str_1)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_3 = section_0.__repr__()
    assert var_3 == 'Section(title=" Use \'")'
    int_0 = var_3.__len__()
    assert int_0 == 23
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_2, none_type_1)
    int_1 = var_3.__len__()
    assert int_1 == 23
    str_3 = "page_context"
    section_1 = module_0.Section(str_3, str_3)
    str_4 = "' from the site because it conflicts with '"
    list_0 = []
    section_2 = module_0.Section(str_4, list_0)
    var_4 = section_2.__repr__()
    assert var_4 == "Section(title=\"' from the site because it conflicts with '\")"
    section_3 = module_0.Section(str_4, section_1)
    str_5 = "$9.}1Av5,.}"
    link_2 = module_0.Link(str_5, str_5)
    str_6 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_3 = module_0.Link(str_6, none_type_2)
    var_5 = link_3.__repr__()
    assert var_5 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_6 = var_5.__repr__()
    assert var_6 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_7 = var_6.__repr__()
    assert var_7 == "'\"Link(title=\\'0_~6:m!(f5FgU,:rvz\\', url=None)\"'"
    dict_0 = {}
    str_7 = 'y\x0c[fN"W:2&:SWyz~W'
    link_4 = module_0.Link(dict_0, str_7)
    section_4 = module_0.Section(str_7, str_7)
    str_8 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_5 = module_0.Link(str_8, none_type_3)
    var_8 = link_5.__repr__()
    assert var_8 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_9 = var_8.__repr__()
    assert var_9 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_10 = var_9.__repr__()
    assert var_10 == "'\"Link(title=\\'0_~6:m!(f5FgU,:rvz\\', url=None)\"'"
    str_9 = "0_~6:m!(f5FgU,:rvz"
    none_type_4 = None
    link_6 = module_0.Link(str_9, none_type_4)
    var_11 = link_6.__repr__()
    assert var_11 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_10 = "page_context"
    section_5 = module_0.Section(str_10, str_10)
    str_11 = "' from the site because it conflicts with '"
    list_1 = []
    section_6 = module_0.Section(str_11, list_1)
    var_12 = section_6.__repr__()
    assert var_12 == "Section(title=\"' from the site because it conflicts with '\")"
    str_12 = " Use '"
    section_7 = module_0.Section(str_12, str_12)
    var_13 = section_7.__repr__()
    assert var_13 == 'Section(title=" Use \'")'
    int_2 = var_13.__len__()
    assert int_2 == 23
    var_14 = var_13.__repr__()
    assert var_14 == "'Section(title=\" Use \\'\")'"
    module_0.get_navigation(var_6, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_805():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    int_0 = var_0.__len__()
    assert int_0 == 23
    str_1 = "gfRsC:6&{;|"
    section_1 = module_0.Section(str_1, str_1)
    var_1 = section_1.__repr__()
    assert var_1 == "Section(title='gfRsC:6&{;|')"
    str_2 = " Use '"
    section_2 = module_0.Section(str_2, str_2)
    var_2 = section_2.__repr__()
    assert var_2 == 'Section(title=" Use \'")'
    var_3 = var_2.__repr__()
    assert var_3 == "'Section(title=\" Use \\'\")'"
    module_0.get_navigation(str_0, var_0)


@pytest.mark.xfail(strict=True)
def test_case_806():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    int_0 = var_0.__len__()
    assert int_0 == 23
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_1, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    int_1 = var_0.__len__()
    assert int_1 == 23
    dict_0 = {}
    str_2 = 'y\x0c[fN"W:2&:SWyz~W'
    link_1 = module_0.Link(dict_0, str_2)
    section_1 = module_0.Section(str_2, str_2)
    str_3 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_2 = module_0.Link(str_3, none_type_1)
    bytes_0 = b"\x802c35Z\xf8"
    link_3 = module_0.Link(link_2, bytes_0)
    str_4 = "page_context"
    section_2 = module_0.Section(str_4, str_4)
    str_5 = "' from the site because it conflicts with '"
    list_0 = []
    section_3 = module_0.Section(str_5, list_0)
    var_1 = section_2.__repr__()
    assert var_1 == "Section(title='page_context')"
    str_6 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_4 = module_0.Link(str_6, none_type_2)
    bytes_1 = b"\x802c35Z\xf8"
    link_5 = module_0.Link(link_4, bytes_1)
    var_2 = link_4.__repr__()
    assert var_2 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    iterator_0 = var_2.__iter__()
    str_7 = " Use '"
    section_4 = module_0.Section(str_7, str_7)
    var_3 = section_4.__repr__()
    assert var_3 == 'Section(title=" Use \'")'
    var_4 = var_3.__repr__()
    assert var_4 == "'Section(title=\" Use \\'\")'"
    str_8 = " Use '"
    section_5 = module_0.Section(str_8, str_8)
    var_5 = section_5.__repr__()
    assert var_5 == 'Section(title=" Use \'")'
    str_9 = 'C5B_`:"E&+;Y['
    link_6 = module_0.Link(str_9, str_9)
    int_2 = var_5.__len__()
    assert int_2 == 23
    str_10 = "gfRsC:6&{;|"
    section_6 = module_0.Section(str_10, str_10)
    str_11 = " Use '"
    section_7 = module_0.Section(str_11, str_11)
    var_6 = section_7.__repr__()
    assert var_6 == 'Section(title=" Use \'")'
    int_3 = var_6.__len__()
    assert int_3 == 23
    var_7 = var_6.__repr__()
    assert var_7 == "'Section(title=\" Use \\'\")'"
    var_8 = var_7.__repr__()
    assert var_8 == "'\\'Section(title=\" Use \\\\\\'\")\\''"
    str_12 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_7 = module_0.Link(str_12, none_type_3)
    bytes_2 = b"\x802c35Z\xf8"
    link_8 = module_0.Link(link_7, bytes_2)
    var_9 = link_7.__repr__()
    assert var_9 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    int_4 = var_9.__len__()
    assert int_4 == 42
    module_0.Navigation(var_7, link_7)


@pytest.mark.xfail(strict=True)
def test_case_807():
    str_0 = "eh\r>"
    var_0 = module_1.urlsplit(str_0)
    list_0 = [var_0, var_0, var_0, var_0]
    section_0 = module_0.Section(str_0, list_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "eh\r>"
    assert (
        f"{type(section_0.children).__module__}.{type(section_0.children).__qualname__}"
        == "builtins.list"
    )
    assert len(section_0.children) == 4
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    module_0.get_navigation(section_0, section_0)


@pytest.mark.xfail(strict=True)
def test_case_808():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    module_0.get_navigation(none_type_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_809():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_2 = var_0.__repr__()
    assert var_2 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_1 = 'C5B_`:"E&+;Y['
    link_1 = module_0.Link(str_1, str_1)
    str_2 = "page_context"
    section_0 = module_0.Section(str_2, str_2)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_3 = "' from the site because it conflicts with '"
    list_0 = []
    section_1 = module_0.Section(str_3, list_0)
    var_3 = var_0.__repr__()
    assert var_3 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_4 = var_3.__repr__()
    assert var_4 == "'\"Link(title=\\'0_~6:m!(f5FgU,:rvz\\', url=None)\"'"
    module_0.get_navigation(var_4, str_1)


@pytest.mark.xfail(strict=True)
def test_case_810():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    var_1 = var_0.__repr__()
    assert var_1 == "'Section(title=\" Use \\'\")'"
    str_1 = "page_context"
    section_1 = module_0.Section(str_1, str_1)
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_2, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    bytes_0 = b"\x802c35Z\xf8"
    link_1 = module_0.Link(link_0, bytes_0)
    var_2 = link_0.__repr__()
    assert var_2 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    int_0 = var_2.__len__()
    assert int_0 == 42
    var_1.validate_anchor_links(files=var_2, log_level=var_0)


@pytest.mark.xfail(strict=True)
def test_case_811():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_1 = "page_context"
    section_0 = module_0.Section(str_1, str_1)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_2, none_type_1)
    var_2 = link_1.__repr__()
    assert var_2 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_3 = section_0.__repr__()
    assert var_3 == "Section(title='page_context')"
    dict_0 = {}
    str_3 = 'y\x0c[fN"W:2&:SWyz~W'
    link_2 = module_0.Link(dict_0, str_3)
    section_1 = module_0.Section(str_3, str_3)
    str_4 = "page_context"
    section_2 = module_0.Section(str_4, str_4)
    str_5 = "' from the site because it conflicts with '"
    list_0 = []
    section_3 = module_0.Section(str_5, list_0)
    var_4 = section_3.__repr__()
    assert var_4 == "Section(title=\"' from the site because it conflicts with '\")"
    section_4 = module_0.Section(str_5, section_2)
    int_0 = var_4.__len__()
    assert int_0 == 60
    str_6 = " Use '"
    section_5 = module_0.Section(str_6, str_6)
    var_5 = section_5.__repr__()
    assert var_5 == 'Section(title=" Use \'")'
    str_7 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_3 = module_0.Link(str_7, none_type_2)
    var_6 = link_3.__repr__()
    assert var_6 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    int_1 = var_6.__len__()
    assert int_1 == 42
    none_type_3 = None
    str_8 = "\n        Perform validation for a value.\n\n        The run_validation method should be implemented by subclasses.\n        "
    link_4 = module_0.Link(none_type_3, str_8)
    var_7 = link_4.__repr__()
    assert (
        var_7
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    str_9 = var_7.__str__()
    assert (
        str_9
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    str_10 = "page_context"
    section_6 = module_0.Section(str_10, str_10)
    str_11 = "' from the site because it conflicts with '"
    list_1 = []
    section_7 = module_0.Section(str_11, list_1)
    str_12 = "localhost"
    link_5 = module_0.Link(str_11, str_12)
    module_0.Navigation(var_0, var_0)


@pytest.mark.xfail(strict=True)
def test_case_812():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    int_0 = var_0.__len__()
    assert int_0 == 23
    var_1 = var_0.__repr__()
    assert var_1 == "'Section(title=\" Use \\'\")'"
    str_1 = " Use '"
    section_1 = module_0.Section(str_1, str_1)
    var_2 = section_1.__repr__()
    assert var_2 == 'Section(title=" Use \'")'
    int_1 = var_2.__len__()
    assert int_1 == 23
    str_2 = "page_context"
    section_2 = module_0.Section(str_2, str_2)
    str_3 = "' from the site because it conflicts with '"
    list_0 = []
    section_3 = module_0.Section(str_3, list_0)
    str_4 = "localhost"
    link_0 = module_0.Link(str_3, str_4)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "' from the site because it conflicts with '"
    assert link_0.url == "localhost"
    str_5 = " Use '"
    section_4 = module_0.Section(str_5, str_5)
    var_3 = section_4.__repr__()
    assert var_3 == 'Section(title=" Use \'")'
    none_type_0 = None
    str_6 = "\n        Perform validation for a value.\n\n        The run_validation method should be implemented by subclasses.\n        "
    link_1 = module_0.Link(none_type_0, str_6)
    var_4 = link_1.__repr__()
    assert (
        var_4
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    str_7 = var_4.__str__()
    assert (
        str_7
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    str_8 = "gfRsC:6&{;|"
    section_5 = module_0.Section(str_8, str_8)
    var_5 = section_5.__repr__()
    assert var_5 == "Section(title='gfRsC:6&{;|')"
    str_9 = " Use '"
    section_6 = module_0.Section(str_9, str_9)
    var_6 = section_6.__repr__()
    assert var_6 == 'Section(title=" Use \'")'
    str_10 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_2 = module_0.Link(str_10, none_type_1)
    bytes_0 = b"\x802c35Z\xf8"
    link_3 = module_0.Link(link_2, bytes_0)
    iterator_0 = var_6.__iter__()
    str_11 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_4 = module_0.Link(str_11, none_type_2)
    var_7 = link_4.__repr__()
    assert var_7 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_8 = var_7.__repr__()
    assert var_8 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_12 = var_7.__str__()
    assert str_12 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    module_0.Navigation(str_9, var_6)


@pytest.mark.xfail(strict=True)
def test_case_813():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    int_0 = var_0.__len__()
    assert int_0 == 23
    section_1 = module_0.Section(var_0, int_0)
    assert section_1.title == 'Section(title=" Use \'")'
    assert section_1.children == 23
    module_1.urlsplit(section_0)


@pytest.mark.xfail(strict=True)
def test_case_814():
    dict_0 = {}
    str_0 = 'y\x0c[fN"W:2&:SWyz~W'
    link_0 = module_0.Link(dict_0, str_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == {}
    assert link_0.url == 'y\x0c[fN"W:2&:SWyz~W'
    str_1 = "page_context"
    section_0 = module_0.Section(str_1, str_1)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_2 = "' from the site because it conflicts with '"
    list_0 = []
    section_1 = module_0.Section(str_2, list_0)
    var_0 = section_0.__repr__()
    assert var_0 == "Section(title='page_context')"
    str_3 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_1 = module_0.Link(str_3, none_type_0)
    var_1 = link_1.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_2 = var_1.__repr__()
    assert var_2 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_4 = "gfRsC:6&{;|"
    section_2 = module_0.Section(str_4, str_4)
    str_5 = " Use '"
    section_3 = module_0.Section(str_5, str_5)
    var_3 = section_3.__repr__()
    assert var_3 == 'Section(title=" Use \'")'
    str_6 = "gfRsC:6&{;|"
    section_4 = module_0.Section(str_6, str_6)
    str_7 = "relative_to_docs"
    link_2 = module_0.Link(str_7, section_4)
    module_0.get_navigation(list_0, section_3)


@pytest.mark.xfail(strict=True)
def test_case_815():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_2 = var_1.__repr__()
    assert var_2 == "'\"Link(title=\\'0_~6:m!(f5FgU,:rvz\\', url=None)\"'"
    str_1 = "page_context"
    section_0 = module_0.Section(str_1, str_1)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_2 = "' from the site because it conflicts with '"
    list_0 = []
    section_1 = module_0.Section(str_2, list_0)
    var_3 = section_1.__repr__()
    assert var_3 == "Section(title=\"' from the site because it conflicts with '\")"
    str_3 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_3, none_type_1)
    var_4 = link_1.__repr__()
    assert var_4 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_5 = var_4.__repr__()
    assert var_5 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_4 = var_4.__str__()
    assert str_4 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_5 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_2 = module_0.Link(str_5, none_type_2)
    var_6 = link_2.__repr__()
    assert var_6 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_7 = var_6.__repr__()
    assert var_7 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_6 = "page_context"
    section_2 = module_0.Section(str_6, str_6)
    str_7 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_3 = module_0.Link(str_7, none_type_3)
    var_8 = link_3.__repr__()
    assert var_8 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_9 = section_2.__repr__()
    assert var_9 == "Section(title='page_context')"
    str_8 = "gfRsC:6&{;|"
    section_3 = module_0.Section(str_8, str_8)
    var_10 = section_3.__repr__()
    assert var_10 == "Section(title='gfRsC:6&{;|')"
    str_9 = " Use '"
    section_4 = module_0.Section(str_9, str_9)
    var_11 = section_4.__repr__()
    assert var_11 == 'Section(title=" Use \'")'
    str_10 = "0_~6:m!(f5FgU,:rvz"
    none_type_4 = None
    link_4 = module_0.Link(str_10, none_type_4)
    var_12 = link_4.__repr__()
    assert var_12 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    int_0 = var_12.__len__()
    assert int_0 == 42
    none_type_5 = None
    str_11 = "\n        Perform validation for a value.\n\n        The run_validation method should be implemented by subclasses.\n        "
    link_5 = module_0.Link(none_type_5, str_11)
    var_13 = link_5.__repr__()
    assert (
        var_13
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    str_12 = var_13.__str__()
    assert (
        str_12
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    module_0.get_navigation(none_type_1, str_0)


@pytest.mark.xfail(strict=True)
def test_case_816():
    bool_0 = False
    module_2.file_sort_key(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_817():
    int_0 = 258
    module_2.file_sort_key(int_0)


@pytest.mark.xfail(strict=True)
def test_case_818():
    set_0 = set()
    module_0.get_navigation(set_0, set_0)


@pytest.mark.xfail(strict=True)
def test_case_819():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_1 = var_0.__str__()
    assert str_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_2 = var_0.__repr__()
    assert var_2 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_2 = " Use '"
    section_0 = module_0.Section(str_2, str_2)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_3 = section_0.__repr__()
    assert var_3 == 'Section(title=" Use \'")'
    str_3 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_3, none_type_1)
    var_4 = link_1.__repr__()
    assert var_4 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    int_0 = var_4.__len__()
    assert int_0 == 42
    none_type_2 = None
    str_4 = "\n        Perform validation for a value.\n\n        The run_validation method should be implemented by subclasses.\n        "
    link_2 = module_0.Link(none_type_2, str_4)
    var_5 = link_2.__repr__()
    assert (
        var_5
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    str_5 = var_5.__str__()
    assert (
        str_5
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    str_6 = " Use '"
    section_1 = module_0.Section(str_6, str_6)
    var_6 = section_1.__repr__()
    assert var_6 == 'Section(title=" Use \'")'
    str_7 = "gfRsC:6&{;|"
    section_2 = module_0.Section(str_7, str_7)
    str_8 = "relative_to_docs"
    link_3 = module_0.Link(str_8, section_2)
    section_3 = module_0.Section(section_1, var_6)
    assert section_3.children == 'Section(title=" Use \'")'
    str_9 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_4 = module_0.Link(str_9, none_type_3)
    module_0.get_navigation(var_5, var_6)


@pytest.mark.xfail(strict=True)
def test_case_820():
    str_0 = "page_context"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = "' from the site because it conflicts with '"
    list_0 = []
    section_1 = module_0.Section(str_1, list_0)
    str_2 = "localhost"
    link_0 = module_0.Link(str_1, str_2)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "' from the site because it conflicts with '"
    assert link_0.url == "localhost"
    str_3 = "page_context"
    section_2 = module_0.Section(str_3, str_3)
    str_4 = "' from the site because it conflicts with '"
    list_1 = []
    section_3 = module_0.Section(str_4, list_1)
    var_0 = section_3.__repr__()
    assert var_0 == "Section(title=\"' from the site because it conflicts with '\")"
    str_5 = "gfRsC:6&{;|"
    section_4 = module_0.Section(str_5, str_5)
    module_0.get_navigation(str_5, section_1)


@pytest.mark.xfail(strict=True)
def test_case_821():
    bool_0 = True
    module_1.urlsplit(bool_0, bool_0)


@pytest.mark.xfail(strict=True)
def test_case_822():
    str_0 = "page_context"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_1, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    bytes_0 = b"\x802c35Z\xf8"
    link_1 = module_0.Link(link_0, bytes_0)
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    iterator_0 = var_0.__iter__()
    str_2 = "gfRsC:6&{;|"
    section_1 = module_0.Section(str_2, str_2)
    var_1 = section_1.__repr__()
    assert var_1 == "Section(title='gfRsC:6&{;|')"
    str_3 = "gfRsC:6&{;|"
    section_2 = module_0.Section(str_3, str_3)
    str_4 = " Use '"
    section_3 = module_0.Section(str_4, str_4)
    var_2 = section_3.__repr__()
    assert var_2 == 'Section(title=" Use \'")'
    int_0 = var_2.__len__()
    assert int_0 == 23
    var_3 = var_2.__repr__()
    assert var_3 == "'Section(title=\" Use \\'\")'"
    var_4 = var_3.__repr__()
    assert var_4 == "'\\'Section(title=\" Use \\\\\\'\")\\''"
    str_5 = " Use '"
    section_4 = module_0.Section(str_5, str_5)
    var_5 = section_4.__repr__()
    assert var_5 == 'Section(title=" Use \'")'
    str_6 = "gfRsC:6&{;|"
    section_5 = module_0.Section(str_6, str_6)
    str_7 = "relative_to_docs"
    link_2 = module_0.Link(str_7, section_5)
    section_6 = module_0.Section(section_4, var_5)
    assert section_6.children == 'Section(title=" Use \'")'
    str_8 = " Use '"
    section_7 = module_0.Section(str_8, str_8)
    var_6 = section_7.__repr__()
    assert var_6 == 'Section(title=" Use \'")'
    int_1 = var_6.__len__()
    assert int_1 == 23
    var_7 = var_6.__repr__()
    assert var_7 == "'Section(title=\" Use \\'\")'"
    module_0.Navigation(bytes_0, var_6)


@pytest.mark.xfail(strict=True)
def test_case_823():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_2 = var_1.__repr__()
    assert var_2 == "'\"Link(title=\\'0_~6:m!(f5FgU,:rvz\\', url=None)\"'"
    str_1 = " Use '"
    section_0 = module_0.Section(str_1, str_1)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_3 = section_0.__repr__()
    assert var_3 == 'Section(title=" Use \'")'
    int_0 = var_3.__len__()
    assert int_0 == 23
    var_4 = var_3.__repr__()
    assert var_4 == "'Section(title=\" Use \\'\")'"
    str_2 = " Use '"
    section_1 = module_0.Section(str_2, str_2)
    var_5 = section_1.__repr__()
    assert var_5 == 'Section(title=" Use \'")'
    str_3 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_3, none_type_1)
    var_6 = link_1.__repr__()
    assert var_6 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    int_1 = var_6.__len__()
    assert int_1 == 42
    str_4 = "page_context"
    section_2 = module_0.Section(str_4, str_4)
    str_5 = "' from the site because it conflicts with '"
    list_0 = []
    section_3 = module_0.Section(str_5, list_0)
    dict_0 = {}
    str_6 = 'y\x0c[fN"W:2&:SWyz~W'
    link_2 = module_0.Link(dict_0, str_6)
    section_4 = module_0.Section(str_6, str_6)
    section_5 = module_0.Section(str_6, str_6)
    str_7 = "page_context"
    section_6 = module_0.Section(str_7, str_7)
    str_8 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_3 = module_0.Link(str_8, none_type_2)
    var_7 = link_3.__repr__()
    assert var_7 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_8 = section_6.__repr__()
    assert var_8 == "Section(title='page_context')"
    str_9 = " Use '"
    section_7 = module_0.Section(str_9, str_9)
    var_9 = section_7.__repr__()
    assert var_9 == 'Section(title=" Use \'")'
    var_10 = var_9.__repr__()
    assert var_10 == "'Section(title=\" Use \\'\")'"
    dict_1 = {}
    str_10 = 'y\x0c[fN"W:2&:SWyz~W'
    link_4 = module_0.Link(dict_1, str_10)
    section_8 = module_0.Section(str_9, var_10)
    assert section_8.children == "'Section(title=\" Use \\'\")'"
    str_11 = " Use '"
    section_9 = module_0.Section(str_11, str_11)
    var_11 = section_9.__repr__()
    assert var_11 == 'Section(title=" Use \'")'
    var_12 = var_11.__repr__()
    assert var_12 == "'Section(title=\" Use \\'\")'"
    str_12 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_5 = module_0.Link(str_12, none_type_3)
    bytes_0 = b"\x802c35Z\xf8"
    link_6 = module_0.Link(link_5, bytes_0)
    var_13 = link_5.__repr__()
    assert var_13 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    iterator_0 = var_13.__iter__()
    module_0.Navigation(list_0, var_13)


@pytest.mark.xfail(strict=True)
def test_case_824():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    int_0 = var_0.__len__()
    assert int_0 == 23
    var_1 = var_0.__repr__()
    assert var_1 == "'Section(title=\" Use \\'\")'"
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_1, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    bytes_0 = b"\x802c35Z\xf8"
    link_1 = module_0.Link(link_0, bytes_0)
    var_2 = link_0.__repr__()
    assert var_2 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    module_0.Navigation(var_1, var_0)


@pytest.mark.xfail(strict=True)
def test_case_825():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    bytes_0 = b"\x802c35Z\xf8"
    link_1 = module_0.Link(link_0, bytes_0)
    dict_0 = {}
    str_1 = 'y\x0c[fN"W:2&:SWyz~W'
    link_2 = module_0.Link(dict_0, str_1)
    var_0 = link_1.__repr__()
    assert (
        var_0
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_3 = module_0.Link(str_2, none_type_1)
    var_1 = link_3.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_2 = var_1.__repr__()
    assert var_2 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_3 = var_2.__repr__()
    assert var_3 == "'\"Link(title=\\'0_~6:m!(f5FgU,:rvz\\', url=None)\"'"
    str_3 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_4 = module_0.Link(str_3, none_type_2)
    bytes_1 = b"\x802c35Z\xf8"
    link_5 = module_0.Link(link_4, bytes_1)
    str_4 = " Use '"
    section_0 = module_0.Section(str_4, str_4)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_4 = section_0.__repr__()
    assert var_4 == 'Section(title=" Use \'")'
    int_0 = var_4.__len__()
    assert int_0 == 23
    str_5 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_6 = module_0.Link(str_5, none_type_3)
    int_1 = var_4.__len__()
    assert int_1 == 23
    module_3.nest_paths(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_826():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    str_1 = "gfRsC:6&{;|"
    section_1 = module_0.Section(str_1, str_1)
    str_2 = "relative_to_docs"
    link_0 = module_0.Link(str_2, section_1)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "relative_to_docs"
    assert (
        f"{type(link_0.url).__module__}.{type(link_0.url).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    str_3 = " Use '"
    section_2 = module_0.Section(str_3, str_3)
    var_1 = section_2.__repr__()
    assert var_1 == 'Section(title=" Use \'")'
    int_0 = var_1.__len__()
    assert int_0 == 23
    str_4 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_1 = module_0.Link(str_4, none_type_0)
    int_1 = var_1.__len__()
    assert int_1 == 23
    dict_0 = {}
    str_5 = 'y\x0c[fN"W:2&:SWyz~W'
    link_2 = module_0.Link(dict_0, str_5)
    none_type_1 = None
    str_6 = "\n        Perform validation for a value.\n\n        The run_validation method should be implemented by subclasses.\n        "
    link_3 = module_0.Link(none_type_1, str_6)
    var_2 = link_3.__repr__()
    assert (
        var_2
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    str_7 = var_2.__str__()
    assert (
        str_7
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    dict_1 = {}
    str_8 = 'y\x0c[fN"W:2&:SWyz~W'
    link_4 = module_0.Link(dict_1, str_8)
    section_3 = module_0.Section(str_8, str_8)
    section_4 = module_0.Section(str_8, str_8)
    str_9 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_5 = module_0.Link(str_9, none_type_2)
    var_3 = link_5.__repr__()
    assert var_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_4 = var_3.__repr__()
    assert var_4 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_10 = var_3.__str__()
    assert str_10 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_5 = var_3.__repr__()
    assert var_5 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_11 = "page_context"
    section_5 = module_0.Section(str_11, str_11)
    str_12 = "' from the site because it conflicts with '"
    list_0 = []
    section_6 = module_0.Section(str_12, list_0)
    var_6 = section_6.__repr__()
    assert var_6 == "Section(title=\"' from the site because it conflicts with '\")"
    var_5.read_source(str_4)


@pytest.mark.xfail(strict=True)
def test_case_827():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    var_1 = var_0.__repr__()
    assert var_1 == "'Section(title=\" Use \\'\")'"
    dict_0 = {}
    str_1 = 'y\x0c[fN"W:2&:SWyz~W'
    link_0 = module_0.Link(dict_0, str_1)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == {}
    assert link_0.url == 'y\x0c[fN"W:2&:SWyz~W'
    section_1 = module_0.Section(str_0, var_1)
    assert section_1.children == "'Section(title=\" Use \\'\")'"
    str_2 = " Use '"
    section_2 = module_0.Section(str_2, str_2)
    var_2 = section_2.__repr__()
    assert var_2 == 'Section(title=" Use \'")'
    var_3 = var_2.__repr__()
    assert var_3 == "'Section(title=\" Use \\'\")'"
    module_0.get_navigation(var_2, var_3)


@pytest.mark.xfail(strict=True)
def test_case_828():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    str_1 = " Use '"
    section_0 = module_0.Section(str_1, str_1)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    str_2 = "gfRsC:6&{;|"
    section_1 = module_0.Section(str_2, str_2)
    str_3 = "relative_to_docs"
    link_1 = module_0.Link(str_3, section_1)
    str_4 = "gfRsC:6&{;|"
    section_2 = module_0.Section(str_4, str_4)
    var_1 = section_2.__repr__()
    assert var_1 == "Section(title='gfRsC:6&{;|')"
    module_0.get_navigation(none_type_0, section_0)


@pytest.mark.xfail(strict=True)
def test_case_829():
    dict_0 = {}
    str_0 = 'y\x0c[fN"W:2&:SWyz~W'
    link_0 = module_0.Link(dict_0, str_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == {}
    assert link_0.url == 'y\x0c[fN"W:2&:SWyz~W'
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == 'y\x0c[fN"W:2&:SWyz~W'
    assert section_0.children == 'y\x0c[fN"W:2&:SWyz~W'
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_1 = module_0.Link(str_1, none_type_0)
    var_0 = link_1.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_2 = " Use '"
    section_1 = module_0.Section(str_2, str_2)
    var_2 = section_1.__repr__()
    assert var_2 == 'Section(title=" Use \'")'
    var_3 = var_2.__repr__()
    assert var_3 == "'Section(title=\" Use \\'\")'"
    dict_1 = {}
    str_3 = 'y\x0c[fN"W:2&:SWyz~W'
    link_2 = module_0.Link(dict_1, str_3)
    section_2 = module_0.Section(str_2, var_3)
    assert section_2.children == "'Section(title=\" Use \\'\")'"
    str_4 = " Use '"
    section_3 = module_0.Section(str_4, str_4)
    var_4 = section_3.__repr__()
    assert var_4 == 'Section(title=" Use \'")'
    var_5 = var_4.__repr__()
    assert var_5 == "'Section(title=\" Use \\'\")'"
    str_5 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_3 = module_0.Link(str_5, none_type_1)
    bytes_0 = b"\x802c35Z\xf8"
    link_4 = module_0.Link(link_3, bytes_0)
    var_6 = link_3.__repr__()
    assert var_6 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    iterator_0 = var_6.__iter__()
    str_6 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_5 = module_0.Link(str_6, none_type_2)
    str_7 = " Use '"
    section_4 = module_0.Section(str_7, str_7)
    var_7 = section_4.__repr__()
    assert var_7 == 'Section(title=" Use \'")'
    str_8 = 'C5B_`:"E&+;Y['
    link_6 = module_0.Link(str_8, str_8)
    int_0 = var_7.__len__()
    assert int_0 == 23
    str_9 = " Use '"
    section_5 = module_0.Section(str_9, str_9)
    var_8 = section_5.__repr__()
    assert var_8 == 'Section(title=" Use \'")'
    str_10 = "gfRsC:6&{;|"
    section_6 = module_0.Section(str_10, str_10)
    var_9 = section_6.__repr__()
    assert var_9 == "Section(title='gfRsC:6&{;|')"
    bytes_1 = b"# "
    module_3.nest_paths(bytes_1)


@pytest.mark.xfail(strict=True)
def test_case_830():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    var_1 = var_0.__repr__()
    assert var_1 == "'Section(title=\" Use \\'\")'"
    dict_0 = {}
    str_1 = 'y\x0c[fN"W:2&:SWyz~W'
    link_0 = module_0.Link(dict_0, str_1)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == {}
    assert link_0.url == 'y\x0c[fN"W:2&:SWyz~W'
    section_1 = module_0.Section(str_0, var_1)
    assert section_1.children == "'Section(title=\" Use \\'\")'"
    str_2 = 'C5B_`:"E&+;Y['
    link_1 = module_0.Link(str_2, str_2)
    str_3 = "page_context"
    section_2 = module_0.Section(str_3, str_3)
    str_4 = "' from the site because it conflicts with '"
    list_0 = []
    section_3 = module_0.Section(str_4, list_0)
    var_2 = section_3.__repr__()
    assert var_2 == "Section(title=\"' from the site because it conflicts with '\")"
    section_4 = module_0.Section(str_4, section_2)
    int_0 = var_2.__len__()
    assert int_0 == 60
    str_5 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_2 = module_0.Link(str_5, none_type_0)
    var_3 = link_2.__repr__()
    assert var_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_4 = var_3.__repr__()
    assert var_4 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_5 = var_3.__repr__()
    assert var_5 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    dict_1 = {}
    str_6 = 'y\x0c[fN"W:2&:SWyz~W'
    link_3 = module_0.Link(dict_1, str_6)
    module_2.file_sort_key(str_4)


@pytest.mark.xfail(strict=True)
def test_case_831():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    int_0 = var_0.__len__()
    assert int_0 == 23
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_1, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    int_1 = var_0.__len__()
    assert int_1 == 23
    str_2 = "page_context"
    section_1 = module_0.Section(str_2, str_2)
    str_3 = "' from the site because it conflicts with '"
    list_0 = []
    section_2 = module_0.Section(str_3, list_0)
    var_1 = section_1.__repr__()
    assert var_1 == "Section(title='page_context')"
    str_4 = "$9.}1Av5,.}"
    link_1 = module_0.Link(str_4, str_4)
    str_5 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_2 = module_0.Link(str_5, none_type_1)
    var_2 = link_2.__repr__()
    assert var_2 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_3 = var_2.__repr__()
    assert var_3 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_6 = " Use '"
    section_3 = module_0.Section(str_6, str_6)
    var_4 = section_3.__repr__()
    assert var_4 == 'Section(title=" Use \'")'
    var_5 = var_4.__repr__()
    assert var_5 == "'Section(title=\" Use \\'\")'"
    dict_0 = {}
    str_7 = 'y\x0c[fN"W:2&:SWyz~W'
    link_3 = module_0.Link(dict_0, str_7)
    section_4 = module_0.Section(str_6, var_5)
    assert section_4.children == "'Section(title=\" Use \\'\")'"
    str_8 = "page_context"
    section_5 = module_0.Section(str_8, str_8)
    str_9 = "' from the site because it conflicts with '"
    list_1 = []
    section_6 = module_0.Section(str_9, list_1)
    str_10 = "localhost"
    link_4 = module_0.Link(str_9, str_10)
    str_11 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_5 = module_0.Link(str_11, none_type_2)
    bytes_0 = b"\x802c35Z\xf8"
    link_6 = module_0.Link(link_5, bytes_0)
    var_6 = link_5.__repr__()
    assert var_6 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    int_2 = var_6.__len__()
    assert int_2 == 42
    dict_1 = {}
    str_12 = 'y\x0c[fN"W:2&:SWyz~W'
    link_7 = module_0.Link(dict_1, str_12)
    section_7 = module_0.Section(str_12, str_12)
    section_8 = module_0.Section(str_12, str_12)
    module_0.Navigation(int_2, var_3)


@pytest.mark.xfail(strict=True)
def test_case_832():
    bool_0 = False
    module_2.file_sort_key(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_833():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_1 = var_0.__str__()
    assert str_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_2 = var_0.__repr__()
    assert var_2 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_2 = "page_context"
    section_0 = module_0.Section(str_2, str_2)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_3 = "' from the site because it conflicts with '"
    list_0 = []
    section_1 = module_0.Section(str_3, list_0)
    var_3 = section_1.__repr__()
    assert var_3 == "Section(title=\"' from the site because it conflicts with '\")"
    section_2 = module_0.Section(str_3, section_0)
    str_4 = " Use '"
    section_3 = module_0.Section(str_4, str_4)
    var_4 = section_3.__repr__()
    assert var_4 == 'Section(title=" Use \'")'
    int_0 = var_4.__len__()
    assert int_0 == 23
    str_5 = " Use '"
    section_4 = module_0.Section(str_5, str_5)
    var_5 = section_4.__repr__()
    assert var_5 == 'Section(title=" Use \'")'
    int_1 = var_5.__len__()
    assert int_1 == 23
    section_5 = module_0.Section(var_5, int_1)
    assert section_5.title == 'Section(title=" Use \'")'
    assert section_5.children == 23
    str_6 = "$9.}1Av5,.}"
    link_1 = module_0.Link(str_6, str_6)
    str_7 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_2 = module_0.Link(str_7, none_type_1)
    str_8 = "page_context"
    section_6 = module_0.Section(str_8, str_8)
    str_9 = "' from the site because it conflicts with '"
    list_1 = []
    section_7 = module_0.Section(str_9, list_1)
    str_10 = "localhost"
    link_3 = module_0.Link(str_9, str_10)
    list_2 = [link_1, str_1, str_2]
    module_0.Navigation(list_2, var_5)


@pytest.mark.xfail(strict=True)
def test_case_834():
    str_0 = "gfRsC:6&{;|"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "gfRsC:6&{;|"
    assert section_0.children == "gfRsC:6&{;|"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_1, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    bytes_0 = b"\x802c35Z\xf8"
    link_1 = module_0.Link(link_0, bytes_0)
    dict_0 = {}
    str_2 = 'y\x0c[fN"W:2&:SWyz~W'
    link_2 = module_0.Link(dict_0, str_2)
    var_0 = link_1.__repr__()
    assert (
        var_0
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )
    str_3 = " Use '"
    section_1 = module_0.Section(str_3, str_3)
    var_1 = section_1.__repr__()
    assert var_1 == 'Section(title=" Use \'")'
    str_4 = "gfRsC:6&{;|"
    section_2 = module_0.Section(str_4, str_4)
    str_5 = "relative_to_docs"
    link_3 = module_0.Link(str_5, section_2)
    section_3 = module_0.Section(section_1, var_1)
    assert section_3.children == 'Section(title=" Use \'")'
    str_6 = " Use '"
    section_4 = module_0.Section(str_6, str_6)
    var_2 = section_4.__repr__()
    assert var_2 == 'Section(title=" Use \'")'
    var_3 = var_2.__repr__()
    assert var_3 == "'Section(title=\" Use \\'\")'"
    str_7 = "gfRsC:6&{;|"
    section_5 = module_0.Section(str_7, str_7)
    str_8 = " Use '"
    section_6 = module_0.Section(str_8, str_8)
    var_4 = section_6.__repr__()
    assert var_4 == 'Section(title=" Use \'")'
    int_0 = var_4.__len__()
    assert int_0 == 23
    var_5 = var_4.__repr__()
    assert var_5 == "'Section(title=\" Use \\'\")'"
    var_6 = var_5.__repr__()
    assert var_6 == "'\\'Section(title=\" Use \\\\\\'\")\\''"
    str_9 = "page_context"
    section_7 = module_0.Section(str_9, str_9)
    str_10 = "' from the site because it conflicts with '"
    list_0 = []
    section_8 = module_0.Section(str_10, list_0)
    dict_1 = {}
    str_11 = 'y\x0c[fN"W:2&:SWyz~W'
    link_4 = module_0.Link(dict_1, str_11)
    section_9 = module_0.Section(str_11, str_11)
    section_10 = module_0.Section(str_11, str_11)
    module_0.get_navigation(var_4, str_4)


@pytest.mark.xfail(strict=True)
def test_case_835():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    str_1 = 'C5B_`:"E&+;Y['
    link_0 = module_0.Link(str_1, str_1)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == 'C5B_`:"E&+;Y['
    assert link_0.url == 'C5B_`:"E&+;Y['
    int_0 = var_0.__len__()
    assert int_0 == 23
    str_2 = "$9.}1Av5,.}"
    link_1 = module_0.Link(str_2, str_2)
    var_1 = var_0.__repr__()
    assert var_1 == "'Section(title=\" Use \\'\")'"
    str_3 = " Use '"
    section_1 = module_0.Section(str_3, str_3)
    var_2 = section_1.__repr__()
    assert var_2 == 'Section(title=" Use \'")'
    var_3 = var_2.__repr__()
    assert var_3 == "'Section(title=\" Use \\'\")'"
    var_4 = var_2.__repr__()
    assert var_4 == "'Section(title=\" Use \\'\")'"
    str_4 = " Use '"
    section_2 = module_0.Section(str_4, str_4)
    var_5 = section_2.__repr__()
    assert var_5 == 'Section(title=" Use \'")'
    str_5 = "gfRsC:6&{;|"
    section_3 = module_0.Section(str_5, str_5)
    str_6 = "relative_to_docs"
    link_2 = module_0.Link(str_6, section_3)
    str_7 = "page_context"
    section_4 = module_0.Section(str_7, str_7)
    str_8 = "' from the site because it conflicts with '"
    list_0 = []
    section_5 = module_0.Section(str_8, list_0)
    str_9 = " Use '"
    section_6 = module_0.Section(str_9, str_9)
    var_6 = section_6.__repr__()
    assert var_6 == 'Section(title=" Use \'")'
    int_1 = var_6.__len__()
    assert int_1 == 23
    var_7 = var_6.__repr__()
    assert var_7 == "'Section(title=\" Use \\'\")'"
    str_10 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_3 = module_0.Link(str_10, none_type_0)
    var_8 = link_3.__repr__()
    assert var_8 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_9 = var_8.__repr__()
    assert var_9 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_10 = var_8.__repr__()
    assert var_10 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_11 = "gfRsC:6&{;|"
    section_7 = module_0.Section(str_11, str_11)
    str_12 = " Use '"
    section_8 = module_0.Section(str_12, str_12)
    var_11 = section_8.__repr__()
    assert var_11 == 'Section(title=" Use \'")'
    int_2 = var_11.__len__()
    assert int_2 == 23
    var_12 = var_11.__repr__()
    assert var_12 == "'Section(title=\" Use \\'\")'"
    var_13 = var_12.__repr__()
    assert var_13 == "'\\'Section(title=\" Use \\\\\\'\")\\''"
    str_13 = " Use '"
    section_9 = module_0.Section(str_13, str_13)
    var_14 = section_9.__repr__()
    assert var_14 == 'Section(title=" Use \'")'
    str_14 = "gfRsC:6&{;|"
    section_10 = module_0.Section(str_14, str_14)
    str_15 = "relative_to_docs"
    link_4 = module_0.Link(str_15, section_10)
    section_11 = module_0.Section(section_9, var_14)
    assert section_11.children == 'Section(title=" Use \'")'
    str_16 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_5 = module_0.Link(str_16, none_type_1)
    var_15 = link_5.__repr__()
    assert var_15 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_16 = var_15.__repr__()
    assert var_16 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    iterator_0 = var_15.__iter__()
    module_3.nest_paths(section_8)


@pytest.mark.xfail(strict=True)
def test_case_836():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_1, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    bytes_0 = b"\x802c35Z\xf8"
    link_1 = module_0.Link(link_0, bytes_0)
    iterator_0 = var_0.__iter__()
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_2 = module_0.Link(str_2, none_type_1)
    var_1 = link_2.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_2 = var_1.__repr__()
    assert var_2 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_3 = var_2.__repr__()
    assert var_3 == "'\"Link(title=\\'0_~6:m!(f5FgU,:rvz\\', url=None)\"'"
    str_3 = "page_context"
    section_1 = module_0.Section(str_3, str_3)
    str_4 = "' from the site because it conflicts with '"
    list_0 = []
    section_2 = module_0.Section(str_4, list_0)
    var_4 = section_2.__repr__()
    assert var_4 == "Section(title=\"' from the site because it conflicts with '\")"
    section_3 = module_0.Section(str_4, section_1)
    int_0 = var_4.__len__()
    assert int_0 == 60
    str_5 = " Use '"
    section_4 = module_0.Section(str_5, str_5)
    var_5 = section_4.__repr__()
    assert var_5 == 'Section(title=" Use \'")'
    int_1 = var_5.__len__()
    assert int_1 == 23
    section_5 = module_0.Section(var_5, int_1)
    assert section_5.title == 'Section(title=" Use \'")'
    assert section_5.children == 23
    none_type_2 = None
    str_6 = "\n        Perform validation for a value.\n\n        The run_validation method should be implemented by subclasses.\n        "
    link_3 = module_0.Link(none_type_2, str_6)
    var_6 = link_3.__repr__()
    assert (
        var_6
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    str_7 = var_6.__str__()
    assert (
        str_7
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    str_8 = "page_context"
    section_6 = module_0.Section(str_8, str_8)
    str_9 = "' from the site because it conflicts with '"
    list_1 = []
    section_7 = module_0.Section(str_9, list_1)
    str_10 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_4 = module_0.Link(str_10, none_type_3)
    var_7 = link_4.__repr__()
    assert var_7 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_8 = var_7.__repr__()
    assert var_8 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_9 = var_7.__repr__()
    assert var_9 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_11 = "page_context"
    section_8 = module_0.Section(str_11, str_11)
    str_12 = "' from the site because it conflicts with '"
    list_2 = []
    section_9 = module_0.Section(str_12, list_2)
    str_13 = "localhost"
    link_5 = module_0.Link(str_12, str_13)
    dict_0 = {}
    str_14 = 'y\x0c[fN"W:2&:SWyz~W'
    link_6 = module_0.Link(dict_0, str_14)
    section_10 = module_0.Section(str_14, str_14)
    section_11 = module_0.Section(str_14, str_14)
    module_0.Navigation(list_1, var_3)


@pytest.mark.xfail(strict=True)
def test_case_837():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    bytes_0 = b"\x802c35Z\xf8"
    link_1 = module_0.Link(link_0, bytes_0)
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    iterator_0 = var_0.__iter__()
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_2 = module_0.Link(str_1, none_type_1)
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_3 = module_0.Link(str_2, none_type_2)
    bytes_1 = b"\x802c35Z\xf8"
    link_4 = module_0.Link(link_3, bytes_1)
    str_3 = "page_context"
    section_0 = module_0.Section(str_3, str_3)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_4 = "' from the site because it conflicts with '"
    list_0 = []
    section_1 = module_0.Section(str_4, list_0)
    var_1 = section_1.__repr__()
    assert var_1 == "Section(title=\"' from the site because it conflicts with '\")"
    section_2 = module_0.Section(str_4, section_0)
    int_0 = var_1.__len__()
    assert int_0 == 60
    str_5 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_5 = module_0.Link(str_5, none_type_3)
    var_2 = link_5.__repr__()
    assert var_2 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_3 = var_2.__repr__()
    assert var_3 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    iterator_1 = var_2.__iter__()
    str_6 = " Use '"
    section_3 = module_0.Section(str_6, str_6)
    var_4 = section_3.__repr__()
    assert var_4 == 'Section(title=" Use \'")'
    var_5 = var_4.__repr__()
    assert var_5 == "'Section(title=\" Use \\'\")'"
    var_6 = var_4.__repr__()
    assert var_6 == "'Section(title=\" Use \\'\")'"
    str_7 = " Use '"
    section_4 = module_0.Section(str_7, str_7)
    var_7 = section_4.__repr__()
    assert var_7 == 'Section(title=" Use \'")'
    int_1 = var_7.__len__()
    assert int_1 == 23
    var_8 = var_7.__repr__()
    assert var_8 == "'Section(title=\" Use \\'\")'"
    str_8 = "$9.}1Av5,.}"
    link_6 = module_0.Link(str_8, str_8)
    str_9 = "page_context"
    section_5 = module_0.Section(str_9, str_9)
    str_10 = "' from the site because it conflicts with '"
    list_1 = []
    section_6 = module_0.Section(str_10, list_1)
    str_11 = "localhost"
    link_7 = module_0.Link(str_10, str_11)
    str_12 = "gfRsC:6&{;|"
    section_7 = module_0.Section(str_12, str_12)
    str_13 = "0_~6:m!(f5FgU,:rvz"
    none_type_4 = None
    link_8 = module_0.Link(str_13, none_type_4)
    var_9 = link_8.__repr__()
    assert var_9 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_10 = var_9.__repr__()
    assert var_10 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_11 = var_9.__repr__()
    assert var_11 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_12 = link_8.__repr__()
    assert var_12 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    module_0.Navigation(str_12, var_6)


@pytest.mark.xfail(strict=True)
def test_case_838():
    str_0 = "$9.}1Av5,.}"
    link_0 = module_0.Link(str_0, str_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "$9.}1Av5,.}"
    assert link_0.url == "$9.}1Av5,.}"
    str_1 = " Use '"
    section_0 = module_0.Section(str_1, str_1)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    int_0 = var_0.__len__()
    assert int_0 == 23
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_1 = module_0.Link(str_2, none_type_0)
    int_1 = var_0.__len__()
    assert int_1 == 23
    str_3 = " Use '"
    section_1 = module_0.Section(str_3, str_3)
    var_1 = section_1.__repr__()
    assert var_1 == 'Section(title=" Use \'")'
    int_2 = var_1.__len__()
    assert int_2 == 23
    var_2 = var_1.__repr__()
    assert var_2 == "'Section(title=\" Use \\'\")'"
    str_4 = 'C5B_`:"E&+;Y['
    link_2 = module_0.Link(str_4, str_4)
    str_5 = "page_context"
    section_2 = module_0.Section(str_5, str_5)
    str_6 = "' from the site because it conflicts with '"
    list_0 = []
    section_3 = module_0.Section(str_6, list_0)
    var_3 = section_3.__repr__()
    assert var_3 == "Section(title=\"' from the site because it conflicts with '\")"
    section_4 = module_0.Section(str_6, section_2)
    int_3 = var_3.__len__()
    assert int_3 == 60
    str_7 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_3 = module_0.Link(str_7, none_type_1)
    bytes_0 = b"\x802c35Z\xf8"
    link_4 = module_0.Link(link_3, bytes_0)
    var_4 = link_3.__repr__()
    assert var_4 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    iterator_0 = var_4.__iter__()
    dict_0 = {}
    str_8 = 'y\x0c[fN"W:2&:SWyz~W'
    link_5 = module_0.Link(dict_0, str_8)
    section_5 = module_0.Section(str_8, str_8)
    str_9 = " Use '"
    section_6 = module_0.Section(str_9, str_9)
    var_5 = section_6.__repr__()
    assert var_5 == 'Section(title=" Use \'")'
    str_10 = 'C5B_`:"E&+;Y['
    link_6 = module_0.Link(str_10, str_10)
    int_4 = var_5.__len__()
    assert int_4 == 23
    str_11 = "$9.}1Av5,.}"
    link_7 = module_0.Link(str_11, str_11)
    var_6 = var_5.__repr__()
    assert var_6 == "'Section(title=\" Use \\'\")'"
    str_12 = " Use '"
    section_7 = module_0.Section(str_12, str_12)
    var_7 = section_7.__repr__()
    assert var_7 == 'Section(title=" Use \'")'
    var_8 = var_7.__repr__()
    assert var_8 == "'Section(title=\" Use \\'\")'"
    var_9 = var_7.__repr__()
    assert var_9 == "'Section(title=\" Use \\'\")'"
    module_2.file_sort_key(var_3)


@pytest.mark.xfail(strict=True)
def test_case_839():
    bool_0 = True
    module_2.file_sort_key(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_840():
    bool_0 = True
    module_0.get_navigation(bool_0, bool_0)


@pytest.mark.xfail(strict=True)
def test_case_841():
    dict_0 = {}
    str_0 = 'y\x0c[fN"W:2&:SWyz~W'
    link_0 = module_0.Link(dict_0, str_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == {}
    assert link_0.url == 'y\x0c[fN"W:2&:SWyz~W'
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == 'y\x0c[fN"W:2&:SWyz~W'
    assert section_0.children == 'y\x0c[fN"W:2&:SWyz~W'
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    module_0.get_navigation(str_0, section_0)


@pytest.mark.xfail(strict=True)
def test_case_842():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    str_1 = 'C5B_`:"E&+;Y['
    link_0 = module_0.Link(str_1, str_1)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == 'C5B_`:"E&+;Y['
    assert link_0.url == 'C5B_`:"E&+;Y['
    int_0 = var_0.__len__()
    assert int_0 == 23
    str_2 = "$9.}1Av5,.}"
    link_1 = module_0.Link(str_2, str_2)
    var_1 = var_0.__repr__()
    assert var_1 == "'Section(title=\" Use \\'\")'"
    none_type_0 = None
    section_1 = module_0.Section(none_type_0, none_type_0)
    str_3 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_2 = module_0.Link(str_3, none_type_1)
    var_2 = link_2.__repr__()
    assert var_2 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_3 = var_2.__repr__()
    assert var_3 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_4 = var_2.__repr__()
    assert var_4 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_4 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_3 = module_0.Link(str_4, none_type_2)
    str_5 = " Use '"
    section_2 = module_0.Section(str_5, str_5)
    var_5 = section_2.__repr__()
    assert var_5 == 'Section(title=" Use \'")'
    var_6 = var_5.__repr__()
    assert var_6 == "'Section(title=\" Use \\'\")'"
    str_6 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_4 = module_0.Link(str_6, none_type_3)
    var_7 = link_4.__repr__()
    assert var_7 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_8 = var_7.__repr__()
    assert var_8 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    iterator_0 = var_7.__iter__()
    module_0.get_navigation(var_4, section_0)


@pytest.mark.xfail(strict=True)
def test_case_843():
    complex_0 = 2609.016 + 2231.51j
    module_0.get_navigation(complex_0, complex_0)


@pytest.mark.xfail(strict=True)
def test_case_844():
    int_0 = -4403
    set_0 = {int_0}
    module_3.nest_paths(set_0)


@pytest.mark.xfail(strict=True)
def test_case_845():
    str_0 = "gfRsC:6&{;|"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "gfRsC:6&{;|"
    assert section_0.children == "gfRsC:6&{;|"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == "Section(title='gfRsC:6&{;|')"
    str_1 = " Use '"
    section_1 = module_0.Section(str_1, str_1)
    var_1 = section_1.__repr__()
    assert var_1 == 'Section(title=" Use \'")'
    str_2 = 'C5B_`:"E&+;Y['
    link_0 = module_0.Link(str_2, str_2)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == 'C5B_`:"E&+;Y['
    assert link_0.url == 'C5B_`:"E&+;Y['
    int_0 = var_1.__len__()
    assert int_0 == 23
    str_3 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_1 = module_0.Link(str_3, none_type_0)
    var_2 = link_1.__repr__()
    assert var_2 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_3 = var_2.__repr__()
    assert var_3 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_4 = var_2.__str__()
    assert str_4 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_4 = var_2.__repr__()
    assert var_4 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_5 = " Use '"
    section_2 = module_0.Section(str_5, str_5)
    var_5 = section_2.__repr__()
    assert var_5 == 'Section(title=" Use \'")'
    var_6 = var_5.__repr__()
    assert var_6 == "'Section(title=\" Use \\'\")'"
    dict_0 = {}
    str_6 = 'y\x0c[fN"W:2&:SWyz~W'
    link_2 = module_0.Link(dict_0, str_6)
    section_3 = module_0.Section(str_5, var_6)
    assert section_3.children == "'Section(title=\" Use \\'\")'"
    str_7 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_3 = module_0.Link(str_7, none_type_1)
    var_7 = link_3.__repr__()
    assert var_7 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    none_type_2 = None
    section_4 = module_0.Section(none_type_2, none_type_2)
    str_8 = "page_context"
    section_5 = module_0.Section(str_8, str_8)
    str_9 = "' from the site because it conflicts with '"
    list_0 = []
    section_6 = module_0.Section(str_9, list_0)
    str_10 = "localhost"
    link_4 = module_0.Link(str_9, str_10)
    str_11 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_5 = module_0.Link(str_11, none_type_3)
    var_8 = link_5.__repr__()
    assert var_8 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_9 = var_8.__repr__()
    assert var_9 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_10 = var_8.__repr__()
    assert var_10 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_12 = " Use '"
    section_7 = module_0.Section(str_12, str_12)
    var_11 = section_7.__repr__()
    assert var_11 == 'Section(title=" Use \'")'
    str_13 = "0_~6:m!(f5FgU,:rvz"
    none_type_4 = None
    link_6 = module_0.Link(str_13, none_type_4)
    bytes_0 = b"\x802c35Z\xf8"
    link_7 = module_0.Link(link_6, bytes_0)
    iterator_0 = var_11.__iter__()
    str_14 = "0_~6:m!(f5FgU,:rvz"
    none_type_5 = None
    link_8 = module_0.Link(str_14, none_type_5)
    bytes_1 = b"\x802c35Z\xf8"
    link_9 = module_0.Link(link_8, bytes_1)
    var_12 = link_8.__repr__()
    assert var_12 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_13 = var_12.__repr__()
    assert var_13 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    module_0.get_navigation(none_type_0, link_3)


@pytest.mark.xfail(strict=True)
def test_case_846():
    none_type_0 = None
    module_2.file_sort_key(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_847():
    float_0 = 2115.413364
    module_1.urlsplit(float_0)


@pytest.mark.xfail(strict=True)
def test_case_848():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    section_1 = module_0.Section(str_0, var_0)
    assert section_1.children == 'Section(title=" Use \'")'
    module_0.get_navigation(str_0, section_0)


@pytest.mark.xfail(strict=True)
def test_case_849():
    str_0 = "$9.}1Av5,.}"
    link_0 = module_0.Link(str_0, str_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "$9.}1Av5,.}"
    assert link_0.url == "$9.}1Av5,.}"
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_1 = module_0.Link(str_1, none_type_0)
    var_0 = link_1.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_2 = var_1.__repr__()
    assert var_2 == "'\"Link(title=\\'0_~6:m!(f5FgU,:rvz\\', url=None)\"'"
    bool_0 = True
    link_2 = module_0.Link(bool_0, bool_0)
    str_2 = "gfRsC:6&{;|"
    section_0 = module_0.Section(str_2, str_2)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "gfRsC:6&{;|"
    assert section_0.children == "gfRsC:6&{;|"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_3 = section_0.__repr__()
    assert var_3 == "Section(title='gfRsC:6&{;|')"
    str_3 = "gfRsC:6&{;|"
    section_1 = module_0.Section(str_3, str_3)
    str_4 = " Use '"
    section_2 = module_0.Section(str_4, str_4)
    var_4 = section_2.__repr__()
    assert var_4 == 'Section(title=" Use \'")'
    int_0 = var_4.__len__()
    assert int_0 == 23
    var_5 = var_4.__repr__()
    assert var_5 == "'Section(title=\" Use \\'\")'"
    var_6 = var_5.__repr__()
    assert var_6 == "'\\'Section(title=\" Use \\\\\\'\")\\''"
    str_5 = " Use '"
    section_3 = module_0.Section(str_5, str_5)
    var_7 = section_3.__repr__()
    assert var_7 == 'Section(title=" Use \'")'
    var_8 = var_7.__repr__()
    assert var_8 == "'Section(title=\" Use \\'\")'"
    none_type_1 = None
    str_6 = "\n        Perform validation for a value.\n\n        The run_validation method should be implemented by subclasses.\n        "
    link_3 = module_0.Link(none_type_1, str_6)
    var_9 = link_3.__repr__()
    assert (
        var_9
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    str_7 = var_9.__str__()
    assert (
        str_7
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    str_8 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_4 = module_0.Link(str_8, none_type_2)
    var_10 = link_4.__repr__()
    assert var_10 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_11 = var_10.__repr__()
    assert var_11 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_12 = var_11.__repr__()
    assert var_12 == "'\"Link(title=\\'0_~6:m!(f5FgU,:rvz\\', url=None)\"'"
    str_9 = " Use '"
    section_4 = module_0.Section(str_9, str_9)
    var_13 = section_4.__repr__()
    assert var_13 == 'Section(title=" Use \'")'
    int_1 = var_13.__len__()
    assert int_1 == 23
    str_10 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_5 = module_0.Link(str_10, none_type_3)
    int_2 = var_13.__len__()
    assert int_2 == 23
    module_0.Navigation(var_8, var_12)


@pytest.mark.xfail(strict=True)
def test_case_850():
    str_0 = "gfRsC:6&{;|"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "gfRsC:6&{;|"
    assert section_0.children == "gfRsC:6&{;|"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_1, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_2 = var_0.__repr__()
    assert var_2 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_3 = link_0.__repr__()
    assert var_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_2, none_type_1)
    var_4 = link_1.__repr__()
    assert var_4 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_5 = var_4.__repr__()
    assert var_5 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_3 = var_4.__str__()
    assert str_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    module_0.Navigation(var_0, var_1)


@pytest.mark.xfail(strict=True)
def test_case_851():
    str_0 = "page_context"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = "' from the site because it conflicts with '"
    list_0 = []
    section_1 = module_0.Section(str_1, list_0)
    section_2 = module_0.Section(section_1, list_0)
    none_type_0 = None
    module_0.get_navigation(none_type_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_852():
    str_0 = "page_context"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = "gfRsC:6&{;|"
    section_1 = module_0.Section(str_1, str_1)
    str_2 = 'C5B_`:"E&+;Y['
    link_0 = module_0.Link(str_2, str_2)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == 'C5B_`:"E&+;Y['
    assert link_0.url == 'C5B_`:"E&+;Y['
    str_3 = " Use '"
    section_2 = module_0.Section(str_3, str_3)
    var_0 = section_2.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    section_3 = module_0.Section(str_3, var_0)
    assert section_3.children == 'Section(title=" Use \'")'
    str_4 = " Use '"
    section_4 = module_0.Section(str_4, str_4)
    var_1 = section_4.__repr__()
    assert var_1 == 'Section(title=" Use \'")'
    int_0 = var_1.__len__()
    assert int_0 == 23
    section_5 = module_0.Section(var_1, int_0)
    assert section_5.title == 'Section(title=" Use \'")'
    assert section_5.children == 23
    list_0 = [str_1]
    module_0.get_navigation(str_1, list_0)


@pytest.mark.xfail(strict=True)
def test_case_853():
    dict_0 = {}
    str_0 = 'y\x0c[fN"W:2&:SWyz~W'
    link_0 = module_0.Link(dict_0, str_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == {}
    assert link_0.url == 'y\x0c[fN"W:2&:SWyz~W'
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == 'y\x0c[fN"W:2&:SWyz~W'
    assert section_0.children == 'y\x0c[fN"W:2&:SWyz~W'
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = "$9.}1Av5,.}"
    link_1 = module_0.Link(str_1, str_1)
    base_exception_0 = module_7.BaseException()
    module_2.file_sort_key(base_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_854():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    int_0 = var_0.__len__()
    assert int_0 == 23
    dict_0 = {}
    str_1 = 'y\x0c[fN"W:2&:SWyz~W'
    link_0 = module_0.Link(dict_0, str_1)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == {}
    assert link_0.url == 'y\x0c[fN"W:2&:SWyz~W'
    section_1 = module_0.Section(str_1, str_1)
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_1 = module_0.Link(str_2, none_type_0)
    bytes_0 = b"\x802c35Z\xf8"
    link_2 = module_0.Link(link_1, bytes_0)
    var_1 = link_1.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_2 = var_1.__repr__()
    assert var_2 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    none_type_1 = None
    section_2 = module_0.Section(none_type_1, none_type_1)
    module_0.get_navigation(var_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_855():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_2 = var_0.__repr__()
    assert var_2 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_1 = "page_context"
    section_0 = module_0.Section(str_1, str_1)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_2 = "' from the site because it conflicts with '"
    list_0 = []
    section_1 = module_0.Section(str_2, list_0)
    str_3 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_3, none_type_1)
    bytes_0 = b"\x802c35Z\xf8"
    link_2 = module_0.Link(link_1, bytes_0)
    var_3 = link_1.__repr__()
    assert var_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_4 = var_3.__repr__()
    assert var_4 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_4 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_3 = module_0.Link(str_4, none_type_2)
    bytes_1 = b"\x802c35Z\xf8"
    link_4 = module_0.Link(link_3, bytes_1)
    dict_0 = {}
    str_5 = 'y\x0c[fN"W:2&:SWyz~W'
    link_5 = module_0.Link(dict_0, str_5)
    var_5 = link_4.__repr__()
    assert (
        var_5
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )
    none_type_3 = None
    str_6 = "\n        Perform validation for a value.\n\n        The run_validation method should be implemented by subclasses.\n        "
    link_6 = module_0.Link(none_type_3, str_6)
    var_6 = link_6.__repr__()
    assert (
        var_6
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    str_7 = var_6.__str__()
    assert (
        str_7
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    str_8 = "0_~6:m!(f5FgU,:rvz"
    none_type_4 = None
    link_7 = module_0.Link(str_8, none_type_4)
    var_7 = link_7.__repr__()
    assert var_7 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_8 = var_7.__repr__()
    assert var_8 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_9 = var_7.__str__()
    assert str_9 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_10 = 'C5B_`:"E&+;Y['
    link_8 = module_0.Link(str_10, str_10)
    int_0 = var_7.__len__()
    assert int_0 == 42
    none_type_5 = None
    str_11 = "\n        Perform validation for a value.\n\n        The run_validation method should be implemented by subclasses.\n        "
    link_9 = module_0.Link(none_type_5, str_11)
    var_9 = link_9.__repr__()
    assert (
        var_9
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    str_12 = var_9.__str__()
    assert (
        str_12
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    bool_0 = True
    link_10 = module_0.Link(bool_0, bool_0)
    var_10 = var_9.__repr__()
    assert (
        var_10
        == "\"Link(title=[blank], url='\\\\n        Perform validation for a value.\\\\n\\\\n        The run_validation method should be implemented by subclasses.\\\\n        ')\""
    )
    module_0.Navigation(var_9, var_10)


@pytest.mark.xfail(strict=True)
def test_case_856():
    none_type_0 = None
    str_0 = "\n        Perform validation for a value.\n\n        The run_validation method should be implemented by subclasses.\n        "
    link_0 = module_0.Link(none_type_0, str_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title is None
    assert (
        link_0.url
        == "\n        Perform validation for a value.\n\n        The run_validation method should be implemented by subclasses.\n        "
    )
    var_0 = link_0.__repr__()
    assert (
        var_0
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    str_1 = var_0.__str__()
    assert (
        str_1
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_2, none_type_1)
    bytes_0 = b"\x802c35Z\xf8"
    link_2 = module_0.Link(link_1, bytes_0)
    dict_0 = {}
    str_3 = 'y\x0c[fN"W:2&:SWyz~W'
    link_3 = module_0.Link(dict_0, str_3)
    var_1 = link_2.__repr__()
    assert (
        var_1
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )
    str_4 = " Use '"
    section_0 = module_0.Section(str_4, str_4)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_2 = section_0.__repr__()
    assert var_2 == 'Section(title=" Use \'")'
    str_5 = 'C5B_`:"E&+;Y['
    link_4 = module_0.Link(str_5, str_5)
    int_0 = var_2.__len__()
    assert int_0 == 23
    str_6 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_5 = module_0.Link(str_6, none_type_2)
    var_3 = link_5.__repr__()
    assert var_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_4 = var_3.__repr__()
    assert var_4 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_5 = var_4.__repr__()
    assert var_5 == "'\"Link(title=\\'0_~6:m!(f5FgU,:rvz\\', url=None)\"'"
    str_7 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_6 = module_0.Link(str_7, none_type_3)
    bytes_1 = b"\x802c35Z\xf8"
    link_7 = module_0.Link(link_6, bytes_1)
    str_8 = "0_~6:m!(f5FgU,:rvz"
    none_type_4 = None
    link_8 = module_0.Link(str_8, none_type_4)
    var_6 = link_8.__repr__()
    assert var_6 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_7 = var_6.__repr__()
    assert var_7 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    iterator_0 = var_6.__iter__()
    module_0.get_navigation(none_type_0, str_4)


@pytest.mark.xfail(strict=True)
def test_case_857():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    int_0 = var_0.__len__()
    assert int_0 == 23
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_1, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    int_1 = var_0.__len__()
    assert int_1 == 23
    int_2 = var_0.__len__()
    assert int_2 == 23
    none_type_1 = None
    str_2 = "\n        Perform validation for a value.\n\n        The run_validation method should be implemented by subclasses.\n        "
    link_1 = module_0.Link(none_type_1, str_2)
    var_1 = link_1.__repr__()
    assert (
        var_1
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    str_3 = var_1.__str__()
    assert (
        str_3
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    bool_0 = True
    link_2 = module_0.Link(bool_0, bool_0)
    var_2 = var_1.__repr__()
    assert (
        var_2
        == "\"Link(title=[blank], url='\\\\n        Perform validation for a value.\\\\n\\\\n        The run_validation method should be implemented by subclasses.\\\\n        ')\""
    )
    str_4 = " Use '"
    section_1 = module_0.Section(str_4, str_4)
    var_3 = section_1.__repr__()
    assert var_3 == 'Section(title=" Use \'")'
    var_4 = var_3.__repr__()
    assert var_4 == "'Section(title=\" Use \\'\")'"
    str_5 = " Use '"
    section_2 = module_0.Section(str_5, str_5)
    var_5 = section_2.__repr__()
    assert var_5 == 'Section(title=" Use \'")'
    str_6 = 'C5B_`:"E&+;Y['
    link_3 = module_0.Link(str_6, str_6)
    int_3 = var_5.__len__()
    assert int_3 == 23
    str_7 = "page_context"
    section_3 = module_0.Section(str_7, str_7)
    str_8 = "' from the site because it conflicts with '"
    list_0 = []
    section_4 = module_0.Section(str_8, list_0)
    str_9 = " Use '"
    section_5 = module_0.Section(str_9, str_9)
    var_6 = section_5.__repr__()
    assert var_6 == 'Section(title=" Use \'")'
    var_7 = var_6.__repr__()
    assert var_7 == "'Section(title=\" Use \\'\")'"
    var_8 = var_6.__repr__()
    assert var_8 == "'Section(title=\" Use \\'\")'"
    str_10 = " Use '"
    section_6 = module_0.Section(str_10, str_10)
    var_9 = section_6.__repr__()
    assert var_9 == 'Section(title=" Use \'")'
    int_4 = var_9.__len__()
    assert int_4 == 23
    section_7 = module_0.Section(var_9, int_4)
    assert section_7.title == 'Section(title=" Use \'")'
    assert section_7.children == 23
    str_11 = " Use '"
    section_8 = module_0.Section(str_11, str_11)
    var_10 = section_8.__repr__()
    assert var_10 == 'Section(title=" Use \'")'
    var_11 = var_10.__repr__()
    assert var_11 == "'Section(title=\" Use \\'\")'"
    str_12 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_4 = module_0.Link(str_12, none_type_2)
    bytes_0 = b"\x802c35Z\xf8"
    link_5 = module_0.Link(link_4, bytes_0)
    var_12 = link_4.__repr__()
    assert var_12 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    iterator_0 = var_12.__iter__()
    str_13 = " Use '"
    section_9 = module_0.Section(str_13, str_13)
    var_13 = section_9.__repr__()
    assert var_13 == 'Section(title=" Use \'")'
    str_14 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_6 = module_0.Link(str_14, none_type_3)
    var_14 = link_6.__repr__()
    assert var_14 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    int_5 = var_14.__len__()
    assert int_5 == 42
    module_0.get_navigation(section_7, int_1)


@pytest.mark.xfail(strict=True)
def test_case_858():
    str_0 = "page_context"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = "' from the site because it conflicts with '"
    list_0 = []
    section_1 = module_0.Section(str_1, list_0)
    var_0 = section_1.__repr__()
    assert var_0 == "Section(title=\"' from the site because it conflicts with '\")"
    section_2 = module_0.Section(str_1, section_0)
    int_0 = var_0.__len__()
    assert int_0 == 60
    module_0.Navigation(list_0, str_0)


@pytest.mark.xfail(strict=True)
def test_case_859():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    bytes_0 = b"\x802c35Z\xf8"
    link_1 = module_0.Link(link_0, bytes_0)
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_2 = module_0.Link(str_1, none_type_1)
    bytes_1 = b"\x802c35Z\xf8"
    link_3 = module_0.Link(link_2, bytes_1)
    var_0 = link_2.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    iterator_0 = var_0.__iter__()
    str_2 = "page_context"
    section_0 = module_0.Section(str_2, str_2)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_3 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_4 = module_0.Link(str_3, none_type_2)
    var_1 = link_4.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_2 = section_0.__repr__()
    assert var_2 == "Section(title='page_context')"
    str_4 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_5 = module_0.Link(str_4, none_type_3)
    var_3 = link_5.__repr__()
    assert var_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_4 = var_3.__repr__()
    assert var_4 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_5 = var_4.__repr__()
    assert var_5 == "'\"Link(title=\\'0_~6:m!(f5FgU,:rvz\\', url=None)\"'"
    str_5 = "gfRsC:6&{;|"
    section_1 = module_0.Section(str_5, str_5)
    str_6 = "0_~6:m!(f5FgU,:rvz"
    none_type_4 = None
    link_6 = module_0.Link(str_6, none_type_4)
    var_6 = link_6.__repr__()
    assert var_6 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_7 = var_6.__repr__()
    assert var_7 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_8 = var_6.__repr__()
    assert var_8 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_9 = link_6.__repr__()
    assert var_9 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    module_2.file_sort_key(var_3)


@pytest.mark.xfail(strict=True)
def test_case_860():
    str_0 = "page_context"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = "' from the site because it conflicts with '"
    list_0 = []
    section_1 = module_0.Section(str_1, list_0)
    var_0 = section_0.__repr__()
    assert var_0 == "Section(title='page_context')"
    str_2 = "page_context"
    section_2 = module_0.Section(str_2, str_2)
    str_3 = "page_context"
    section_3 = module_0.Section(str_3, str_3)
    str_4 = "' from the site because it conflicts with '"
    list_1 = []
    section_4 = module_0.Section(str_4, list_1)
    str_5 = "gfRsC:6&{;|"
    section_5 = module_0.Section(str_5, str_5)
    str_6 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_6, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_1 = link_0.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_2 = var_1.__repr__()
    assert var_2 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_3 = var_1.__repr__()
    assert var_3 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_4 = link_0.__repr__()
    assert var_4 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_7 = " Use '"
    section_6 = module_0.Section(str_7, str_7)
    var_5 = section_6.__repr__()
    assert var_5 == 'Section(title=" Use \'")'
    section_7 = module_0.Section(str_7, var_5)
    assert section_7.children == 'Section(title=" Use \'")'
    str_8 = " Use '"
    section_8 = module_0.Section(str_8, str_8)
    var_6 = section_8.__repr__()
    assert var_6 == 'Section(title=" Use \'")'
    int_0 = var_6.__len__()
    assert int_0 == 23
    str_9 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_9, none_type_1)
    int_1 = var_6.__len__()
    assert int_1 == 23
    str_10 = "page_context"
    section_9 = module_0.Section(str_10, str_10)
    str_11 = "' from the site because it conflicts with '"
    list_2 = []
    section_10 = module_0.Section(str_11, list_2)
    str_12 = "localhost"
    link_2 = module_0.Link(str_11, str_12)
    str_13 = "page_context"
    section_11 = module_0.Section(str_13, str_13)
    str_14 = "' from the site because it conflicts with '"
    list_3 = []
    section_12 = module_0.Section(str_14, list_3)
    var_7 = section_12.__repr__()
    assert var_7 == "Section(title=\"' from the site because it conflicts with '\")"
    section_13 = module_0.Section(str_14, section_11)
    int_2 = var_7.__len__()
    assert int_2 == 60
    module_0.get_navigation(link_1, str_12)


@pytest.mark.xfail(strict=True)
def test_case_861():
    str_0 = "gfRsC:6&{;|"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "gfRsC:6&{;|"
    assert section_0.children == "gfRsC:6&{;|"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = " Use '"
    section_1 = module_0.Section(str_1, str_1)
    var_0 = section_1.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    int_0 = var_0.__len__()
    assert int_0 == 23
    var_1 = var_0.__repr__()
    assert var_1 == "'Section(title=\" Use \\'\")'"
    var_2 = var_1.__repr__()
    assert var_2 == "'\\'Section(title=\" Use \\\\\\'\")\\''"
    str_2 = " Use '"
    section_2 = module_0.Section(str_2, str_2)
    var_3 = section_2.__repr__()
    assert var_3 == 'Section(title=" Use \'")'
    var_4 = var_3.__repr__()
    assert var_4 == "'Section(title=\" Use \\'\")'"
    none_type_0 = None
    str_3 = "\n        Perform validation for a value.\n\n        The run_validation method should be implemented by subclasses.\n        "
    link_0 = module_0.Link(none_type_0, str_3)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title is None
    assert (
        link_0.url
        == "\n        Perform validation for a value.\n\n        The run_validation method should be implemented by subclasses.\n        "
    )
    var_5 = link_0.__repr__()
    assert (
        var_5
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    str_4 = var_5.__str__()
    assert (
        str_4
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    bool_0 = True
    link_1 = module_0.Link(bool_0, bool_0)
    var_6 = var_5.__repr__()
    assert (
        var_6
        == "\"Link(title=[blank], url='\\\\n        Perform validation for a value.\\\\n\\\\n        The run_validation method should be implemented by subclasses.\\\\n        ')\""
    )
    none_type_1 = None
    str_5 = "\n        Perform validation for a value.\n\n        The run_validation method should be implemented by subclasses.\n        "
    link_2 = module_0.Link(none_type_1, str_5)
    var_7 = link_2.__repr__()
    assert (
        var_7
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    str_6 = var_7.__str__()
    assert (
        str_6
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    str_7 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_3 = module_0.Link(str_7, none_type_2)
    bytes_0 = b"\x802c35Z\xf8"
    link_4 = module_0.Link(link_3, bytes_0)
    var_8 = link_3.__repr__()
    assert var_8 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    int_1 = var_8.__len__()
    assert int_1 == 42
    str_8 = " Use '"
    section_3 = module_0.Section(str_8, str_8)
    var_9 = section_3.__repr__()
    assert var_9 == 'Section(title=" Use \'")'
    str_9 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_5 = module_0.Link(str_9, none_type_3)
    var_10 = link_5.__repr__()
    assert var_10 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_11 = var_10.__repr__()
    assert var_11 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_10 = var_10.__str__()
    assert str_10 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    module_0.Navigation(str_4, var_1)


@pytest.mark.xfail(strict=True)
def test_case_862():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    str_1 = "gfRsC:6&{;|"
    section_1 = module_0.Section(str_1, str_1)
    str_2 = "relative_to_docs"
    link_0 = module_0.Link(str_2, section_1)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "relative_to_docs"
    assert (
        f"{type(link_0.url).__module__}.{type(link_0.url).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    section_2 = module_0.Section(section_0, var_0)
    assert section_2.children == 'Section(title=" Use \'")'
    str_3 = "gfRsC:6&{;|"
    section_3 = module_0.Section(str_3, str_3)
    str_4 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_1 = module_0.Link(str_4, none_type_0)
    var_1 = link_1.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_2 = var_1.__repr__()
    assert var_2 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_3 = var_1.__repr__()
    assert var_3 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_4 = link_1.__repr__()
    assert var_4 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_5 = " Use '"
    section_4 = module_0.Section(str_5, str_5)
    var_5 = section_4.__repr__()
    assert var_5 == 'Section(title=" Use \'")'
    int_0 = var_5.__len__()
    assert int_0 == 23
    str_6 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_2 = module_0.Link(str_6, none_type_1)
    int_1 = var_5.__len__()
    assert int_1 == 23
    int_2 = var_5.__len__()
    assert int_2 == 23
    str_7 = " Use '"
    section_5 = module_0.Section(str_7, str_7)
    var_6 = section_5.__repr__()
    assert var_6 == 'Section(title=" Use \'")'
    str_8 = "gfRsC:6&{;|"
    section_6 = module_0.Section(str_8, str_8)
    str_9 = "relative_to_docs"
    link_3 = module_0.Link(str_9, section_6)
    module_0.get_navigation(str_8, str_3)


@pytest.mark.xfail(strict=True)
def test_case_863():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_1, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_2, none_type_1)
    var_1 = link_1.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_2 = var_1.__repr__()
    assert var_2 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_3 = var_1.__str__()
    assert str_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_4 = "page_context"
    section_1 = module_0.Section(str_4, str_4)
    str_5 = "' from the site because it conflicts with '"
    list_0 = []
    section_2 = module_0.Section(str_5, list_0)
    str_6 = "localhost"
    link_2 = module_0.Link(str_5, str_6)
    str_7 = " Use '"
    section_3 = module_0.Section(str_7, str_7)
    var_3 = section_3.__repr__()
    assert var_3 == 'Section(title=" Use \'")'
    str_8 = 'C5B_`:"E&+;Y['
    link_3 = module_0.Link(str_8, str_8)
    int_0 = var_3.__len__()
    assert int_0 == 23
    str_9 = "$9.}1Av5,.}"
    link_4 = module_0.Link(str_9, str_9)
    var_4 = var_3.__repr__()
    assert var_4 == "'Section(title=\" Use \\'\")'"
    bool_0 = False
    module_0.Navigation(bool_0, var_3)


@pytest.mark.xfail(strict=True)
def test_case_864():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    str_1 = "gfRsC:6&{;|"
    section_1 = module_0.Section(str_1, str_1)
    str_2 = "relative_to_docs"
    link_0 = module_0.Link(str_2, section_1)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "relative_to_docs"
    assert (
        f"{type(link_0.url).__module__}.{type(link_0.url).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    section_2 = module_0.Section(section_0, var_0)
    assert section_2.children == 'Section(title=" Use \'")'
    int_0 = var_0.__len__()
    assert int_0 == 23
    str_3 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_1 = module_0.Link(str_3, none_type_0)
    var_1 = link_1.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_2 = var_1.__repr__()
    assert var_2 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    iterator_0 = var_1.__iter__()
    str_4 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_2 = module_0.Link(str_4, none_type_1)
    var_3 = link_2.__repr__()
    assert var_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_4 = var_3.__repr__()
    assert var_4 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_5 = var_4.__repr__()
    assert var_5 == "'\"Link(title=\\'0_~6:m!(f5FgU,:rvz\\', url=None)\"'"
    str_5 = " Use '"
    section_3 = module_0.Section(str_5, str_5)
    var_6 = section_3.__repr__()
    assert var_6 == 'Section(title=" Use \'")'
    var_7 = var_6.__repr__()
    assert var_7 == "'Section(title=\" Use \\'\")'"
    dict_0 = {}
    str_6 = 'y\x0c[fN"W:2&:SWyz~W'
    link_3 = module_0.Link(dict_0, str_6)
    section_4 = module_0.Section(str_5, var_7)
    assert section_4.children == "'Section(title=\" Use \\'\")'"
    str_7 = " Use '"
    section_5 = module_0.Section(str_7, str_7)
    var_8 = section_5.__repr__()
    assert var_8 == 'Section(title=" Use \'")'
    int_1 = var_8.__len__()
    assert int_1 == 23
    str_8 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_4 = module_0.Link(str_8, none_type_2)
    int_2 = var_8.__len__()
    assert int_2 == 23
    str_9 = " Use '"
    section_6 = module_0.Section(str_9, str_9)
    var_9 = section_6.__repr__()
    assert var_9 == 'Section(title=" Use \'")'
    int_3 = var_9.__len__()
    assert int_3 == 23
    str_10 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_5 = module_0.Link(str_10, none_type_3)
    int_4 = var_9.__len__()
    assert int_4 == 23
    int_5 = var_9.__len__()
    assert int_5 == 23
    module_0.get_navigation(var_1, link_4)


@pytest.mark.xfail(strict=True)
def test_case_865():
    tuple_0 = ()
    var_0 = module_3.nest_paths(tuple_0)
    var_1 = var_0.__repr__()
    build_error_0 = module_5.BuildError(var_1)
    none_type_0 = None
    module_0.get_navigation(none_type_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_866():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    int_0 = var_0.__len__()
    assert int_0 == 23
    str_1 = "gfRsC:6&{;|"
    section_1 = module_0.Section(str_1, str_1)
    var_1 = section_1.__repr__()
    assert var_1 == "Section(title='gfRsC:6&{;|')"
    bool_0 = True
    section_2 = module_0.Section(bool_0, bool_0)
    list_0 = [var_1, var_1]
    section_3 = module_0.Section(section_1, list_0)
    assert section_3.children == [
        "Section(title='gfRsC:6&{;|')",
        "Section(title='gfRsC:6&{;|')",
    ]
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_2, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    bytes_0 = b"\x802c35Z\xf8"
    link_1 = module_0.Link(link_0, bytes_0)
    dict_0 = {}
    str_3 = 'y\x0c[fN"W:2&:SWyz~W'
    link_2 = module_0.Link(dict_0, str_3)
    var_2 = link_1.__repr__()
    assert (
        var_2
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )
    str_4 = " Use '"
    section_4 = module_0.Section(str_4, str_4)
    var_3 = section_4.__repr__()
    assert var_3 == 'Section(title=" Use \'")'
    str_5 = "gfRsC:6&{;|"
    section_5 = module_0.Section(str_5, str_5)
    str_6 = "relative_to_docs"
    link_3 = module_0.Link(str_6, section_5)
    section_6 = module_0.Section(section_4, var_3)
    assert section_6.children == 'Section(title=" Use \'")'
    str_7 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_4 = module_0.Link(str_7, none_type_1)
    var_4 = link_4.__repr__()
    assert var_4 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_5 = var_4.__repr__()
    assert var_5 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_6 = var_4.__repr__()
    assert var_6 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_8 = " Use '"
    section_7 = module_0.Section(str_8, str_8)
    var_7 = section_7.__repr__()
    assert var_7 == 'Section(title=" Use \'")'
    str_9 = 'C5B_`:"E&+;Y['
    link_5 = module_0.Link(str_9, str_9)
    int_1 = var_7.__len__()
    assert int_1 == 23
    str_10 = "$9.}1Av5,.}"
    link_6 = module_0.Link(str_10, str_10)
    var_8 = var_7.__repr__()
    assert var_8 == "'Section(title=\" Use \\'\")'"
    module_0.get_navigation(var_5, section_2)


@pytest.mark.xfail(strict=True)
def test_case_867():
    bool_0 = False
    module_3.nest_paths(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_868():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    str_1 = 'C5B_`:"E&+;Y['
    link_0 = module_0.Link(str_1, str_1)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == 'C5B_`:"E&+;Y['
    assert link_0.url == 'C5B_`:"E&+;Y['
    int_0 = var_0.__len__()
    assert int_0 == 23
    str_2 = "$9.}1Av5,.}"
    link_1 = module_0.Link(str_2, str_2)
    var_1 = var_0.__repr__()
    assert var_1 == "'Section(title=\" Use \\'\")'"
    str_3 = "page_context"
    section_1 = module_0.Section(str_3, str_3)
    str_4 = "' from the site because it conflicts with '"
    list_0 = []
    section_2 = module_0.Section(str_4, list_0)
    var_2 = section_2.__repr__()
    assert var_2 == "Section(title=\"' from the site because it conflicts with '\")"
    dict_0 = {}
    str_5 = 'y\x0c[fN"W:2&:SWyz~W'
    link_2 = module_0.Link(dict_0, str_5)
    section_3 = module_0.Section(str_5, str_5)
    section_4 = module_0.Section(str_5, str_5)
    str_6 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_3 = module_0.Link(str_6, none_type_0)
    var_3 = link_3.__repr__()
    assert var_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_4 = var_3.__repr__()
    assert var_4 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_7 = var_3.__str__()
    assert str_7 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_8 = 'C5B_`:"E&+;Y['
    link_4 = module_0.Link(str_8, str_8)
    int_1 = var_3.__len__()
    assert int_1 == 42
    str_9 = "page_context"
    section_5 = module_0.Section(str_9, str_9)
    str_10 = "' from the site because it conflicts with '"
    list_1 = []
    section_6 = module_0.Section(str_10, list_1)
    section_7 = module_0.Section(section_6, list_1)
    str_11 = " Use '"
    section_8 = module_0.Section(str_11, str_11)
    var_5 = section_8.__repr__()
    assert var_5 == 'Section(title=" Use \'")'
    str_12 = "gfRsC:6&{;|"
    section_9 = module_0.Section(str_12, str_12)
    str_13 = "relative_to_docs"
    link_5 = module_0.Link(str_13, section_9)
    section_10 = module_0.Section(section_8, var_5)
    assert section_10.children == 'Section(title=" Use \'")'
    int_2 = var_5.__len__()
    assert int_2 == 23
    module_0.get_navigation(link_4, section_7)


@pytest.mark.xfail(strict=True)
def test_case_869():
    str_0 = "page_context"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = "' from the site because it conflicts with '"
    list_0 = []
    section_1 = module_0.Section(str_1, list_0)
    str_2 = "localhost"
    link_0 = module_0.Link(str_1, str_2)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "' from the site because it conflicts with '"
    assert link_0.url == "localhost"
    bytes_0 = b"\xe1\xbe\xb0\x85I\xc6\xbb"
    module_0.get_navigation(str_0, bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_870():
    str_0 = "page_context"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = "' from the site because it conflicts with '"
    list_0 = []
    section_1 = module_0.Section(str_1, list_0)
    dict_0 = {}
    str_2 = 'y\x0c[fN"W:2&:SWyz~W'
    link_0 = module_0.Link(dict_0, str_2)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == {}
    assert link_0.url == 'y\x0c[fN"W:2&:SWyz~W'
    section_2 = module_0.Section(str_2, str_2)
    section_3 = module_0.Section(str_2, str_2)
    str_3 = " Use '"
    section_4 = module_0.Section(str_3, str_3)
    var_0 = section_4.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    var_1 = var_0.__repr__()
    assert var_1 == "'Section(title=\" Use \\'\")'"
    var_2 = var_0.__repr__()
    assert var_2 == "'Section(title=\" Use \\'\")'"
    str_4 = "page_context"
    section_5 = module_0.Section(str_4, str_4)
    str_5 = "' from the site because it conflicts with '"
    list_1 = []
    section_6 = module_0.Section(str_5, list_1)
    section_7 = module_0.Section(section_6, list_1)
    str_6 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_1 = module_0.Link(str_6, none_type_0)
    var_3 = link_1.__repr__()
    assert var_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_4 = var_3.__repr__()
    assert var_4 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_5 = var_3.__repr__()
    assert var_5 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_7 = " Use '"
    section_8 = module_0.Section(str_7, str_7)
    var_6 = section_8.__repr__()
    assert var_6 == 'Section(title=" Use \'")'
    str_8 = 'C5B_`:"E&+;Y['
    link_2 = module_0.Link(str_8, str_8)
    int_0 = var_6.__len__()
    assert int_0 == 23
    str_9 = "$9.}1Av5,.}"
    link_3 = module_0.Link(str_9, str_9)
    var_7 = var_6.__repr__()
    assert var_7 == "'Section(title=\" Use \\'\")'"
    module_0.get_navigation(var_6, var_2)


@pytest.mark.xfail(strict=True)
def test_case_871():
    str_0 = "The currently rendered page. Please do not access this and instead\n    rely on the `page` argument to event handlers."
    none_type_0 = None
    module_6.Page(str_0, none_type_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_872():
    str_0 = "page_context"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = "' from the site because it conflicts with '"
    list_0 = []
    section_1 = module_0.Section(str_1, list_0)
    str_2 = " Use '"
    section_2 = module_0.Section(str_2, str_2)
    var_0 = section_2.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    var_1 = var_0.__repr__()
    assert var_1 == "'Section(title=\" Use \\'\")'"
    dict_0 = {}
    str_3 = 'y\x0c[fN"W:2&:SWyz~W'
    link_0 = module_0.Link(dict_0, str_3)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == {}
    assert link_0.url == 'y\x0c[fN"W:2&:SWyz~W'
    section_3 = module_0.Section(str_2, var_1)
    assert section_3.children == "'Section(title=\" Use \\'\")'"
    str_4 = " Use '"
    section_4 = module_0.Section(str_4, str_4)
    var_2 = section_4.__repr__()
    assert var_2 == 'Section(title=" Use \'")'
    str_5 = 'C5B_`:"E&+;Y['
    link_1 = module_0.Link(str_5, str_5)
    int_0 = var_2.__len__()
    assert int_0 == 23
    str_6 = "$9.}1Av5,.}"
    link_2 = module_0.Link(str_6, str_6)
    var_3 = var_2.__repr__()
    assert var_3 == "'Section(title=\" Use \\'\")'"
    module_0.Navigation(list_0, section_0)


@pytest.mark.xfail(strict=True)
def test_case_873():
    bool_0 = True
    module_6.Page(bool_0, bool_0, bool_0)


@pytest.mark.xfail(strict=True)
def test_case_874():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    var_1 = var_0.__repr__()
    assert var_1 == "'Section(title=\" Use \\'\")'"
    str_1 = " Use '"
    section_1 = module_0.Section(str_1, str_1)
    var_2 = section_1.__repr__()
    assert var_2 == 'Section(title=" Use \'")'
    str_2 = 'C5B_`:"E&+;Y['
    link_0 = module_0.Link(str_2, str_2)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == 'C5B_`:"E&+;Y['
    assert link_0.url == 'C5B_`:"E&+;Y['
    int_0 = var_2.__len__()
    assert int_0 == 23
    str_3 = "$9.}1Av5,.}"
    link_1 = module_0.Link(str_3, str_3)
    var_3 = var_2.__repr__()
    assert var_3 == "'Section(title=\" Use \\'\")'"
    str_4 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_2 = module_0.Link(str_4, none_type_0)
    var_4 = link_2.__repr__()
    assert var_4 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_5 = var_4.__repr__()
    assert var_5 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_5 = var_4.__str__()
    assert str_5 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_6 = 'C5B_`:"E&+;Y['
    link_3 = module_0.Link(str_6, str_6)
    int_1 = var_4.__len__()
    assert int_1 == 42
    str_7 = " Use '"
    section_2 = module_0.Section(str_7, str_7)
    var_6 = section_2.__repr__()
    assert var_6 == 'Section(title=" Use \'")'
    str_8 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_4 = module_0.Link(str_8, none_type_1)
    bytes_0 = b"\x802c35Z\xf8"
    link_5 = module_0.Link(link_4, bytes_0)
    iterator_0 = var_6.__iter__()
    str_9 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_6 = module_0.Link(str_9, none_type_2)
    var_7 = link_6.__repr__()
    assert var_7 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_8 = var_7.__repr__()
    assert var_8 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_10 = var_7.__str__()
    assert str_10 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_11 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_7 = module_0.Link(str_11, none_type_3)
    var_9 = link_7.__repr__()
    assert var_9 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_10 = var_9.__repr__()
    assert var_10 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    iterator_1 = var_9.__iter__()
    module_0.get_navigation(str_9, var_4)


@pytest.mark.xfail(strict=True)
def test_case_875():
    bool_0 = False
    build_error_0 = module_5.BuildError(bool_0)
    bool_1 = False
    module_0.get_navigation(bool_1, bool_1)


@pytest.mark.xfail(strict=True)
def test_case_876():
    str_0 = "page_context"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = "' from the site because it conflicts with '"
    list_0 = []
    section_1 = module_0.Section(str_1, list_0)
    var_0 = section_1.__repr__()
    assert var_0 == "Section(title=\"' from the site because it conflicts with '\")"
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_2, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    bytes_0 = b"\x802c35Z\xf8"
    link_1 = module_0.Link(link_0, bytes_0)
    str_3 = "$9.}1Av5,.}"
    link_2 = module_0.Link(str_3, str_3)
    str_4 = " Use '"
    section_2 = module_0.Section(str_4, str_4)
    var_1 = section_2.__repr__()
    assert var_1 == 'Section(title=" Use \'")'
    str_5 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_3 = module_0.Link(str_5, none_type_1)
    bytes_1 = b"\x802c35Z\xf8"
    link_4 = module_0.Link(link_3, bytes_1)
    iterator_0 = var_1.__iter__()
    str_6 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_5 = module_0.Link(str_6, none_type_2)
    var_2 = link_5.__repr__()
    assert var_2 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_3 = var_2.__repr__()
    assert var_3 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_7 = " Use '"
    section_3 = module_0.Section(str_7, str_7)
    var_4 = section_3.__repr__()
    assert var_4 == 'Section(title=" Use \'")'
    var_5 = var_4.__repr__()
    assert var_5 == "'Section(title=\" Use \\'\")'"
    dict_0 = {}
    str_8 = 'y\x0c[fN"W:2&:SWyz~W'
    link_6 = module_0.Link(dict_0, str_8)
    section_4 = module_0.Section(str_7, var_5)
    assert section_4.children == "'Section(title=\" Use \\'\")'"
    str_9 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_7 = module_0.Link(str_9, none_type_3)
    str_10 = " Use '"
    section_5 = module_0.Section(str_10, str_10)
    var_6 = section_5.__repr__()
    assert var_6 == 'Section(title=" Use \'")'
    var_7 = var_6.__repr__()
    assert var_7 == "'Section(title=\" Use \\'\")'"
    set_0 = set()
    navigation_0 = module_0.Navigation(set_0, set_0)
    assert (
        f"{type(navigation_0).__module__}.{type(navigation_0).__qualname__}"
        == "mkdocs.structure.nav.Navigation"
    )
    assert len(navigation_0) == 0
    str_11 = navigation_0.__str__()
    iterator_1 = var_7.__iter__()
    str_12 = " Use '"
    section_6 = module_0.Section(str_12, str_12)
    var_8 = section_6.__repr__()
    assert var_8 == 'Section(title=" Use \'")'
    var_9 = var_8.__repr__()
    assert var_9 == "'Section(title=\" Use \\'\")'"
    module_0.Navigation(var_5, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_877():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    str_1 = "gfRsC:6&{;|"
    section_1 = module_0.Section(str_1, str_1)
    str_2 = "relative_to_docs"
    link_0 = module_0.Link(str_2, section_1)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "relative_to_docs"
    assert (
        f"{type(link_0.url).__module__}.{type(link_0.url).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    str_3 = "$9.}1Av5,.}"
    link_1 = module_0.Link(str_3, str_3)
    str_4 = "gfRsC:6&{;|"
    section_2 = module_0.Section(str_4, str_4)
    str_5 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_2 = module_0.Link(str_5, none_type_0)
    var_1 = link_2.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_2 = var_1.__repr__()
    assert var_2 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_3 = var_1.__repr__()
    assert var_3 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_4 = link_2.__repr__()
    assert var_4 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_6 = "jXt{G!+9"
    int_0 = -1857
    link_3 = module_0.Link(str_6, int_0)
    str_7 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_4 = module_0.Link(str_7, none_type_1)
    bytes_0 = b"\x802c35Z\xf8"
    link_5 = module_0.Link(link_4, bytes_0)
    var_5 = link_4.__repr__()
    assert var_5 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_6 = var_5.__repr__()
    assert var_6 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_8 = "gfRsC:6&{;|"
    section_3 = module_0.Section(str_8, str_8)
    str_9 = " Use '"
    section_4 = module_0.Section(str_9, str_9)
    var_7 = section_4.__repr__()
    assert var_7 == 'Section(title=" Use \'")'
    int_1 = var_7.__len__()
    assert int_1 == 23
    var_8 = var_7.__repr__()
    assert var_8 == "'Section(title=\" Use \\'\")'"
    var_9 = var_8.__repr__()
    assert var_9 == "'\\'Section(title=\" Use \\\\\\'\")\\''"
    str_10 = " Use '"
    section_5 = module_0.Section(str_10, str_10)
    var_10 = section_5.__repr__()
    assert var_10 == 'Section(title=" Use \'")'
    var_11 = var_10.__repr__()
    assert var_11 == "'Section(title=\" Use \\'\")'"
    dict_0 = {}
    str_11 = 'y\x0c[fN"W:2&:SWyz~W'
    link_6 = module_0.Link(dict_0, str_11)
    section_6 = module_0.Section(str_10, var_11)
    assert section_6.children == "'Section(title=\" Use \\'\")'"
    str_12 = "gfRsC:6&{;|"
    section_7 = module_0.Section(str_12, str_12)
    str_13 = " Use '"
    section_8 = module_0.Section(str_13, str_13)
    var_12 = section_8.__repr__()
    assert var_12 == 'Section(title=" Use \'")'
    str_14 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_7 = module_0.Link(str_14, none_type_2)
    bytes_1 = b"\x802c35Z\xf8"
    link_8 = module_0.Link(link_7, bytes_1)
    iterator_0 = var_12.__iter__()
    str_15 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_9 = module_0.Link(str_15, none_type_3)
    module_0.get_navigation(none_type_0, section_7)


@pytest.mark.xfail(strict=True)
def test_case_878():
    dict_0 = {}
    str_0 = 'y\x0c[fN"W:2&:SWyz~W'
    link_0 = module_0.Link(dict_0, str_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == {}
    assert link_0.url == 'y\x0c[fN"W:2&:SWyz~W'
    dict_1 = {}
    str_1 = 'y\x0c[fN"W:2&:SWyz~W'
    link_1 = module_0.Link(dict_1, str_1)
    section_0 = module_0.Section(str_1, str_1)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == 'y\x0c[fN"W:2&:SWyz~W'
    assert section_0.children == 'y\x0c[fN"W:2&:SWyz~W'
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    section_1 = module_0.Section(str_1, str_1)
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_2 = module_0.Link(str_2, none_type_0)
    var_0 = link_2.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    module_0.get_navigation(none_type_0, var_0)


@pytest.mark.xfail(strict=True)
def test_case_879():
    set_0 = set()
    navigation_0 = module_0.Navigation(set_0, set_0)
    assert (
        f"{type(navigation_0).__module__}.{type(navigation_0).__qualname__}"
        == "mkdocs.structure.nav.Navigation"
    )
    assert len(navigation_0) == 0
    str_0 = navigation_0.__str__()
    str_1 = 'C5B_`:"E&+;Y['
    link_0 = module_0.Link(str_1, str_1)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == 'C5B_`:"E&+;Y['
    assert link_0.url == 'C5B_`:"E&+;Y['
    str_2 = " Use '"
    section_0 = module_0.Section(str_2, str_2)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    int_0 = var_0.__len__()
    assert int_0 == 23
    section_1 = module_0.Section(var_0, int_0)
    assert section_1.title == 'Section(title=" Use \'")'
    assert section_1.children == 23
    none_type_0 = None
    section_2 = module_0.Section(none_type_0, none_type_0)
    str_3 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_3, none_type_1)
    var_1 = link_1.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_2 = var_1.__repr__()
    assert var_2 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_3 = var_1.__repr__()
    assert var_3 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_4 = " Use '"
    section_3 = module_0.Section(str_4, str_4)
    var_4 = section_3.__repr__()
    assert var_4 == 'Section(title=" Use \'")'
    int_1 = var_4.__len__()
    assert int_1 == 23
    str_5 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_2 = module_0.Link(str_5, none_type_2)
    int_2 = var_4.__len__()
    assert int_2 == 23
    int_3 = var_4.__len__()
    assert int_3 == 23
    str_6 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_3 = module_0.Link(str_6, none_type_3)
    bytes_0 = b"\x802c35Z\xf8"
    link_4 = module_0.Link(link_3, bytes_0)
    var_5 = link_3.__repr__()
    assert var_5 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    iterator_0 = var_5.__iter__()
    module_0.Navigation(var_1, var_2)


@pytest.mark.xfail(strict=True)
def test_case_880():
    none_type_0 = None
    str_0 = "\n        Perform validation for a value.\n\n        The run_validation method should be implemented by subclasses.\n        "
    link_0 = module_0.Link(none_type_0, str_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title is None
    assert (
        link_0.url
        == "\n        Perform validation for a value.\n\n        The run_validation method should be implemented by subclasses.\n        "
    )
    var_0 = link_0.__repr__()
    assert (
        var_0
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    str_1 = var_0.__str__()
    assert (
        str_1
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    module_0.get_navigation(link_0, str_1)


@pytest.mark.xfail(strict=True)
def test_case_881():
    str_0 = "page_context"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = "' from the site because it conflicts with '"
    list_0 = []
    section_1 = module_0.Section(str_1, list_0)
    var_0 = section_0.__repr__()
    assert var_0 == "Section(title='page_context')"
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_2, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_1 = link_0.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_2 = var_1.__repr__()
    assert var_2 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    iterator_0 = var_1.__iter__()
    str_3 = " Use '"
    section_2 = module_0.Section(str_3, str_3)
    var_3 = section_2.__repr__()
    assert var_3 == 'Section(title=" Use \'")'
    int_0 = var_3.__len__()
    assert int_0 == 23
    str_4 = "gfRsC:6&{;|"
    section_3 = module_0.Section(str_4, str_4)
    var_4 = section_3.__repr__()
    assert var_4 == "Section(title='gfRsC:6&{;|')"
    str_5 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_5, none_type_1)
    bytes_0 = b"\x802c35Z\xf8"
    link_2 = module_0.Link(link_1, bytes_0)
    var_5 = link_1.__repr__()
    assert var_5 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    int_1 = var_5.__len__()
    assert int_1 == 42
    str_6 = "page_context"
    section_4 = module_0.Section(str_6, str_6)
    str_7 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_3 = module_0.Link(str_7, none_type_2)
    var_6 = link_3.__repr__()
    assert var_6 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_7 = section_4.__repr__()
    assert var_7 == "Section(title='page_context')"
    str_8 = " Use '"
    section_5 = module_0.Section(str_8, str_8)
    var_8 = section_5.__repr__()
    assert var_8 == 'Section(title=" Use \'")'
    module_0.Navigation(var_8, var_6)


@pytest.mark.xfail(strict=True)
def test_case_882():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_2 = var_1.__repr__()
    assert var_2 == "'\"Link(title=\\'0_~6:m!(f5FgU,:rvz\\', url=None)\"'"
    str_1 = " Use '"
    section_0 = module_0.Section(str_1, str_1)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_3 = section_0.__repr__()
    assert var_3 == 'Section(title=" Use \'")'
    int_0 = var_3.__len__()
    assert int_0 == 23
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_2, none_type_1)
    int_1 = var_3.__len__()
    assert int_1 == 23
    none_type_2 = None
    str_3 = "\n        Perform validation for a value.\n\n        The run_validation method should be implemented by subclasses.\n        "
    link_2 = module_0.Link(none_type_2, str_3)
    var_4 = link_2.__repr__()
    assert (
        var_4
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    str_4 = var_4.__str__()
    assert (
        str_4
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    bool_0 = True
    link_3 = module_0.Link(bool_0, bool_0)
    var_5 = var_4.__repr__()
    assert (
        var_5
        == "\"Link(title=[blank], url='\\\\n        Perform validation for a value.\\\\n\\\\n        The run_validation method should be implemented by subclasses.\\\\n        ')\""
    )
    str_5 = "page_context"
    section_1 = module_0.Section(str_5, str_5)
    str_6 = "' from the site because it conflicts with '"
    list_0 = []
    section_2 = module_0.Section(str_6, list_0)
    var_6 = section_1.__repr__()
    assert var_6 == "Section(title='page_context')"
    str_7 = "page_context"
    section_3 = module_0.Section(str_7, str_7)
    str_8 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_4 = module_0.Link(str_8, none_type_3)
    var_7 = link_4.__repr__()
    assert var_7 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_8 = section_3.__repr__()
    assert var_8 == "Section(title='page_context')"
    module_0.Navigation(var_0, var_2)


@pytest.mark.xfail(strict=True)
def test_case_883():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    str_1 = 'C5B_`:"E&+;Y['
    link_0 = module_0.Link(str_1, str_1)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == 'C5B_`:"E&+;Y['
    assert link_0.url == 'C5B_`:"E&+;Y['
    int_0 = var_0.__len__()
    assert int_0 == 23
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_1 = module_0.Link(str_2, none_type_0)
    bytes_0 = b"\x802c35Z\xf8"
    link_2 = module_0.Link(link_1, bytes_0)
    str_3 = "' is included in the 'nav' configuration."
    link_3 = module_0.Link(str_3, str_3)
    str_4 = "gfRsC:6&{;|"
    section_1 = module_0.Section(str_4, str_4)
    str_5 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_4 = module_0.Link(str_5, none_type_1)
    var_1 = link_4.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_2 = var_1.__repr__()
    assert var_2 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_3 = var_1.__repr__()
    assert var_3 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_4 = link_4.__repr__()
    assert var_4 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_6 = "page_context"
    section_2 = module_0.Section(str_6, str_6)
    str_7 = "' from the site because it conflicts with '"
    list_0 = []
    section_3 = module_0.Section(str_7, list_0)
    var_5 = section_3.__repr__()
    assert var_5 == "Section(title=\"' from the site because it conflicts with '\")"
    str_8 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_5 = module_0.Link(str_8, none_type_2)
    bytes_1 = b"\x802c35Z\xf8"
    link_6 = module_0.Link(link_5, bytes_1)
    var_6 = link_5.__repr__()
    assert var_6 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_7 = var_6.__repr__()
    assert var_7 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_9 = " Use '"
    section_4 = module_0.Section(str_9, str_9)
    var_8 = section_4.__repr__()
    assert var_8 == 'Section(title=" Use \'")'
    int_1 = var_8.__len__()
    assert int_1 == 23
    str_10 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_7 = module_0.Link(str_10, none_type_3)
    int_2 = var_8.__len__()
    assert int_2 == 23
    str_11 = "0_~6:m!(f5FgU,:rvz"
    none_type_4 = None
    link_8 = module_0.Link(str_11, none_type_4)
    var_9 = link_8.__repr__()
    assert var_9 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_10 = var_9.__repr__()
    assert var_10 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_11 = var_9.__repr__()
    assert var_11 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    module_0.Navigation(var_3, int_0)


@pytest.mark.xfail(strict=True)
def test_case_884():
    set_0 = set()
    navigation_0 = module_0.Navigation(set_0, set_0)
    assert (
        f"{type(navigation_0).__module__}.{type(navigation_0).__qualname__}"
        == "mkdocs.structure.nav.Navigation"
    )
    assert len(navigation_0) == 0
    str_0 = navigation_0.__str__()
    dict_0 = {}
    str_1 = 'y\x0c[fN"W:2&:SWyz~W'
    link_0 = module_0.Link(dict_0, str_1)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == {}
    assert link_0.url == 'y\x0c[fN"W:2&:SWyz~W'
    section_0 = module_0.Section(str_1, str_1)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == 'y\x0c[fN"W:2&:SWyz~W'
    assert section_0.children == 'y\x0c[fN"W:2&:SWyz~W'
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_2 = "gfRsC:6&{;|"
    section_1 = module_0.Section(str_2, str_2)
    str_3 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_1 = module_0.Link(str_3, none_type_0)
    var_0 = link_1.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_2 = var_0.__repr__()
    assert var_2 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_3 = link_1.__repr__()
    assert var_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    none_type_1 = None
    str_4 = "\n        Perform validation for a value.\n\n        The run_validation method should be implemented by subclasses.\n        "
    link_2 = module_0.Link(none_type_1, str_4)
    var_4 = link_2.__repr__()
    assert (
        var_4
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    str_5 = var_4.__str__()
    assert (
        str_5
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    str_6 = "x"
    section_2 = module_0.Section(str_6, str_6)
    tuple_0 = (set_0, var_2, set_0, var_4)
    module_0.get_navigation(var_0, tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_885():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    bytes_0 = b"\x802c35Z\xf8"
    link_1 = module_0.Link(link_0, bytes_0)
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_1 = "x"
    section_0 = module_0.Section(str_1, str_1)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "x"
    assert section_0.children == "x"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_2 = "page_context"
    section_1 = module_0.Section(str_2, str_2)
    str_3 = "' from the site because it conflicts with '"
    list_0 = []
    section_2 = module_0.Section(str_3, list_0)
    str_4 = "localhost"
    link_2 = module_0.Link(str_3, str_4)
    str_5 = " Use '"
    section_3 = module_0.Section(str_5, str_5)
    var_2 = section_3.__repr__()
    assert var_2 == 'Section(title=" Use \'")'
    str_6 = 'C5B_`:"E&+;Y['
    link_3 = module_0.Link(str_6, str_6)
    int_0 = var_2.__len__()
    assert int_0 == 23
    str_7 = "$9.}1Av5,.}"
    link_4 = module_0.Link(str_7, str_7)
    var_3 = var_2.__repr__()
    assert var_3 == "'Section(title=\" Use \\'\")'"
    str_8 = "page_context"
    section_4 = module_0.Section(str_8, str_8)
    module_0.get_navigation(link_3, section_3)


@pytest.mark.xfail(strict=True)
def test_case_886():
    complex_0 = 246.63 - 1388j
    list_0 = [complex_0]
    none_type_0 = None
    module_0.Navigation(list_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_887():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    int_0 = var_0.__len__()
    assert int_0 == 23
    str_1 = 'C5B_`:"E&+;Y['
    link_0 = module_0.Link(str_1, str_1)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == 'C5B_`:"E&+;Y['
    assert link_0.url == 'C5B_`:"E&+;Y['
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_1 = module_0.Link(str_2, none_type_0)
    var_1 = link_1.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_2 = var_1.__repr__()
    assert var_2 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    iterator_0 = var_1.__iter__()
    str_3 = " Use '"
    section_1 = module_0.Section(str_3, str_3)
    var_3 = section_1.__repr__()
    assert var_3 == 'Section(title=" Use \'")'
    str_4 = 'C5B_`:"E&+;Y['
    link_2 = module_0.Link(str_4, str_4)
    int_1 = var_3.__len__()
    assert int_1 == 23
    str_5 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_3 = module_0.Link(str_5, none_type_1)
    bytes_0 = b"\x802c35Z\xf8"
    link_4 = module_0.Link(link_3, bytes_0)
    var_4 = link_3.__repr__()
    assert var_4 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    int_2 = var_4.__len__()
    assert int_2 == 42
    str_6 = " Use '"
    section_2 = module_0.Section(str_6, str_6)
    var_5 = section_2.__repr__()
    assert var_5 == 'Section(title=" Use \'")'
    str_7 = "gfRsC:6&{;|"
    section_3 = module_0.Section(str_7, str_7)
    str_8 = "relative_to_docs"
    link_5 = module_0.Link(str_8, section_3)
    section_4 = module_0.Section(section_2, var_5)
    assert section_4.children == 'Section(title=" Use \'")'
    int_3 = var_5.__len__()
    assert int_3 == 23
    module_0.get_navigation(var_5, var_0)


@pytest.mark.xfail(strict=True)
def test_case_888():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    str_1 = 'C5B_`:"E&+;Y['
    link_0 = module_0.Link(str_1, str_1)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == 'C5B_`:"E&+;Y['
    assert link_0.url == 'C5B_`:"E&+;Y['
    int_0 = var_0.__len__()
    assert int_0 == 23
    section_1 = module_0.Section(var_0, var_0)
    assert section_1.title == 'Section(title=" Use \'")'
    assert section_1.children == 'Section(title=" Use \'")'
    bool_0 = False
    module_0.get_navigation(bool_0, str_0)


@pytest.mark.xfail(strict=True)
def test_case_889():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    int_0 = var_0.__len__()
    assert int_0 == 23
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_1, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    bytes_0 = b"\x802c35Z\xf8"
    link_1 = module_0.Link(link_0, bytes_0)
    var_1 = link_0.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_2 = var_1.__repr__()
    assert var_2 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_2 = "' is included in the 'nav' configuration."
    link_2 = module_0.Link(str_2, str_2)
    str_3 = " Use '"
    section_1 = module_0.Section(str_3, str_3)
    var_3 = section_1.__repr__()
    assert var_3 == 'Section(title=" Use \'")'
    int_1 = var_3.__len__()
    assert int_1 == 23
    str_4 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_3 = module_0.Link(str_4, none_type_1)
    int_2 = var_3.__len__()
    assert int_2 == 23
    int_3 = var_3.__len__()
    assert int_3 == 23
    dict_0 = {}
    str_5 = 'y\x0c[fN"W:2&:SWyz~W'
    link_4 = module_0.Link(dict_0, str_5)
    section_2 = module_0.Section(str_5, str_5)
    section_3 = module_0.Section(str_5, str_5)
    str_6 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_5 = module_0.Link(str_6, none_type_2)
    bytes_1 = b"\x802c35Z\xf8"
    link_6 = module_0.Link(link_5, bytes_1)
    var_4 = link_5.__repr__()
    assert var_4 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    iterator_0 = var_4.__iter__()
    module_0.get_navigation(link_3, none_type_1)


@pytest.mark.xfail(strict=True)
def test_case_890():
    bool_0 = False
    var_0 = module_1.urlsplit(bool_0)
    var_1 = var_0.__repr__()
    list_0 = [bool_0, bool_0, var_1, var_0]
    module_0.Navigation(list_0, list_0)


@pytest.mark.xfail(strict=True)
def test_case_891():
    str_0 = "page_context"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = " Use '"
    section_1 = module_0.Section(str_1, str_1)
    var_0 = section_1.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    var_1 = var_0.__repr__()
    assert var_1 == "'Section(title=\" Use \\'\")'"
    dict_0 = {}
    str_2 = 'y\x0c[fN"W:2&:SWyz~W'
    link_0 = module_0.Link(dict_0, str_2)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == {}
    assert link_0.url == 'y\x0c[fN"W:2&:SWyz~W'
    section_2 = module_0.Section(str_1, var_1)
    assert section_2.children == "'Section(title=\" Use \\'\")'"
    str_3 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_1 = module_0.Link(str_3, none_type_0)
    var_2 = link_1.__repr__()
    assert var_2 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_3 = var_2.__repr__()
    assert var_3 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_4 = var_2.__repr__()
    assert var_4 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_4 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_2 = module_0.Link(str_4, none_type_1)
    var_5 = link_2.__repr__()
    assert var_5 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_6 = var_5.__repr__()
    assert var_6 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_7 = var_6.__repr__()
    assert var_7 == "'\"Link(title=\\'0_~6:m!(f5FgU,:rvz\\', url=None)\"'"
    module_0.get_navigation(var_6, var_5)


@pytest.mark.xfail(strict=True)
def test_case_892():
    bool_0 = False
    module_2.file_sort_key(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_893():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    var_1 = var_0.__repr__()
    assert var_1 == "'Section(title=\" Use \\'\")'"
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_1, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_2 = link_0.__repr__()
    assert var_2 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_3 = var_2.__repr__()
    assert var_3 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_2 = var_2.__str__()
    assert str_2 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_3 = 'C5B_`:"E&+;Y['
    link_1 = module_0.Link(str_3, str_3)
    int_0 = var_2.__len__()
    assert int_0 == 42
    module_0.get_navigation(link_0, str_3)


@pytest.mark.xfail(strict=True)
def test_case_894():
    bool_0 = True
    section_0 = module_0.Section(bool_0, bool_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title is True
    assert section_0.children is True
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    bytes_0 = b"\x802c35Z\xf8"
    link_1 = module_0.Link(link_0, bytes_0)
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    iterator_0 = var_0.__iter__()
    var_1 = module_1.urlsplit(var_0)
    module_1.urlsplit(var_1, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_895():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    bytes_0 = b"\x802c35Z\xf8"
    link_1 = module_0.Link(link_0, bytes_0)
    bool_0 = True
    section_0 = module_0.Section(bool_0, bool_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title is True
    assert section_0.children is True
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = link_1.__repr__()
    assert (
        var_0
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )
    str_1 = var_0.__str__()
    assert (
        str_1
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )
    str_2 = "$9.}1Av5,.}"
    link_2 = module_0.Link(str_2, str_2)
    str_3 = " Use '"
    section_1 = module_0.Section(str_3, str_3)
    var_1 = section_1.__repr__()
    assert var_1 == 'Section(title=" Use \'")'
    int_0 = var_1.__len__()
    assert int_0 == 23
    section_2 = module_0.Section(var_1, int_0)
    assert section_2.title == 'Section(title=" Use \'")'
    assert section_2.children == 23
    module_0.Navigation(var_1, var_0)


@pytest.mark.xfail(strict=True)
def test_case_896():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_1 = var_0.__str__()
    assert str_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_2 = 'C5B_`:"E&+;Y['
    link_1 = module_0.Link(str_2, str_2)
    int_0 = var_0.__len__()
    assert int_0 == 42
    str_3 = " Use '"
    section_0 = module_0.Section(str_3, str_3)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_2 = section_0.__repr__()
    assert var_2 == 'Section(title=" Use \'")'
    var_3 = var_2.__repr__()
    assert var_3 == "'Section(title=\" Use \\'\")'"
    var_4 = var_2.__repr__()
    assert var_4 == "'Section(title=\" Use \\'\")'"
    str_4 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_2 = module_0.Link(str_4, none_type_1)
    str_5 = "page_context"
    section_1 = module_0.Section(str_5, str_5)
    str_6 = "' from the site because it conflicts with '"
    list_0 = []
    section_2 = module_0.Section(str_6, list_0)
    var_5 = section_2.__repr__()
    assert var_5 == "Section(title=\"' from the site because it conflicts with '\")"
    section_3 = module_0.Section(str_6, section_1)
    int_1 = var_5.__len__()
    assert int_1 == 60
    str_7 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_3 = module_0.Link(str_7, none_type_2)
    var_6 = link_3.__repr__()
    assert var_6 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_7 = var_6.__repr__()
    assert var_7 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_8 = var_6.__repr__()
    assert var_8 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_9 = link_3.__repr__()
    assert var_9 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_8 = " Use '"
    section_4 = module_0.Section(str_8, str_8)
    var_10 = section_4.__repr__()
    assert var_10 == 'Section(title=" Use \'")'
    str_9 = "gfRsC:6&{;|"
    section_5 = module_0.Section(str_9, str_9)
    str_10 = "relative_to_docs"
    link_4 = module_0.Link(str_10, section_5)
    section_6 = module_0.Section(section_4, var_10)
    assert section_6.children == 'Section(title=" Use \'")'
    int_2 = var_10.__len__()
    assert int_2 == 23
    str_11 = " Use '"
    section_7 = module_0.Section(str_11, str_11)
    var_11 = section_7.__repr__()
    assert var_11 == 'Section(title=" Use \'")'
    int_3 = var_11.__len__()
    assert int_3 == 23
    str_12 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_5 = module_0.Link(str_12, none_type_3)
    int_4 = var_11.__len__()
    assert int_4 == 23
    int_5 = var_11.__len__()
    assert int_5 == 23
    str_13 = " Use '"
    section_8 = module_0.Section(str_13, str_13)
    var_12 = section_8.__repr__()
    assert var_12 == 'Section(title=" Use \'")'
    str_14 = "gfRsC:6&{;|"
    section_9 = module_0.Section(str_14, str_14)
    str_15 = "relative_to_docs"
    link_6 = module_0.Link(str_15, section_9)
    str_16 = "0_~6:m!(f5FgU,:rvz"
    none_type_4 = None
    link_7 = module_0.Link(str_16, none_type_4)
    bytes_0 = b"\x802c35Z\xf8"
    link_8 = module_0.Link(link_7, bytes_0)
    dict_0 = {}
    str_17 = 'y\x0c[fN"W:2&:SWyz~W'
    link_9 = module_0.Link(dict_0, str_17)
    var_13 = link_8.__repr__()
    assert (
        var_13
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )
    str_18 = "0_~6:m!(f5FgU,:rvz"
    none_type_5 = None
    link_10 = module_0.Link(str_18, none_type_5)
    bytes_1 = b"\x802c35Z\xf8"
    link_11 = module_0.Link(link_10, bytes_1)
    var_14 = link_10.__repr__()
    assert var_14 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    iterator_0 = var_14.__iter__()
    module_0.get_navigation(var_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_897():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    bytes_0 = b"\x802c35Z\xf8"
    link_1 = module_0.Link(link_0, bytes_0)
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    int_0 = var_0.__len__()
    assert int_0 == 42
    str_1 = "page_context"
    section_0 = module_0.Section(str_1, str_1)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_2 = "' from the site because it conflicts with '"
    list_0 = []
    section_1 = module_0.Section(str_2, list_0)
    var_1 = section_1.__repr__()
    assert var_1 == "Section(title=\"' from the site because it conflicts with '\")"
    section_2 = module_0.Section(str_2, section_0)
    int_1 = var_1.__len__()
    assert int_1 == 60
    str_3 = "gfRsC:6&{;|"
    section_3 = module_0.Section(str_3, str_3)
    list_1 = []
    section_4 = module_0.Section(section_3, list_1)
    none_type_1 = None
    str_4 = "\n        Perform validation for a value.\n\n        The run_validation method should be implemented by subclasses.\n        "
    link_2 = module_0.Link(none_type_1, str_4)
    var_2 = link_2.__repr__()
    assert (
        var_2
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    str_5 = var_2.__str__()
    assert (
        str_5
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    str_6 = "page_context"
    section_5 = module_0.Section(str_6, str_6)
    str_7 = "' from the site because it conflicts with '"
    list_2 = []
    section_6 = module_0.Section(str_7, list_2)
    section_7 = module_0.Section(section_6, list_2)
    none_type_2 = None
    str_8 = "\n        Perform validation for a value.\n\n        The run_validation method should be implemented by subclasses.\n        "
    link_3 = module_0.Link(none_type_2, str_8)
    var_3 = link_3.__repr__()
    assert (
        var_3
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    str_9 = var_3.__str__()
    assert (
        str_9
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    bool_0 = True
    link_4 = module_0.Link(bool_0, bool_0)
    var_4 = var_3.__repr__()
    assert (
        var_4
        == "\"Link(title=[blank], url='\\\\n        Perform validation for a value.\\\\n\\\\n        The run_validation method should be implemented by subclasses.\\\\n        ')\""
    )
    str_10 = 'C5B_`:"E&+;Y['
    link_5 = module_0.Link(str_10, str_10)
    str_11 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_6 = module_0.Link(str_11, none_type_3)
    var_5 = link_6.__repr__()
    assert var_5 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_6 = var_5.__repr__()
    assert var_6 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    int_2 = var_6.__len__()
    assert int_2 == 44
    str_12 = " Use '"
    section_8 = module_0.Section(str_12, str_12)
    var_7 = section_8.__repr__()
    assert var_7 == 'Section(title=" Use \'")'
    int_3 = var_7.__len__()
    assert int_3 == 23
    var_8 = var_7.__repr__()
    assert var_8 == "'Section(title=\" Use \\'\")'"
    module_0.Navigation(none_type_0, var_5)


@pytest.mark.xfail(strict=True)
def test_case_898():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    bytes_0 = b"\x802c35Z\xf8"
    link_1 = module_0.Link(link_0, bytes_0)
    dict_0 = {}
    str_1 = 'y\x0c[fN"W:2&:SWyz~W'
    link_2 = module_0.Link(dict_0, str_1)
    var_0 = link_1.__repr__()
    assert (
        var_0
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )
    str_2 = "page_context"
    section_0 = module_0.Section(str_2, str_2)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_3 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_3 = module_0.Link(str_3, none_type_1)
    bytes_1 = b"\x802c35Z\xf8"
    link_4 = module_0.Link(link_3, bytes_1)
    var_1 = link_3.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    int_0 = var_1.__len__()
    assert int_0 == 42
    str_4 = "' is included in the 'nav' configuration."
    link_5 = module_0.Link(str_4, str_4)
    module_0.get_navigation(link_5, link_0)


@pytest.mark.xfail(strict=True)
def test_case_899():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_2 = var_1.__repr__()
    assert var_2 == "'\"Link(title=\\'0_~6:m!(f5FgU,:rvz\\', url=None)\"'"
    str_1 = "gfRsC:6&{;|"
    section_0 = module_0.Section(str_1, str_1)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "gfRsC:6&{;|"
    assert section_0.children == "gfRsC:6&{;|"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_2 = " Use '"
    section_1 = module_0.Section(str_2, str_2)
    var_3 = section_1.__repr__()
    assert var_3 == 'Section(title=" Use \'")'
    int_0 = var_3.__len__()
    assert int_0 == 23
    var_4 = var_3.__repr__()
    assert var_4 == "'Section(title=\" Use \\'\")'"
    var_5 = var_4.__repr__()
    assert var_5 == "'\\'Section(title=\" Use \\\\\\'\")\\''"
    str_3 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_3, none_type_1)
    bytes_0 = b"\x802c35Z\xf8"
    link_2 = module_0.Link(link_1, bytes_0)
    dict_0 = {}
    str_4 = 'y\x0c[fN"W:2&:SWyz~W'
    link_3 = module_0.Link(dict_0, str_4)
    var_6 = link_2.__repr__()
    assert (
        var_6
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )
    str_5 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_4 = module_0.Link(str_5, none_type_2)
    var_7 = link_4.__repr__()
    assert var_7 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_8 = var_7.__repr__()
    assert var_8 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_9 = var_7.__repr__()
    assert var_9 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_6 = "jXt{G!+9"
    int_1 = -1857
    link_5 = module_0.Link(str_6, int_1)
    str_7 = " Use '"
    section_2 = module_0.Section(str_7, str_7)
    var_10 = section_2.__repr__()
    assert var_10 == 'Section(title=" Use \'")'
    str_8 = "gfRsC:6&{;|"
    section_3 = module_0.Section(str_8, str_8)
    str_9 = "relative_to_docs"
    link_6 = module_0.Link(str_9, section_3)
    section_4 = module_0.Section(section_2, var_10)
    assert section_4.children == 'Section(title=" Use \'")'
    str_10 = "page_context"
    section_5 = module_0.Section(str_10, str_10)
    str_11 = "' from the site because it conflicts with '"
    list_0 = []
    section_6 = module_0.Section(str_11, list_0)
    section_7 = module_0.Section(section_6, list_0)
    str_12 = " Use '"
    section_8 = module_0.Section(str_12, str_12)
    var_11 = section_8.__repr__()
    assert var_11 == 'Section(title=" Use \'")'
    int_2 = var_11.__len__()
    assert int_2 == 23
    str_13 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_7 = module_0.Link(str_13, none_type_3)
    int_3 = var_11.__len__()
    assert int_3 == 23
    module_1.urlsplit(link_0, section_7)


@pytest.mark.xfail(strict=True)
def test_case_900():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    int_0 = var_0.__len__()
    assert int_0 == 23
    section_1 = module_0.Section(var_0, int_0)
    assert section_1.title == 'Section(title=" Use \'")'
    assert section_1.children == 23
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_1, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_1 = link_0.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_2 = var_1.__repr__()
    assert var_2 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_2 = var_1.__str__()
    assert str_2 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_3 = var_1.__repr__()
    assert var_3 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    module_0.Navigation(var_2, var_3)


@pytest.mark.xfail(strict=True)
def test_case_901():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    str_1 = "gfRsC:6&{;|"
    section_1 = module_0.Section(str_1, str_1)
    str_2 = "relative_to_docs"
    link_0 = module_0.Link(str_2, section_1)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "relative_to_docs"
    assert (
        f"{type(link_0.url).__module__}.{type(link_0.url).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    none_type_0 = None
    section_2 = module_0.Section(none_type_0, none_type_0)
    var_1 = module_1.urlsplit(none_type_0)
    iterator_0 = var_1.__iter__()
    dict_0 = {}
    str_3 = 'y\x0c[fN"W:2&:SWyz~W'
    link_1 = module_0.Link(dict_0, str_3)
    str_4 = "gfRsC:6&{;|"
    section_3 = module_0.Section(str_4, str_4)
    str_5 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_2 = module_0.Link(str_5, none_type_1)
    var_2 = link_2.__repr__()
    assert var_2 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_3 = var_2.__repr__()
    assert var_3 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_4 = var_2.__repr__()
    assert var_4 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_5 = link_2.__repr__()
    assert var_5 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_6 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_3 = module_0.Link(str_6, none_type_2)
    var_6 = link_3.__repr__()
    assert var_6 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_7 = var_6.__repr__()
    assert var_7 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_8 = var_6.__repr__()
    assert var_8 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_9 = link_3.__repr__()
    assert var_9 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_7 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_4 = module_0.Link(str_7, none_type_3)
    var_10 = link_4.__repr__()
    assert var_10 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_11 = var_10.__repr__()
    assert var_11 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_8 = var_10.__str__()
    assert str_8 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_9 = "jXt{G!+9"
    int_0 = -1857
    link_5 = module_0.Link(str_9, int_0)
    module_0.get_navigation(str_8, var_8)


@pytest.mark.xfail(strict=True)
def test_case_902():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    str_1 = "gfRsC:6&{;|"
    section_1 = module_0.Section(str_1, str_1)
    str_2 = "relative_to_docs"
    link_0 = module_0.Link(str_2, section_1)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "relative_to_docs"
    assert (
        f"{type(link_0.url).__module__}.{type(link_0.url).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    section_2 = module_0.Section(section_0, var_0)
    assert section_2.children == 'Section(title=" Use \'")'
    str_3 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_1 = module_0.Link(str_3, none_type_0)
    var_1 = link_1.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_2 = var_1.__repr__()
    assert var_2 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_4 = var_1.__str__()
    assert str_4 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    none_type_1 = None
    section_3 = module_0.Section(none_type_1, none_type_1)
    str_5 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_2 = module_0.Link(str_5, none_type_2)
    var_3 = link_2.__repr__()
    assert var_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_4 = var_3.__repr__()
    assert var_4 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_5 = var_3.__repr__()
    assert var_5 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_6 = link_2.__repr__()
    assert var_6 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    bool_0 = True
    link_3 = module_0.Link(bool_0, bool_0)
    str_6 = " Use '"
    section_4 = module_0.Section(str_6, str_6)
    var_7 = section_4.__repr__()
    assert var_7 == 'Section(title=" Use \'")'
    var_8 = var_7.__repr__()
    assert var_8 == "'Section(title=\" Use \\'\")'"
    str_7 = " Use '"
    section_5 = module_0.Section(str_7, str_7)
    var_9 = section_5.__repr__()
    assert var_9 == 'Section(title=" Use \'")'
    str_8 = 'C5B_`:"E&+;Y['
    link_4 = module_0.Link(str_8, str_8)
    int_0 = var_9.__len__()
    assert int_0 == 23
    section_6 = module_0.Section(var_9, var_9)
    assert section_6.title == 'Section(title=" Use \'")'
    assert section_6.children == 'Section(title=" Use \'")'
    link_5 = module_0.Link(section_5, str_7)
    str_9 = " Use '"
    section_7 = module_0.Section(str_9, str_9)
    var_10 = section_7.__repr__()
    assert var_10 == 'Section(title=" Use \'")'
    str_10 = 'C5B_`:"E&+;Y['
    link_6 = module_0.Link(str_10, str_10)
    int_1 = var_10.__len__()
    assert int_1 == 23
    str_11 = "$9.}1Av5,.}"
    link_7 = module_0.Link(str_11, str_11)
    var_11 = var_10.__repr__()
    assert var_11 == "'Section(title=\" Use \\'\")'"
    str_12 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_8 = module_0.Link(str_12, none_type_3)
    bytes_0 = b"\x802c35Z\xf8"
    link_9 = module_0.Link(link_8, bytes_0)
    var_12 = link_8.__repr__()
    assert var_12 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    int_2 = var_12.__len__()
    assert int_2 == 42
    module_0.Navigation(bytes_0, var_5)


@pytest.mark.xfail(strict=True)
def test_case_903():
    bool_0 = True
    link_0 = module_0.Link(bool_0, bool_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title is True
    assert link_0.url is True
    module_2.file_sort_key(link_0)


@pytest.mark.xfail(strict=True)
def test_case_904():
    str_0 = "page_context"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = "' from the site because it conflicts with '"
    list_0 = []
    section_1 = module_0.Section(str_1, list_0)
    var_0 = section_1.__repr__()
    assert var_0 == "Section(title=\"' from the site because it conflicts with '\")"
    section_2 = module_0.Section(str_1, section_0)
    int_0 = var_0.__len__()
    assert int_0 == 60
    str_2 = "page_context"
    section_3 = module_0.Section(str_2, str_2)
    str_3 = "' from the site because it conflicts with '"
    list_1 = []
    section_4 = module_0.Section(str_3, list_1)
    var_1 = section_4.__repr__()
    assert var_1 == "Section(title=\"' from the site because it conflicts with '\")"
    section_5 = module_0.Section(str_3, section_3)
    str_4 = " Use '"
    section_6 = module_0.Section(str_4, str_4)
    var_2 = section_6.__repr__()
    assert var_2 == 'Section(title=" Use \'")'
    int_1 = var_2.__len__()
    assert int_1 == 23
    str_5 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_5, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    int_2 = var_2.__len__()
    assert int_2 == 23
    int_3 = var_2.__len__()
    assert int_3 == 23
    str_6 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_6, none_type_1)
    bytes_0 = b"\x802c35Z\xf8"
    link_2 = module_0.Link(link_1, bytes_0)
    bool_0 = True
    section_7 = module_0.Section(bool_0, bool_0)
    var_3 = link_2.__repr__()
    assert (
        var_3
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )
    str_7 = var_3.__str__()
    assert (
        str_7
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )
    str_8 = "gfRsC:6&{;|"
    section_8 = module_0.Section(str_8, str_8)
    var_4 = section_8.__repr__()
    assert var_4 == "Section(title='gfRsC:6&{;|')"
    str_9 = "page_context"
    section_9 = module_0.Section(str_9, str_9)
    str_10 = "' from the site because it conflicts with '"
    list_2 = []
    section_10 = module_0.Section(str_10, list_2)
    section_11 = module_0.Section(section_10, list_2)
    section_12 = module_0.Section(str_10, list_2)
    str_11 = "page_context"
    section_13 = module_0.Section(str_11, str_11)
    str_12 = " Use '"
    section_14 = module_0.Section(str_12, str_12)
    var_5 = section_14.__repr__()
    assert var_5 == 'Section(title=" Use \'")'
    var_6 = var_5.__repr__()
    assert var_6 == "'Section(title=\" Use \\'\")'"
    bool_1 = True
    link_3 = module_0.Link(bool_1, bool_1)
    str_13 = "page_context"
    section_15 = module_0.Section(str_13, str_13)
    str_14 = "' from the site because it conflicts with '"
    list_3 = []
    section_16 = module_0.Section(str_14, list_3)
    var_7 = section_15.__repr__()
    assert var_7 == "Section(title='page_context')"
    var_5.read_source(int_1)


@pytest.mark.xfail(strict=True)
def test_case_905():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_1, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_1 = link_0.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    int_0 = var_1.__len__()
    assert int_0 == 42
    str_2 = "' is included in the 'nav' configuration."
    link_1 = module_0.Link(str_2, str_2)
    str_3 = "gfRsC:6&{;|"
    section_1 = module_0.Section(str_3, str_3)
    list_0 = []
    section_2 = module_0.Section(section_1, list_0)
    str_4 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_2 = module_0.Link(str_4, none_type_1)
    var_2 = link_2.__repr__()
    assert var_2 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_3 = var_2.__repr__()
    assert var_3 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_5 = var_2.__str__()
    assert str_5 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_6 = 'C5B_`:"E&+;Y['
    link_3 = module_0.Link(str_6, str_6)
    int_1 = var_2.__len__()
    assert int_1 == 42
    str_7 = "page_context"
    section_3 = module_0.Section(str_7, str_7)
    str_8 = "' from the site because it conflicts with '"
    list_1 = []
    section_4 = module_0.Section(str_8, list_1)
    var_4 = section_4.__repr__()
    assert var_4 == "Section(title=\"' from the site because it conflicts with '\")"
    section_5 = module_0.Section(str_8, section_3)
    dict_0 = {}
    str_9 = 'y\x0c[fN"W:2&:SWyz~W'
    link_4 = module_0.Link(dict_0, str_9)
    section_6 = module_0.Section(str_9, str_9)
    section_7 = module_0.Section(str_9, str_9)
    var_5 = var_1.__repr__()
    assert var_5 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    module_0.Navigation(none_type_0, var_5)


@pytest.mark.xfail(strict=True)
def test_case_906():
    absolute_links_validation_value_0 = (
        module_6._AbsoluteLinksValidationValue.RELATIVE_TO_DOCS
    )
    module_3.nest_paths(absolute_links_validation_value_0)


@pytest.mark.xfail(strict=True)
def test_case_907():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_2 = var_1.__repr__()
    assert var_2 == "'\"Link(title=\\'0_~6:m!(f5FgU,:rvz\\', url=None)\"'"
    dict_0 = {}
    str_1 = 'y\x0c[fN"W:2&:SWyz~W'
    link_1 = module_0.Link(dict_0, str_1)
    section_0 = module_0.Section(str_1, str_1)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == 'y\x0c[fN"W:2&:SWyz~W'
    assert section_0.children == 'y\x0c[fN"W:2&:SWyz~W'
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    bool_0 = True
    link_2 = module_0.Link(bool_0, bool_0)
    module_1.urlsplit(var_2, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_908():
    bool_0 = True
    section_0 = module_0.Section(bool_0, bool_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title is True
    assert section_0.children is True
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    none_type_0 = None
    module_0.get_navigation(none_type_0, section_0)


@pytest.mark.xfail(strict=True)
def test_case_909():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    bytes_0 = b"\x802c35Z\xf8"
    link_1 = module_0.Link(link_0, bytes_0)
    bool_0 = True
    section_0 = module_0.Section(bool_0, bool_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title is True
    assert section_0.children is True
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = link_1.__repr__()
    assert (
        var_0
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )
    str_1 = var_0.__str__()
    assert (
        str_1
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_2 = module_0.Link(str_2, none_type_1)
    var_1 = link_2.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_2 = var_1.__repr__()
    assert var_2 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_3 = var_1.__repr__()
    assert var_3 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_3 = " Use '"
    section_1 = module_0.Section(str_3, str_3)
    var_4 = section_1.__repr__()
    assert var_4 == 'Section(title=" Use \'")'
    int_0 = var_4.__len__()
    assert int_0 == 23
    section_2 = module_0.Section(var_4, int_0)
    assert section_2.title == 'Section(title=" Use \'")'
    assert section_2.children == 23
    str_4 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_3 = module_0.Link(str_4, none_type_2)
    bytes_1 = b"\x802c35Z\xf8"
    link_4 = module_0.Link(link_3, bytes_1)
    var_5 = link_3.__repr__()
    assert var_5 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    int_1 = var_5.__len__()
    assert int_1 == 42
    dict_0 = {}
    str_5 = 'y\x0c[fN"W:2&:SWyz~W'
    link_5 = module_0.Link(dict_0, str_5)
    section_3 = module_0.Section(str_5, str_5)
    section_4 = module_0.Section(str_5, str_5)
    str_6 = "$9.}1Av5,.}"
    link_6 = module_0.Link(str_6, str_6)
    str_7 = "page_context"
    section_5 = module_0.Section(str_7, str_7)
    str_8 = "' from the site because it conflicts with '"
    list_0 = []
    section_6 = module_0.Section(str_8, list_0)
    var_6 = section_6.__repr__()
    assert var_6 == "Section(title=\"' from the site because it conflicts with '\")"
    section_7 = module_0.Section(str_8, section_5)
    int_2 = var_6.__len__()
    assert int_2 == 60
    str_9 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_7 = module_0.Link(str_9, none_type_3)
    var_7 = link_7.__repr__()
    assert var_7 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_8 = var_7.__repr__()
    assert var_8 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_10 = var_7.__str__()
    assert str_10 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_11 = 'C5B_`:"E&+;Y['
    link_8 = module_0.Link(str_11, str_11)
    int_3 = var_7.__len__()
    assert int_3 == 42
    str_12 = "jXt{G!+9"
    int_4 = -1857
    link_9 = module_0.Link(str_12, int_4)
    module_0.Navigation(var_2, var_4)


@pytest.mark.xfail(strict=True)
def test_case_910():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    iterator_0 = var_0.__iter__()
    var_2 = var_0.__repr__()
    assert var_2 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    module_0.get_navigation(var_1, str_0)


@pytest.mark.xfail(strict=True)
def test_case_911():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    bytes_0 = b"\x802c35Z\xf8"
    link_1 = module_0.Link(link_0, bytes_0)
    bool_0 = True
    section_0 = module_0.Section(bool_0, bool_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title is True
    assert section_0.children is True
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = link_1.__repr__()
    assert (
        var_0
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )
    str_1 = var_0.__str__()
    assert (
        str_1
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )
    str_2 = "' is included in the 'nav' configuration."
    link_2 = module_0.Link(str_2, str_2)
    str_3 = " Use '"
    section_1 = module_0.Section(str_3, str_3)
    var_1 = section_1.__repr__()
    assert var_1 == 'Section(title=" Use \'")'
    int_0 = var_1.__len__()
    assert int_0 == 23
    str_4 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_3 = module_0.Link(str_4, none_type_1)
    int_1 = var_1.__len__()
    assert int_1 == 23
    var_0.render(none_type_1, int_0)


@pytest.mark.xfail(strict=True)
def test_case_912():
    str_0 = "page_context"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = "' from the site because it conflicts with '"
    list_0 = []
    section_1 = module_0.Section(str_1, list_0)
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_2, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    bytes_0 = b"\x802c35Z\xf8"
    link_1 = module_0.Link(link_0, bytes_0)
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_3 = "page_context"
    section_2 = module_0.Section(str_3, str_3)
    str_4 = "' from the site because it conflicts with '"
    list_1 = []
    section_3 = module_0.Section(str_4, list_1)
    section_4 = module_0.Section(section_3, list_1)
    str_5 = "page_context"
    section_5 = module_0.Section(str_5, str_5)
    str_6 = "' from the site because it conflicts with '"
    list_2 = []
    section_6 = module_0.Section(str_6, list_2)
    var_1 = section_6.__repr__()
    assert var_1 == "Section(title=\"' from the site because it conflicts with '\")"
    str_7 = "page_context"
    section_7 = module_0.Section(str_7, str_7)
    str_8 = "' from the site because it conflicts with '"
    list_3 = []
    section_8 = module_0.Section(str_8, list_3)
    section_9 = module_0.Section(section_8, list_3)
    section_10 = module_0.Section(str_8, list_3)
    none_type_1 = None
    set_0 = {none_type_1, none_type_1, none_type_1, none_type_1}
    link_2 = module_0.Link(none_type_1, set_0)
    str_9 = "gfRsC:6&{;|"
    section_11 = module_0.Section(str_9, str_9)
    var_2 = section_11.__repr__()
    assert var_2 == "Section(title='gfRsC:6&{;|')"
    str_10 = " Use '"
    section_12 = module_0.Section(str_10, str_10)
    var_3 = section_12.__repr__()
    assert var_3 == 'Section(title=" Use \'")'
    int_0 = var_3.__len__()
    assert int_0 == 23
    str_11 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_3 = module_0.Link(str_11, none_type_2)
    int_1 = var_3.__len__()
    assert int_1 == 23
    int_2 = var_3.__len__()
    assert int_2 == 23
    str_12 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_4 = module_0.Link(str_12, none_type_3)
    var_4 = link_4.__repr__()
    assert var_4 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_5 = var_4.__repr__()
    assert var_5 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_6 = var_4.__repr__()
    assert var_6 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_7 = link_4.__repr__()
    assert var_7 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    bool_0 = True
    section_13 = module_0.Section(bool_0, bool_0)
    module_1.urlsplit(str_6, section_0)


@pytest.mark.xfail(strict=True)
def test_case_913():
    bool_0 = True
    section_0 = module_0.Section(bool_0, bool_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title is True
    assert section_0.children is True
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    section_1 = module_0.Section(none_type_0, var_1)
    assert section_1.children == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_1 = " Use '"
    section_2 = module_0.Section(str_1, str_1)
    var_2 = section_2.__repr__()
    assert var_2 == 'Section(title=" Use \'")'
    int_0 = var_2.__len__()
    assert int_0 == 23
    str_2 = " Use '"
    section_3 = module_0.Section(str_2, str_2)
    var_3 = section_3.__repr__()
    assert var_3 == 'Section(title=" Use \'")'
    str_3 = " Use '"
    section_4 = module_0.Section(str_3, str_3)
    var_4 = section_4.__repr__()
    assert var_4 == 'Section(title=" Use \'")'
    section_5 = module_0.Section(str_3, var_4)
    assert section_5.children == 'Section(title=" Use \'")'
    str_4 = " Use '"
    section_6 = module_0.Section(str_4, str_4)
    var_5 = section_6.__repr__()
    assert var_5 == 'Section(title=" Use \'")'
    var_6 = var_5.__repr__()
    assert var_6 == "'Section(title=\" Use \\'\")'"
    set_0 = set()
    navigation_0 = module_0.Navigation(set_0, set_0)
    assert (
        f"{type(navigation_0).__module__}.{type(navigation_0).__qualname__}"
        == "mkdocs.structure.nav.Navigation"
    )
    assert len(navigation_0) == 0
    str_5 = navigation_0.__str__()
    iterator_0 = var_6.__iter__()
    str_6 = "page_context"
    section_7 = module_0.Section(str_6, str_6)
    str_7 = "' from the site because it conflicts with '"
    list_0 = []
    section_8 = module_0.Section(str_7, list_0)
    str_8 = "localhost"
    link_1 = module_0.Link(str_7, str_8)
    str_9 = " Use '"
    section_9 = module_0.Section(str_9, str_9)
    var_7 = section_9.__repr__()
    assert var_7 == 'Section(title=" Use \'")'
    str_10 = 'C5B_`:"E&+;Y['
    link_2 = module_0.Link(str_10, str_10)
    int_1 = var_7.__len__()
    assert int_1 == 23
    section_10 = module_0.Section(var_7, var_7)
    assert section_10.title == 'Section(title=" Use \'")'
    assert section_10.children == 'Section(title=" Use \'")'
    str_11 = "page_context"
    section_11 = module_0.Section(str_11, str_11)
    str_12 = "' from the site because it conflicts with '"
    list_1 = []
    section_12 = module_0.Section(str_12, list_1)
    section_13 = module_0.Section(section_12, list_1)
    str_13 = "page_context"
    section_14 = module_0.Section(str_13, str_13)
    str_14 = "' from the site because it conflicts with '"
    list_2 = []
    section_15 = module_0.Section(str_14, list_2)
    var_8 = section_14.__repr__()
    assert var_8 == "Section(title='page_context')"
    dict_0 = {}
    str_15 = 'y\x0c[fN"W:2&:SWyz~W'
    link_3 = module_0.Link(dict_0, str_15)
    section_16 = module_0.Section(str_15, str_15)
    section_17 = module_0.Section(str_15, str_15)
    set_1 = {section_2}
    module_0.get_navigation(section_0, set_1)


@pytest.mark.xfail(strict=True)
def test_case_914():
    str_0 = "page_context"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = "' from the site because it conflicts with '"
    list_0 = []
    section_1 = module_0.Section(str_1, list_0)
    section_2 = module_0.Section(section_1, list_0)
    section_3 = module_0.Section(str_1, list_0)
    str_2 = " Use '"
    section_4 = module_0.Section(str_2, str_2)
    var_0 = section_4.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    str_3 = "gfRsC:6&{;|"
    section_5 = module_0.Section(str_3, str_3)
    str_4 = "relative_to_docs"
    link_0 = module_0.Link(str_4, section_5)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "relative_to_docs"
    assert (
        f"{type(link_0.url).__module__}.{type(link_0.url).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    section_6 = module_0.Section(section_4, var_0)
    assert section_6.children == 'Section(title=" Use \'")'
    str_5 = "gfRsC:6&{;|"
    section_7 = module_0.Section(str_5, str_5)
    var_1 = section_7.__repr__()
    assert var_1 == "Section(title='gfRsC:6&{;|')"
    str_6 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_1 = module_0.Link(str_6, none_type_0)
    var_2 = link_1.__repr__()
    assert var_2 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_3 = var_2.__repr__()
    assert var_3 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    module_0.Navigation(str_1, var_2)


@pytest.mark.xfail(strict=True)
def test_case_915():
    bool_0 = True
    section_0 = module_0.Section(bool_0, bool_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title is True
    assert section_0.children is True
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    section_1 = module_0.Section(none_type_0, var_1)
    assert section_1.children == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_1 = " Use '"
    section_2 = module_0.Section(str_1, str_1)
    var_2 = section_2.__repr__()
    assert var_2 == 'Section(title=" Use \'")'
    str_2 = "gfRsC:6&{;|"
    section_3 = module_0.Section(str_2, str_2)
    str_3 = "relative_to_docs"
    link_1 = module_0.Link(str_3, section_3)
    str_4 = "gfRsC:6&{;|"
    section_4 = module_0.Section(str_4, str_4)
    str_5 = " Use '"
    section_5 = module_0.Section(str_5, str_5)
    var_3 = section_5.__repr__()
    assert var_3 == 'Section(title=" Use \'")'
    int_0 = var_3.__len__()
    assert int_0 == 23
    var_4 = var_3.__repr__()
    assert var_4 == "'Section(title=\" Use \\'\")'"
    var_5 = var_4.__repr__()
    assert var_5 == "'\\'Section(title=\" Use \\\\\\'\")\\''"
    str_6 = " Use '"
    section_6 = module_0.Section(str_6, str_6)
    var_6 = section_6.__repr__()
    assert var_6 == 'Section(title=" Use \'")'
    str_7 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_2 = module_0.Link(str_7, none_type_1)
    bytes_0 = b"\x802c35Z\xf8"
    link_3 = module_0.Link(link_2, bytes_0)
    iterator_0 = var_6.__iter__()
    str_8 = " Use '"
    section_7 = module_0.Section(str_8, str_8)
    var_7 = section_7.__repr__()
    assert var_7 == 'Section(title=" Use \'")'
    str_9 = 'C5B_`:"E&+;Y['
    link_4 = module_0.Link(str_9, str_9)
    int_1 = var_7.__len__()
    assert int_1 == 23
    section_8 = module_0.Section(var_7, var_7)
    assert section_8.title == 'Section(title=" Use \'")'
    assert section_8.children == 'Section(title=" Use \'")'
    link_5 = module_0.Link(section_7, str_8)
    str_10 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_6 = module_0.Link(str_10, none_type_2)
    var_8 = link_6.__repr__()
    assert var_8 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_9 = var_8.__repr__()
    assert var_9 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_10 = var_8.__repr__()
    assert var_10 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_11 = link_6.__repr__()
    assert var_11 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_11 = "page_context"
    section_9 = module_0.Section(str_11, str_11)
    str_12 = "' from the site because it conflicts with '"
    list_0 = []
    section_10 = module_0.Section(str_12, list_0)
    var_12 = section_10.__repr__()
    assert var_12 == "Section(title=\"' from the site because it conflicts with '\")"
    section_11 = module_0.Section(str_12, section_9)
    int_2 = var_12.__len__()
    assert int_2 == 60
    str_13 = " Use '"
    section_12 = module_0.Section(str_13, str_13)
    var_13 = section_12.__repr__()
    assert var_13 == 'Section(title=" Use \'")'
    int_3 = var_13.__len__()
    assert int_3 == 23
    section_13 = module_0.Section(var_13, int_3)
    assert section_13.title == 'Section(title=" Use \'")'
    assert section_13.children == 23
    none_type_3 = None
    str_14 = "\n        Perform validation for a value.\n\n        The run_validation method should be implemented by subclasses.\n        "
    link_7 = module_0.Link(none_type_3, str_14)
    var_14 = link_7.__repr__()
    assert (
        var_14
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    str_15 = var_14.__str__()
    assert (
        str_15
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    bool_1 = True
    link_8 = module_0.Link(bool_1, bool_1)
    var_15 = var_14.__repr__()
    assert (
        var_15
        == "\"Link(title=[blank], url='\\\\n        Perform validation for a value.\\\\n\\\\n        The run_validation method should be implemented by subclasses.\\\\n        ')\""
    )
    str_16 = " Use '"
    section_14 = module_0.Section(str_16, str_16)
    var_16 = section_14.__repr__()
    assert var_16 == 'Section(title=" Use \'")'
    str_17 = "0_~6:m!(f5FgU,:rvz"
    none_type_4 = None
    link_9 = module_0.Link(str_17, none_type_4)
    var_17 = link_9.__repr__()
    assert var_17 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    int_4 = var_17.__len__()
    assert int_4 == 42
    set_0 = {section_0, section_2, section_1}
    module_0.Navigation(set_0, var_6)


@pytest.mark.xfail(strict=True)
def test_case_916():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_1 = var_0.__str__()
    assert str_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_2 = var_0.__repr__()
    assert var_2 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_2 = "jXt{G!+9"
    int_0 = -1857
    link_1 = module_0.Link(str_2, int_0)
    module_0.Navigation(var_0, str_1)


@pytest.mark.xfail(strict=True)
def test_case_917():
    bool_0 = True
    section_0 = module_0.Section(bool_0, bool_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title is True
    assert section_0.children is True
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_1 = " Use '"
    section_1 = module_0.Section(str_1, str_1)
    var_1 = section_1.__repr__()
    assert var_1 == 'Section(title=" Use \'")'
    module_2.file_sort_key(section_0)


@pytest.mark.xfail(strict=True)
def test_case_918():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    str_1 = "gfRsC:6&{;|"
    section_1 = module_0.Section(str_1, str_1)
    str_2 = "relative_to_docs"
    link_0 = module_0.Link(str_2, section_1)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "relative_to_docs"
    assert (
        f"{type(link_0.url).__module__}.{type(link_0.url).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    none_type_0 = None
    str_3 = "\n        Perform validation for a value.\n\n        The run_validation method should be implemented by subclasses.\n        "
    link_1 = module_0.Link(none_type_0, str_3)
    var_1 = link_1.__repr__()
    assert (
        var_1
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    str_4 = var_1.__str__()
    assert (
        str_4
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    str_5 = "page_context"
    section_2 = module_0.Section(str_5, str_5)
    str_6 = "' from the site because it conflicts with '"
    list_0 = []
    section_3 = module_0.Section(str_6, list_0)
    var_2 = section_3.__repr__()
    assert var_2 == "Section(title=\"' from the site because it conflicts with '\")"
    str_7 = "\\l;/\nKHZ=K\nU\no|2{loH"
    link_2 = module_0.Link(str_5, str_7)
    str_8 = "page_context"
    section_4 = module_0.Section(str_8, str_8)
    str_9 = "' from the site because it conflicts with '"
    list_1 = []
    section_5 = module_0.Section(str_9, list_1)
    section_6 = module_0.Section(section_5, list_1)
    str_10 = 'C5B_`:"E&+;Y['
    link_3 = module_0.Link(str_10, str_10)
    str_11 = " Use '"
    section_7 = module_0.Section(str_11, str_11)
    var_3 = section_7.__repr__()
    assert var_3 == 'Section(title=" Use \'")'
    var_4 = var_3.__repr__()
    assert var_4 == "'Section(title=\" Use \\'\")'"
    var_5 = var_3.__repr__()
    assert var_5 == "'Section(title=\" Use \\'\")'"
    str_12 = " Use '"
    section_8 = module_0.Section(str_12, str_12)
    var_6 = section_8.__repr__()
    assert var_6 == 'Section(title=" Use \'")'
    var_7 = var_6.__repr__()
    assert var_7 == "'Section(title=\" Use \\'\")'"
    dict_0 = {}
    str_13 = 'y\x0c[fN"W:2&:SWyz~W'
    link_4 = module_0.Link(dict_0, str_13)
    section_9 = module_0.Section(str_12, var_7)
    assert section_9.children == "'Section(title=\" Use \\'\")'"
    str_14 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_5 = module_0.Link(str_14, none_type_1)
    var_8 = link_5.__repr__()
    assert var_8 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_9 = var_8.__repr__()
    assert var_9 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_10 = var_8.__repr__()
    assert var_10 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_15 = " Use '"
    section_10 = module_0.Section(str_15, str_15)
    var_11 = section_10.__repr__()
    assert var_11 == 'Section(title=" Use \'")'
    section_11 = module_0.Section(str_15, var_11)
    assert section_11.children == 'Section(title=" Use \'")'
    module_0.Navigation(var_3, var_6)


@pytest.mark.xfail(strict=True)
def test_case_919():
    str_0 = "N>x@WAsK\x0bK0dp"
    build_error_0 = module_5.BuildError(str_0)
    str_1 = "%R"
    build_error_1 = module_5.BuildError(str_1)
    tuple_0 = (build_error_1,)
    module_3.nest_paths(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_920():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    int_0 = var_0.__len__()
    assert int_0 == 23
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_1, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    int_1 = var_0.__len__()
    assert int_1 == 23
    str_2 = "gfRsC:6&{;|"
    section_1 = module_0.Section(str_2, str_2)
    str_3 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_3, none_type_1)
    var_1 = link_1.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_2 = var_1.__repr__()
    assert var_2 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_3 = var_1.__repr__()
    assert var_3 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_4 = link_1.__repr__()
    assert var_4 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    module_0.get_navigation(none_type_0, none_type_1)


@pytest.mark.xfail(strict=True)
def test_case_921():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    var_1 = var_0.__repr__()
    assert var_1 == "'Section(title=\" Use \\'\")'"
    str_1 = "page_context"
    section_1 = module_0.Section(str_1, str_1)
    str_2 = "' from the site because it conflicts with '"
    list_0 = []
    section_2 = module_0.Section(str_2, list_0)
    var_2 = section_2.__repr__()
    assert var_2 == "Section(title=\"' from the site because it conflicts with '\")"
    section_3 = module_0.Section(str_2, section_1)
    int_0 = var_2.__len__()
    assert int_0 == 60
    str_3 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_3, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_3 = link_0.__repr__()
    assert var_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_4 = var_3.__repr__()
    assert var_4 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_5 = var_3.__repr__()
    assert var_5 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_6 = link_0.__repr__()
    assert var_6 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_4 = "gfRsC:6&{;|"
    section_4 = module_0.Section(str_4, str_4)
    var_7 = section_4.__repr__()
    assert var_7 == "Section(title='gfRsC:6&{;|')"
    str_5 = " Use '"
    section_5 = module_0.Section(str_5, str_5)
    var_8 = section_5.__repr__()
    assert var_8 == 'Section(title=" Use \'")'
    var_9 = var_8.__repr__()
    assert var_9 == "'Section(title=\" Use \\'\")'"
    set_0 = set()
    navigation_0 = module_0.Navigation(set_0, set_0)
    assert (
        f"{type(navigation_0).__module__}.{type(navigation_0).__qualname__}"
        == "mkdocs.structure.nav.Navigation"
    )
    assert len(navigation_0) == 0
    str_6 = navigation_0.__str__()
    iterator_0 = var_9.__iter__()
    str_7 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_7, none_type_1)
    var_10 = link_1.__repr__()
    assert var_10 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_11 = var_10.__repr__()
    assert var_11 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_12 = var_10.__repr__()
    assert var_12 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    bool_0 = True
    link_2 = module_0.Link(bool_0, bool_0)
    str_8 = " Use '"
    section_6 = module_0.Section(str_8, str_8)
    var_13 = section_6.__repr__()
    assert var_13 == 'Section(title=" Use \'")'
    str_9 = 'C5B_`:"E&+;Y['
    link_3 = module_0.Link(str_9, str_9)
    int_1 = var_13.__len__()
    assert int_1 == 23
    section_7 = module_0.Section(str_8, var_13)
    assert section_7.children == 'Section(title=" Use \'")'
    list_1 = [var_9, var_12, var_9, var_11]
    module_0.Navigation(var_4, list_1)


@pytest.mark.xfail(strict=True)
def test_case_922():
    none_type_0 = None
    module_0.get_navigation(none_type_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_923():
    str_0 = "jXt{G!+9"
    int_0 = -1857
    link_0 = module_0.Link(str_0, int_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "jXt{G!+9"
    assert link_0.url == -1857
    none_type_0 = None
    module_0.get_navigation(none_type_0, link_0)


@pytest.mark.xfail(strict=True)
def test_case_924():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    bytes_0 = b"\x802c35Z\xf8"
    link_1 = module_0.Link(link_0, bytes_0)
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    bool_0 = True
    link_2 = module_0.Link(bool_0, bool_0)
    str_1 = "page_context"
    section_0 = module_0.Section(str_1, str_1)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_2 = "' from the site because it conflicts with '"
    list_0 = []
    section_1 = module_0.Section(str_2, list_0)
    var_1 = section_1.__repr__()
    assert var_1 == "Section(title=\"' from the site because it conflicts with '\")"
    section_2 = module_0.Section(str_2, section_0)
    bool_1 = True
    section_3 = module_0.Section(bool_1, bool_1)
    str_3 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_3 = module_0.Link(str_3, none_type_1)
    var_2 = link_3.__repr__()
    assert var_2 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_3 = var_2.__repr__()
    assert var_3 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    section_4 = module_0.Section(none_type_1, var_3)
    assert section_4.children == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    dict_0 = {}
    str_4 = 'y\x0c[fN"W:2&:SWyz~W'
    link_4 = module_0.Link(dict_0, str_4)
    section_5 = module_0.Section(str_4, str_4)
    str_5 = "page_context"
    section_6 = module_0.Section(str_5, str_5)
    str_6 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_5 = module_0.Link(str_6, none_type_2)
    var_4 = link_5.__repr__()
    assert var_4 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_5 = section_6.__repr__()
    assert var_5 == "Section(title='page_context')"
    str_7 = 'C5B_`:"E&+;Y['
    link_6 = module_0.Link(str_7, str_7)
    str_8 = " Use '"
    section_7 = module_0.Section(str_8, str_8)
    var_6 = section_7.__repr__()
    assert var_6 == 'Section(title=" Use \'")'
    str_9 = "gfRsC:6&{;|"
    section_8 = module_0.Section(str_9, str_9)
    str_10 = "relative_to_docs"
    link_7 = module_0.Link(str_10, section_8)
    section_9 = module_0.Section(section_7, var_6)
    assert section_9.children == 'Section(title=" Use \'")'
    str_11 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_8 = module_0.Link(str_11, none_type_3)
    var_7 = link_8.__repr__()
    assert var_7 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_8 = var_7.__repr__()
    assert var_8 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    iterator_0 = var_7.__iter__()
    str_12 = "page_context"
    section_10 = module_0.Section(str_12, str_12)
    str_13 = "' from the site because it conflicts with '"
    list_1 = []
    section_11 = module_0.Section(str_13, list_1)
    section_12 = module_0.Section(section_11, list_1)
    module_0.Navigation(var_4, bool_1)


def test_case_925():
    pass


@pytest.mark.xfail(strict=True)
def test_case_926():
    dict_0 = {}
    str_0 = 'y\x0c[fN"W:2&:SWyz~W'
    link_0 = module_0.Link(dict_0, str_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == {}
    assert link_0.url == 'y\x0c[fN"W:2&:SWyz~W'
    str_1 = "page_context"
    section_0 = module_0.Section(str_1, str_1)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_2 = "' from the site because it conflicts with '"
    list_0 = []
    section_1 = module_0.Section(str_2, list_0)
    var_0 = section_0.__repr__()
    assert var_0 == "Section(title='page_context')"
    str_3 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_1 = module_0.Link(str_3, none_type_0)
    bytes_0 = b"\x802c35Z\xf8"
    link_2 = module_0.Link(link_1, bytes_0)
    var_1 = link_1.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_2 = var_1.__repr__()
    assert var_2 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    module_0.get_navigation(str_2, link_0)


@pytest.mark.xfail(strict=True)
def test_case_927():
    dict_0 = {}
    str_0 = 'y\x0c[fN"W:2&:SWyz~W'
    link_0 = module_0.Link(dict_0, str_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == {}
    assert link_0.url == 'y\x0c[fN"W:2&:SWyz~W'
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == 'y\x0c[fN"W:2&:SWyz~W'
    assert section_0.children == 'y\x0c[fN"W:2&:SWyz~W'
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_1 = module_0.Link(str_1, none_type_0)
    var_0 = link_1.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_2 = module_0.Link(str_2, none_type_1)
    var_2 = link_2.__repr__()
    assert var_2 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_3 = var_2.__repr__()
    assert var_3 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_4 = var_3.__repr__()
    assert var_4 == "'\"Link(title=\\'0_~6:m!(f5FgU,:rvz\\', url=None)\"'"
    str_3 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_3 = module_0.Link(str_3, none_type_2)
    var_5 = link_3.__repr__()
    assert var_5 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_6 = var_5.__repr__()
    assert var_6 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_4 = var_5.__str__()
    assert str_4 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_5 = " Use '"
    section_1 = module_0.Section(str_5, str_5)
    var_7 = section_1.__repr__()
    assert var_7 == 'Section(title=" Use \'")'
    section_2 = module_0.Section(str_5, var_7)
    assert section_2.children == 'Section(title=" Use \'")'
    str_6 = " Use '"
    section_3 = module_0.Section(str_6, str_6)
    var_8 = section_3.__repr__()
    assert var_8 == 'Section(title=" Use \'")'
    var_9 = var_8.__repr__()
    assert var_9 == "'Section(title=\" Use \\'\")'"
    set_0 = set()
    navigation_0 = module_0.Navigation(set_0, set_0)
    assert (
        f"{type(navigation_0).__module__}.{type(navigation_0).__qualname__}"
        == "mkdocs.structure.nav.Navigation"
    )
    assert len(navigation_0) == 0
    str_7 = navigation_0.__str__()
    iterator_0 = var_9.__iter__()
    str_8 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_4 = module_0.Link(str_8, none_type_3)
    var_10 = link_4.__repr__()
    assert var_10 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_11 = var_10.__repr__()
    assert var_11 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_12 = var_10.__repr__()
    assert var_12 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    module_0.Navigation(var_4, var_12)


@pytest.mark.xfail(strict=True)
def test_case_928():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_2 = var_1.__repr__()
    assert var_2 == "'\"Link(title=\\'0_~6:m!(f5FgU,:rvz\\', url=None)\"'"
    str_1 = "gfRsC:6&{;|"
    section_0 = module_0.Section(str_1, str_1)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "gfRsC:6&{;|"
    assert section_0.children == "gfRsC:6&{;|"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_2, none_type_1)
    var_3 = link_1.__repr__()
    assert var_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_4 = var_3.__repr__()
    assert var_4 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_5 = var_3.__repr__()
    assert var_5 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_6 = link_1.__repr__()
    assert var_6 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    none_type_2 = None
    str_3 = "\n        Perform validation for a value.\n\n        The run_validation method should be implemented by subclasses.\n        "
    link_2 = module_0.Link(none_type_2, str_3)
    var_7 = link_2.__repr__()
    assert (
        var_7
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    str_4 = var_7.__str__()
    assert (
        str_4
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    bool_0 = True
    link_3 = module_0.Link(bool_0, bool_0)
    var_8 = var_7.__repr__()
    assert (
        var_8
        == "\"Link(title=[blank], url='\\\\n        Perform validation for a value.\\\\n\\\\n        The run_validation method should be implemented by subclasses.\\\\n        ')\""
    )
    module_0.Navigation(var_3, var_3)


@pytest.mark.xfail(strict=True)
def test_case_929():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    int_0 = var_0.__len__()
    assert int_0 == 23
    var_1 = var_0.__repr__()
    assert var_1 == "'Section(title=\" Use \\'\")'"
    link_0 = module_0.Link(int_0, var_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == 23
    assert link_0.url == 'Section(title=" Use \'")'
    str_1 = " Use '"
    section_1 = module_0.Section(str_1, str_1)
    var_2 = section_1.__repr__()
    assert var_2 == 'Section(title=" Use \'")'
    section_2 = module_0.Section(str_1, var_2)
    assert section_2.children == 'Section(title=" Use \'")'
    str_2 = 'C5B_`:"E&+;Y['
    link_1 = module_0.Link(str_2, str_2)
    str_3 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_2 = module_0.Link(str_3, none_type_0)
    var_3 = link_2.__repr__()
    assert var_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_4 = var_3.__repr__()
    assert var_4 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_4 = var_3.__str__()
    assert str_4 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_5 = var_3.__repr__()
    assert var_5 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_5 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_3 = module_0.Link(str_5, none_type_1)
    var_6 = link_3.__repr__()
    assert var_6 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_7 = var_6.__repr__()
    assert var_7 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_6 = var_6.__str__()
    assert str_6 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_7 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_4 = module_0.Link(str_7, none_type_2)
    bytes_0 = b"\x802c35Z\xf8"
    link_5 = module_0.Link(link_4, bytes_0)
    var_8 = link_4.__repr__()
    assert var_8 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_9 = var_8.__repr__()
    assert var_9 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    int_1 = -2025
    list_0 = [int_1]
    module_0.Navigation(var_9, list_0)


@pytest.mark.xfail(strict=True)
def test_case_930():
    str_0 = "gfRsC:6&{;|"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "gfRsC:6&{;|"
    assert section_0.children == "gfRsC:6&{;|"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_1, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_2 = var_0.__repr__()
    assert var_2 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_3 = link_0.__repr__()
    assert var_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    none_type_1 = None
    section_1 = module_0.Section(none_type_1, none_type_1)
    var_4 = module_1.urlsplit(none_type_1)
    iterator_0 = var_4.__iter__()
    str_2 = " Use '"
    section_2 = module_0.Section(str_2, str_2)
    var_5 = section_2.__repr__()
    assert var_5 == 'Section(title=" Use \'")'
    int_0 = var_5.__len__()
    assert int_0 == 23
    str_3 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_1 = module_0.Link(str_3, none_type_2)
    int_1 = var_5.__len__()
    assert int_1 == 23
    int_2 = var_5.__len__()
    assert int_2 == 23
    module_2.file_sort_key(var_0)


@pytest.mark.xfail(strict=True)
def test_case_931():
    int_0 = -719
    list_0 = [int_0, int_0, int_0, int_0]
    module_0.Navigation(list_0, list_0)


@pytest.mark.xfail(strict=True)
def test_case_932():
    str_0 = "$9.}1Av5,.}"
    link_0 = module_0.Link(str_0, str_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "$9.}1Av5,.}"
    assert link_0.url == "$9.}1Av5,.}"
    list_0 = []
    none_type_0 = None
    module_0.Navigation(list_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_933():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    str_1 = "gfRsC:6&{;|"
    section_1 = module_0.Section(str_1, str_1)
    str_2 = "relative_to_docs"
    link_0 = module_0.Link(str_2, section_1)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "relative_to_docs"
    assert (
        f"{type(link_0.url).__module__}.{type(link_0.url).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    section_2 = module_0.Section(section_0, var_0)
    assert section_2.children == 'Section(title=" Use \'")'
    int_0 = var_0.__len__()
    assert int_0 == 23
    str_3 = " Use '"
    section_3 = module_0.Section(str_3, str_3)
    var_1 = section_3.__repr__()
    assert var_1 == 'Section(title=" Use \'")'
    str_4 = 'C5B_`:"E&+;Y['
    link_1 = module_0.Link(str_4, str_4)
    int_1 = var_1.__len__()
    assert int_1 == 23
    str_5 = "$9.}1Av5,.}"
    link_2 = module_0.Link(str_5, str_5)
    var_2 = var_1.__repr__()
    assert var_2 == "'Section(title=\" Use \\'\")'"
    bool_0 = True
    link_3 = module_0.Link(bool_0, bool_0)
    str_6 = "gfRsC:6&{;|"
    section_4 = module_0.Section(str_6, str_6)
    module_0.get_navigation(var_2, var_2)


@pytest.mark.xfail(strict=True)
def test_case_934():
    none_type_0 = None
    section_0 = module_0.Section(none_type_0, none_type_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title is None
    assert section_0.children is None
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_0 = " Use '"
    section_1 = module_0.Section(str_0, str_0)
    var_0 = section_1.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    str_1 = 'C5B_`:"E&+;Y['
    link_0 = module_0.Link(str_1, str_1)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == 'C5B_`:"E&+;Y['
    assert link_0.url == 'C5B_`:"E&+;Y['
    int_0 = var_0.__len__()
    assert int_0 == 23
    section_2 = module_0.Section(str_0, var_0)
    assert section_2.children == 'Section(title=" Use \'")'
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_2, none_type_1)
    bytes_0 = b"\x802c35Z\xf8"
    link_2 = module_0.Link(link_1, bytes_0)
    var_1 = link_1.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_3 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_3 = module_0.Link(str_3, none_type_2)
    bytes_1 = b"\x802c35Z\xf8"
    link_4 = module_0.Link(link_3, bytes_1)
    var_2 = link_3.__repr__()
    assert var_2 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    iterator_0 = var_2.__iter__()
    bool_0 = True
    section_3 = module_0.Section(bool_0, bool_0)
    str_4 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_5 = module_0.Link(str_4, none_type_3)
    var_3 = link_5.__repr__()
    assert var_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_4 = var_3.__repr__()
    assert var_4 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    section_4 = module_0.Section(none_type_3, var_4)
    assert section_4.children == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_5 = section_4.__repr__()
    assert var_5 == "Section(title=None)"
    module_0.Navigation(var_5, str_3)


@pytest.mark.xfail(strict=True)
def test_case_935():
    bytes_0 = b"\xac\xb0\x17a\xfaT/\xf7\xc9"
    section_0 = module_0.Section(bytes_0, bytes_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == b"\xac\xb0\x17a\xfaT/\xf7\xc9"
    assert section_0.children == b"\xac\xb0\x17a\xfaT/\xf7\xc9"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    module_1.urlsplit(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_936():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_1 = var_0.__str__()
    assert str_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_2 = var_0.__repr__()
    assert var_2 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_2 = "page_context"
    section_0 = module_0.Section(str_2, str_2)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_3 = "' from the site because it conflicts with '"
    list_0 = []
    section_1 = module_0.Section(str_3, list_0)
    str_4 = "gfRsC:6&{;|"
    section_2 = module_0.Section(str_4, str_4)
    str_5 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_5, none_type_1)
    var_3 = link_1.__repr__()
    assert var_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_4 = var_3.__repr__()
    assert var_4 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_5 = var_3.__repr__()
    assert var_5 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_6 = link_1.__repr__()
    assert var_6 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_6 = "page_context"
    section_3 = module_0.Section(str_6, str_6)
    str_7 = "' from the site because it conflicts with '"
    list_1 = []
    section_4 = module_0.Section(str_7, list_1)
    var_7 = section_4.__repr__()
    assert var_7 == "Section(title=\"' from the site because it conflicts with '\")"
    str_8 = "\\l;/\nKHZ=K\nU\no|2{loH"
    link_2 = module_0.Link(str_6, str_8)
    set_0 = set()
    navigation_0 = module_0.Navigation(set_0, set_0)
    assert (
        f"{type(navigation_0).__module__}.{type(navigation_0).__qualname__}"
        == "mkdocs.structure.nav.Navigation"
    )
    assert len(navigation_0) == 0
    str_9 = navigation_0.__str__()
    bytes_0 = b"# "
    module_0.get_navigation(link_2, bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_937():
    none_type_0 = None
    section_0 = module_0.Section(none_type_0, none_type_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title is None
    assert section_0.children is None
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_0 = "page_context"
    section_1 = module_0.Section(str_0, str_0)
    str_1 = "jXt{G!+9"
    int_0 = -1857
    link_0 = module_0.Link(str_1, int_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "jXt{G!+9"
    assert link_0.url == -1857
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_2, none_type_1)
    var_0 = link_1.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    iterator_0 = var_0.__iter__()
    bool_0 = True
    section_2 = module_0.Section(bool_0, bool_0)
    str_3 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_2 = module_0.Link(str_3, none_type_2)
    var_2 = link_2.__repr__()
    assert var_2 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_3 = var_2.__repr__()
    assert var_3 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    section_3 = module_0.Section(none_type_2, var_3)
    assert section_3.children == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_4 = section_3.__repr__()
    assert var_4 == "Section(title=None)"
    str_4 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_3 = module_0.Link(str_4, none_type_3)
    str_5 = "0_~6:m!(f5FgU,:rvz"
    none_type_4 = None
    link_4 = module_0.Link(str_5, none_type_4)
    var_5 = link_4.__repr__()
    assert var_5 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_6 = var_5.__repr__()
    assert var_6 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_7 = var_5.__repr__()
    assert var_7 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    module_0.Navigation(var_0, str_3)


@pytest.mark.xfail(strict=True)
def test_case_938():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_1 = var_0.__str__()
    assert str_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_2 = 'C5B_`:"E&+;Y['
    link_1 = module_0.Link(str_2, str_2)
    int_0 = var_0.__len__()
    assert int_0 == 42
    str_3 = " Use '"
    section_0 = module_0.Section(str_3, str_3)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_2 = section_0.__repr__()
    assert var_2 == 'Section(title=" Use \'")'
    str_4 = "gfRsC:6&{;|"
    section_1 = module_0.Section(str_4, str_4)
    str_5 = "relative_to_docs"
    link_2 = module_0.Link(str_5, section_1)
    section_2 = module_0.Section(section_0, var_2)
    assert section_2.children == 'Section(title=" Use \'")'
    int_1 = var_2.__len__()
    assert int_1 == 23
    str_6 = " Use '"
    section_3 = module_0.Section(str_6, str_6)
    var_3 = section_3.__repr__()
    assert var_3 == 'Section(title=" Use \'")'
    str_7 = "gfRsC:6&{;|"
    section_4 = module_0.Section(str_7, str_7)
    str_8 = "relative_to_docs"
    link_3 = module_0.Link(str_8, section_4)
    section_5 = module_0.Section(section_3, var_3)
    assert section_5.children == 'Section(title=" Use \'")'
    none_type_1 = None
    set_0 = {none_type_1, none_type_1, none_type_1, none_type_1}
    link_4 = module_0.Link(none_type_1, set_0)
    none_type_2 = None
    str_9 = "\n        Perform validation for a value.\n\n        The run_validation method should be implemented by subclasses.\n        "
    link_5 = module_0.Link(none_type_2, str_9)
    var_4 = link_5.__repr__()
    assert (
        var_4
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    str_10 = var_4.__str__()
    assert (
        str_10
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    bool_0 = True
    link_6 = module_0.Link(bool_0, bool_0)
    var_5 = var_4.__repr__()
    assert (
        var_5
        == "\"Link(title=[blank], url='\\\\n        Perform validation for a value.\\\\n\\\\n        The run_validation method should be implemented by subclasses.\\\\n        ')\""
    )
    dict_0 = {}
    str_11 = 'y\x0c[fN"W:2&:SWyz~W'
    link_7 = module_0.Link(dict_0, str_11)
    section_6 = module_0.Section(str_11, str_11)
    section_7 = module_0.Section(str_11, str_11)
    str_12 = "' is included in the 'nav' configuration."
    link_8 = module_0.Link(str_12, str_12)
    str_13 = " Use '"
    section_8 = module_0.Section(str_13, str_13)
    var_6 = section_8.__repr__()
    assert var_6 == 'Section(title=" Use \'")'
    int_2 = var_6.__len__()
    assert int_2 == 23
    module_0.get_navigation(link_5, var_3)


@pytest.mark.xfail(strict=True)
def test_case_939():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    bytes_0 = b"\x802c35Z\xf8"
    link_1 = module_0.Link(link_0, bytes_0)
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    int_0 = var_0.__len__()
    assert int_0 == 42
    bool_0 = True
    section_0 = module_0.Section(bool_0, bool_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title is True
    assert section_0.children is True
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_2 = module_0.Link(str_1, none_type_1)
    var_1 = link_2.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_2 = var_1.__repr__()
    assert var_2 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    section_1 = module_0.Section(none_type_1, var_2)
    assert section_1.children == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_3 = section_1.__repr__()
    assert var_3 == "Section(title=None)"
    str_2 = " Use '"
    section_2 = module_0.Section(str_2, str_2)
    var_4 = section_2.__repr__()
    assert var_4 == 'Section(title=" Use \'")'
    str_3 = 'C5B_`:"E&+;Y['
    link_3 = module_0.Link(str_3, str_3)
    int_1 = var_4.__len__()
    assert int_1 == 23
    section_3 = module_0.Section(var_4, var_4)
    assert section_3.title == 'Section(title=" Use \'")'
    assert section_3.children == 'Section(title=" Use \'")'
    link_4 = module_0.Link(section_2, str_2)
    str_4 = "page_context"
    section_4 = module_0.Section(str_4, str_4)
    str_5 = "' from the site because it conflicts with '"
    list_0 = []
    section_5 = module_0.Section(str_5, list_0)
    section_6 = module_0.Section(section_5, list_0)
    section_7 = module_0.Section(str_5, list_0)
    str_6 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_5 = module_0.Link(str_6, none_type_2)
    bytes_1 = b"\x802c35Z\xf8"
    link_6 = module_0.Link(link_5, bytes_1)
    str_7 = " Use '"
    section_8 = module_0.Section(str_7, str_7)
    var_5 = section_8.__repr__()
    assert var_5 == 'Section(title=" Use \'")'
    str_8 = "gfRsC:6&{;|"
    section_9 = module_0.Section(str_8, str_8)
    str_9 = "relative_to_docs"
    link_7 = module_0.Link(str_9, section_9)
    str_10 = " Use '"
    section_10 = module_0.Section(str_10, str_10)
    var_6 = section_10.__repr__()
    assert var_6 == 'Section(title=" Use \'")'
    var_7 = var_6.__repr__()
    assert var_7 == "'Section(title=\" Use \\'\")'"
    set_0 = set()
    navigation_0 = module_0.Navigation(set_0, set_0)
    assert (
        f"{type(navigation_0).__module__}.{type(navigation_0).__qualname__}"
        == "mkdocs.structure.nav.Navigation"
    )
    assert len(navigation_0) == 0
    str_11 = navigation_0.__str__()
    iterator_0 = var_7.__iter__()
    module_0.Navigation(section_10, bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_940():
    str_0 = "gfRsC:6&{;|"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "gfRsC:6&{;|"
    assert section_0.children == "gfRsC:6&{;|"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == "Section(title='gfRsC:6&{;|')"
    bool_0 = True
    section_1 = module_0.Section(bool_0, bool_0)
    list_0 = [var_0, var_0]
    section_2 = module_0.Section(section_0, list_0)
    assert section_2.children == [
        "Section(title='gfRsC:6&{;|')",
        "Section(title='gfRsC:6&{;|')",
    ]
    none_type_0 = None
    var_1 = module_1.urlsplit(none_type_0)
    var_2 = var_1.__repr__()
    str_1 = " Use '"
    section_3 = module_0.Section(str_1, str_1)
    var_3 = section_3.__repr__()
    assert var_3 == 'Section(title=" Use \'")'
    var_4 = var_3.__repr__()
    assert var_4 == "'Section(title=\" Use \\'\")'"
    var_5 = var_3.__repr__()
    assert var_5 == "'Section(title=\" Use \\'\")'"
    str_2 = "gfRsC:6&{;|"
    section_4 = module_0.Section(str_2, str_2)
    str_3 = "gfRsC:6&{;|"
    section_5 = module_0.Section(str_3, str_3)
    str_4 = " Use '"
    section_6 = module_0.Section(str_4, str_4)
    var_6 = section_6.__repr__()
    assert var_6 == 'Section(title=" Use \'")'
    int_0 = var_6.__len__()
    assert int_0 == 23
    var_7 = var_6.__repr__()
    assert var_7 == "'Section(title=\" Use \\'\")'"
    var_8 = var_7.__repr__()
    assert var_8 == "'\\'Section(title=\" Use \\\\\\'\")\\''"
    str_5 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_0 = module_0.Link(str_5, none_type_1)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_9 = link_0.__repr__()
    assert var_9 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_10 = var_9.__repr__()
    assert var_10 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_6 = var_9.__str__()
    assert str_6 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_7 = 'C5B_`:"E&+;Y['
    link_1 = module_0.Link(str_7, str_7)
    int_1 = var_9.__len__()
    assert int_1 == 42
    str_8 = " Use '"
    section_7 = module_0.Section(str_8, str_8)
    var_11 = section_7.__repr__()
    assert var_11 == 'Section(title=" Use \'")'
    str_9 = 'C5B_`:"E&+;Y['
    link_2 = module_0.Link(str_9, str_9)
    int_2 = var_11.__len__()
    assert int_2 == 23
    section_8 = module_0.Section(var_11, var_11)
    assert section_8.title == 'Section(title=" Use \'")'
    assert section_8.children == 'Section(title=" Use \'")'
    link_3 = module_0.Link(section_7, str_8)
    str_10 = "(\x0cj;scl_VDjQ[z\x0c"
    module_0.get_navigation(none_type_0, str_10)


@pytest.mark.xfail(strict=True)
def test_case_941():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_1, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    bytes_0 = b"\x802c35Z\xf8"
    link_1 = module_0.Link(link_0, bytes_0)
    iterator_0 = var_0.__iter__()
    str_2 = "page_context"
    section_1 = module_0.Section(str_2, str_2)
    str_3 = "' from the site because it conflicts with '"
    list_0 = []
    section_2 = module_0.Section(str_3, list_0)
    var_1 = section_2.__repr__()
    assert var_1 == "Section(title=\"' from the site because it conflicts with '\")"
    str_4 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_2 = module_0.Link(str_4, none_type_1)
    var_2 = link_2.__repr__()
    assert var_2 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_3 = var_2.__repr__()
    assert var_3 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_5 = " Use '"
    section_3 = module_0.Section(str_5, str_5)
    var_4 = section_3.__repr__()
    assert var_4 == 'Section(title=" Use \'")'
    str_6 = 'C5B_`:"E&+;Y['
    link_3 = module_0.Link(str_6, str_6)
    int_0 = var_4.__len__()
    assert int_0 == 23
    str_7 = "$9.}1Av5,.}"
    link_4 = module_0.Link(str_7, str_7)
    var_5 = var_4.__repr__()
    assert var_5 == "'Section(title=\" Use \\'\")'"
    str_8 = "page_context"
    section_4 = module_0.Section(str_8, str_8)
    str_9 = "' from the site because it conflicts with '"
    list_1 = []
    section_5 = module_0.Section(str_9, list_1)
    section_6 = module_0.Section(section_5, list_1)
    section_7 = module_0.Section(str_9, list_1)
    bytes_1 = b"\xac\xb0\x17a\xfaT/\xf7\xc9"
    section_8 = module_0.Section(bytes_1, bytes_1)
    str_10 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_5 = module_0.Link(str_10, none_type_2)
    var_6 = link_5.__repr__()
    assert var_6 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_7 = var_6.__repr__()
    assert var_7 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_8 = var_7.__repr__()
    assert var_8 == "'\"Link(title=\\'0_~6:m!(f5FgU,:rvz\\', url=None)\"'"
    none_type_3 = None
    str_11 = "\n        Perform validation for a value.\n\n        The run_validation method should be implemented by subclasses.\n        "
    link_6 = module_0.Link(none_type_3, str_11)
    var_9 = link_6.__repr__()
    assert (
        var_9
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    str_12 = var_9.__str__()
    assert (
        str_12
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    bool_0 = True
    link_7 = module_0.Link(bool_0, bool_0)
    var_10 = var_9.__repr__()
    assert (
        var_10
        == "\"Link(title=[blank], url='\\\\n        Perform validation for a value.\\\\n\\\\n        The run_validation method should be implemented by subclasses.\\\\n        ')\""
    )
    str_13 = "page_context"
    section_9 = module_0.Section(str_13, str_13)
    str_14 = " Use '"
    section_10 = module_0.Section(str_14, str_14)
    var_11 = section_10.__repr__()
    assert var_11 == 'Section(title=" Use \'")'
    var_12 = var_11.__repr__()
    assert var_12 == "'Section(title=\" Use \\'\")'"
    link_8 = module_0.Link(var_12, section_9)
    assert link_8.title == "'Section(title=\" Use \\'\")'"
    str_15 = "$9.}1Av5,.}"
    link_9 = module_0.Link(str_15, str_15)
    module_0.get_navigation(section_3, section_9)


@pytest.mark.xfail(strict=True)
def test_case_942():
    bool_0 = True
    module_0.get_navigation(bool_0, bool_0)


@pytest.mark.xfail(strict=True)
def test_case_943():
    dict_0 = {}
    str_0 = 'y\x0c[fN"W:2&:SWyz~W'
    link_0 = module_0.Link(dict_0, str_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == {}
    assert link_0.url == 'y\x0c[fN"W:2&:SWyz~W'
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == 'y\x0c[fN"W:2&:SWyz~W'
    assert section_0.children == 'y\x0c[fN"W:2&:SWyz~W'
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = "page_context"
    section_1 = module_0.Section(str_1, str_1)
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_1 = module_0.Link(str_2, none_type_0)
    var_0 = link_1.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = section_1.__repr__()
    assert var_1 == "Section(title='page_context')"
    dict_1 = {}
    str_3 = 'y\x0c[fN"W:2&:SWyz~W'
    link_2 = module_0.Link(dict_1, str_3)
    str_4 = "gfRsC:6&{;|"
    section_2 = module_0.Section(str_4, str_4)
    str_5 = "page_context"
    section_3 = module_0.Section(str_5, str_5)
    str_6 = "' from the site because it conflicts with '"
    list_0 = []
    section_4 = module_0.Section(str_6, list_0)
    section_5 = module_0.Section(section_4, list_0)
    section_6 = module_0.Section(str_6, list_0)
    str_7 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_3 = module_0.Link(str_7, none_type_1)
    bytes_0 = b"\x802c35Z\xf8"
    link_4 = module_0.Link(link_3, bytes_0)
    dict_2 = {}
    str_8 = 'y\x0c[fN"W:2&:SWyz~W'
    link_5 = module_0.Link(dict_2, str_8)
    var_2 = link_4.__repr__()
    assert (
        var_2
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )
    str_9 = "gfRsC:6&{;|"
    section_7 = module_0.Section(str_9, str_9)
    var_3 = section_7.__repr__()
    assert var_3 == "Section(title='gfRsC:6&{;|')"
    bool_0 = True
    section_8 = module_0.Section(bool_0, bool_0)
    list_1 = [var_3, var_3]
    section_9 = module_0.Section(section_7, list_1)
    assert section_9.children == [
        "Section(title='gfRsC:6&{;|')",
        "Section(title='gfRsC:6&{;|')",
    ]
    str_10 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_6 = module_0.Link(str_10, none_type_2)
    var_4 = link_6.__repr__()
    assert var_4 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_5 = var_4.__repr__()
    assert var_5 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    int_0 = var_5.__len__()
    assert int_0 == 44
    var_6 = var_2.__repr__()
    assert (
        var_6
        == "\"Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\\\x802c35Z\\\\xf8')\""
    )
    module_0.get_navigation(section_5, var_6)


@pytest.mark.xfail(strict=True)
def test_case_944():
    str_0 = "page_context"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = "' from the site because it conflicts with '"
    list_0 = []
    section_1 = module_0.Section(str_1, list_0)
    module_2.file_sort_key(list_0)


@pytest.mark.xfail(strict=True)
def test_case_945():
    str_0 = 'C5B_`:"E&+;Y['
    link_0 = module_0.Link(str_0, str_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == 'C5B_`:"E&+;Y['
    assert link_0.url == 'C5B_`:"E&+;Y['
    str_1 = "page_context"
    section_0 = module_0.Section(str_1, str_1)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_2 = "' from the site because it conflicts with '"
    list_0 = []
    section_1 = module_0.Section(str_2, list_0)
    var_0 = section_1.__repr__()
    assert var_0 == "Section(title=\"' from the site because it conflicts with '\")"
    str_3 = "page_context"
    section_2 = module_0.Section(str_3, str_3)
    str_4 = " Use '"
    section_3 = module_0.Section(str_4, str_4)
    var_1 = section_3.__repr__()
    assert var_1 == 'Section(title=" Use \'")'
    var_2 = var_1.__repr__()
    assert var_2 == "'Section(title=\" Use \\'\")'"
    link_1 = module_0.Link(var_2, section_2)
    assert link_1.title == "'Section(title=\" Use \\'\")'"
    str_5 = " Use '"
    section_4 = module_0.Section(str_5, str_5)
    var_3 = section_4.__repr__()
    assert var_3 == 'Section(title=" Use \'")'
    var_4 = var_3.__repr__()
    assert var_4 == "'Section(title=\" Use \\'\")'"
    set_0 = set()
    navigation_0 = module_0.Navigation(set_0, set_0)
    assert (
        f"{type(navigation_0).__module__}.{type(navigation_0).__qualname__}"
        == "mkdocs.structure.nav.Navigation"
    )
    assert len(navigation_0) == 0
    str_6 = navigation_0.__str__()
    iterator_0 = var_4.__iter__()
    none_type_0 = None
    str_7 = "\n        Perform validation for a value.\n\n        The run_validation method should be implemented by subclasses.\n        "
    link_2 = module_0.Link(none_type_0, str_7)
    var_5 = link_2.__repr__()
    assert (
        var_5
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    str_8 = var_5.__str__()
    assert (
        str_8
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    str_9 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_3 = module_0.Link(str_9, none_type_1)
    var_6 = link_3.__repr__()
    assert var_6 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_7 = var_6.__repr__()
    assert var_7 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_8 = var_7.__repr__()
    assert var_8 == "'\"Link(title=\\'0_~6:m!(f5FgU,:rvz\\', url=None)\"'"
    none_type_2 = None
    str_10 = "\n        Perform validation for a value.\n\n        The run_validation method should be implemented by subclasses.\n        "
    link_4 = module_0.Link(none_type_2, str_10)
    var_9 = link_4.__repr__()
    assert (
        var_9
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    str_11 = var_9.__str__()
    assert (
        str_11
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    bool_0 = True
    link_5 = module_0.Link(bool_0, bool_0)
    var_10 = var_9.__repr__()
    assert (
        var_10
        == "\"Link(title=[blank], url='\\\\n        Perform validation for a value.\\\\n\\\\n        The run_validation method should be implemented by subclasses.\\\\n        ')\""
    )
    dict_0 = {}
    str_12 = 'y\x0c[fN"W:2&:SWyz~W'
    link_6 = module_0.Link(dict_0, str_12)
    section_5 = module_0.Section(str_12, str_12)
    section_6 = module_0.Section(str_12, str_12)
    str_13 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_7 = module_0.Link(str_13, none_type_3)
    var_11 = link_7.__repr__()
    assert var_11 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_12 = var_11.__repr__()
    assert var_12 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_13 = var_11.__repr__()
    assert var_13 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_14 = "+"
    module_0.Navigation(str_2, str_14)


@pytest.mark.xfail(strict=True)
def test_case_946():
    str_0 = "page_context"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = "' from the site because it conflicts with '"
    list_0 = []
    section_1 = module_0.Section(str_1, list_0)
    str_2 = "$9.}1Av5,.}"
    link_0 = module_0.Link(str_2, str_2)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "$9.}1Av5,.}"
    assert link_0.url == "$9.}1Av5,.}"
    str_3 = '>D~~>JF"kL.A#Y+rc3q'
    build_error_0 = module_5.BuildError(str_3)
    module_0.Navigation(list_0, build_error_0)


@pytest.mark.xfail(strict=True)
def test_case_947():
    none_type_0 = None
    str_0 = "\n        Perform validation for a value.\n\n        The run_validation method should be implemented by subclasses.\n        "
    link_0 = module_0.Link(none_type_0, str_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title is None
    assert (
        link_0.url
        == "\n        Perform validation for a value.\n\n        The run_validation method should be implemented by subclasses.\n        "
    )
    var_0 = link_0.__repr__()
    assert (
        var_0
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    str_1 = var_0.__str__()
    assert (
        str_1
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    str_2 = "gfRsC:6&{;|"
    section_0 = module_0.Section(str_2, str_2)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "gfRsC:6&{;|"
    assert section_0.children == "gfRsC:6&{;|"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_1 = section_0.__repr__()
    assert var_1 == "Section(title='gfRsC:6&{;|')"
    str_3 = "page_context"
    section_1 = module_0.Section(str_3, str_3)
    str_4 = "' from the site because it conflicts with '"
    list_0 = []
    section_2 = module_0.Section(str_4, list_0)
    module_0.Navigation(list_0, var_0)


@pytest.mark.xfail(strict=True)
def test_case_948():
    none_type_0 = None
    section_0 = module_0.Section(none_type_0, none_type_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title is None
    assert section_0.children is None
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = module_1.urlsplit(none_type_0)
    iterator_0 = var_0.__iter__()
    str_0 = "page_context"
    section_1 = module_0.Section(str_0, str_0)
    link_0 = module_0.Link(str_0, section_1)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "page_context"
    assert (
        f"{type(link_0.url).__module__}.{type(link_0.url).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    str_1 = " Use '"
    section_2 = module_0.Section(str_1, str_1)
    var_1 = section_2.__repr__()
    assert var_1 == 'Section(title=" Use \'")'
    var_2 = var_1.__repr__()
    assert var_2 == "'Section(title=\" Use \\'\")'"
    var_3 = var_1.__repr__()
    assert var_3 == "'Section(title=\" Use \\'\")'"
    str_2 = "$9.}1Av5,.}"
    link_1 = module_0.Link(str_2, str_2)
    str_3 = " Use '"
    section_3 = module_0.Section(str_3, str_3)
    var_4 = section_3.__repr__()
    assert var_4 == 'Section(title=" Use \'")'
    int_0 = var_4.__len__()
    assert int_0 == 23
    str_4 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_2 = module_0.Link(str_4, none_type_1)
    int_1 = var_4.__len__()
    assert int_1 == 23
    str_5 = " Use '"
    section_4 = module_0.Section(str_5, str_5)
    var_5 = section_4.__repr__()
    assert var_5 == 'Section(title=" Use \'")'
    str_6 = " Use '"
    section_5 = module_0.Section(str_6, str_6)
    var_6 = section_5.__repr__()
    assert var_6 == 'Section(title=" Use \'")'
    int_2 = var_6.__len__()
    assert int_2 == 23
    section_6 = module_0.Section(var_6, int_2)
    assert section_6.title == 'Section(title=" Use \'")'
    assert section_6.children == 23
    dict_0 = {}
    str_7 = 'y\x0c[fN"W:2&:SWyz~W'
    link_3 = module_0.Link(dict_0, str_7)
    bytes_0 = b"\xac\xb0\x17a\xfaT/\xf7\xc9"
    section_7 = module_0.Section(bytes_0, bytes_0)
    bool_0 = True
    section_8 = module_0.Section(bool_0, bool_0)
    str_8 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_4 = module_0.Link(str_8, none_type_2)
    var_7 = link_4.__repr__()
    assert var_7 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_8 = var_7.__repr__()
    assert var_8 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    section_9 = module_0.Section(none_type_2, var_8)
    assert section_9.children == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_9 = section_9.__repr__()
    assert var_9 == "Section(title=None)"
    module_0.get_navigation(var_7, iterator_0)


@pytest.mark.xfail(strict=True)
def test_case_949():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_1, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_1 = link_0.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    int_0 = var_1.__len__()
    assert int_0 == 42
    str_2 = " Use '"
    section_1 = module_0.Section(str_2, str_2)
    var_2 = section_1.__repr__()
    assert var_2 == 'Section(title=" Use \'")'
    var_3 = var_2.__repr__()
    assert var_3 == "'Section(title=\" Use \\'\")'"
    set_0 = set()
    navigation_0 = module_0.Navigation(set_0, set_0)
    assert (
        f"{type(navigation_0).__module__}.{type(navigation_0).__qualname__}"
        == "mkdocs.structure.nav.Navigation"
    )
    assert len(navigation_0) == 0
    str_3 = navigation_0.__str__()
    iterator_0 = var_3.__iter__()
    str_4 = "jXt{G!+9"
    int_1 = -1857
    link_1 = module_0.Link(str_4, int_1)
    str_5 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_2 = module_0.Link(str_5, none_type_1)
    var_4 = link_2.__repr__()
    assert var_4 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_5 = var_4.__repr__()
    assert var_5 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    iterator_1 = var_4.__iter__()
    var_6 = var_4.__repr__()
    assert var_6 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_6 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_3 = module_0.Link(str_6, none_type_2)
    var_7 = link_3.__repr__()
    assert var_7 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_8 = var_7.__repr__()
    assert var_8 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_9 = var_8.__repr__()
    assert var_9 == "'\"Link(title=\\'0_~6:m!(f5FgU,:rvz\\', url=None)\"'"
    str_7 = " Use '"
    section_2 = module_0.Section(str_7, str_7)
    var_10 = section_2.__repr__()
    assert var_10 == 'Section(title=" Use \'")'
    str_8 = 'C5B_`:"E&+;Y['
    link_4 = module_0.Link(str_8, str_8)
    int_2 = var_10.__len__()
    assert int_2 == 23
    str_9 = "page_context"
    section_3 = module_0.Section(str_9, str_9)
    str_10 = "' from the site because it conflicts with '"
    list_0 = []
    section_4 = module_0.Section(str_10, list_0)
    section_5 = module_0.Section(section_4, list_0)
    section_6 = module_0.Section(str_10, list_0)
    str_11 = "gfRsC:6&{;|"
    section_7 = module_0.Section(str_11, str_11)
    str_12 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_5 = module_0.Link(str_12, none_type_3)
    var_11 = link_5.__repr__()
    assert var_11 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_12 = var_11.__repr__()
    assert var_12 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_13 = var_11.__repr__()
    assert var_13 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_14 = link_5.__repr__()
    assert var_14 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    bool_0 = True
    section_8 = module_0.Section(bool_0, bool_0)
    str_13 = "0_~6:m!(f5FgU,:rvz"
    none_type_4 = None
    link_6 = module_0.Link(str_13, none_type_4)
    var_15 = link_6.__repr__()
    assert var_15 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_16 = var_15.__repr__()
    assert var_16 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    section_9 = module_0.Section(none_type_4, var_16)
    assert section_9.children == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_14 = "0_~6:m!(f5FgU,:rvz"
    none_type_5 = None
    link_7 = module_0.Link(str_14, none_type_5)
    var_17 = link_7.__repr__()
    assert var_17 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_18 = var_17.__repr__()
    assert var_18 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    module_0.get_navigation(section_6, var_8)


@pytest.mark.xfail(strict=True)
def test_case_950():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    str_1 = 'C5B_`:"E&+;Y['
    link_0 = module_0.Link(str_1, str_1)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == 'C5B_`:"E&+;Y['
    assert link_0.url == 'C5B_`:"E&+;Y['
    int_0 = var_0.__len__()
    assert int_0 == 23
    section_1 = module_0.Section(var_0, var_0)
    assert section_1.title == 'Section(title=" Use \'")'
    assert section_1.children == 'Section(title=" Use \'")'
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_1 = module_0.Link(str_2, none_type_0)
    var_1 = link_1.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_2 = var_1.__repr__()
    assert var_2 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    iterator_0 = var_1.__iter__()
    str_3 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_2 = module_0.Link(str_3, none_type_1)
    var_3 = link_2.__repr__()
    assert var_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_4 = var_3.__repr__()
    assert var_4 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_5 = var_3.__repr__()
    assert var_5 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_4 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_3 = module_0.Link(str_4, none_type_2)
    var_6 = link_3.__repr__()
    assert var_6 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_7 = var_6.__repr__()
    assert var_7 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_5 = var_6.__str__()
    assert str_5 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_6 = 'C5B_`:"E&+;Y['
    link_4 = module_0.Link(str_6, str_6)
    int_1 = var_6.__len__()
    assert int_1 == 42
    str_7 = " Use '"
    section_2 = module_0.Section(str_7, str_7)
    var_8 = section_2.__repr__()
    assert var_8 == 'Section(title=" Use \'")'
    section_3 = module_0.Section(str_7, var_8)
    assert section_3.children == 'Section(title=" Use \'")'
    str_8 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_5 = module_0.Link(str_8, none_type_3)
    bytes_0 = b"\x802c35Z\xf8"
    link_6 = module_0.Link(link_5, bytes_0)
    bool_0 = True
    section_4 = module_0.Section(bool_0, bool_0)
    var_9 = link_6.__repr__()
    assert (
        var_9
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )
    str_9 = var_9.__str__()
    assert (
        str_9
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )
    str_10 = " Use '"
    section_5 = module_0.Section(str_10, str_10)
    var_10 = section_5.__repr__()
    assert var_10 == 'Section(title=" Use \'")'
    int_2 = var_10.__len__()
    assert int_2 == 23
    str_11 = "0_~6:m!(f5FgU,:rvz"
    none_type_4 = None
    link_7 = module_0.Link(str_11, none_type_4)
    int_3 = var_10.__len__()
    assert int_3 == 23
    int_4 = var_10.__len__()
    assert int_4 == 23
    str_12 = "gfRsC:6&{;|"
    section_6 = module_0.Section(str_12, str_12)
    var_11 = section_6.__repr__()
    assert var_11 == "Section(title='gfRsC:6&{;|')"
    none_type_5 = None
    var_12 = module_1.urlsplit(none_type_5)
    var_13 = var_12.__repr__()
    module_0.get_navigation(link_5, str_9)


@pytest.mark.xfail(strict=True)
def test_case_951():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    int_0 = var_0.__len__()
    assert int_0 == 23
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_1, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    int_1 = var_0.__len__()
    assert int_1 == 23
    int_2 = var_0.__len__()
    assert int_2 == 23
    str_2 = " Use '"
    section_1 = module_0.Section(str_2, str_2)
    var_1 = section_1.__repr__()
    assert var_1 == 'Section(title=" Use \'")'
    var_2 = var_1.__repr__()
    assert var_2 == "'Section(title=\" Use \\'\")'"
    str_3 = "page_context"
    section_2 = module_0.Section(str_3, str_3)
    str_4 = "' from the site because it conflicts with '"
    list_0 = []
    section_3 = module_0.Section(str_4, list_0)
    section_4 = module_0.Section(section_3, list_0)
    var_2.render(var_1, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_952():
    str_0 = "page_context"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = "' from the site because it conflicts with '"
    list_0 = []
    section_1 = module_0.Section(str_1, list_0)
    str_2 = " Use '"
    section_2 = module_0.Section(str_2, str_2)
    var_0 = section_2.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    int_0 = var_0.__len__()
    assert int_0 == 23
    str_3 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_3, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    int_1 = var_0.__len__()
    assert int_1 == 23
    int_2 = var_0.__len__()
    assert int_2 == 23
    str_4 = " Use '"
    section_3 = module_0.Section(str_4, str_4)
    var_1 = section_3.__repr__()
    assert var_1 == 'Section(title=" Use \'")'
    var_2 = var_1.__repr__()
    assert var_2 == "'Section(title=\" Use \\'\")'"
    set_0 = set()
    navigation_0 = module_0.Navigation(set_0, set_0)
    assert (
        f"{type(navigation_0).__module__}.{type(navigation_0).__qualname__}"
        == "mkdocs.structure.nav.Navigation"
    )
    assert len(navigation_0) == 0
    str_5 = navigation_0.__str__()
    iterator_0 = var_2.__iter__()
    str_6 = "x"
    section_4 = module_0.Section(str_6, str_6)
    str_7 = " Use '"
    section_5 = module_0.Section(str_7, str_7)
    var_3 = section_5.__repr__()
    assert var_3 == 'Section(title=" Use \'")'
    str_8 = 'C5B_`:"E&+;Y['
    link_1 = module_0.Link(str_8, str_8)
    int_3 = var_3.__len__()
    assert int_3 == 23
    section_6 = module_0.Section(var_3, var_3)
    assert section_6.title == 'Section(title=" Use \'")'
    assert section_6.children == 'Section(title=" Use \'")'
    link_2 = module_0.Link(section_5, str_7)
    str_9 = " Use '"
    section_7 = module_0.Section(str_9, str_9)
    var_4 = section_7.__repr__()
    assert var_4 == 'Section(title=" Use \'")'
    str_10 = 'C5B_`:"E&+;Y['
    link_3 = module_0.Link(str_10, str_10)
    int_4 = var_4.__len__()
    assert int_4 == 23
    section_8 = module_0.Section(var_4, var_4)
    assert section_8.title == 'Section(title=" Use \'")'
    assert section_8.children == 'Section(title=" Use \'")'
    module_0.get_navigation(section_8, link_3)


@pytest.mark.xfail(strict=True)
def test_case_953():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_2 = var_1.__repr__()
    assert var_2 == "'\"Link(title=\\'0_~6:m!(f5FgU,:rvz\\', url=None)\"'"
    str_1 = "gfRsC:6&{;|"
    section_0 = module_0.Section(str_1, str_1)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "gfRsC:6&{;|"
    assert section_0.children == "gfRsC:6&{;|"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    list_0 = []
    section_1 = module_0.Section(section_0, list_0)
    none_type_1 = None
    set_0 = {none_type_1, none_type_1, none_type_1, none_type_1}
    link_1 = module_0.Link(none_type_1, set_0)
    none_type_2 = None
    section_2 = module_0.Section(none_type_2, none_type_2)
    var_3 = module_1.urlsplit(none_type_2)
    iterator_0 = var_3.__iter__()
    module_0.Navigation(var_2, var_2)


@pytest.mark.xfail(strict=True)
def test_case_954():
    bool_0 = True
    module_1.urlsplit(bool_0, allow_fragments=bool_0)


@pytest.mark.xfail(strict=True)
def test_case_955():
    str_0 = "page_context"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = "' from the site because it conflicts with '"
    list_0 = []
    section_1 = module_0.Section(str_1, list_0)
    var_0 = section_1.__repr__()
    assert var_0 == "Section(title=\"' from the site because it conflicts with '\")"
    str_2 = "$9.}1Av5,.}"
    link_0 = module_0.Link(str_2, str_2)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "$9.}1Av5,.}"
    assert link_0.url == "$9.}1Av5,.}"
    none_type_0 = None
    str_3 = "\n        Perform validation for a value.\n\n        The run_validation method should be implemented by subclasses.\n        "
    link_1 = module_0.Link(none_type_0, str_3)
    var_1 = link_1.__repr__()
    assert (
        var_1
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    str_4 = var_1.__str__()
    assert (
        str_4
        == "Link(title=[blank], url='\\n        Perform validation for a value.\\n\\n        The run_validation method should be implemented by subclasses.\\n        ')"
    )
    bool_0 = True
    link_2 = module_0.Link(bool_0, bool_0)
    var_2 = var_1.__repr__()
    assert (
        var_2
        == "\"Link(title=[blank], url='\\\\n        Perform validation for a value.\\\\n\\\\n        The run_validation method should be implemented by subclasses.\\\\n        ')\""
    )
    str_5 = " Use '"
    section_2 = module_0.Section(str_5, str_5)
    var_3 = section_2.__repr__()
    assert var_3 == 'Section(title=" Use \'")'
    int_0 = var_3.__len__()
    assert int_0 == 23
    section_3 = module_0.Section(var_3, int_0)
    assert section_3.title == 'Section(title=" Use \'")'
    assert section_3.children == 23
    str_6 = "gfRsC:6&{;|"
    section_4 = module_0.Section(str_6, str_6)
    str_7 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_3 = module_0.Link(str_7, none_type_1)
    var_4 = link_3.__repr__()
    assert var_4 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_5 = var_4.__repr__()
    assert var_5 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_6 = var_4.__repr__()
    assert var_6 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_7 = link_3.__repr__()
    assert var_7 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_8 = "page_context"
    section_5 = module_0.Section(str_8, str_8)
    str_9 = "' from the site because it conflicts with '"
    list_1 = []
    section_6 = module_0.Section(str_9, list_1)
    var_8 = section_6.__repr__()
    assert var_8 == "Section(title=\"' from the site because it conflicts with '\")"
    section_7 = module_0.Section(str_9, section_5)
    str_10 = " Use '"
    section_8 = module_0.Section(str_10, str_10)
    var_9 = section_8.__repr__()
    assert var_9 == 'Section(title=" Use \'")'
    int_1 = var_9.__len__()
    assert int_1 == 23
    str_11 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_4 = module_0.Link(str_11, none_type_2)
    int_2 = var_9.__len__()
    assert int_2 == 23
    int_3 = var_9.__len__()
    assert int_3 == 23
    str_12 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_5 = module_0.Link(str_12, none_type_3)
    bytes_0 = b"\x802c35Z\xf8"
    link_6 = module_0.Link(link_5, bytes_0)
    var_10 = link_5.__repr__()
    assert var_10 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    module_0.Navigation(list_1, var_9)


@pytest.mark.xfail(strict=True)
def test_case_956():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_2 = var_1.__repr__()
    assert var_2 == "'\"Link(title=\\'0_~6:m!(f5FgU,:rvz\\', url=None)\"'"
    str_1 = " Use '"
    section_0 = module_0.Section(str_1, str_1)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_3 = section_0.__repr__()
    assert var_3 == 'Section(title=" Use \'")'
    int_0 = var_3.__len__()
    assert int_0 == 23
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_2, none_type_1)
    int_1 = var_3.__len__()
    assert int_1 == 23
    int_2 = var_3.__len__()
    assert int_2 == 23
    var_0.read_source(var_2)


@pytest.mark.xfail(strict=True)
def test_case_957():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_1 = var_0.__str__()
    assert str_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_2 = var_0.__repr__()
    assert var_2 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_2, none_type_1)
    bytes_0 = b"\x802c35Z\xf8"
    link_2 = module_0.Link(link_1, bytes_0)
    dict_0 = {}
    str_3 = 'y\x0c[fN"W:2&:SWyz~W'
    link_3 = module_0.Link(dict_0, str_3)
    var_3 = link_2.__repr__()
    assert (
        var_3
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )
    str_4 = " Use '"
    section_0 = module_0.Section(str_4, str_4)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_4 = section_0.__repr__()
    assert var_4 == 'Section(title=" Use \'")'
    int_0 = var_4.__len__()
    assert int_0 == 23
    section_1 = module_0.Section(var_4, int_0)
    assert section_1.title == 'Section(title=" Use \'")'
    assert section_1.children == 23
    str_5 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_4 = module_0.Link(str_5, none_type_2)
    bytes_1 = b"\x802c35Z\xf8"
    link_5 = module_0.Link(link_4, bytes_1)
    var_5 = link_4.__repr__()
    assert var_5 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    iterator_0 = var_5.__iter__()
    str_6 = "page_context"
    section_2 = module_0.Section(str_6, str_6)
    link_6 = module_0.Link(str_6, section_2)
    str_7 = "' is included in the 'nav' configuration."
    link_7 = module_0.Link(str_7, str_7)
    str_8 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_8 = module_0.Link(str_8, none_type_3)
    var_6 = link_8.__repr__()
    assert var_6 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_7 = var_6.__repr__()
    assert var_7 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_9 = var_6.__str__()
    assert str_9 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_10 = "page_context"
    section_3 = module_0.Section(str_10, str_10)
    str_11 = "' from the site because it conflicts with '"
    list_0 = []
    section_4 = module_0.Section(str_11, list_0)
    var_8 = section_4.__repr__()
    assert var_8 == "Section(title=\"' from the site because it conflicts with '\")"
    section_5 = module_0.Section(str_11, section_3)
    int_1 = var_8.__len__()
    assert int_1 == 60
    module_0.get_navigation(var_7, var_4)


@pytest.mark.xfail(strict=True)
def test_case_958():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    int_0 = var_1.__len__()
    assert int_0 == 44
    module_0.Navigation(str_0, var_0)


@pytest.mark.xfail(strict=True)
def test_case_959():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    str_1 = 'C5B_`:"E&+;Y['
    link_0 = module_0.Link(str_1, str_1)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == 'C5B_`:"E&+;Y['
    assert link_0.url == 'C5B_`:"E&+;Y['
    int_0 = var_0.__len__()
    assert int_0 == 23
    section_1 = module_0.Section(str_0, var_0)
    assert section_1.children == 'Section(title=" Use \'")'
    str_2 = "page_context"
    section_2 = module_0.Section(str_2, str_2)
    str_3 = "' from the site because it conflicts with '"
    list_0 = []
    section_3 = module_0.Section(str_3, list_0)
    var_1 = section_3.__repr__()
    assert var_1 == "Section(title=\"' from the site because it conflicts with '\")"
    section_4 = module_0.Section(str_3, section_2)
    str_4 = " Use '"
    section_5 = module_0.Section(str_4, str_4)
    var_2 = section_5.__repr__()
    assert var_2 == 'Section(title=" Use \'")'
    str_5 = "gfRsC:6&{;|"
    section_6 = module_0.Section(str_5, str_5)
    str_6 = "relative_to_docs"
    link_1 = module_0.Link(str_6, section_6)
    section_7 = module_0.Section(section_5, var_2)
    assert section_7.children == 'Section(title=" Use \'")'
    str_7 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_2 = module_0.Link(str_7, none_type_0)
    var_3 = link_2.__repr__()
    assert var_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_4 = var_3.__repr__()
    assert var_4 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_8 = var_3.__str__()
    assert str_8 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_9 = "page_context"
    section_8 = module_0.Section(str_9, str_9)
    str_10 = " Use '"
    section_9 = module_0.Section(str_10, str_10)
    var_5 = section_9.__repr__()
    assert var_5 == 'Section(title=" Use \'")'
    var_6 = var_5.__repr__()
    assert var_6 == "'Section(title=\" Use \\'\")'"
    link_3 = module_0.Link(var_6, section_8)
    assert link_3.title == "'Section(title=\" Use \\'\")'"
    bool_0 = True
    link_4 = module_0.Link(bool_0, bool_0)
    str_11 = "page_context"
    section_10 = module_0.Section(str_11, str_11)
    str_12 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_5 = module_0.Link(str_12, none_type_1)
    var_7 = link_5.__repr__()
    assert var_7 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_8 = section_10.__repr__()
    assert var_8 == "Section(title='page_context')"
    str_13 = "page_context"
    section_11 = module_0.Section(str_13, str_13)
    str_14 = "' from the site because it conflicts with '"
    list_1 = []
    section_12 = module_0.Section(str_14, list_1)
    section_13 = module_0.Section(section_12, list_1)
    str_15 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_6 = module_0.Link(str_15, none_type_2)
    bytes_0 = b"\x802c35Z\xf8"
    link_7 = module_0.Link(link_6, bytes_0)
    var_9 = link_6.__repr__()
    assert var_9 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_10 = var_9.__repr__()
    assert var_10 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    module_0.get_navigation(section_10, link_2)


@pytest.mark.xfail(strict=True)
def test_case_960():
    str_0 = "page_context"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_1 = "' from the site because it conflicts with '"
    list_0 = []
    section_1 = module_0.Section(str_1, list_0)
    var_0 = section_1.__repr__()
    assert var_0 == "Section(title=\"' from the site because it conflicts with '\")"
    str_2 = "\\l;/\nKHZ=K\nU\no|2{loH"
    link_0 = module_0.Link(str_0, str_2)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "page_context"
    assert link_0.url == "\\l;/\nKHZ=K\nU\no|2{loH"
    str_3 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_1 = module_0.Link(str_3, none_type_0)
    var_1 = link_1.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_2 = var_1.__repr__()
    assert var_2 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_4 = var_1.__str__()
    assert str_4 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    module_0.Navigation(list_0, var_1)


@pytest.mark.xfail(strict=True)
def test_case_961():
    str_0 = "()Z\x0bz:bow"
    set_0 = {str_0}
    module_2.file_sort_key(set_0)


@pytest.mark.xfail(strict=True)
def test_case_962():
    str_0 = "gfRsC:6&{;|"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "gfRsC:6&{;|"
    assert section_0.children == "gfRsC:6&{;|"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    list_0 = []
    section_1 = module_0.Section(section_0, list_0)
    module_6.Page(section_1, list_0, section_1)


@pytest.mark.xfail(strict=True)
def test_case_963():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_1 = var_0.__str__()
    assert str_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_2 = 'C5B_`:"E&+;Y['
    link_1 = module_0.Link(str_2, str_2)
    int_0 = var_0.__len__()
    assert int_0 == 42
    str_3 = " Use '"
    section_0 = module_0.Section(str_3, str_3)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_2 = section_0.__repr__()
    assert var_2 == 'Section(title=" Use \'")'
    int_1 = var_2.__len__()
    assert int_1 == 23
    str_4 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_2 = module_0.Link(str_4, none_type_1)
    int_2 = var_2.__len__()
    assert int_2 == 23
    int_3 = var_2.__len__()
    assert int_3 == 23
    str_5 = " Use '"
    section_1 = module_0.Section(str_5, str_5)
    var_3 = section_1.__repr__()
    assert var_3 == 'Section(title=" Use \'")'
    int_4 = var_3.__len__()
    assert int_4 == 23
    str_6 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_3 = module_0.Link(str_6, none_type_2)
    int_5 = var_3.__len__()
    assert int_5 == 23
    str_7 = "page_context"
    section_2 = module_0.Section(str_7, str_7)
    str_8 = "' from the site because it conflicts with '"
    list_0 = []
    section_3 = module_0.Section(str_8, list_0)
    str_9 = " Use '"
    section_4 = module_0.Section(str_9, str_9)
    var_4 = section_4.__repr__()
    assert var_4 == 'Section(title=" Use \'")'
    str_10 = "gfRsC:6&{;|"
    section_5 = module_0.Section(str_10, str_10)
    str_11 = "relative_to_docs"
    link_4 = module_0.Link(str_11, section_5)
    str_12 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_5 = module_0.Link(str_12, none_type_3)
    var_5 = link_5.__repr__()
    assert var_5 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_6 = var_5.__repr__()
    assert var_6 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_13 = var_5.__str__()
    assert str_13 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_14 = " Use '"
    section_6 = module_0.Section(str_14, str_14)
    var_7 = section_6.__repr__()
    assert var_7 == 'Section(title=" Use \'")'
    int_6 = var_7.__len__()
    assert int_6 == 23
    section_7 = module_0.Section(var_7, int_6)
    assert section_7.title == 'Section(title=" Use \'")'
    assert section_7.children == 23
    str_15 = "0_~6:m!(f5FgU,:rvz"
    none_type_4 = None
    link_6 = module_0.Link(str_15, none_type_4)
    bytes_0 = b"\x802c35Z\xf8"
    link_7 = module_0.Link(link_6, bytes_0)
    var_8 = link_6.__repr__()
    assert var_8 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_9 = var_8.__repr__()
    assert var_9 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    bool_0 = True
    link_8 = module_0.Link(bool_0, bool_0)
    module_0.Navigation(link_1, str_6)


@pytest.mark.xfail(strict=True)
def test_case_964():
    absolute_links_validation_value_0 = (
        module_6._AbsoluteLinksValidationValue.RELATIVE_TO_DOCS
    )
    module_3.nest_paths(absolute_links_validation_value_0)


@pytest.mark.xfail(strict=True)
def test_case_965():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_1, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_1 = link_0.__repr__()
    assert var_1 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    int_0 = var_1.__len__()
    assert int_0 == 42
    str_2 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_2, none_type_1)
    bytes_0 = b"\x802c35Z\xf8"
    link_2 = module_0.Link(link_1, bytes_0)
    var_2 = link_1.__repr__()
    assert var_2 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    int_1 = var_2.__len__()
    assert int_1 == 42
    str_3 = "page_context"
    section_1 = module_0.Section(str_3, str_3)
    str_4 = "' from the site because it conflicts with '"
    list_0 = []
    section_2 = module_0.Section(str_4, list_0)
    section_3 = module_0.Section(section_2, list_0)
    var_3 = link_1.__repr__()
    assert var_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    module_0.Navigation(var_3, var_1)


@pytest.mark.xfail(strict=True)
def test_case_966():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    var_1 = var_0.__repr__()
    assert var_1 == "'Section(title=\" Use \\'\")'"
    str_1 = "page_context"
    section_1 = module_0.Section(str_1, str_1)
    str_2 = "' from the site because it conflicts with '"
    list_0 = []
    section_2 = module_0.Section(str_2, list_0)
    section_3 = module_0.Section(section_2, list_0)
    str_3 = "page_context"
    section_4 = module_0.Section(str_3, str_3)
    str_4 = " Use '"
    section_5 = module_0.Section(str_4, str_4)
    var_2 = section_5.__repr__()
    assert var_2 == 'Section(title=" Use \'")'
    var_3 = var_2.__repr__()
    assert var_3 == "'Section(title=\" Use \\'\")'"
    link_0 = module_0.Link(var_3, section_4)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "'Section(title=\" Use \\'\")'"
    assert (
        f"{type(link_0.url).__module__}.{type(link_0.url).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    str_5 = "gfRsC:6&{;|"
    section_6 = module_0.Section(str_5, str_5)
    var_4 = section_6.__repr__()
    assert var_4 == "Section(title='gfRsC:6&{;|')"
    bool_0 = True
    section_7 = module_0.Section(bool_0, bool_0)
    list_1 = [var_4, var_4]
    section_8 = module_0.Section(section_6, list_1)
    assert section_8.children == [
        "Section(title='gfRsC:6&{;|')",
        "Section(title='gfRsC:6&{;|')",
    ]
    str_6 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_1 = module_0.Link(str_6, none_type_0)
    var_5 = link_1.__repr__()
    assert var_5 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_6 = var_5.__repr__()
    assert var_6 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_7 = var_5.__repr__()
    assert var_7 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_8 = link_1.__repr__()
    assert var_8 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_7 = " Use '"
    section_9 = module_0.Section(str_7, str_7)
    var_9 = section_9.__repr__()
    assert var_9 == 'Section(title=" Use \'")'
    str_8 = 'C5B_`:"E&+;Y['
    link_2 = module_0.Link(str_8, str_8)
    int_0 = var_9.__len__()
    assert int_0 == 23
    str_9 = "$9.}1Av5,.}"
    link_3 = module_0.Link(str_9, str_9)
    var_10 = var_9.__repr__()
    assert var_10 == "'Section(title=\" Use \\'\")'"
    str_10 = " Use '"
    section_10 = module_0.Section(str_10, str_10)
    var_11 = section_10.__repr__()
    assert var_11 == 'Section(title=" Use \'")'
    str_11 = "gfRsC:6&{;|"
    section_11 = module_0.Section(str_11, str_11)
    str_12 = "relative_to_docs"
    link_4 = module_0.Link(str_12, section_11)
    section_12 = module_0.Section(section_10, var_11)
    assert section_12.children == 'Section(title=" Use \'")'
    int_1 = var_11.__len__()
    assert int_1 == 23
    bool_1 = True
    link_5 = module_0.Link(bool_1, bool_1)
    module_0.get_navigation(var_6, str_9)


@pytest.mark.xfail(strict=True)
def test_case_967():
    str_0 = "vCGo3"
    str_1 = ""
    section_0 = module_0.Section(str_1, str_1)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == ""
    assert section_0.children == ""
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    list_0 = [section_0, section_0, section_0, section_0]
    section_1 = module_0.Section(str_0, list_0)
    module_2.file_sort_key(str_1)


@pytest.mark.xfail(strict=True)
def test_case_968():
    none_type_0 = None
    section_0 = module_0.Section(none_type_0, none_type_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title is None
    assert section_0.children is None
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_0 = module_0.Link(str_0, none_type_1)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_2 = var_1.__repr__()
    assert var_2 == "'\"Link(title=\\'0_~6:m!(f5FgU,:rvz\\', url=None)\"'"
    module_0.Navigation(var_2, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_969():
    bytes_0 = b"\x0c^\xb4\xf9<\x9e\x9d\xa8\xf8q\x96F\x08Q3"
    bool_0 = True
    module_0.get_navigation(bytes_0, bool_0)


@pytest.mark.xfail(strict=True)
def test_case_970():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    str_1 = 'C5B_`:"E&+;Y['
    link_0 = module_0.Link(str_1, str_1)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == 'C5B_`:"E&+;Y['
    assert link_0.url == 'C5B_`:"E&+;Y['
    int_0 = var_0.__len__()
    assert int_0 == 23
    section_1 = module_0.Section(var_0, var_0)
    assert section_1.title == 'Section(title=" Use \'")'
    assert section_1.children == 'Section(title=" Use \'")'
    none_type_0 = None
    section_2 = module_0.Section(none_type_0, none_type_0)
    str_2 = "page_context"
    section_3 = module_0.Section(str_2, str_2)
    str_3 = "' from the site because it conflicts with '"
    list_0 = []
    section_4 = module_0.Section(str_3, list_0)
    var_1 = section_4.__repr__()
    assert var_1 == "Section(title=\"' from the site because it conflicts with '\")"
    section_5 = module_0.Section(str_3, section_3)
    str_4 = "page_context"
    section_6 = module_0.Section(str_4, str_4)
    str_5 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_5, none_type_1)
    bytes_0 = b"\x802c35Z\xf8"
    link_2 = module_0.Link(link_1, bytes_0)
    bool_0 = True
    section_7 = module_0.Section(bool_0, bool_0)
    var_2 = link_2.__repr__()
    assert (
        var_2
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )
    str_6 = var_2.__str__()
    assert (
        str_6
        == "Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\x802c35Z\\xf8')"
    )
    bool_1 = True
    section_8 = module_0.Section(bool_1, bool_1)
    str_7 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_3 = module_0.Link(str_7, none_type_2)
    var_3 = link_3.__repr__()
    assert var_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_4 = var_3.__repr__()
    assert var_4 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    section_9 = module_0.Section(none_type_2, var_4)
    assert section_9.children == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_5 = section_9.__repr__()
    assert var_5 == "Section(title=None)"
    var_6 = var_2.__repr__()
    assert (
        var_6
        == "\"Link(title=Link(title='0_~6:m!(f5FgU,:rvz', url=None), url=b'\\\\x802c35Z\\\\xf8')\""
    )
    module_0.Navigation(var_6, var_1)


@pytest.mark.xfail(strict=True)
def test_case_971():
    bool_0 = False
    list_0 = [bool_0]
    module_1.urlsplit(list_0, allow_fragments=list_0)


@pytest.mark.xfail(strict=True)
def test_case_972():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_1 = "x"
    section_0 = module_0.Section(str_1, str_1)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "x"
    assert section_0.children == "x"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_2 = " Use '"
    section_1 = module_0.Section(str_2, str_2)
    var_1 = section_1.__repr__()
    assert var_1 == 'Section(title=" Use \'")'
    str_3 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_3, none_type_1)
    var_2 = link_1.__repr__()
    assert var_2 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    int_0 = var_2.__len__()
    assert int_0 == 42
    int_1 = var_1.__len__()
    assert int_1 == 23
    str_4 = " Use '"
    section_2 = module_0.Section(str_4, str_4)
    var_3 = section_2.__repr__()
    assert var_3 == 'Section(title=" Use \'")'
    int_2 = var_3.__len__()
    assert int_2 == 23
    str_5 = "gfRsC:6&{;|"
    section_3 = module_0.Section(str_5, str_5)
    list_0 = []
    section_4 = module_0.Section(section_3, list_0)
    str_6 = 'C5B_`:"E&+;Y['
    link_2 = module_0.Link(str_6, str_6)
    none_type_2 = None
    section_5 = module_0.Section(none_type_2, none_type_2)
    str_7 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_3 = module_0.Link(str_7, none_type_3)
    var_4 = link_3.__repr__()
    assert var_4 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_5 = var_4.__repr__()
    assert var_5 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_8 = var_4.__str__()
    assert str_8 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_9 = "$9.}1Av5,.}"
    link_4 = module_0.Link(str_9, str_9)
    str_10 = "page_context"
    section_6 = module_0.Section(str_10, str_10)
    str_11 = "' from the site because it conflicts with '"
    list_1 = []
    section_7 = module_0.Section(str_11, list_1)
    var_6 = section_7.__repr__()
    assert var_6 == "Section(title=\"' from the site because it conflicts with '\")"
    module_0.Navigation(var_2, section_0)


@pytest.mark.xfail(strict=True)
def test_case_973():
    none_type_0 = None
    module_0.get_navigation(none_type_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_974():
    str_0 = " Use '"
    section_0 = module_0.Section(str_0, str_0)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_0 = section_0.__repr__()
    assert var_0 == 'Section(title=" Use \'")'
    int_0 = var_0.__len__()
    assert int_0 == 23
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_1, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    int_1 = var_0.__len__()
    assert int_1 == 23
    int_2 = var_0.__len__()
    assert int_2 == 23
    str_2 = "page_context"
    section_1 = module_0.Section(str_2, str_2)
    str_3 = "' from the site because it conflicts with '"
    list_0 = []
    section_2 = module_0.Section(str_3, list_0)
    section_3 = module_0.Section(section_2, list_0)
    dict_0 = {}
    str_4 = 'y\x0c[fN"W:2&:SWyz~W'
    link_1 = module_0.Link(dict_0, str_4)
    var_1 = module_1.urlsplit(str_4)
    var_2 = var_1.__repr__()
    iterator_0 = var_2.__iter__()
    str_5 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_2 = module_0.Link(str_5, none_type_1)
    var_3 = link_2.__repr__()
    assert var_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_4 = var_3.__repr__()
    assert var_4 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_5 = var_4.__repr__()
    assert var_5 == "'\"Link(title=\\'0_~6:m!(f5FgU,:rvz\\', url=None)\"'"
    str_6 = "page_context"
    section_4 = module_0.Section(str_6, str_6)
    str_7 = "' from the site because it conflicts with '"
    list_1 = []
    section_5 = module_0.Section(str_7, list_1)
    var_6 = section_5.__repr__()
    assert var_6 == "Section(title=\"' from the site because it conflicts with '\")"
    str_8 = "\\l;/\nKHZ=K\nU\no|2{loH"
    link_3 = module_0.Link(str_6, str_8)
    str_9 = "page_context"
    section_6 = module_0.Section(str_9, str_9)
    str_10 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_4 = module_0.Link(str_10, none_type_2)
    var_7 = link_4.__repr__()
    assert var_7 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_8 = section_6.__repr__()
    assert var_8 == "Section(title='page_context')"
    str_11 = "0_~6:m!(f5FgU,:rvz"
    none_type_3 = None
    link_5 = module_0.Link(str_11, none_type_3)
    var_9 = link_5.__repr__()
    assert var_9 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_10 = var_9.__repr__()
    assert var_10 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_11 = var_9.__repr__()
    assert var_11 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_8.read_source(str_4)


@pytest.mark.xfail(strict=True)
def test_case_975():
    str_0 = 'C5B_`:"E&+;Y['
    link_0 = module_0.Link(str_0, str_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == 'C5B_`:"E&+;Y['
    assert link_0.url == 'C5B_`:"E&+;Y['
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_1 = module_0.Link(str_1, none_type_0)
    bytes_0 = b"\x802c35Z\xf8"
    link_2 = module_0.Link(link_1, bytes_0)
    var_0 = link_1.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    set_0 = set()
    navigation_0 = module_0.Navigation(set_0, set_0)
    assert (
        f"{type(navigation_0).__module__}.{type(navigation_0).__qualname__}"
        == "mkdocs.structure.nav.Navigation"
    )
    assert len(navigation_0) == 0
    str_2 = navigation_0.__str__()
    str_3 = "page_context"
    section_0 = module_0.Section(str_3, str_3)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "page_context"
    assert section_0.children == "page_context"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_4 = "' from the site because it conflicts with '"
    list_0 = []
    section_1 = module_0.Section(str_4, list_0)
    var_1 = section_1.__repr__()
    assert var_1 == "Section(title=\"' from the site because it conflicts with '\")"
    str_5 = " Use '"
    section_2 = module_0.Section(str_5, str_5)
    var_2 = section_2.__repr__()
    assert var_2 == 'Section(title=" Use \'")'
    int_0 = var_2.__len__()
    assert int_0 == 23
    section_3 = module_0.Section(var_2, int_0)
    assert section_3.title == 'Section(title=" Use \'")'
    assert section_3.children == 23
    none_type_1 = None
    section_4 = module_0.Section(none_type_1, none_type_1)
    var_3 = module_1.urlsplit(none_type_1)
    iterator_0 = var_3.__iter__()
    str_6 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_3 = module_0.Link(str_6, none_type_2)
    module_0.get_navigation(link_0, iterator_0)


@pytest.mark.xfail(strict=True)
def test_case_976():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    bytes_0 = b"\x802c35Z\xf8"
    link_1 = module_0.Link(link_0, bytes_0)
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    iterator_0 = var_0.__iter__()
    str_1 = " Use '"
    section_0 = module_0.Section(str_1, str_1)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_1 = section_0.__repr__()
    assert var_1 == 'Section(title=" Use \'")'
    var_2 = var_1.__repr__()
    assert var_2 == "'Section(title=\" Use \\'\")'"
    set_0 = set()
    navigation_0 = module_0.Navigation(set_0, set_0)
    assert (
        f"{type(navigation_0).__module__}.{type(navigation_0).__qualname__}"
        == "mkdocs.structure.nav.Navigation"
    )
    assert len(navigation_0) == 0
    str_2 = navigation_0.__str__()
    iterator_1 = var_2.__iter__()
    str_3 = "page_context"
    section_1 = module_0.Section(str_3, str_3)
    str_4 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_2 = module_0.Link(str_4, none_type_1)
    var_3 = link_2.__repr__()
    assert var_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_4 = section_1.__repr__()
    assert var_4 == "Section(title='page_context')"
    str_5 = " Use '"
    section_2 = module_0.Section(str_5, str_5)
    var_5 = section_2.__repr__()
    assert var_5 == 'Section(title=" Use \'")'
    int_0 = var_5.__len__()
    assert int_0 == 23
    str_6 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_3 = module_0.Link(str_6, none_type_2)
    var_6 = link_3.__repr__()
    assert var_6 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_7 = var_6.__repr__()
    assert var_7 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_8 = var_7.__repr__()
    assert var_8 == "'\"Link(title=\\'0_~6:m!(f5FgU,:rvz\\', url=None)\"'"
    module_0.Navigation(str_2, var_0)


@pytest.mark.xfail(strict=True)
def test_case_977():
    bool_0 = True
    module_0.get_navigation(bool_0, bool_0)


@pytest.mark.xfail(strict=True)
def test_case_978():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_1 = "gfRsC:6&{;|"
    section_0 = module_0.Section(str_1, str_1)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == "gfRsC:6&{;|"
    assert section_0.children == "gfRsC:6&{;|"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    str_2 = " Use '"
    section_1 = module_0.Section(str_2, str_2)
    var_2 = section_1.__repr__()
    assert var_2 == 'Section(title=" Use \'")'
    int_0 = var_2.__len__()
    assert int_0 == 23
    var_3 = var_2.__repr__()
    assert var_3 == "'Section(title=\" Use \\'\")'"
    link_1 = module_0.Link(int_0, var_2)
    assert link_1.title == 23
    assert link_1.url == 'Section(title=" Use \'")'
    str_3 = " Use '"
    section_2 = module_0.Section(str_3, str_3)
    var_4 = section_2.__repr__()
    assert var_4 == 'Section(title=" Use \'")'
    int_1 = var_4.__len__()
    assert int_1 == 23
    section_3 = module_0.Section(var_4, int_1)
    assert section_3.title == 'Section(title=" Use \'")'
    assert section_3.children == 23
    str_4 = "$9.}1Av5,.}"
    link_2 = module_0.Link(str_4, str_4)
    str_5 = " Use '"
    section_4 = module_0.Section(str_5, str_5)
    var_5 = section_4.__repr__()
    assert var_5 == 'Section(title=" Use \'")'
    str_6 = "gfRsC:6&{;|"
    section_5 = module_0.Section(str_6, str_6)
    str_7 = "relative_to_docs"
    link_3 = module_0.Link(str_7, section_5)
    section_6 = module_0.Section(section_4, var_5)
    assert section_6.children == 'Section(title=" Use \'")'
    str_8 = "page_context"
    section_7 = module_0.Section(str_8, str_8)
    str_9 = "' from the site because it conflicts with '"
    list_0 = []
    section_8 = module_0.Section(str_9, list_0)
    var_6 = section_8.__repr__()
    assert var_6 == "Section(title=\"' from the site because it conflicts with '\")"
    section_9 = module_0.Section(str_9, section_7)
    none_type_1 = None
    set_0 = {none_type_1, none_type_1, none_type_1, none_type_1}
    link_4 = module_0.Link(none_type_1, set_0)
    module_0.get_navigation(str_3, str_4)


@pytest.mark.xfail(strict=True)
def test_case_979():
    str_0 = "0_~6:m!(f5FgU,:rvz"
    none_type_0 = None
    link_0 = module_0.Link(str_0, none_type_0)
    assert (
        f"{type(link_0).__module__}.{type(link_0).__qualname__}"
        == "mkdocs.structure.nav.Link"
    )
    assert link_0.title == "0_~6:m!(f5FgU,:rvz"
    assert link_0.url is None
    var_0 = link_0.__repr__()
    assert var_0 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    var_2 = var_1.__repr__()
    assert var_2 == "'\"Link(title=\\'0_~6:m!(f5FgU,:rvz\\', url=None)\"'"
    str_1 = "0_~6:m!(f5FgU,:rvz"
    none_type_1 = None
    link_1 = module_0.Link(str_1, none_type_1)
    var_3 = link_1.__repr__()
    assert var_3 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    var_4 = var_3.__repr__()
    assert var_4 == "\"Link(title='0_~6:m!(f5FgU,:rvz', url=None)\""
    str_2 = var_3.__str__()
    assert str_2 == "Link(title='0_~6:m!(f5FgU,:rvz', url=None)"
    str_3 = 'C5B_`:"E&+;Y['
    link_2 = module_0.Link(str_3, str_3)
    int_0 = var_3.__len__()
    assert int_0 == 42
    str_4 = " Use '"
    section_0 = module_0.Section(str_4, str_4)
    assert (
        f"{type(section_0).__module__}.{type(section_0).__qualname__}"
        == "mkdocs.structure.nav.Section"
    )
    assert section_0.title == " Use '"
    assert section_0.children == " Use '"
    assert (
        f"{type(module_0.Section.active).__module__}.{type(module_0.Section.active).__qualname__}"
        == "builtins.property"
    )
    var_5 = section_0.__repr__()
    assert var_5 == 'Section(title=" Use \'")'
    var_6 = var_5.__repr__()
    assert var_6 == "'Section(title=\" Use \\'\")'"
    dict_0 = {}
    str_5 = 'y\x0c[fN"W:2&:SWyz~W'
    link_3 = module_0.Link(dict_0, str_5)
    section_1 = module_0.Section(str_4, var_6)
    assert section_1.children == "'Section(title=\" Use \\'\")'"
    str_6 = "page_context"
    section_2 = module_0.Section(str_6, str_6)
    str_7 = "0_~6:m!(f5FgU,:rvz"
    none_type_2 = None
    link_4 = module_0.Link(str_7, none_type_2)
    bytes_0 = b"\x802c35Z\xf8"
    link_5 = module_0.Link(link_4, bytes_0)
    module_0.get_navigation(var_3, link_5)
