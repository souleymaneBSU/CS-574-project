# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import mkdocs.utils.babel_stub as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    list_0 = []
    str_0 = "\t!8O~3N\x0bMxH+*=j}"
    var_0 = list_0.__str__()
    dict_0 = {str_0: list_0, str_0: list_0}
    var_1 = var_0.__str__()
    var_2 = var_1.__str__()
    locale_0 = module_0.Locale(*var_0)
    assert (
        f"{type(module_0.Locale.parse).__module__}.{type(module_0.Locale.parse).__qualname__}"
        == "builtins.method"
    )
    var_3 = locale_0.__str__()
    assert var_3 == "[_]"
    module_0.UnknownLocaleError(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    str_0 = "c\ny[X7<bR*@,':M'"
    complex_0 = 227.23 + 523.63j
    list_0 = [complex_0]
    locale_0 = module_0.Locale(*list_0)
    assert (
        f"{type(module_0.Locale.parse).__module__}.{type(module_0.Locale.parse).__qualname__}"
        == "builtins.method"
    )
    var_0 = locale_0.__str__()
    assert var_0 == (227.23 + 523.63j)
    str_1 = "u\nL^4r"
    str_2 = "yO=l\n9c"
    dict_0 = {str_0: var_0, str_1: str_0, str_2: str_0}
    module_0.Locale(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    module_0.Locale()
