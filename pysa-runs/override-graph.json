{
  "BaseException.__init__": [
    "BaseExceptionGroup",
    "testslide.lib.CoroutineValueError",
    "testslide.strict_mock.NonAwaitableReturn",
    "testslide.strict_mock.NonCallableValue",
    "testslide.strict_mock.NonExistentAttribute",
    "testslide.strict_mock.UndefinedAttribute",
    "testslide.strict_mock.UnsupportedMagic"
  ],
  "BaseException.__new__": [
    "BaseExceptionGroup"
  ],
  "BaseException.__setstate__": [
    "psycopg2._psycopg.Error"
  ],
  "BaseException.__str__": [
    "testslide.lib.CoroutineValueError",
    "testslide.strict_mock.NonAwaitableReturn",
    "testslide.strict_mock.NonCallableValue",
    "testslide.strict_mock.NonExistentAttribute",
    "testslide.strict_mock.UndefinedAttribute",
    "testslide.strict_mock.UnsupportedMagic"
  ],
  "BaseExceptionGroup.__init__": [
    "ExceptionGroup"
  ],
  "BaseExceptionGroup.__new__": [
    "ExceptionGroup"
  ],
  "BaseExceptionGroup.exceptions": [
    "ExceptionGroup"
  ],
  "BaseExceptionGroup.split": [
    "ExceptionGroup"
  ],
  "BaseExceptionGroup.subgroup": [
    "ExceptionGroup"
  ],
  "ImportError.__init__": [
    "werkzeug.utils.ImportStringError"
  ],
  "ImportError.name": [
    "importlib.metadata.PackageNotFoundError"
  ],
  "MySQLdb._mysql.connection.__init__": [
    "MySQLdb.connections.Connection"
  ],
  "MySQLdb._mysql.connection.autocommit": [
    "MySQLdb.connections.Connection"
  ],
  "MySQLdb._mysql.connection.query": [
    "MySQLdb.connections.Connection"
  ],
  "MySQLdb._mysql.connection.set_character_set": [
    "MySQLdb.connections.Connection"
  ],
  "MySQLdb._mysql.connection.warning_count": [
    "MySQLdb.connections.Connection"
  ],
  "_ast.excepthandler.__init__": [
    "_ast.ExceptHandler"
  ],
  "_ast.expr.__init__": [
    "_ast.Attribute",
    "_ast.Await",
    "_ast.BinOp",
    "_ast.BoolOp",
    "_ast.Call",
    "_ast.Compare",
    "_ast.Constant",
    "_ast.Dict",
    "_ast.DictComp",
    "_ast.FormattedValue",
    "_ast.GeneratorExp",
    "_ast.IfExp",
    "_ast.JoinedStr",
    "_ast.Lambda",
    "_ast.List",
    "_ast.ListComp",
    "_ast.Name",
    "_ast.NamedExpr",
    "_ast.Set",
    "_ast.SetComp",
    "_ast.Slice",
    "_ast.Starred",
    "_ast.Subscript",
    "_ast.Tuple",
    "_ast.UnaryOp",
    "_ast.Yield",
    "_ast.YieldFrom"
  ],
  "_ast.pattern.__init__": [
    "_ast.MatchAs",
    "_ast.MatchClass",
    "_ast.MatchMapping",
    "_ast.MatchOr",
    "_ast.MatchSequence",
    "_ast.MatchSingleton",
    "_ast.MatchStar",
    "_ast.MatchValue"
  ],
  "_ast.stmt.__init__": [
    "_ast.AnnAssign",
    "_ast.Assert",
    "_ast.Assign",
    "_ast.AsyncFor",
    "_ast.AsyncFunctionDef",
    "_ast.AsyncWith",
    "_ast.AugAssign",
    "_ast.ClassDef",
    "_ast.Delete",
    "_ast.Expr",
    "_ast.For",
    "_ast.FunctionDef",
    "_ast.Global",
    "_ast.If",
    "_ast.Import",
    "_ast.ImportFrom",
    "_ast.Match",
    "_ast.Nonlocal",
    "_ast.Raise",
    "_ast.Return",
    "_ast.Try",
    "_ast.TryStar",
    "_ast.TypeAlias",
    "_ast.While",
    "_ast.With"
  ],
  "_ast.type_param.__init__": [
    "_ast.ParamSpec",
    "_ast.TypeVar",
    "_ast.TypeVarTuple"
  ],
  "_compression.DecompressReader.__init__": [
    "gzip._GzipReader"
  ],
  "_csv.Dialect.__init__": [
    "csv.Dialect"
  ],
  "_ctypes._SimpleCData.__init__": [
    "ctypes.c_bool",
    "ctypes.c_char"
  ],
  "_dummy_thread.LockType.release": [
    "_dummy_thread.RLock"
  ],
  "_dummy_threading.Thread.__init__": [
    "_dummy_threading.Timer"
  ],
  "_random.Random.__init__": [
    "random.Random"
  ],
  "_random.Random.getrandbits": [
    "random.SystemRandom"
  ],
  "_random.Random.getstate": [
    "random.Random"
  ],
  "_random.Random.seed": [
    "random.Random"
  ],
  "_random.Random.setstate": [
    "random.Random"
  ],
  "_socket.socket.__init__": [
    "socket.socket"
  ],
  "_socket.socket.connect": [
    "ssl.SSLSocket"
  ],
  "_socket.socket.connect_ex": [
    "ssl.SSLSocket"
  ],
  "_socket.socket.family": [
    "socket.socket"
  ],
  "_socket.socket.recv": [
    "ssl.SSLSocket"
  ],
  "_socket.socket.recv_into": [
    "ssl.SSLSocket"
  ],
  "_socket.socket.recvfrom": [
    "ssl.SSLSocket"
  ],
  "_socket.socket.recvfrom_into": [
    "ssl.SSLSocket"
  ],
  "_socket.socket.recvmsg": [
    "ssl.SSLSocket"
  ],
  "_socket.socket.recvmsg_into": [
    "ssl.SSLSocket"
  ],
  "_socket.socket.send": [
    "ssl.SSLSocket"
  ],
  "_socket.socket.sendall": [
    "ssl.SSLSocket"
  ],
  "_socket.socket.sendmsg": [
    "ssl.SSLSocket"
  ],
  "_socket.socket.sendto": [
    "ssl.SSLSocket"
  ],
  "_socket.socket.shutdown": [
    "ssl.SSLSocket"
  ],
  "_socket.socket.type": [
    "socket.socket"
  ],
  "_ssl._SSLContext.__new__": [
    "ssl.SSLContext"
  ],
  "_ssl._SSLContext.get_ca_certs": [
    "ssl.SSLContext"
  ],
  "_ssl._SSLContext.get_ciphers": [
    "ssl.SSLContext"
  ],
  "_ssl._SSLContext.load_dh_params": [
    "ssl.SSLContext"
  ],
  "_ssl._SSLContext.load_verify_locations": [
    "ssl.SSLContext"
  ],
  "_ssl._SSLContext.protocol": [
    "ssl.SSLContext"
  ],
  "_ssl._SSLContext.set_ciphers": [
    "ssl.SSLContext"
  ],
  "_ssl._SSLContext.set_default_verify_paths": [
    "ssl.SSLContext"
  ],
  "_ssl._SSLContext.set_ecdh_curve": [
    "ssl.SSLContext"
  ],
  "_typeshed.SliceableBuffer.__getitem__": [
    "_typeshed.SupportsGetItemBuffer"
  ],
  "_typeshed.structseq.__new__": [
    "os.sched_param"
  ],
  "abc.ABCMeta.__instancecheck__": [
    "pydantic._internal._model_construction.ModelMetaclass",
    "pydantic.v1.main.ModelMetaclass"
  ],
  "abc.ABCMeta.__new__": [
    "complex",
    "fractions.Fraction",
    "marshmallow.schema.SchemaMeta",
    "pydantic._internal._model_construction.ModelMetaclass",
    "pydantic.v1.main.ModelMetaclass"
  ],
  "aiofiles.base.AiofilesContextManager.__aenter__": [
    "aiofiles.tempfile.AiofilesContextManagerTempDir"
  ],
  "aiofiles.base.AsyncBase.__init__": [
    "aiofiles.base.AsyncIndirectBase"
  ],
  "annotated_types.GroupedMetadata.__iter__": [
    "annotated_types.Interval",
    "annotated_types.Len",
    "annotated_types.test_cases.cases.MyCustomGroupedMetadata",
    "pydantic.types.StringConstraints"
  ],
  "anyio._backends._trio._TrioSocketMixin.__init__": [
    "anyio._backends._trio.ConnectedUDPSocket",
    "anyio._backends._trio.ConnectedUNIXDatagramSocket",
    "anyio._backends._trio.SocketStream",
    "anyio._backends._trio.TCPSocketListener",
    "anyio._backends._trio.UDPSocket",
    "anyio._backends._trio.UNIXDatagramSocket",
    "anyio._backends._trio.UNIXSocketListener"
  ],
  "anyio._core._synchronization.CapacityLimiter.__aenter__": [
    "anyio._backends._asyncio.CapacityLimiter",
    "anyio._backends._trio.CapacityLimiter",
    "anyio._core._synchronization.CapacityLimiterAdapter"
  ],
  "anyio._core._synchronization.CapacityLimiter.__aexit__": [
    "anyio._backends._asyncio.CapacityLimiter",
    "anyio._backends._trio.CapacityLimiter",
    "anyio._core._synchronization.CapacityLimiterAdapter"
  ],
  "anyio._core._synchronization.CapacityLimiter.__new__": [
    "anyio._backends._asyncio.CapacityLimiter",
    "anyio._backends._trio.CapacityLimiter",
    "anyio._core._synchronization.CapacityLimiterAdapter"
  ],
  "anyio._core._synchronization.CapacityLimiter.acquire": [
    "anyio._backends._asyncio.CapacityLimiter",
    "anyio._backends._trio.CapacityLimiter",
    "anyio._core._synchronization.CapacityLimiterAdapter"
  ],
  "anyio._core._synchronization.CapacityLimiter.acquire_nowait": [
    "anyio._backends._asyncio.CapacityLimiter",
    "anyio._backends._trio.CapacityLimiter",
    "anyio._core._synchronization.CapacityLimiterAdapter"
  ],
  "anyio._core._synchronization.CapacityLimiter.acquire_on_behalf_of": [
    "anyio._backends._asyncio.CapacityLimiter",
    "anyio._backends._trio.CapacityLimiter",
    "anyio._core._synchronization.CapacityLimiterAdapter"
  ],
  "anyio._core._synchronization.CapacityLimiter.acquire_on_behalf_of_nowait": [
    "anyio._backends._asyncio.CapacityLimiter",
    "anyio._backends._trio.CapacityLimiter",
    "anyio._core._synchronization.CapacityLimiterAdapter"
  ],
  "anyio._core._synchronization.CapacityLimiter.available_tokens": [
    "anyio._backends._asyncio.CapacityLimiter",
    "anyio._backends._trio.CapacityLimiter",
    "anyio._core._synchronization.CapacityLimiterAdapter"
  ],
  "anyio._core._synchronization.CapacityLimiter.borrowed_tokens": [
    "anyio._backends._asyncio.CapacityLimiter",
    "anyio._backends._trio.CapacityLimiter",
    "anyio._core._synchronization.CapacityLimiterAdapter"
  ],
  "anyio._core._synchronization.CapacityLimiter.release": [
    "anyio._backends._asyncio.CapacityLimiter",
    "anyio._backends._trio.CapacityLimiter",
    "anyio._core._synchronization.CapacityLimiterAdapter"
  ],
  "anyio._core._synchronization.CapacityLimiter.release_on_behalf_of": [
    "anyio._backends._asyncio.CapacityLimiter",
    "anyio._backends._trio.CapacityLimiter",
    "anyio._core._synchronization.CapacityLimiterAdapter"
  ],
  "anyio._core._synchronization.CapacityLimiter.statistics": [
    "anyio._backends._asyncio.CapacityLimiter",
    "anyio._backends._trio.CapacityLimiter",
    "anyio._core._synchronization.CapacityLimiterAdapter"
  ],
  "anyio._core._synchronization.CapacityLimiter.total_tokens": [
    "anyio._backends._asyncio.CapacityLimiter",
    "anyio._backends._trio.CapacityLimiter",
    "anyio._core._synchronization.CapacityLimiterAdapter"
  ],
  "anyio._core._synchronization.CapacityLimiter.total_tokens@setter": [
    "anyio._backends._asyncio.CapacityLimiter",
    "anyio._backends._trio.CapacityLimiter",
    "anyio._core._synchronization.CapacityLimiterAdapter"
  ],
  "anyio._core._synchronization.Event.__new__": [
    "anyio._backends._asyncio.Event",
    "anyio._backends._trio.Event",
    "anyio._core._synchronization.EventAdapter"
  ],
  "anyio._core._synchronization.Event.is_set": [
    "anyio._backends._asyncio.Event",
    "anyio._backends._trio.Event",
    "anyio._core._synchronization.EventAdapter"
  ],
  "anyio._core._synchronization.Event.set": [
    "anyio._backends._asyncio.Event",
    "anyio._backends._trio.Event",
    "anyio._core._synchronization.EventAdapter"
  ],
  "anyio._core._synchronization.Event.statistics": [
    "anyio._backends._asyncio.Event",
    "anyio._backends._trio.Event",
    "anyio._core._synchronization.EventAdapter"
  ],
  "anyio._core._synchronization.Event.wait": [
    "anyio._backends._asyncio.Event",
    "anyio._backends._trio.Event",
    "anyio._core._synchronization.EventAdapter"
  ],
  "anyio._core._synchronization.Lock.__aenter__": [
    "anyio._core._synchronization.LockAdapter"
  ],
  "anyio._core._synchronization.Lock.__aexit__": [
    "anyio._core._synchronization.LockAdapter"
  ],
  "anyio._core._synchronization.Lock.__new__": [
    "anyio._backends._asyncio.Lock",
    "anyio._backends._trio.Lock",
    "anyio._core._synchronization.LockAdapter"
  ],
  "anyio._core._synchronization.Lock.acquire": [
    "anyio._backends._asyncio.Lock",
    "anyio._backends._trio.Lock",
    "anyio._core._synchronization.LockAdapter"
  ],
  "anyio._core._synchronization.Lock.acquire_nowait": [
    "anyio._backends._asyncio.Lock",
    "anyio._backends._trio.Lock",
    "anyio._core._synchronization.LockAdapter"
  ],
  "anyio._core._synchronization.Lock.locked": [
    "anyio._backends._asyncio.Lock",
    "anyio._backends._trio.Lock",
    "anyio._core._synchronization.LockAdapter"
  ],
  "anyio._core._synchronization.Lock.release": [
    "anyio._backends._asyncio.Lock",
    "anyio._backends._trio.Lock",
    "anyio._core._synchronization.LockAdapter"
  ],
  "anyio._core._synchronization.Lock.statistics": [
    "anyio._backends._asyncio.Lock",
    "anyio._backends._trio.Lock",
    "anyio._core._synchronization.LockAdapter"
  ],
  "anyio._core._synchronization.Semaphore.__init__": [
    "anyio._backends._asyncio.Semaphore",
    "anyio._backends._trio.Semaphore",
    "anyio._core._synchronization.SemaphoreAdapter"
  ],
  "anyio._core._synchronization.Semaphore.__new__": [
    "anyio._backends._asyncio.Semaphore",
    "anyio._backends._trio.Semaphore",
    "anyio._core._synchronization.SemaphoreAdapter"
  ],
  "anyio._core._synchronization.Semaphore.acquire": [
    "anyio._backends._asyncio.Semaphore",
    "anyio._backends._trio.Semaphore",
    "anyio._core._synchronization.SemaphoreAdapter"
  ],
  "anyio._core._synchronization.Semaphore.acquire_nowait": [
    "anyio._backends._asyncio.Semaphore",
    "anyio._backends._trio.Semaphore",
    "anyio._core._synchronization.SemaphoreAdapter"
  ],
  "anyio._core._synchronization.Semaphore.max_value": [
    "anyio._backends._asyncio.Semaphore",
    "anyio._backends._trio.Semaphore",
    "anyio._core._synchronization.SemaphoreAdapter"
  ],
  "anyio._core._synchronization.Semaphore.release": [
    "anyio._backends._asyncio.Semaphore",
    "anyio._backends._trio.Semaphore",
    "anyio._core._synchronization.SemaphoreAdapter"
  ],
  "anyio._core._synchronization.Semaphore.statistics": [
    "anyio._backends._asyncio.Semaphore",
    "anyio._backends._trio.Semaphore",
    "anyio._core._synchronization.SemaphoreAdapter"
  ],
  "anyio._core._synchronization.Semaphore.value": [
    "anyio._backends._asyncio.Semaphore",
    "anyio._backends._trio.Semaphore",
    "anyio._core._synchronization.SemaphoreAdapter"
  ],
  "anyio._core._tasks.CancelScope.__enter__": [
    "anyio._backends._asyncio.CancelScope",
    "anyio._backends._trio.CancelScope"
  ],
  "anyio._core._tasks.CancelScope.__exit__": [
    "anyio._backends._asyncio.CancelScope",
    "anyio._backends._trio.CancelScope"
  ],
  "anyio._core._tasks.CancelScope.__new__": [
    "anyio._backends._asyncio.CancelScope",
    "anyio._backends._trio.CancelScope"
  ],
  "anyio._core._tasks.CancelScope.cancel": [
    "anyio._backends._asyncio.CancelScope",
    "anyio._backends._trio.CancelScope"
  ],
  "anyio._core._tasks.CancelScope.cancel_called": [
    "anyio._backends._asyncio.CancelScope",
    "anyio._backends._trio.CancelScope"
  ],
  "anyio._core._tasks.CancelScope.cancelled_caught": [
    "anyio._backends._asyncio.CancelScope",
    "anyio._backends._trio.CancelScope"
  ],
  "anyio._core._tasks.CancelScope.deadline": [
    "anyio._backends._asyncio.CancelScope",
    "anyio._backends._trio.CancelScope"
  ],
  "anyio._core._tasks.CancelScope.deadline@setter": [
    "anyio._backends._asyncio.CancelScope",
    "anyio._backends._trio.CancelScope"
  ],
  "anyio._core._tasks.CancelScope.shield": [
    "anyio._backends._asyncio.CancelScope",
    "anyio._backends._trio.CancelScope"
  ],
  "anyio._core._tasks.CancelScope.shield@setter": [
    "anyio._backends._asyncio.CancelScope",
    "anyio._backends._trio.CancelScope"
  ],
  "anyio._core._testing.TaskInfo.__init__": [
    "anyio._backends._asyncio.AsyncIOTaskInfo",
    "anyio._backends._trio.TrioTaskInfo"
  ],
  "anyio._core._testing.TaskInfo.has_pending_cancellation": [
    "anyio._backends._asyncio.AsyncIOTaskInfo",
    "anyio._backends._trio.TrioTaskInfo"
  ],
  "anyio._core._typedattr.TypedAttributeProvider.extra_attributes": [
    "anyio.abc._sockets._SocketProvider",
    "anyio.streams.buffered.BufferedByteReceiveStream",
    "anyio.streams.stapled.MultiListener",
    "anyio.streams.stapled.StapledByteStream",
    "anyio.streams.stapled.StapledObjectStream",
    "anyio.streams.text.TextReceiveStream",
    "anyio.streams.text.TextSendStream",
    "anyio.streams.text.TextStream",
    "anyio.streams.tls.TLSListener",
    "anyio.streams.tls.TLSStream"
  ],
  "anyio.abc._eventloop.AsyncBackend.cancel_shielded_checkpoint": [
    "anyio._backends._asyncio.AsyncIOBackend",
    "anyio._backends._trio.TrioBackend"
  ],
  "anyio.abc._eventloop.AsyncBackend.cancelled_exception_class": [
    "anyio._backends._asyncio.AsyncIOBackend",
    "anyio._backends._trio.TrioBackend"
  ],
  "anyio.abc._eventloop.AsyncBackend.check_cancelled": [
    "anyio._backends._asyncio.AsyncIOBackend",
    "anyio._backends._trio.TrioBackend"
  ],
  "anyio.abc._eventloop.AsyncBackend.checkpoint": [
    "anyio._backends._asyncio.AsyncIOBackend",
    "anyio._backends._trio.TrioBackend"
  ],
  "anyio.abc._eventloop.AsyncBackend.checkpoint_if_cancelled": [
    "anyio._backends._asyncio.AsyncIOBackend",
    "anyio._backends._trio.TrioBackend"
  ],
  "anyio.abc._eventloop.AsyncBackend.connect_tcp": [
    "anyio._backends._asyncio.AsyncIOBackend",
    "anyio._backends._trio.TrioBackend"
  ],
  "anyio.abc._eventloop.AsyncBackend.connect_unix": [
    "anyio._backends._asyncio.AsyncIOBackend",
    "anyio._backends._trio.TrioBackend"
  ],
  "anyio.abc._eventloop.AsyncBackend.create_blocking_portal": [
    "anyio._backends._asyncio.AsyncIOBackend",
    "anyio._backends._trio.TrioBackend"
  ],
  "anyio.abc._eventloop.AsyncBackend.create_cancel_scope": [
    "anyio._backends._asyncio.AsyncIOBackend",
    "anyio._backends._trio.TrioBackend"
  ],
  "anyio.abc._eventloop.AsyncBackend.create_capacity_limiter": [
    "anyio._backends._asyncio.AsyncIOBackend",
    "anyio._backends._trio.TrioBackend"
  ],
  "anyio.abc._eventloop.AsyncBackend.create_event": [
    "anyio._backends._asyncio.AsyncIOBackend",
    "anyio._backends._trio.TrioBackend"
  ],
  "anyio.abc._eventloop.AsyncBackend.create_lock": [
    "anyio._backends._asyncio.AsyncIOBackend",
    "anyio._backends._trio.TrioBackend"
  ],
  "anyio.abc._eventloop.AsyncBackend.create_semaphore": [
    "anyio._backends._asyncio.AsyncIOBackend",
    "anyio._backends._trio.TrioBackend"
  ],
  "anyio.abc._eventloop.AsyncBackend.create_task_group": [
    "anyio._backends._asyncio.AsyncIOBackend",
    "anyio._backends._trio.TrioBackend"
  ],
  "anyio.abc._eventloop.AsyncBackend.create_tcp_listener": [
    "anyio._backends._asyncio.AsyncIOBackend",
    "anyio._backends._trio.TrioBackend"
  ],
  "anyio.abc._eventloop.AsyncBackend.create_test_runner": [
    "anyio._backends._asyncio.AsyncIOBackend",
    "anyio._backends._trio.TrioBackend"
  ],
  "anyio.abc._eventloop.AsyncBackend.create_udp_socket": [
    "anyio._backends._asyncio.AsyncIOBackend",
    "anyio._backends._trio.TrioBackend"
  ],
  "anyio.abc._eventloop.AsyncBackend.create_unix_datagram_socket": [
    "anyio._backends._asyncio.AsyncIOBackend",
    "anyio._backends._trio.TrioBackend"
  ],
  "anyio.abc._eventloop.AsyncBackend.create_unix_listener": [
    "anyio._backends._asyncio.AsyncIOBackend",
    "anyio._backends._trio.TrioBackend"
  ],
  "anyio.abc._eventloop.AsyncBackend.current_default_thread_limiter": [
    "anyio._backends._asyncio.AsyncIOBackend",
    "anyio._backends._trio.TrioBackend"
  ],
  "anyio.abc._eventloop.AsyncBackend.current_effective_deadline": [
    "anyio._backends._asyncio.AsyncIOBackend",
    "anyio._backends._trio.TrioBackend"
  ],
  "anyio.abc._eventloop.AsyncBackend.current_time": [
    "anyio._backends._asyncio.AsyncIOBackend",
    "anyio._backends._trio.TrioBackend"
  ],
  "anyio.abc._eventloop.AsyncBackend.current_token": [
    "anyio._backends._asyncio.AsyncIOBackend",
    "anyio._backends._trio.TrioBackend"
  ],
  "anyio.abc._eventloop.AsyncBackend.get_current_task": [
    "anyio._backends._asyncio.AsyncIOBackend",
    "anyio._backends._trio.TrioBackend"
  ],
  "anyio.abc._eventloop.AsyncBackend.get_running_tasks": [
    "anyio._backends._asyncio.AsyncIOBackend",
    "anyio._backends._trio.TrioBackend"
  ],
  "anyio.abc._eventloop.AsyncBackend.getaddrinfo": [
    "anyio._backends._asyncio.AsyncIOBackend",
    "anyio._backends._trio.TrioBackend"
  ],
  "anyio.abc._eventloop.AsyncBackend.getnameinfo": [
    "anyio._backends._asyncio.AsyncIOBackend",
    "anyio._backends._trio.TrioBackend"
  ],
  "anyio.abc._eventloop.AsyncBackend.open_process": [
    "anyio._backends._asyncio.AsyncIOBackend",
    "anyio._backends._trio.TrioBackend"
  ],
  "anyio.abc._eventloop.AsyncBackend.open_signal_receiver": [
    "anyio._backends._asyncio.AsyncIOBackend",
    "anyio._backends._trio.TrioBackend"
  ],
  "anyio.abc._eventloop.AsyncBackend.run": [
    "anyio._backends._asyncio.AsyncIOBackend",
    "anyio._backends._trio.TrioBackend"
  ],
  "anyio.abc._eventloop.AsyncBackend.run_async_from_thread": [
    "anyio._backends._asyncio.AsyncIOBackend",
    "anyio._backends._trio.TrioBackend"
  ],
  "anyio.abc._eventloop.AsyncBackend.run_sync_from_thread": [
    "anyio._backends._asyncio.AsyncIOBackend",
    "anyio._backends._trio.TrioBackend"
  ],
  "anyio.abc._eventloop.AsyncBackend.run_sync_in_worker_thread": [
    "anyio._backends._asyncio.AsyncIOBackend",
    "anyio._backends._trio.TrioBackend"
  ],
  "anyio.abc._eventloop.AsyncBackend.setup_process_pool_exit_at_shutdown": [
    "anyio._backends._asyncio.AsyncIOBackend",
    "anyio._backends._trio.TrioBackend"
  ],
  "anyio.abc._eventloop.AsyncBackend.sleep": [
    "anyio._backends._asyncio.AsyncIOBackend",
    "anyio._backends._trio.TrioBackend"
  ],
  "anyio.abc._eventloop.AsyncBackend.wait_all_tasks_blocked": [
    "anyio._backends._asyncio.AsyncIOBackend",
    "anyio._backends._trio.TrioBackend"
  ],
  "anyio.abc._eventloop.AsyncBackend.wait_readable": [
    "anyio._backends._asyncio.AsyncIOBackend",
    "anyio._backends._trio.TrioBackend"
  ],
  "anyio.abc._eventloop.AsyncBackend.wait_writable": [
    "anyio._backends._asyncio.AsyncIOBackend",
    "anyio._backends._trio.TrioBackend"
  ],
  "anyio.abc._resources.AsyncResource.aclose": [
    "anyio._backends._asyncio.ConnectedUDPSocket",
    "anyio._backends._asyncio.Process",
    "anyio._backends._asyncio.SocketStream",
    "anyio._backends._asyncio.StreamReaderWrapper",
    "anyio._backends._asyncio.StreamWriterWrapper",
    "anyio._backends._asyncio.TCPSocketListener",
    "anyio._backends._asyncio.UDPSocket",
    "anyio._backends._asyncio.UNIXSocketListener",
    "anyio._backends._trio.Process",
    "anyio._backends._trio.ReceiveStreamWrapper",
    "anyio._backends._trio.SendStreamWrapper",
    "anyio._core._fileio.AsyncFile",
    "anyio.streams.buffered.BufferedByteReceiveStream",
    "anyio.streams.memory.MemoryObjectReceiveStream",
    "anyio.streams.memory.MemoryObjectSendStream",
    "anyio.streams.stapled.MultiListener",
    "anyio.streams.stapled.StapledByteStream",
    "anyio.streams.stapled.StapledObjectStream",
    "anyio.streams.text.TextReceiveStream",
    "anyio.streams.text.TextSendStream",
    "anyio.streams.text.TextStream",
    "anyio.streams.tls.TLSListener",
    "anyio.streams.tls.TLSStream"
  ],
  "anyio.abc._sockets.SocketListener.accept": [
    "anyio._backends._asyncio.TCPSocketListener",
    "anyio._backends._asyncio.UNIXSocketListener",
    "anyio._backends._trio.TCPSocketListener",
    "anyio._backends._trio.UNIXSocketListener"
  ],
  "anyio.abc._sockets.UNIXSocketStream.receive_fds": [
    "anyio._backends._asyncio.UNIXSocketStream",
    "anyio._backends._trio.UNIXSocketStream"
  ],
  "anyio.abc._sockets.UNIXSocketStream.send_fds": [
    "anyio._backends._asyncio.UNIXSocketStream",
    "anyio._backends._trio.UNIXSocketStream"
  ],
  "anyio.abc._sockets._SocketProvider._raw_socket": [
    "anyio._backends._asyncio.ConnectedUDPSocket",
    "anyio._backends._asyncio.SocketStream",
    "anyio._backends._asyncio.TCPSocketListener",
    "anyio._backends._asyncio.UDPSocket",
    "anyio._backends._asyncio.UNIXSocketListener"
  ],
  "anyio.abc._streams.ByteReceiveStream.receive": [
    "anyio._backends._asyncio.SocketStream",
    "anyio._backends._asyncio.StreamReaderWrapper",
    "anyio._backends._asyncio.UNIXSocketStream",
    "anyio._backends._trio.ReceiveStreamWrapper",
    "anyio._backends._trio.SocketStream",
    "anyio.streams.buffered.BufferedByteReceiveStream",
    "anyio.streams.file.FileReadStream",
    "anyio.streams.stapled.StapledByteStream",
    "anyio.streams.tls.TLSStream"
  ],
  "anyio.abc._streams.ByteSendStream.send": [
    "anyio._backends._asyncio.SocketStream",
    "anyio._backends._asyncio.StreamWriterWrapper",
    "anyio._backends._asyncio.UNIXSocketStream",
    "anyio._backends._trio.SendStreamWrapper",
    "anyio._backends._trio.SocketStream",
    "anyio.streams.file.FileWriteStream",
    "anyio.streams.stapled.StapledByteStream",
    "anyio.streams.tls.TLSStream"
  ],
  "anyio.abc._streams.ByteStream.send_eof": [
    "anyio._backends._asyncio.SocketStream",
    "anyio._backends._asyncio.UNIXSocketStream",
    "anyio._backends._trio.SocketStream",
    "anyio.streams.stapled.StapledByteStream",
    "anyio.streams.tls.TLSStream"
  ],
  "anyio.abc._streams.Listener.serve": [
    "anyio.abc._sockets.SocketListener",
    "anyio.streams.stapled.MultiListener",
    "anyio.streams.tls.TLSListener"
  ],
  "anyio.abc._streams.ObjectStream.send_eof": [
    "anyio.streams.stapled.StapledObjectStream",
    "anyio.streams.text.TextStream"
  ],
  "anyio.abc._streams.UnreliableObjectReceiveStream.receive": [
    "anyio._backends._asyncio.ConnectedUDPSocket",
    "anyio._backends._asyncio.ConnectedUNIXDatagramSocket",
    "anyio._backends._asyncio.UDPSocket",
    "anyio._backends._asyncio.UNIXDatagramSocket",
    "anyio._backends._trio.ConnectedUDPSocket",
    "anyio._backends._trio.ConnectedUNIXDatagramSocket",
    "anyio._backends._trio.UDPSocket",
    "anyio._backends._trio.UNIXDatagramSocket",
    "anyio.streams.memory.MemoryObjectReceiveStream",
    "anyio.streams.stapled.StapledObjectStream",
    "anyio.streams.text.TextReceiveStream",
    "anyio.streams.text.TextStream"
  ],
  "anyio.abc._streams.UnreliableObjectSendStream.send": [
    "anyio._backends._asyncio.ConnectedUDPSocket",
    "anyio._backends._asyncio.ConnectedUNIXDatagramSocket",
    "anyio._backends._asyncio.UDPSocket",
    "anyio._backends._asyncio.UNIXDatagramSocket",
    "anyio._backends._trio.ConnectedUDPSocket",
    "anyio._backends._trio.ConnectedUNIXDatagramSocket",
    "anyio._backends._trio.UDPSocket",
    "anyio._backends._trio.UNIXDatagramSocket",
    "anyio.streams.memory.MemoryObjectSendStream",
    "anyio.streams.stapled.StapledObjectStream",
    "anyio.streams.text.TextSendStream",
    "anyio.streams.text.TextStream"
  ],
  "anyio.abc._subprocesses.Process.kill": [
    "anyio._backends._asyncio.Process",
    "anyio._backends._trio.Process"
  ],
  "anyio.abc._subprocesses.Process.pid": [
    "anyio._backends._asyncio.Process",
    "anyio._backends._trio.Process"
  ],
  "anyio.abc._subprocesses.Process.returncode": [
    "anyio._backends._asyncio.Process",
    "anyio._backends._trio.Process"
  ],
  "anyio.abc._subprocesses.Process.send_signal": [
    "anyio._backends._asyncio.Process",
    "anyio._backends._trio.Process"
  ],
  "anyio.abc._subprocesses.Process.stderr": [
    "anyio._backends._asyncio.Process",
    "anyio._backends._trio.Process"
  ],
  "anyio.abc._subprocesses.Process.stdin": [
    "anyio._backends._asyncio.Process",
    "anyio._backends._trio.Process"
  ],
  "anyio.abc._subprocesses.Process.stdout": [
    "anyio._backends._asyncio.Process",
    "anyio._backends._trio.Process"
  ],
  "anyio.abc._subprocesses.Process.terminate": [
    "anyio._backends._asyncio.Process",
    "anyio._backends._trio.Process"
  ],
  "anyio.abc._subprocesses.Process.wait": [
    "anyio._backends._asyncio.Process",
    "anyio._backends._trio.Process"
  ],
  "anyio.abc._tasks.TaskGroup.__aenter__": [
    "anyio._backends._asyncio.TaskGroup",
    "anyio._backends._trio.TaskGroup"
  ],
  "anyio.abc._tasks.TaskGroup.__aexit__": [
    "anyio._backends._asyncio.TaskGroup",
    "anyio._backends._trio.TaskGroup"
  ],
  "anyio.abc._tasks.TaskGroup.start": [
    "anyio._backends._asyncio.TaskGroup",
    "anyio._backends._trio.TaskGroup"
  ],
  "anyio.abc._tasks.TaskGroup.start_soon": [
    "anyio._backends._asyncio.TaskGroup",
    "anyio._backends._trio.TaskGroup"
  ],
  "anyio.abc._tasks.TaskStatus.started": [
    "anyio._backends._asyncio._AsyncioTaskStatus",
    "anyio._core._tasks._IgnoredTaskStatus",
    "anyio.from_thread._BlockingPortalTaskStatus"
  ],
  "anyio.abc._testing.TestRunner.__enter__": [
    "anyio._backends._asyncio.TestRunner"
  ],
  "anyio.abc._testing.TestRunner.__exit__": [
    "anyio._backends._asyncio.TestRunner",
    "anyio._backends._trio.TestRunner"
  ],
  "anyio.abc._testing.TestRunner.run_asyncgen_fixture": [
    "anyio._backends._asyncio.TestRunner",
    "anyio._backends._trio.TestRunner"
  ],
  "anyio.abc._testing.TestRunner.run_fixture": [
    "anyio._backends._asyncio.TestRunner",
    "anyio._backends._trio.TestRunner"
  ],
  "anyio.abc._testing.TestRunner.run_test": [
    "anyio._backends._asyncio.TestRunner",
    "anyio._backends._trio.TestRunner"
  ],
  "anyio.from_thread.BlockingPortal.__init__": [
    "anyio._backends._asyncio.BlockingPortal",
    "anyio._backends._trio.BlockingPortal"
  ],
  "anyio.from_thread.BlockingPortal.__new__": [
    "anyio._backends._asyncio.BlockingPortal",
    "anyio._backends._trio.BlockingPortal"
  ],
  "anyio.from_thread.BlockingPortal._spawn_task_from_thread": [
    "anyio._backends._asyncio.BlockingPortal",
    "anyio._backends._trio.BlockingPortal"
  ],
  "argparse.Action.__call__": [
    "keyring.completion._MissingCompletionAction",
    "traitlets.config.loader._FlagAction",
    "traitlets.config.loader._KVAction"
  ],
  "argparse.Action.__init__": [
    "argparse.BooleanOptionalAction",
    "argparse._AppendConstAction",
    "argparse._CountAction",
    "argparse._HelpAction",
    "argparse._StoreConstAction",
    "argparse._SubParsersAction",
    "argparse._VersionAction",
    "traitlets.config.loader._FlagAction"
  ],
  "argparse.ArgumentParser.parse_known_args": [
    "traitlets.config.loader._KVArgParser"
  ],
  "argparse.ArgumentParser.print_help": [
    "traitlets.config.loader.ArgumentParser"
  ],
  "argparse.HelpFormatter.__init__": [
    "pip._vendor.pygments.cmdline.HelpFormatter"
  ],
  "argparse.HelpFormatter._split_lines": [
    "watchdog.watchmedo.HelpFormatter"
  ],
  "argparse._ActionsContainer.__init__": [
    "argparse._ArgumentGroup"
  ],
  "argparse._ArgumentGroup.__init__": [
    "argparse._MutuallyExclusiveGroup"
  ],
  "argparse._StoreConstAction.__init__": [
    "argparse._StoreFalseAction",
    "argparse._StoreTrueAction"
  ],
  "ast.NodeVisitor.generic_visit": [
    "ast.NodeTransformer"
  ],
  "ast.NodeVisitor.visit": [
    "pydantic._internal._docs_extraction.DocstringVisitor"
  ],
  "ast.NodeVisitor.visit_AnnAssign": [
    "pydantic._internal._docs_extraction.DocstringVisitor"
  ],
  "ast.NodeVisitor.visit_ClassDef": [
    "executing.executing.QualnameVisitor",
    "typeguard.importhook.TypeguardTransformer"
  ],
  "ast.NodeVisitor.visit_Expr": [
    "pydantic._internal._docs_extraction.DocstringVisitor"
  ],
  "ast.NodeVisitor.visit_FunctionDef": [
    "executing.executing.QualnameVisitor",
    "typeguard.importhook.TypeguardTransformer"
  ],
  "ast.NodeVisitor.visit_Lambda": [
    "executing.executing.QualnameVisitor"
  ],
  "ast.NodeVisitor.visit_Module": [
    "typeguard.importhook.TypeguardTransformer"
  ],
  "asttokens.asttokens.ASTTextBase.__init__": [
    "asttokens.asttokens.ASTText",
    "asttokens.asttokens.ASTTokens"
  ],
  "asttokens.asttokens.ASTTextBase.get_text_positions": [
    "asttokens.asttokens.ASTText",
    "asttokens.asttokens.ASTTokens"
  ],
  "asynchat.async_chat.collect_incoming_data": [
    "smtpd.SMTPChannel"
  ],
  "asynchat.async_chat.found_terminator": [
    "smtpd.SMTPChannel"
  ],
  "asynchat.async_chat.push": [
    "smtpd.SMTPChannel"
  ],
  "asyncio.events.AbstractEventLoop.add_reader": [
    "asyncio.base_events.BaseEventLoop"
  ],
  "asyncio.events.AbstractEventLoop.add_signal_handler": [
    "asyncio.base_events.BaseEventLoop"
  ],
  "asyncio.events.AbstractEventLoop.add_writer": [
    "asyncio.base_events.BaseEventLoop"
  ],
  "asyncio.events.AbstractEventLoop.call_at": [
    "asyncio.base_events.BaseEventLoop"
  ],
  "asyncio.events.AbstractEventLoop.call_exception_handler": [
    "asyncio.base_events.BaseEventLoop"
  ],
  "asyncio.events.AbstractEventLoop.call_later": [
    "asyncio.base_events.BaseEventLoop"
  ],
  "asyncio.events.AbstractEventLoop.call_soon": [
    "asyncio.base_events.BaseEventLoop"
  ],
  "asyncio.events.AbstractEventLoop.call_soon_threadsafe": [
    "asyncio.base_events.BaseEventLoop"
  ],
  "asyncio.events.AbstractEventLoop.close": [
    "asyncio.base_events.BaseEventLoop"
  ],
  "asyncio.events.AbstractEventLoop.connect_accepted_socket": [
    "asyncio.base_events.BaseEventLoop"
  ],
  "asyncio.events.AbstractEventLoop.connect_read_pipe": [
    "asyncio.base_events.BaseEventLoop"
  ],
  "asyncio.events.AbstractEventLoop.connect_write_pipe": [
    "asyncio.base_events.BaseEventLoop"
  ],
  "asyncio.events.AbstractEventLoop.create_connection": [
    "asyncio.base_events.BaseEventLoop"
  ],
  "asyncio.events.AbstractEventLoop.create_datagram_endpoint": [
    "asyncio.base_events.BaseEventLoop"
  ],
  "asyncio.events.AbstractEventLoop.create_future": [
    "asyncio.base_events.BaseEventLoop"
  ],
  "asyncio.events.AbstractEventLoop.create_server": [
    "asyncio.base_events.BaseEventLoop"
  ],
  "asyncio.events.AbstractEventLoop.create_task": [
    "asyncio.base_events.BaseEventLoop"
  ],
  "asyncio.events.AbstractEventLoop.default_exception_handler": [
    "asyncio.base_events.BaseEventLoop"
  ],
  "asyncio.events.AbstractEventLoop.get_debug": [
    "asyncio.base_events.BaseEventLoop"
  ],
  "asyncio.events.AbstractEventLoop.get_exception_handler": [
    "asyncio.base_events.BaseEventLoop"
  ],
  "asyncio.events.AbstractEventLoop.get_task_factory": [
    "asyncio.base_events.BaseEventLoop"
  ],
  "asyncio.events.AbstractEventLoop.getaddrinfo": [
    "asyncio.base_events.BaseEventLoop"
  ],
  "asyncio.events.AbstractEventLoop.getnameinfo": [
    "asyncio.base_events.BaseEventLoop"
  ],
  "asyncio.events.AbstractEventLoop.is_closed": [
    "asyncio.base_events.BaseEventLoop"
  ],
  "asyncio.events.AbstractEventLoop.is_running": [
    "asyncio.base_events.BaseEventLoop"
  ],
  "asyncio.events.AbstractEventLoop.remove_reader": [
    "asyncio.base_events.BaseEventLoop"
  ],
  "asyncio.events.AbstractEventLoop.remove_signal_handler": [
    "asyncio.base_events.BaseEventLoop"
  ],
  "asyncio.events.AbstractEventLoop.remove_writer": [
    "asyncio.base_events.BaseEventLoop"
  ],
  "asyncio.events.AbstractEventLoop.run_forever": [
    "asyncio.base_events.BaseEventLoop"
  ],
  "asyncio.events.AbstractEventLoop.run_in_executor": [
    "asyncio.base_events.BaseEventLoop"
  ],
  "asyncio.events.AbstractEventLoop.run_until_complete": [
    "asyncio.base_events.BaseEventLoop"
  ],
  "asyncio.events.AbstractEventLoop.sendfile": [
    "asyncio.base_events.BaseEventLoop"
  ],
  "asyncio.events.AbstractEventLoop.set_debug": [
    "asyncio.base_events.BaseEventLoop"
  ],
  "asyncio.events.AbstractEventLoop.set_default_executor": [
    "asyncio.base_events.BaseEventLoop"
  ],
  "asyncio.events.AbstractEventLoop.set_exception_handler": [
    "asyncio.base_events.BaseEventLoop"
  ],
  "asyncio.events.AbstractEventLoop.set_task_factory": [
    "asyncio.base_events.BaseEventLoop"
  ],
  "asyncio.events.AbstractEventLoop.shutdown_asyncgens": [
    "asyncio.base_events.BaseEventLoop"
  ],
  "asyncio.events.AbstractEventLoop.shutdown_default_executor": [
    "asyncio.base_events.BaseEventLoop"
  ],
  "asyncio.events.AbstractEventLoop.sock_accept": [
    "asyncio.base_events.BaseEventLoop"
  ],
  "asyncio.events.AbstractEventLoop.sock_connect": [
    "asyncio.base_events.BaseEventLoop"
  ],
  "asyncio.events.AbstractEventLoop.sock_recv": [
    "asyncio.base_events.BaseEventLoop"
  ],
  "asyncio.events.AbstractEventLoop.sock_recv_into": [
    "asyncio.base_events.BaseEventLoop"
  ],
  "asyncio.events.AbstractEventLoop.sock_recvfrom": [
    "asyncio.base_events.BaseEventLoop"
  ],
  "asyncio.events.AbstractEventLoop.sock_recvfrom_into": [
    "asyncio.base_events.BaseEventLoop"
  ],
  "asyncio.events.AbstractEventLoop.sock_sendall": [
    "asyncio.base_events.BaseEventLoop"
  ],
  "asyncio.events.AbstractEventLoop.sock_sendfile": [
    "asyncio.base_events.BaseEventLoop"
  ],
  "asyncio.events.AbstractEventLoop.sock_sendto": [
    "asyncio.base_events.BaseEventLoop"
  ],
  "asyncio.events.AbstractEventLoop.start_tls": [
    "asyncio.base_events.BaseEventLoop"
  ],
  "asyncio.events.AbstractEventLoop.stop": [
    "asyncio.base_events.BaseEventLoop"
  ],
  "asyncio.events.AbstractEventLoop.subprocess_exec": [
    "asyncio.base_events.BaseEventLoop"
  ],
  "asyncio.events.AbstractEventLoop.subprocess_shell": [
    "asyncio.base_events.BaseEventLoop"
  ],
  "asyncio.events.AbstractEventLoop.time": [
    "asyncio.base_events.BaseEventLoop"
  ],
  "asyncio.events.AbstractEventLoopPolicy.get_child_watcher": [
    "asyncio.unix_events._UnixDefaultEventLoopPolicy"
  ],
  "asyncio.events.AbstractEventLoopPolicy.get_event_loop": [
    "asyncio.events.BaseDefaultEventLoopPolicy"
  ],
  "asyncio.events.AbstractEventLoopPolicy.new_event_loop": [
    "asyncio.events.BaseDefaultEventLoopPolicy"
  ],
  "asyncio.events.AbstractEventLoopPolicy.set_child_watcher": [
    "asyncio.unix_events._UnixDefaultEventLoopPolicy"
  ],
  "asyncio.events.AbstractEventLoopPolicy.set_event_loop": [
    "asyncio.events.BaseDefaultEventLoopPolicy"
  ],
  "asyncio.events.AbstractServer.close": [
    "asyncio.base_events.Server"
  ],
  "asyncio.events.AbstractServer.get_loop": [
    "asyncio.base_events.Server"
  ],
  "asyncio.events.AbstractServer.is_serving": [
    "asyncio.base_events.Server"
  ],
  "asyncio.events.AbstractServer.serve_forever": [
    "asyncio.base_events.Server"
  ],
  "asyncio.events.AbstractServer.start_serving": [
    "asyncio.base_events.Server"
  ],
  "asyncio.events.AbstractServer.wait_closed": [
    "asyncio.base_events.Server"
  ],
  "asyncio.events.Handle.__init__": [
    "asyncio.events.TimerHandle"
  ],
  "asyncio.futures.Future.__class_getitem__": [
    "asyncio.tasks.Task"
  ],
  "asyncio.futures.Future.__init__": [
    "asyncio.tasks.Task"
  ],
  "asyncio.proactor_events._ProactorBasePipeTransport.__init__": [
    "asyncio.proactor_events._ProactorReadPipeTransport"
  ],
  "asyncio.proactor_events._ProactorReadPipeTransport.__init__": [
    "asyncio.proactor_events._ProactorSocketTransport"
  ],
  "asyncio.protocols.BaseProtocol.connection_lost": [
    "anyio._backends._asyncio.DatagramProtocol",
    "anyio._backends._asyncio.StreamProtocol",
    "asyncio.sslproto.SSLProtocol",
    "websockets.asyncio.connection.Connection",
    "websockets.legacy.protocol.WebSocketCommonProtocol"
  ],
  "asyncio.protocols.BaseProtocol.connection_made": [
    "anyio._backends._asyncio.StreamProtocol",
    "asyncio.protocols.DatagramProtocol",
    "websockets.asyncio.connection.Connection",
    "websockets.legacy.protocol.WebSocketCommonProtocol"
  ],
  "asyncio.protocols.BaseProtocol.pause_writing": [
    "anyio._backends._asyncio.DatagramProtocol",
    "anyio._backends._asyncio.StreamProtocol",
    "websockets.asyncio.connection.Connection",
    "websockets.legacy.protocol.WebSocketCommonProtocol"
  ],
  "asyncio.protocols.BaseProtocol.resume_writing": [
    "anyio._backends._asyncio.DatagramProtocol",
    "anyio._backends._asyncio.StreamProtocol",
    "websockets.asyncio.connection.Connection",
    "websockets.legacy.protocol.WebSocketCommonProtocol"
  ],
  "asyncio.protocols.BufferedProtocol.eof_received": [
    "asyncio.sslproto.SSLProtocol"
  ],
  "asyncio.protocols.BufferedProtocol.get_buffer": [
    "asyncio.sslproto.SSLProtocol"
  ],
  "asyncio.protocols.DatagramProtocol.connection_made": [
    "anyio._backends._asyncio.DatagramProtocol"
  ],
  "asyncio.protocols.DatagramProtocol.datagram_received": [
    "anyio._backends._asyncio.DatagramProtocol"
  ],
  "asyncio.protocols.DatagramProtocol.error_received": [
    "anyio._backends._asyncio.DatagramProtocol"
  ],
  "asyncio.protocols.Protocol.data_received": [
    "anyio._backends._asyncio.StreamProtocol",
    "websockets.asyncio.connection.Connection",
    "websockets.legacy.protocol.WebSocketCommonProtocol"
  ],
  "asyncio.protocols.Protocol.eof_received": [
    "anyio._backends._asyncio.StreamProtocol",
    "websockets.asyncio.connection.Connection",
    "websockets.legacy.protocol.WebSocketCommonProtocol"
  ],
  "asyncio.protocols.SubprocessProtocol.pipe_data_received": [
    "asyncio.subprocess.SubprocessStreamProtocol"
  ],
  "asyncio.streams.FlowControlMixin.__init__": [
    "asyncio.streams.StreamReaderProtocol",
    "asyncio.subprocess.SubprocessStreamProtocol"
  ],
  "asyncio.transports.BaseTransport.get_extra_info": [
    "asyncio.sslproto._SSLProtocolTransport"
  ],
  "asyncio.transports.SubprocessTransport.get_pid": [
    "asyncio.base_subprocess.BaseSubprocessTransport"
  ],
  "asyncio.transports.SubprocessTransport.get_pipe_transport": [
    "asyncio.base_subprocess.BaseSubprocessTransport"
  ],
  "asyncio.transports.SubprocessTransport.send_signal": [
    "asyncio.base_subprocess.BaseSubprocessTransport"
  ],
  "asyncio.transports.WriteTransport.can_write_eof": [
    "asyncio.proactor_events._ProactorSocketTransport",
    "asyncio.sslproto._SSLProtocolTransport"
  ],
  "asyncio.transports.WriteTransport.get_write_buffer_limits": [
    "asyncio.sslproto._SSLProtocolTransport"
  ],
  "asyncio.transports.WriteTransport.write": [
    "asyncio.sslproto._SSLProtocolTransport"
  ],
  "asyncio.transports._FlowControlMixin.__init__": [
    "asyncio.proactor_events._ProactorBasePipeTransport",
    "asyncio.sslproto._SSLProtocolTransport"
  ],
  "asyncio.unix_events.AbstractChildWatcher.__enter__": [
    "asyncio.unix_events.FastChildWatcher",
    "asyncio.unix_events.MultiLoopChildWatcher",
    "asyncio.unix_events.PidfdChildWatcher",
    "asyncio.unix_events.SafeChildWatcher",
    "asyncio.unix_events.ThreadedChildWatcher"
  ],
  "asyncio.unix_events.AbstractChildWatcher.__exit__": [
    "asyncio.unix_events.FastChildWatcher",
    "asyncio.unix_events.MultiLoopChildWatcher",
    "asyncio.unix_events.PidfdChildWatcher",
    "asyncio.unix_events.SafeChildWatcher",
    "asyncio.unix_events.ThreadedChildWatcher"
  ],
  "asyncio.unix_events.AbstractChildWatcher.add_child_handler": [
    "asyncio.unix_events.FastChildWatcher",
    "asyncio.unix_events.MultiLoopChildWatcher",
    "asyncio.unix_events.PidfdChildWatcher",
    "asyncio.unix_events.SafeChildWatcher",
    "asyncio.unix_events.ThreadedChildWatcher"
  ],
  "asyncio.unix_events.AbstractChildWatcher.attach_loop": [
    "asyncio.unix_events.BaseChildWatcher",
    "asyncio.unix_events.MultiLoopChildWatcher",
    "asyncio.unix_events.PidfdChildWatcher",
    "asyncio.unix_events.ThreadedChildWatcher"
  ],
  "asyncio.unix_events.AbstractChildWatcher.close": [
    "asyncio.unix_events.BaseChildWatcher",
    "asyncio.unix_events.MultiLoopChildWatcher",
    "asyncio.unix_events.PidfdChildWatcher",
    "asyncio.unix_events.ThreadedChildWatcher"
  ],
  "asyncio.unix_events.AbstractChildWatcher.is_active": [
    "asyncio.unix_events.BaseChildWatcher",
    "asyncio.unix_events.MultiLoopChildWatcher",
    "asyncio.unix_events.PidfdChildWatcher",
    "asyncio.unix_events.ThreadedChildWatcher"
  ],
  "asyncio.unix_events.AbstractChildWatcher.remove_child_handler": [
    "asyncio.unix_events.FastChildWatcher",
    "asyncio.unix_events.MultiLoopChildWatcher",
    "asyncio.unix_events.PidfdChildWatcher",
    "asyncio.unix_events.SafeChildWatcher",
    "asyncio.unix_events.ThreadedChildWatcher"
  ],
  "asyncore.dispatcher.__init__": [
    "asyncore.file_dispatcher",
    "smtpd.SMTPServer"
  ],
  "bases.alphabet.abstract.Alphabet.__getitem__": [
    "bases.alphabet.range_alphabet.RangeAlphabet",
    "bases.alphabet.string_alphabet.StringAlphabet"
  ],
  "bases.alphabet.abstract.Alphabet.__init__": [
    "bases.alphabet.range_alphabet.RangeAlphabet",
    "bases.alphabet.string_alphabet.StringAlphabet"
  ],
  "bases.alphabet.abstract.Alphabet.__len__": [
    "bases.alphabet.range_alphabet.RangeAlphabet",
    "bases.alphabet.string_alphabet.StringAlphabet"
  ],
  "bases.alphabet.abstract.Alphabet.lower": [
    "bases.alphabet.range_alphabet.RangeAlphabet",
    "bases.alphabet.string_alphabet.StringAlphabet"
  ],
  "bases.alphabet.abstract.Alphabet.revdir": [
    "bases.alphabet.range_alphabet.RangeAlphabet",
    "bases.alphabet.string_alphabet.StringAlphabet"
  ],
  "bases.alphabet.abstract.Alphabet.upper": [
    "bases.alphabet.range_alphabet.RangeAlphabet",
    "bases.alphabet.string_alphabet.StringAlphabet"
  ],
  "bases.alphabet.abstract.Alphabet.with_case_sensitivity": [
    "bases.alphabet.range_alphabet.RangeAlphabet",
    "bases.alphabet.string_alphabet.StringAlphabet"
  ],
  "bases.encoding.base.BaseEncoding.__eq__": [
    "bases.encoding.block.BlockBaseEncoding"
  ],
  "bases.encoding.base.BaseEncoding.__hash__": [
    "bases.encoding.block.BlockBaseEncoding"
  ],
  "bases.encoding.base.BaseEncoding.__init__": [
    "bases.encoding.block.BlockBaseEncoding",
    "bases.encoding.fixchar.FixcharBaseEncoding",
    "bases.encoding.simple.SimpleBaseEncoding",
    "bases.encoding.zeropad.ZeropadBaseEncoding"
  ],
  "bases.encoding.base.BaseEncoding.__repr__": [
    "bases.encoding.block.BlockBaseEncoding"
  ],
  "bases.encoding.base.BaseEncoding._decode": [
    "bases.encoding.block.BlockBaseEncoding",
    "bases.encoding.fixchar.FixcharBaseEncoding",
    "bases.encoding.simple.SimpleBaseEncoding",
    "bases.encoding.zeropad.ZeropadBaseEncoding"
  ],
  "bases.encoding.base.BaseEncoding._encode": [
    "bases.encoding.block.BlockBaseEncoding",
    "bases.encoding.fixchar.FixcharBaseEncoding",
    "bases.encoding.simple.SimpleBaseEncoding",
    "bases.encoding.zeropad.ZeropadBaseEncoding"
  ],
  "bases.encoding.base.BaseEncoding._validate_bytes": [
    "bases.encoding.block.BlockBaseEncoding",
    "bases.encoding.simple.SimpleBaseEncoding"
  ],
  "bases.encoding.base.BaseEncoding._validate_string": [
    "bases.encoding.block.BlockBaseEncoding",
    "bases.encoding.fixchar.FixcharBaseEncoding",
    "bases.encoding.simple.SimpleBaseEncoding"
  ],
  "bases.encoding.base.BaseEncoding.canonical_bytes": [
    "bases.encoding.block.BlockBaseEncoding",
    "bases.encoding.fixchar.FixcharBaseEncoding",
    "bases.encoding.simple.SimpleBaseEncoding"
  ],
  "bases.encoding.base.BaseEncoding.canonical_string": [
    "bases.encoding.block.BlockBaseEncoding",
    "bases.encoding.fixchar.FixcharBaseEncoding",
    "bases.encoding.simple.SimpleBaseEncoding"
  ],
  "bases.encoding.base.BaseEncoding.options": [
    "bases.encoding.block.BlockBaseEncoding",
    "bases.encoding.fixchar.FixcharBaseEncoding",
    "bases.encoding.simple.SimpleBaseEncoding",
    "bases.encoding.zeropad.ZeropadBaseEncoding"
  ],
  "bases.encoding.base.BaseEncoding.with_options": [
    "bases.encoding.block.BlockBaseEncoding"
  ],
  "bdb.Bdb.__init__": [
    "pdb.Pdb"
  ],
  "bdb.Bdb.do_clear": [
    "pdb.Pdb"
  ],
  "bdb.Bdb.trace_dispatch": [
    "prompt_toolkit.application.application.Application._breakpointhook.CustomPdb"
  ],
  "blinker.base.Signal.__init__": [
    "blinker.base.NamedSignal"
  ],
  "boto.auth.HmacAuthV4Handler.__init__": [
    "boto.auth.S3HmacAuthV4Handler"
  ],
  "boto.auth.HmacAuthV4Handler.add_auth": [
    "boto.auth.S3HmacAuthV4Handler"
  ],
  "boto.auth.HmacAuthV4Handler.canonical_query_string": [
    "boto.auth.S3HmacAuthV4Handler"
  ],
  "boto.auth.HmacAuthV4Handler.canonical_uri": [
    "boto.auth.S3HmacAuthV4Handler"
  ],
  "boto.auth.HmacAuthV4Handler.determine_region_name": [
    "boto.auth.S3HmacAuthV4Handler"
  ],
  "boto.auth.HmacAuthV4Handler.determine_service_name": [
    "boto.auth.S3HmacAuthV4Handler"
  ],
  "boto.auth.HmacAuthV4Handler.headers_to_sign": [
    "boto.auth.S3HmacAuthV4Handler"
  ],
  "boto.auth.HmacAuthV4Handler.host_header": [
    "boto.auth.S3HmacAuthV4Handler"
  ],
  "boto.auth.HmacAuthV4Handler.payload": [
    "boto.auth.S3HmacAuthV4Handler"
  ],
  "boto.auth.HmacKeys.update_provider": [
    "boto.auth.HmacAuthV1Handler",
    "boto.auth.HmacAuthV2Handler"
  ],
  "boto.auth.QuerySignatureHelper.add_auth": [
    "boto.auth.POSTPathQSV2AuthHandler"
  ],
  "boto.auth_handler.AuthHandler.__init__": [
    "boto.auth.AnonAuthHandler",
    "boto.auth.HmacAuthV1Handler",
    "boto.auth.HmacAuthV2Handler",
    "boto.auth.HmacAuthV3HTTPHandler",
    "boto.auth.HmacAuthV3Handler",
    "boto.auth.HmacAuthV4Handler"
  ],
  "boto.auth_handler.AuthHandler.add_auth": [
    "boto.auth.AnonAuthHandler",
    "boto.auth.HmacAuthV1Handler",
    "boto.auth.HmacAuthV2Handler",
    "boto.auth.HmacAuthV3HTTPHandler",
    "boto.auth.HmacAuthV3Handler",
    "boto.auth.HmacAuthV4Handler",
    "boto.auth.STSAnonHandler"
  ],
  "boto.connection.AWSAuthConnection.__init__": [
    "boto.connection.AWSQueryConnection",
    "boto.s3.connection.S3Connection"
  ],
  "boto.connection.AWSAuthConnection.make_request": [
    "boto.connection.AWSQueryConnection",
    "boto.s3.connection.S3Connection"
  ],
  "boto.connection.AWSQueryConnection.__init__": [
    "boto.elb.ELBConnection",
    "boto.kms.layer1.KMSConnection"
  ],
  "boto.connection.AWSQueryConnection.build_list_params": [
    "boto.elb.ELBConnection"
  ],
  "boto.exception.BotoClientError.__init__": [
    "boto.exception.SQSDecodeError"
  ],
  "boto.exception.BotoServerError.__init__": [
    "boto.exception.EC2ResponseError",
    "boto.exception.JSONResponseError",
    "boto.exception.SQSError",
    "boto.exception.StorageCreateError",
    "boto.exception.StorageResponseError"
  ],
  "boto.exception.BotoServerError.endElement": [
    "boto.exception.EC2ResponseError",
    "boto.exception.SQSError",
    "boto.exception.StorageCreateError",
    "boto.exception.StorageResponseError"
  ],
  "boto.exception.BotoServerError.startElement": [
    "boto.exception.EC2ResponseError",
    "boto.exception.SQSError",
    "boto.exception.StorageResponseError"
  ],
  "boto.regioninfo.RegionInfo.connect": [
    "boto.s3.S3RegionInfo"
  ],
  "boto.s3.connection._CallingFormat.build_path_base": [
    "boto.s3.connection.OrdinaryCallingFormat"
  ],
  "boto.s3.connection._CallingFormat.build_url_base": [
    "boto.s3.connection.ProtocolIndependentOrdinaryCallingFormat"
  ],
  "boto.s3.connection._CallingFormat.get_bucket_server": [
    "boto.s3.connection.OrdinaryCallingFormat",
    "boto.s3.connection.SubdomainCallingFormat",
    "boto.s3.connection.VHostCallingFormat"
  ],
  "boto.s3.website._XMLKeyValue.__init__": [
    "boto.s3.website.Condition",
    "boto.s3.website.Redirect",
    "boto.s3.website.RedirectLocation"
  ],
  "boto.s3.website._XMLKeyValue.to_xml": [
    "boto.s3.website.Condition",
    "boto.s3.website.Redirect",
    "boto.s3.website.RedirectLocation"
  ],
  "build.env.IsolatedEnv.make_extra_environ": [
    "build.env.DefaultIsolatedEnv"
  ],
  "build.env.IsolatedEnv.python_executable": [
    "build.env.DefaultIsolatedEnv"
  ],
  "build.env._EnvBackend.create": [
    "build.env._PipBackend",
    "build.env._UvBackend"
  ],
  "build.env._EnvBackend.display_name": [
    "build.env._PipBackend",
    "build.env._UvBackend"
  ],
  "build.env._EnvBackend.install_requirements": [
    "build.env._PipBackend",
    "build.env._UvBackend"
  ],
  "calendar.HTMLCalendar.formatmonthname": [
    "calendar.LocaleHTMLCalendar"
  ],
  "calendar.HTMLCalendar.formatweekday": [
    "calendar.LocaleHTMLCalendar"
  ],
  "classmethod.__init__": [
    "abc.abstractclassmethod"
  ],
  "click.core.BaseCommand.__init__": [
    "click.core.Command"
  ],
  "click.core.BaseCommand.get_help": [
    "click.core.Command"
  ],
  "click.core.BaseCommand.get_usage": [
    "click.core.Command"
  ],
  "click.core.BaseCommand.invoke": [
    "click.core.Command"
  ],
  "click.core.BaseCommand.make_context": [
    "flask.cli.FlaskGroup"
  ],
  "click.core.BaseCommand.parse_args": [
    "click.core.Command"
  ],
  "click.core.BaseCommand.shell_complete": [
    "click.core.Command"
  ],
  "click.core.BaseCommand.to_info_dict": [
    "click.core.Command"
  ],
  "click.core.Command.__init__": [
    "click.core.MultiCommand"
  ],
  "click.core.Command.collect_usage_pieces": [
    "click.core.MultiCommand"
  ],
  "click.core.Command.format_options": [
    "click.core.MultiCommand"
  ],
  "click.core.Command.invoke": [
    "click.core.MultiCommand"
  ],
  "click.core.Command.parse_args": [
    "click.core.MultiCommand"
  ],
  "click.core.Command.shell_complete": [
    "click.core.MultiCommand"
  ],
  "click.core.Command.to_info_dict": [
    "click.core.MultiCommand"
  ],
  "click.core.Group.command": [
    "flask.cli.AppGroup"
  ],
  "click.core.Group.get_command": [
    "flask.cli.FlaskGroup"
  ],
  "click.core.Group.group": [
    "flask.cli.AppGroup"
  ],
  "click.core.Group.list_commands": [
    "flask.cli.FlaskGroup"
  ],
  "click.core.MultiCommand.__init__": [
    "click.core.CommandCollection",
    "click.core.Group"
  ],
  "click.core.MultiCommand.get_command": [
    "click.core.CommandCollection",
    "click.core.Group"
  ],
  "click.core.MultiCommand.list_commands": [
    "click.core.CommandCollection",
    "click.core.Group"
  ],
  "click.core.MultiCommand.parse_args": [
    "flask.cli.FlaskGroup"
  ],
  "click.core.Option.__init__": [
    "click.decorators.HelpOption"
  ],
  "click.core.Parameter.__init__": [
    "click.core.Argument",
    "click.core.Option"
  ],
  "click.core.Parameter._parse_decls": [
    "click.core.Argument",
    "click.core.Option"
  ],
  "click.core.Parameter.add_to_parser": [
    "click.core.Argument",
    "click.core.Option"
  ],
  "click.core.Parameter.consume_value": [
    "click.core.Option"
  ],
  "click.core.Parameter.get_default": [
    "click.core.Option"
  ],
  "click.core.Parameter.get_error_hint": [
    "click.core.Argument"
  ],
  "click.core.Parameter.get_help_record": [
    "click.core.Option"
  ],
  "click.core.Parameter.get_usage_pieces": [
    "click.core.Argument"
  ],
  "click.core.Parameter.human_readable_name": [
    "click.core.Argument"
  ],
  "click.core.Parameter.make_metavar": [
    "click.core.Argument"
  ],
  "click.core.Parameter.resolve_envvar_value": [
    "click.core.Option"
  ],
  "click.core.Parameter.to_info_dict": [
    "click.core.Option"
  ],
  "click.core.Parameter.value_from_envvar": [
    "click.core.Option"
  ],
  "click.exceptions.BadParameter.__init__": [
    "click.exceptions.MissingParameter"
  ],
  "click.exceptions.BadParameter.format_message": [
    "click.exceptions.MissingParameter"
  ],
  "click.exceptions.ClickException.__init__": [
    "click.exceptions.FileError",
    "click.exceptions.UsageError"
  ],
  "click.exceptions.ClickException.format_message": [
    "click.exceptions.BadParameter",
    "click.exceptions.FileError",
    "click.exceptions.NoSuchOption"
  ],
  "click.exceptions.ClickException.show": [
    "click.exceptions.UsageError",
    "exceptions.Abort"
  ],
  "click.exceptions.UsageError.__init__": [
    "click.exceptions.BadOptionUsage",
    "click.exceptions.BadParameter",
    "click.exceptions.NoSuchOption"
  ],
  "click.shell_completion.ShellComplete.format_completion": [
    "click.shell_completion.BashComplete",
    "click.shell_completion.FishComplete",
    "click.shell_completion.ZshComplete"
  ],
  "click.shell_completion.ShellComplete.get_completion_args": [
    "click.shell_completion.BashComplete",
    "click.shell_completion.FishComplete",
    "click.shell_completion.ZshComplete"
  ],
  "click.shell_completion.ShellComplete.source": [
    "click.shell_completion.BashComplete"
  ],
  "click.testing.CliRunner.__init__": [
    "flask.testing.FlaskCliRunner"
  ],
  "click.testing.CliRunner.invoke": [
    "flask.testing.FlaskCliRunner"
  ],
  "click.types.CompositeParamType.arity": [
    "click.types.Tuple"
  ],
  "click.types.ParamType.arity": [
    "click.types.CompositeParamType"
  ],
  "click.types.ParamType.convert": [
    "click.types.BoolParamType",
    "click.types.Choice",
    "click.types.DateTime",
    "click.types.File",
    "click.types.FuncParamType",
    "click.types.Path",
    "click.types.StringParamType",
    "click.types.Tuple",
    "click.types.UUIDParameterType",
    "click.types.UnprocessedParamType",
    "click.types._NumberParamTypeBase",
    "flask.cli.CertParamType"
  ],
  "click.types.ParamType.get_metavar": [
    "click.types.Choice",
    "click.types.DateTime"
  ],
  "click.types.ParamType.get_missing_message": [
    "click.types.Choice"
  ],
  "click.types.ParamType.name": [
    "click.types.Tuple"
  ],
  "click.types.ParamType.shell_complete": [
    "click.types.Choice",
    "click.types.File",
    "click.types.Path"
  ],
  "click.types.ParamType.to_info_dict": [
    "click.types.Choice",
    "click.types.DateTime",
    "click.types.File",
    "click.types.FuncParamType",
    "click.types.Path",
    "click.types.Tuple",
    "click.types._NumberRangeBase"
  ],
  "click.types.Path.convert": [
    "flask.cli.SeparatedPathType"
  ],
  "click.types._NumberParamTypeBase.convert": [
    "click.types._NumberRangeBase"
  ],
  "click.types._NumberRangeBase.__init__": [
    "click.types.FloatRange"
  ],
  "click.types._NumberRangeBase._clamp": [
    "click.types.FloatRange",
    "click.types.IntRange"
  ],
  "cmd.Cmd.do_help": [
    "pdb.Pdb"
  ],
  "code.InteractiveInterpreter.__init__": [
    "code.InteractiveConsole",
    "werkzeug.debug.console._InteractiveConsole"
  ],
  "code.InteractiveInterpreter.runcode": [
    "werkzeug.debug.console._InteractiveConsole"
  ],
  "code.InteractiveInterpreter.runsource": [
    "werkzeug.debug.console._InteractiveConsole"
  ],
  "code.InteractiveInterpreter.showsyntaxerror": [
    "werkzeug.debug.console._InteractiveConsole"
  ],
  "code.InteractiveInterpreter.showtraceback": [
    "werkzeug.debug.console._InteractiveConsole"
  ],
  "code.InteractiveInterpreter.write": [
    "werkzeug.debug.console._InteractiveConsole"
  ],
  "codecs.BufferedIncrementalDecoder.__init__": [
    "encodings.utf_8_sig.IncrementalDecoder"
  ],
  "codecs.BufferedIncrementalDecoder._buffer_decode": [
    "encodings.utf_8.IncrementalDecoder",
    "encodings.utf_8_sig.IncrementalDecoder",
    "idna.codec.IncrementalDecoder",
    "pip._vendor.idna.codec.IncrementalDecoder"
  ],
  "codecs.BufferedIncrementalEncoder._buffer_encode": [
    "idna.codec.IncrementalEncoder",
    "pip._vendor.idna.codec.IncrementalEncoder"
  ],
  "codecs.Codec.decode": [
    "encodings.utf_8.StreamReader",
    "encodings.utf_8_sig.StreamReader",
    "idna.codec.Codec",
    "pip._vendor.idna.codec.Codec"
  ],
  "codecs.Codec.encode": [
    "encodings.utf_8.StreamWriter",
    "encodings.utf_8_sig.StreamWriter",
    "idna.codec.Codec",
    "pip._vendor.idna.codec.Codec"
  ],
  "codecs.IncrementalDecoder.__init__": [
    "codecs.BufferedIncrementalDecoder",
    "io.IncrementalNewlineDecoder"
  ],
  "codecs.IncrementalDecoder.decode": [
    "codecs.BufferedIncrementalDecoder",
    "io.IncrementalNewlineDecoder"
  ],
  "codecs.IncrementalDecoder.setstate": [
    "io.IncrementalNewlineDecoder"
  ],
  "codecs.IncrementalEncoder.__init__": [
    "codecs.BufferedIncrementalEncoder",
    "encodings.utf_8_sig.IncrementalEncoder"
  ],
  "codecs.IncrementalEncoder.encode": [
    "codecs.BufferedIncrementalEncoder",
    "encodings.utf_8.IncrementalEncoder",
    "encodings.utf_8_sig.IncrementalEncoder"
  ],
  "codecs.IncrementalEncoder.getstate": [
    "encodings.utf_8_sig.IncrementalEncoder"
  ],
  "codecs.IncrementalEncoder.setstate": [
    "encodings.utf_8_sig.IncrementalEncoder"
  ],
  "collections.UserDict.__init__": [
    "config.base.Config"
  ],
  "collections.UserString.__init__": [
    "config.config_options.EditURITemplate.Template"
  ],
  "collections.UserString.format": [
    "config.config_options.EditURITemplate.Template"
  ],
  "complex.__abs__": [
    "float"
  ],
  "complex.__add__": [
    "float"
  ],
  "complex.__bool__": [
    "float"
  ],
  "complex.__eq__": [
    "float"
  ],
  "complex.__hash__": [
    "float"
  ],
  "complex.__mul__": [
    "float"
  ],
  "complex.__ne__": [
    "float"
  ],
  "complex.__neg__": [
    "float"
  ],
  "complex.__new__": [
    "float"
  ],
  "complex.__pos__": [
    "float"
  ],
  "complex.__pow__": [
    "float"
  ],
  "complex.__radd__": [
    "float"
  ],
  "complex.__rmul__": [
    "float"
  ],
  "complex.__rpow__": [
    "float"
  ],
  "complex.__rsub__": [
    "float"
  ],
  "complex.__rtruediv__": [
    "float"
  ],
  "complex.__sub__": [
    "float"
  ],
  "complex.__truediv__": [
    "float"
  ],
  "complex.conjugate": [
    "float"
  ],
  "complex.imag": [
    "float"
  ],
  "complex.real": [
    "float"
  ],
  "config.base.Config.__init__": [
    "config.base.LegacyConfig"
  ],
  "config.config_options.ListOfItems.__init__": [
    "config.config_options.ConfigItems",
    "config.config_options.ListOfPaths"
  ],
  "config.config_options.OptionallyRequired.__init__": [
    "config.config_options.Choice",
    "config.config_options.MarkdownExtensions",
    "config.config_options.Plugins",
    "config.config_options.Type",
    "config.config_options.URL"
  ],
  "config.config_options.SubConfig.run_validation": [
    "config.config_options.PropagatingSubConfig"
  ],
  "config.config_options.Type.__init__": [
    "config.config_options.EditURI",
    "config.config_options.FilesystemObject",
    "config.config_options.RepoName"
  ],
  "config.config_options.Type.run_validation": [
    "config.config_options.FilesystemObject"
  ],
  "config.config_options.URL.__init__": [
    "config.config_options.RepoURL"
  ],
  "configparser.Error.__init__": [
    "configparser.DuplicateOptionError",
    "configparser.DuplicateSectionError",
    "configparser.InterpolationError",
    "configparser.NoOptionError",
    "configparser.NoSectionError",
    "configparser.ParsingError"
  ],
  "configparser.Interpolation.before_get": [
    "configparser.LegacyInterpolation"
  ],
  "configparser.InterpolationError.__init__": [
    "configparser.InterpolationDepthError",
    "configparser.InterpolationMissingOptionError"
  ],
  "configparser.ParsingError.__init__": [
    "configparser.MissingSectionHeaderError"
  ],
  "configparser.RawConfigParser.get": [
    "configparser.ConfigParser"
  ],
  "contextlib.AbstractAsyncContextManager.__aenter__": [
    "aiofiles.base.AiofilesContextManager",
    "contextlib.nullcontext"
  ],
  "contextlib.AbstractAsyncContextManager.__aexit__": [
    "aiofiles.base.AiofilesContextManager",
    "contextlib._AsyncGeneratorContextManager",
    "contextlib.aclosing",
    "contextlib.nullcontext"
  ],
  "contextlib.AbstractContextManager.__enter__": [
    "contextlib.chdir",
    "contextlib.nullcontext",
    "pip._vendor.rich.progress._ReadContext",
    "prompt_toolkit.utils.DummyContext",
    "rich.progress._ReadContext"
  ],
  "contextlib.AbstractContextManager.__exit__": [
    "contextlib._GeneratorContextManager",
    "contextlib._RedirectStream",
    "contextlib.chdir",
    "contextlib.closing",
    "contextlib.nullcontext",
    "contextlib.suppress",
    "multiprocessing.synchronize.Condition",
    "multiprocessing.synchronize.SemLock",
    "os._ScandirIterator",
    "pip._vendor.rich.progress._ReadContext",
    "prompt_toolkit.utils.DummyContext",
    "rich.progress._ReadContext"
  ],
  "cryptography.hazmat.primitives._cipheralgorithm.CipherAlgorithm.key_size": [
    "cryptography.hazmat.decrepit.ciphers.algorithms.ARC4",
    "cryptography.hazmat.decrepit.ciphers.algorithms.Blowfish",
    "cryptography.hazmat.decrepit.ciphers.algorithms.CAST5",
    "cryptography.hazmat.decrepit.ciphers.algorithms.IDEA",
    "cryptography.hazmat.decrepit.ciphers.algorithms.RC2",
    "cryptography.hazmat.decrepit.ciphers.algorithms.SEED",
    "cryptography.hazmat.decrepit.ciphers.algorithms.TripleDES",
    "cryptography.hazmat.primitives.ciphers.algorithms.AES",
    "cryptography.hazmat.primitives.ciphers.algorithms.Camellia",
    "cryptography.hazmat.primitives.ciphers.algorithms.ChaCha20",
    "cryptography.hazmat.primitives.ciphers.algorithms.SM4"
  ],
  "cryptography.hazmat.primitives.asymmetric.ec.EllipticCurveSignatureAlgorithm.algorithm": [
    "cryptography.hazmat.primitives.asymmetric.ec.ECDSA"
  ],
  "cryptography.hazmat.primitives.ciphers.modes.Mode.validate_for_algorithm": [
    "cryptography.hazmat.primitives.ciphers.modes.CTR",
    "cryptography.hazmat.primitives.ciphers.modes.GCM",
    "cryptography.hazmat.primitives.ciphers.modes.XTS"
  ],
  "cryptography.hazmat.primitives.ciphers.modes.ModeWithAuthenticationTag.tag": [
    "cryptography.hazmat.primitives.ciphers.modes.GCM"
  ],
  "cryptography.hazmat.primitives.ciphers.modes.ModeWithInitializationVector.initialization_vector": [
    "cryptography.hazmat.primitives.ciphers.modes.CBC",
    "cryptography.hazmat.primitives.ciphers.modes.CFB",
    "cryptography.hazmat.primitives.ciphers.modes.CFB8",
    "cryptography.hazmat.primitives.ciphers.modes.GCM",
    "cryptography.hazmat.primitives.ciphers.modes.OFB"
  ],
  "cryptography.hazmat.primitives.ciphers.modes.ModeWithNonce.nonce": [
    "cryptography.hazmat.primitives.ciphers.modes.CTR"
  ],
  "cryptography.hazmat.primitives.ciphers.modes.ModeWithTweak.tweak": [
    "cryptography.hazmat.primitives.ciphers.modes.XTS"
  ],
  "cryptography.hazmat.primitives.hashes.HashAlgorithm.digest_size": [
    "cryptography.hazmat.primitives.hashes.BLAKE2b",
    "cryptography.hazmat.primitives.hashes.BLAKE2s",
    "cryptography.hazmat.primitives.hashes.SHAKE128",
    "cryptography.hazmat.primitives.hashes.SHAKE256"
  ],
  "cryptography.hazmat.primitives.hashes.HashContext.algorithm": [
    "cryptography.hazmat.bindings._rust.openssl.hashes.Hash",
    "cryptography.hazmat.bindings._rust.openssl.hmac.HMAC"
  ],
  "cryptography.hazmat.primitives.hashes.HashContext.copy": [
    "cryptography.hazmat.bindings._rust.openssl.hashes.Hash",
    "cryptography.hazmat.bindings._rust.openssl.hmac.HMAC"
  ],
  "cryptography.hazmat.primitives.hashes.HashContext.finalize": [
    "cryptography.hazmat.bindings._rust.openssl.hashes.Hash",
    "cryptography.hazmat.bindings._rust.openssl.hmac.HMAC"
  ],
  "cryptography.hazmat.primitives.hashes.HashContext.update": [
    "cryptography.hazmat.bindings._rust.openssl.hashes.Hash",
    "cryptography.hazmat.bindings._rust.openssl.hmac.HMAC"
  ],
  "cryptography.hazmat.primitives.kdf.KeyDerivationFunction.derive": [
    "cryptography.hazmat.primitives.kdf.concatkdf.ConcatKDFHMAC",
    "cryptography.hazmat.primitives.kdf.concatkdf.ConcatKDFHash",
    "cryptography.hazmat.primitives.kdf.hkdf.HKDF",
    "cryptography.hazmat.primitives.kdf.hkdf.HKDFExpand",
    "cryptography.hazmat.primitives.kdf.kbkdf.KBKDFCMAC",
    "cryptography.hazmat.primitives.kdf.kbkdf.KBKDFHMAC",
    "cryptography.hazmat.primitives.kdf.pbkdf2.PBKDF2HMAC",
    "cryptography.hazmat.primitives.kdf.scrypt.Scrypt",
    "cryptography.hazmat.primitives.kdf.x963kdf.X963KDF"
  ],
  "cryptography.hazmat.primitives.kdf.KeyDerivationFunction.verify": [
    "cryptography.hazmat.primitives.kdf.concatkdf.ConcatKDFHMAC",
    "cryptography.hazmat.primitives.kdf.concatkdf.ConcatKDFHash",
    "cryptography.hazmat.primitives.kdf.hkdf.HKDF",
    "cryptography.hazmat.primitives.kdf.hkdf.HKDFExpand",
    "cryptography.hazmat.primitives.kdf.kbkdf.KBKDFCMAC",
    "cryptography.hazmat.primitives.kdf.kbkdf.KBKDFHMAC",
    "cryptography.hazmat.primitives.kdf.pbkdf2.PBKDF2HMAC",
    "cryptography.hazmat.primitives.kdf.scrypt.Scrypt",
    "cryptography.hazmat.primitives.kdf.x963kdf.X963KDF"
  ],
  "cryptography.hazmat.primitives.padding.PaddingContext.finalize": [
    "cryptography.hazmat.bindings._rust.PKCS7PaddingContext",
    "cryptography.hazmat.primitives.padding._ANSIX923PaddingContext",
    "cryptography.hazmat.primitives.padding._ANSIX923UnpaddingContext",
    "cryptography.hazmat.primitives.padding._PKCS7UnpaddingContext"
  ],
  "cryptography.hazmat.primitives.padding.PaddingContext.update": [
    "cryptography.hazmat.bindings._rust.PKCS7PaddingContext",
    "cryptography.hazmat.primitives.padding._ANSIX923PaddingContext",
    "cryptography.hazmat.primitives.padding._ANSIX923UnpaddingContext",
    "cryptography.hazmat.primitives.padding._PKCS7UnpaddingContext"
  ],
  "cryptography.x509.base.RevokedCertificate.extensions": [
    "cryptography.x509.base._RawRevokedCertificate"
  ],
  "cryptography.x509.base.RevokedCertificate.revocation_date": [
    "cryptography.x509.base._RawRevokedCertificate"
  ],
  "cryptography.x509.base.RevokedCertificate.revocation_date_utc": [
    "cryptography.x509.base._RawRevokedCertificate"
  ],
  "cryptography.x509.base.RevokedCertificate.serial_number": [
    "cryptography.x509.base._RawRevokedCertificate"
  ],
  "cryptography.x509.extensions.ExtensionType.oid": [
    "cryptography.x509.extensions.UnrecognizedExtension"
  ],
  "cryptography.x509.extensions.ExtensionType.public_bytes": [
    "cryptography.x509.extensions.AuthorityInformationAccess",
    "cryptography.x509.extensions.AuthorityKeyIdentifier",
    "cryptography.x509.extensions.BasicConstraints",
    "cryptography.x509.extensions.CRLDistributionPoints",
    "cryptography.x509.extensions.CRLNumber",
    "cryptography.x509.extensions.CRLReason",
    "cryptography.x509.extensions.CertificateIssuer",
    "cryptography.x509.extensions.CertificatePolicies",
    "cryptography.x509.extensions.DeltaCRLIndicator",
    "cryptography.x509.extensions.ExtendedKeyUsage",
    "cryptography.x509.extensions.FreshestCRL",
    "cryptography.x509.extensions.InhibitAnyPolicy",
    "cryptography.x509.extensions.InvalidityDate",
    "cryptography.x509.extensions.IssuerAlternativeName",
    "cryptography.x509.extensions.IssuingDistributionPoint",
    "cryptography.x509.extensions.KeyUsage",
    "cryptography.x509.extensions.MSCertificateTemplate",
    "cryptography.x509.extensions.NameConstraints",
    "cryptography.x509.extensions.OCSPAcceptableResponses",
    "cryptography.x509.extensions.OCSPNoCheck",
    "cryptography.x509.extensions.OCSPNonce",
    "cryptography.x509.extensions.PolicyConstraints",
    "cryptography.x509.extensions.PrecertPoison",
    "cryptography.x509.extensions.PrecertificateSignedCertificateTimestamps",
    "cryptography.x509.extensions.SignedCertificateTimestamps",
    "cryptography.x509.extensions.SubjectAlternativeName",
    "cryptography.x509.extensions.SubjectInformationAccess",
    "cryptography.x509.extensions.SubjectKeyIdentifier",
    "cryptography.x509.extensions.TLSFeature",
    "cryptography.x509.extensions.UnrecognizedExtension"
  ],
  "cryptography.x509.general_name.GeneralName.value": [
    "cryptography.x509.general_name.DNSName",
    "cryptography.x509.general_name.DirectoryName",
    "cryptography.x509.general_name.IPAddress",
    "cryptography.x509.general_name.OtherName",
    "cryptography.x509.general_name.RFC822Name",
    "cryptography.x509.general_name.RegisteredID",
    "cryptography.x509.general_name.UniformResourceIdentifier"
  ],
  "dataclasses_json.undefined._UndefinedParameterAction.create_init": [
    "dataclasses_json.undefined._CatchAllUndefinedParameters",
    "dataclasses_json.undefined._IgnoreUndefinedParameters"
  ],
  "dataclasses_json.undefined._UndefinedParameterAction.handle_dump": [
    "dataclasses_json.undefined._CatchAllUndefinedParameters"
  ],
  "dataclasses_json.undefined._UndefinedParameterAction.handle_from_dict": [
    "dataclasses_json.undefined._CatchAllUndefinedParameters",
    "dataclasses_json.undefined._IgnoreUndefinedParameters",
    "dataclasses_json.undefined._RaiseUndefinedParameters"
  ],
  "dataclasses_json.undefined._UndefinedParameterAction.handle_to_dict": [
    "dataclasses_json.undefined._CatchAllUndefinedParameters"
  ],
  "datetime.date.__add__": [
    "tomlkit.items.Date",
    "tomlkit.items.DateTime"
  ],
  "datetime.date.__eq__": [
    "datetime.datetime"
  ],
  "datetime.date.__ge__": [
    "datetime.datetime"
  ],
  "datetime.date.__gt__": [
    "datetime.datetime"
  ],
  "datetime.date.__hash__": [
    "datetime.datetime"
  ],
  "datetime.date.__le__": [
    "datetime.datetime"
  ],
  "datetime.date.__lt__": [
    "datetime.datetime"
  ],
  "datetime.date.__new__": [
    "datetime.datetime"
  ],
  "datetime.date.__sub__": [
    "datetime.datetime",
    "tomlkit.items.Date"
  ],
  "datetime.date.fromtimestamp": [
    "datetime.datetime"
  ],
  "datetime.date.isoformat": [
    "datetime.datetime"
  ],
  "datetime.date.replace": [
    "datetime.datetime",
    "tomlkit.items.Date"
  ],
  "datetime.datetime.__sub__": [
    "tomlkit.items.DateTime"
  ],
  "datetime.datetime.astimezone": [
    "tomlkit.items.DateTime"
  ],
  "datetime.datetime.fold": [
    "dateutil.tz._common._DatetimeWithFold"
  ],
  "datetime.datetime.replace": [
    "tomlkit.items.DateTime"
  ],
  "datetime.time.replace": [
    "tomlkit.items.Time"
  ],
  "datetime.tzinfo.dst": [
    "datetime.timezone",
    "dateutil.tz._common.tzrangebase",
    "dateutil.tz.tz.tzfile",
    "dateutil.tz.tz.tzlocal",
    "dateutil.tz.tz.tzoffset",
    "dateutil.tz.tz.tzutc",
    "ldap3.core.timezone.OffsetTzInfo",
    "psycopg2.tz.FixedOffsetTimezone",
    "psycopg2.tz.LocalTimezone",
    "pydantic_core._pydantic_core.TzInfo",
    "pytz._FixedOffset",
    "pytz.reference.FixedOffset",
    "pytz.reference.LocalTimezone",
    "pytz.reference.USTimeZone",
    "pytz.tzinfo.BaseTzInfo",
    "zoneinfo.ZoneInfo"
  ],
  "datetime.tzinfo.fromutc": [
    "dateutil.tz._common._tzinfo",
    "dateutil.tz.tz.tzoffset",
    "dateutil.tz.tz.tzutc",
    "pydantic_core._pydantic_core.TzInfo",
    "pytz.tzinfo.DstTzInfo",
    "pytz.tzinfo.StaticTzInfo"
  ],
  "datetime.tzinfo.tzname": [
    "datetime.timezone",
    "dateutil.tz._common.tzrangebase",
    "dateutil.tz.tz.tzfile",
    "dateutil.tz.tz.tzlocal",
    "dateutil.tz.tz.tzoffset",
    "dateutil.tz.tz.tzutc",
    "ldap3.core.timezone.OffsetTzInfo",
    "psycopg2.tz.FixedOffsetTimezone",
    "psycopg2.tz.LocalTimezone",
    "pydantic_core._pydantic_core.TzInfo",
    "pytz._FixedOffset",
    "pytz.reference.FixedOffset",
    "pytz.reference.LocalTimezone",
    "pytz.reference.USTimeZone",
    "pytz.tzinfo.BaseTzInfo",
    "zoneinfo.ZoneInfo"
  ],
  "datetime.tzinfo.utcoffset": [
    "datetime.timezone",
    "dateutil.tz._common.tzrangebase",
    "dateutil.tz.tz.tzfile",
    "dateutil.tz.tz.tzlocal",
    "dateutil.tz.tz.tzoffset",
    "dateutil.tz.tz.tzutc",
    "ldap3.core.timezone.OffsetTzInfo",
    "psycopg2.tz.FixedOffsetTimezone",
    "psycopg2.tz.LocalTimezone",
    "pydantic_core._pydantic_core.TzInfo",
    "pytz._FixedOffset",
    "pytz.reference.FixedOffset",
    "pytz.reference.LocalTimezone",
    "pytz.reference.USTimeZone",
    "pytz.tzinfo.BaseTzInfo",
    "zoneinfo.ZoneInfo"
  ],
  "dateutil.rrule.rrulebase.__init__": [
    "dateutil.rrule.rrule",
    "dateutil.rrule.rruleset"
  ],
  "dateutil.tz._common._tzinfo.fromutc": [
    "dateutil.tz._common.tzrangebase"
  ],
  "dateutil.tz._common._tzinfo.is_ambiguous": [
    "dateutil.tz._common.tzrangebase",
    "dateutil.tz.tz.tzfile",
    "dateutil.tz.tz.tzlocal"
  ],
  "dateutil.tz._common.tzrangebase.__init__": [
    "dateutil.tz.tz.tzrange"
  ],
  "dateutil.tz.tz.tzrange.__init__": [
    "dateutil.tz.tz.tzstr"
  ],
  "dict.__hash__": [
    "werkzeug.datastructures.mixins.ImmutableDictMixin"
  ],
  "distutils.cmd.Command.finalize_options": [
    "distutils.command.bdist.bdist",
    "distutils.command.bdist_dumb.bdist_dumb",
    "distutils.command.bdist_rpm.bdist_rpm",
    "distutils.command.bdist_wininst.bdist_wininst",
    "distutils.command.build.build",
    "distutils.command.build_clib.build_clib",
    "distutils.command.build_ext.build_ext",
    "distutils.command.build_py.build_py",
    "distutils.command.build_scripts.build_scripts",
    "distutils.command.check.check",
    "distutils.command.clean.clean",
    "distutils.command.config.config",
    "distutils.command.install.install",
    "distutils.command.install_data.install_data",
    "distutils.command.install_egg_info.install_egg_info",
    "distutils.command.install_headers.install_headers",
    "distutils.command.install_lib.install_lib",
    "distutils.command.install_scripts.install_scripts",
    "distutils.command.sdist.sdist",
    "distutils.config.PyPIRCCommand"
  ],
  "distutils.cmd.Command.initialize_options": [
    "distutils.command.bdist.bdist",
    "distutils.command.bdist_dumb.bdist_dumb",
    "distutils.command.bdist_rpm.bdist_rpm",
    "distutils.command.bdist_wininst.bdist_wininst",
    "distutils.command.build.build",
    "distutils.command.build_clib.build_clib",
    "distutils.command.build_ext.build_ext",
    "distutils.command.build_py.build_py",
    "distutils.command.build_scripts.build_scripts",
    "distutils.command.check.check",
    "distutils.command.clean.clean",
    "distutils.command.config.config",
    "distutils.command.install.install",
    "distutils.command.install_data.install_data",
    "distutils.command.install_egg_info.install_egg_info",
    "distutils.command.install_headers.install_headers",
    "distutils.command.install_lib.install_lib",
    "distutils.command.install_scripts.install_scripts",
    "distutils.command.sdist.sdist",
    "distutils.config.PyPIRCCommand"
  ],
  "distutils.cmd.Command.run": [
    "distutils.command.bdist.bdist",
    "distutils.command.bdist_dumb.bdist_dumb",
    "distutils.command.bdist_rpm.bdist_rpm",
    "distutils.command.bdist_wininst.bdist_wininst",
    "distutils.command.build.build",
    "distutils.command.build_clib.build_clib",
    "distutils.command.build_ext.build_ext",
    "distutils.command.build_py.build_py",
    "distutils.command.build_scripts.build_scripts",
    "distutils.command.check.check",
    "distutils.command.clean.clean",
    "distutils.command.config.config",
    "distutils.command.install.install",
    "distutils.command.install_data.install_data",
    "distutils.command.install_egg_info.install_egg_info",
    "distutils.command.install_headers.install_headers",
    "distutils.command.install_lib.install_lib",
    "distutils.command.install_scripts.install_scripts",
    "distutils.command.sdist.sdist",
    "distutils.config.PyPIRCCommand"
  ],
  "distutils.cmd.Command.warn": [
    "distutils.command.check.check"
  ],
  "distutils.command.build_py.build_py.build_module": [
    "distutils.command.build_py.build_py_2to3"
  ],
  "distutils.command.build_py.build_py.run": [
    "distutils.command.build_py.build_py_2to3"
  ],
  "distutils.command.build_scripts.build_scripts.copy_scripts": [
    "distutils.command.build_scripts.build_scripts_2to3"
  ],
  "distutils.config.PyPIRCCommand.finalize_options": [
    "distutils.command.register.register",
    "distutils.command.upload.upload"
  ],
  "distutils.config.PyPIRCCommand.initialize_options": [
    "distutils.command.register.register",
    "distutils.command.upload.upload"
  ],
  "distutils.config.PyPIRCCommand.run": [
    "distutils.command.register.register",
    "distutils.command.upload.upload"
  ],
  "distutils.version.Version.__init__": [
    "distutils.version.LooseVersion",
    "distutils.version.StrictVersion"
  ],
  "distutils.version.Version.__str__": [
    "distutils.version.LooseVersion",
    "distutils.version.StrictVersion"
  ],
  "distutils.version.Version._cmp": [
    "distutils.version.LooseVersion",
    "distutils.version.StrictVersion"
  ],
  "distutils.version.Version.parse": [
    "distutils.version.LooseVersion",
    "distutils.version.StrictVersion"
  ],
  "dns._asyncbackend.Backend.datagram_connection_required": [
    "dns._asyncio_backend.Backend"
  ],
  "dns._asyncbackend.Backend.get_transport_class": [
    "dns._asyncio_backend.Backend",
    "dns._trio_backend.Backend"
  ],
  "dns._asyncbackend.Backend.make_socket": [
    "dns._asyncio_backend.Backend",
    "dns._trio_backend.Backend"
  ],
  "dns._asyncbackend.Backend.name": [
    "dns._asyncio_backend.Backend",
    "dns._trio_backend.Backend"
  ],
  "dns._asyncbackend.Backend.sleep": [
    "dns._asyncio_backend.Backend",
    "dns._trio_backend.Backend"
  ],
  "dns._asyncbackend.Backend.wait_for": [
    "dns._asyncio_backend.Backend",
    "dns._trio_backend.Backend"
  ],
  "dns._asyncbackend.DatagramSocket.recvfrom": [
    "dns._asyncio_backend.DatagramSocket",
    "dns._trio_backend.DatagramSocket"
  ],
  "dns._asyncbackend.DatagramSocket.sendto": [
    "dns._asyncio_backend.DatagramSocket",
    "dns._trio_backend.DatagramSocket"
  ],
  "dns._asyncbackend.Socket.close": [
    "dns._asyncio_backend.DatagramSocket",
    "dns._asyncio_backend.StreamSocket",
    "dns._trio_backend.DatagramSocket",
    "dns._trio_backend.StreamSocket"
  ],
  "dns._asyncbackend.Socket.getpeercert": [
    "dns._asyncio_backend.DatagramSocket",
    "dns._asyncio_backend.StreamSocket",
    "dns._trio_backend.DatagramSocket",
    "dns._trio_backend.StreamSocket"
  ],
  "dns._asyncbackend.Socket.getpeername": [
    "dns._asyncio_backend.DatagramSocket",
    "dns._asyncio_backend.StreamSocket",
    "dns._trio_backend.DatagramSocket",
    "dns._trio_backend.StreamSocket"
  ],
  "dns._asyncbackend.Socket.getsockname": [
    "dns._asyncio_backend.DatagramSocket",
    "dns._asyncio_backend.StreamSocket",
    "dns._trio_backend.DatagramSocket",
    "dns._trio_backend.StreamSocket"
  ],
  "dns._asyncbackend.StreamSocket.recv": [
    "dns._asyncio_backend.StreamSocket",
    "dns._trio_backend.StreamSocket"
  ],
  "dns._asyncbackend.StreamSocket.sendall": [
    "dns._asyncio_backend.StreamSocket",
    "dns._trio_backend.StreamSocket"
  ],
  "dns.dnssec.Policy.__init__": [
    "dns.dnssec.SimpleDeny"
  ],
  "dns.dnssec.Policy.ok_to_create_ds": [
    "dns.dnssec.SimpleDeny"
  ],
  "dns.dnssec.Policy.ok_to_sign": [
    "dns.dnssec.SimpleDeny"
  ],
  "dns.dnssec.Policy.ok_to_validate": [
    "dns.dnssec.SimpleDeny"
  ],
  "dns.dnssec.Policy.ok_to_validate_ds": [
    "dns.dnssec.SimpleDeny"
  ],
  "dns.dnssecalgs.base.GenericPrivateKey.__init__": [
    "dns.dnssecalgs.cryptography.CryptographyPrivateKey"
  ],
  "dns.dnssecalgs.base.GenericPrivateKey.from_pem": [
    "dns.dnssecalgs.cryptography.CryptographyPrivateKey"
  ],
  "dns.dnssecalgs.base.GenericPrivateKey.public_key": [
    "dns.dnssecalgs.cryptography.CryptographyPrivateKey"
  ],
  "dns.dnssecalgs.base.GenericPrivateKey.sign": [
    "dns.dnssecalgs.dsa.PrivateDSA",
    "dns.dnssecalgs.ecdsa.PrivateECDSA",
    "dns.dnssecalgs.eddsa.PrivateEDDSA",
    "dns.dnssecalgs.rsa.PrivateRSA"
  ],
  "dns.dnssecalgs.base.GenericPrivateKey.to_pem": [
    "dns.dnssecalgs.cryptography.CryptographyPrivateKey"
  ],
  "dns.dnssecalgs.base.GenericPublicKey.__init__": [
    "dns.dnssecalgs.cryptography.CryptographyPublicKey"
  ],
  "dns.dnssecalgs.base.GenericPublicKey.encode_key_bytes": [
    "dns.dnssecalgs.dsa.PublicDSA",
    "dns.dnssecalgs.ecdsa.PublicECDSA",
    "dns.dnssecalgs.eddsa.PublicEDDSA",
    "dns.dnssecalgs.rsa.PublicRSA"
  ],
  "dns.dnssecalgs.base.GenericPublicKey.from_dnskey": [
    "dns.dnssecalgs.dsa.PublicDSA",
    "dns.dnssecalgs.ecdsa.PublicECDSA",
    "dns.dnssecalgs.eddsa.PublicEDDSA",
    "dns.dnssecalgs.rsa.PublicRSA"
  ],
  "dns.dnssecalgs.base.GenericPublicKey.from_pem": [
    "dns.dnssecalgs.cryptography.CryptographyPublicKey"
  ],
  "dns.dnssecalgs.base.GenericPublicKey.to_pem": [
    "dns.dnssecalgs.cryptography.CryptographyPublicKey"
  ],
  "dns.dnssecalgs.base.GenericPublicKey.verify": [
    "dns.dnssecalgs.dsa.PublicDSA",
    "dns.dnssecalgs.ecdsa.PublicECDSA",
    "dns.dnssecalgs.eddsa.PublicEDDSA",
    "dns.dnssecalgs.rsa.PublicRSA"
  ],
  "dns.edns.Option.__init__": [
    "dns.edns.CookieOption",
    "dns.edns.ECSOption",
    "dns.edns.EDEOption",
    "dns.edns.GenericOption",
    "dns.edns.NSIDOption",
    "dns.edns.ReportChannelOption"
  ],
  "dns.edns.Option.from_wire_parser": [
    "dns.edns.CookieOption",
    "dns.edns.ECSOption",
    "dns.edns.EDEOption",
    "dns.edns.GenericOption",
    "dns.edns.NSIDOption",
    "dns.edns.ReportChannelOption"
  ],
  "dns.edns.Option.to_text": [
    "dns.edns.CookieOption",
    "dns.edns.ECSOption",
    "dns.edns.EDEOption",
    "dns.edns.GenericOption",
    "dns.edns.NSIDOption",
    "dns.edns.ReportChannelOption"
  ],
  "dns.edns.Option.to_wire": [
    "dns.edns.CookieOption",
    "dns.edns.ECSOption",
    "dns.edns.EDEOption",
    "dns.edns.GenericOption",
    "dns.edns.NSIDOption",
    "dns.edns.ReportChannelOption"
  ],
  "dns.enum.IntEnum._extra_from_text": [
    "dns.rdatatype.RdataType"
  ],
  "dns.enum.IntEnum._extra_to_text": [
    "dns.rdatatype.RdataType"
  ],
  "dns.enum.IntEnum._maximum": [
    "dns.dnssectypes.Algorithm",
    "dns.dnssectypes.DSDigest",
    "dns.dnssectypes.NSEC3Hash",
    "dns.edns.EDECode",
    "dns.edns.OptionType",
    "dns.message.MessageSection",
    "dns.name.NameRelation",
    "dns.opcode.Opcode",
    "dns.rcode.Rcode",
    "dns.rdataclass.RdataClass",
    "dns.rdatatype.RdataType",
    "dns.rdtypes.svcbbase.ParamKey",
    "dns.update.UpdateSection",
    "dns.zonetypes.DigestHashAlgorithm",
    "dns.zonetypes.DigestScheme"
  ],
  "dns.enum.IntEnum._prefix": [
    "dns.rdataclass.RdataClass",
    "dns.rdatatype.RdataType",
    "dns.rdtypes.svcbbase.ParamKey"
  ],
  "dns.enum.IntEnum._short_name": [
    "dns.name.NameRelation",
    "dns.rdataclass.RdataClass",
    "dns.rdatatype.RdataType",
    "dns.rdtypes.svcbbase.ParamKey"
  ],
  "dns.enum.IntEnum._unknown_exception_class": [
    "dns.opcode.Opcode",
    "dns.rcode.Rcode",
    "dns.rdataclass.RdataClass",
    "dns.rdatatype.RdataType",
    "dns.rdtypes.svcbbase.ParamKey"
  ],
  "dns.exception.DNSException.__init__": [
    "dns.exception.Timeout",
    "dns.message.Truncated",
    "dns.name.IDNAException",
    "dns.resolver.NXDOMAIN",
    "dns.resolver.NoAnswer",
    "dns.resolver.NoNameservers",
    "dns.xfr.TransferError"
  ],
  "dns.exception.DNSException.__str__": [
    "dns.resolver.NXDOMAIN"
  ],
  "dns.exception.DNSException._check_kwargs": [
    "dns.resolver.NXDOMAIN"
  ],
  "dns.exception.DNSException._fmt_kwargs": [
    "dns.resolver.LifetimeTimeout",
    "dns.resolver.NoAnswer",
    "dns.resolver.NoNameservers"
  ],
  "dns.exception.Timeout.__init__": [
    "dns.resolver.LifetimeTimeout"
  ],
  "dns.message.Message.__init__": [
    "dns.update.UpdateMessage"
  ],
  "dns.message.Message._get_one_rr_per_rrset": [
    "dns.update.UpdateMessage"
  ],
  "dns.message.Message._parse_rr_header": [
    "dns.update.UpdateMessage"
  ],
  "dns.name.IDNACodec.__init__": [
    "dns.name.IDNA2003Codec",
    "dns.name.IDNA2008Codec"
  ],
  "dns.name.IDNACodec.decode": [
    "dns.name.IDNA2003Codec",
    "dns.name.IDNA2008Codec"
  ],
  "dns.name.IDNACodec.encode": [
    "dns.name.IDNA2003Codec",
    "dns.name.IDNA2008Codec"
  ],
  "dns.nameserver.AddressAndPortNameserver.__init__": [
    "dns.nameserver.Do53Nameserver",
    "dns.nameserver.DoQNameserver",
    "dns.nameserver.DoTNameserver"
  ],
  "dns.nameserver.AddressAndPortNameserver.kind": [
    "dns.nameserver.Do53Nameserver",
    "dns.nameserver.DoQNameserver",
    "dns.nameserver.DoTNameserver"
  ],
  "dns.nameserver.Nameserver.__init__": [
    "dns.nameserver.AddressAndPortNameserver",
    "dns.nameserver.DoHNameserver"
  ],
  "dns.nameserver.Nameserver.__str__": [
    "dns.nameserver.AddressAndPortNameserver",
    "dns.nameserver.DoHNameserver"
  ],
  "dns.nameserver.Nameserver.answer_nameserver": [
    "dns.nameserver.AddressAndPortNameserver",
    "dns.nameserver.DoHNameserver"
  ],
  "dns.nameserver.Nameserver.answer_port": [
    "dns.nameserver.AddressAndPortNameserver",
    "dns.nameserver.DoHNameserver"
  ],
  "dns.nameserver.Nameserver.async_query": [
    "dns.nameserver.Do53Nameserver",
    "dns.nameserver.DoHNameserver",
    "dns.nameserver.DoQNameserver",
    "dns.nameserver.DoTNameserver"
  ],
  "dns.nameserver.Nameserver.is_always_max_size": [
    "dns.nameserver.AddressAndPortNameserver",
    "dns.nameserver.DoHNameserver"
  ],
  "dns.nameserver.Nameserver.kind": [
    "dns.nameserver.AddressAndPortNameserver",
    "dns.nameserver.DoHNameserver"
  ],
  "dns.nameserver.Nameserver.query": [
    "dns.nameserver.Do53Nameserver",
    "dns.nameserver.DoHNameserver",
    "dns.nameserver.DoQNameserver",
    "dns.nameserver.DoTNameserver"
  ],
  "dns.node.Node.__init__": [
    "dns.node.ImmutableNode",
    "dns.zone.VersionedNode"
  ],
  "dns.node.Node.delete_rdataset": [
    "dns.node.ImmutableNode",
    "dns.zone.ImmutableVersionedNode"
  ],
  "dns.node.Node.find_rdataset": [
    "dns.node.ImmutableNode",
    "dns.zone.ImmutableVersionedNode"
  ],
  "dns.node.Node.get_rdataset": [
    "dns.node.ImmutableNode",
    "dns.zone.ImmutableVersionedNode"
  ],
  "dns.node.Node.is_immutable": [
    "dns.node.ImmutableNode",
    "dns.zone.ImmutableVersionedNode"
  ],
  "dns.node.Node.replace_rdataset": [
    "dns.node.ImmutableNode",
    "dns.zone.ImmutableVersionedNode"
  ],
  "dns.quic._common.AsyncQuicConnection.make_stream": [
    "dns.quic._asyncio.AsyncioQuicConnection",
    "dns.quic._trio.TrioQuicConnection"
  ],
  "dns.quic._common.AsyncQuicManager.connect": [
    "dns.quic._asyncio.AsyncioQuicManager",
    "dns.quic._trio.TrioQuicManager"
  ],
  "dns.quic._common.BaseQuicConnection.__init__": [
    "dns.quic._sync.SyncQuicConnection"
  ],
  "dns.quic._common.BaseQuicConnection.close_stream": [
    "dns.quic._sync.SyncQuicConnection"
  ],
  "dns.quic._common.BaseQuicConnection.send_data": [
    "dns.quic._sync.SyncQuicConnection"
  ],
  "dns.quic._common.BaseQuicConnection.send_headers": [
    "dns.quic._sync.SyncQuicConnection"
  ],
  "dns.quic._common.BaseQuicManager.__init__": [
    "dns.quic._sync.SyncQuicManager"
  ],
  "dns.quic._common.BaseQuicManager.closed": [
    "dns.quic._sync.SyncQuicManager"
  ],
  "dns.quic._common.BaseQuicManager.save_session_ticket": [
    "dns.quic._sync.SyncQuicManager"
  ],
  "dns.quic._common.BaseQuicManager.save_token": [
    "dns.quic._sync.SyncQuicManager"
  ],
  "dns.quic._common.BaseQuicStream.__init__": [
    "dns.quic._asyncio.AsyncioQuicStream",
    "dns.quic._sync.SyncQuicStream",
    "dns.quic._trio.TrioQuicStream"
  ],
  "dns.rdata.Rdata.__init__": [
    "dns.rdata.GenericRdata",
    "dns.rdtypes.ANY.AMTRELAY.AMTRELAY",
    "dns.rdtypes.ANY.CAA.CAA",
    "dns.rdtypes.ANY.CERT.CERT",
    "dns.rdtypes.ANY.CSYNC.CSYNC",
    "dns.rdtypes.ANY.GPOS.GPOS",
    "dns.rdtypes.ANY.HINFO.HINFO",
    "dns.rdtypes.ANY.HIP.HIP",
    "dns.rdtypes.ANY.ISDN.ISDN",
    "dns.rdtypes.ANY.L32.L32",
    "dns.rdtypes.ANY.L64.L64",
    "dns.rdtypes.ANY.LOC.LOC",
    "dns.rdtypes.ANY.LP.LP",
    "dns.rdtypes.ANY.NID.NID",
    "dns.rdtypes.ANY.NSEC.NSEC",
    "dns.rdtypes.ANY.NSEC3.NSEC3",
    "dns.rdtypes.ANY.NSEC3PARAM.NSEC3PARAM",
    "dns.rdtypes.ANY.OPENPGPKEY.OPENPGPKEY",
    "dns.rdtypes.ANY.OPT.OPT",
    "dns.rdtypes.ANY.RP.RP",
    "dns.rdtypes.ANY.RRSIG.RRSIG",
    "dns.rdtypes.ANY.SOA.SOA",
    "dns.rdtypes.ANY.SSHFP.SSHFP",
    "dns.rdtypes.ANY.TKEY.TKEY",
    "dns.rdtypes.ANY.TSIG.TSIG",
    "dns.rdtypes.ANY.URI.URI",
    "dns.rdtypes.ANY.X25.X25",
    "dns.rdtypes.ANY.ZONEMD.ZONEMD",
    "dns.rdtypes.CH.A.A",
    "dns.rdtypes.IN.A.A",
    "dns.rdtypes.IN.AAAA.AAAA",
    "dns.rdtypes.IN.APL.APL",
    "dns.rdtypes.IN.DHCID.DHCID",
    "dns.rdtypes.IN.IPSECKEY.IPSECKEY",
    "dns.rdtypes.IN.NAPTR.NAPTR",
    "dns.rdtypes.IN.NSAP.NSAP",
    "dns.rdtypes.IN.PX.PX",
    "dns.rdtypes.IN.SRV.SRV",
    "dns.rdtypes.IN.WKS.WKS",
    "dns.rdtypes.dnskeybase.DNSKEYBase",
    "dns.rdtypes.dsbase.DSBase",
    "dns.rdtypes.euibase.EUIBase",
    "dns.rdtypes.mxbase.MXBase",
    "dns.rdtypes.nsbase.NSBase",
    "dns.rdtypes.svcbbase.SVCBBase",
    "dns.rdtypes.tlsabase.TLSABase",
    "dns.rdtypes.txtbase.TXTBase"
  ],
  "dns.rdata.Rdata._processing_order": [
    "dns.rdtypes.ANY.URI.URI",
    "dns.rdtypes.IN.NAPTR.NAPTR",
    "dns.rdtypes.IN.PX.PX",
    "dns.rdtypes.IN.SRV.SRV",
    "dns.rdtypes.mxbase.MXBase",
    "dns.rdtypes.svcbbase.SVCBBase"
  ],
  "dns.rdata.Rdata._to_wire": [
    "dns.rdata.GenericRdata",
    "dns.rdtypes.ANY.AMTRELAY.AMTRELAY",
    "dns.rdtypes.ANY.CAA.CAA",
    "dns.rdtypes.ANY.CERT.CERT",
    "dns.rdtypes.ANY.CSYNC.CSYNC",
    "dns.rdtypes.ANY.GPOS.GPOS",
    "dns.rdtypes.ANY.HINFO.HINFO",
    "dns.rdtypes.ANY.HIP.HIP",
    "dns.rdtypes.ANY.ISDN.ISDN",
    "dns.rdtypes.ANY.L32.L32",
    "dns.rdtypes.ANY.L64.L64",
    "dns.rdtypes.ANY.LOC.LOC",
    "dns.rdtypes.ANY.LP.LP",
    "dns.rdtypes.ANY.NID.NID",
    "dns.rdtypes.ANY.NSEC.NSEC",
    "dns.rdtypes.ANY.NSEC3.NSEC3",
    "dns.rdtypes.ANY.NSEC3PARAM.NSEC3PARAM",
    "dns.rdtypes.ANY.OPENPGPKEY.OPENPGPKEY",
    "dns.rdtypes.ANY.OPT.OPT",
    "dns.rdtypes.ANY.RP.RP",
    "dns.rdtypes.ANY.RRSIG.RRSIG",
    "dns.rdtypes.ANY.SOA.SOA",
    "dns.rdtypes.ANY.SSHFP.SSHFP",
    "dns.rdtypes.ANY.TKEY.TKEY",
    "dns.rdtypes.ANY.TSIG.TSIG",
    "dns.rdtypes.ANY.URI.URI",
    "dns.rdtypes.ANY.X25.X25",
    "dns.rdtypes.ANY.ZONEMD.ZONEMD",
    "dns.rdtypes.CH.A.A",
    "dns.rdtypes.IN.A.A",
    "dns.rdtypes.IN.AAAA.AAAA",
    "dns.rdtypes.IN.APL.APL",
    "dns.rdtypes.IN.DHCID.DHCID",
    "dns.rdtypes.IN.IPSECKEY.IPSECKEY",
    "dns.rdtypes.IN.NAPTR.NAPTR",
    "dns.rdtypes.IN.NSAP.NSAP",
    "dns.rdtypes.IN.PX.PX",
    "dns.rdtypes.IN.SRV.SRV",
    "dns.rdtypes.IN.WKS.WKS",
    "dns.rdtypes.dnskeybase.DNSKEYBase",
    "dns.rdtypes.dsbase.DSBase",
    "dns.rdtypes.euibase.EUIBase",
    "dns.rdtypes.mxbase.MXBase",
    "dns.rdtypes.nsbase.NSBase",
    "dns.rdtypes.svcbbase.SVCBBase",
    "dns.rdtypes.tlsabase.TLSABase",
    "dns.rdtypes.txtbase.TXTBase"
  ],
  "dns.rdata.Rdata.covers": [
    "dns.rdtypes.ANY.RRSIG.RRSIG"
  ],
  "dns.rdata.Rdata.from_text": [
    "dns.rdata.GenericRdata",
    "dns.rdtypes.ANY.AMTRELAY.AMTRELAY",
    "dns.rdtypes.ANY.CAA.CAA",
    "dns.rdtypes.ANY.CERT.CERT",
    "dns.rdtypes.ANY.CSYNC.CSYNC",
    "dns.rdtypes.ANY.GPOS.GPOS",
    "dns.rdtypes.ANY.HINFO.HINFO",
    "dns.rdtypes.ANY.HIP.HIP",
    "dns.rdtypes.ANY.ISDN.ISDN",
    "dns.rdtypes.ANY.L32.L32",
    "dns.rdtypes.ANY.L64.L64",
    "dns.rdtypes.ANY.LOC.LOC",
    "dns.rdtypes.ANY.LP.LP",
    "dns.rdtypes.ANY.NID.NID",
    "dns.rdtypes.ANY.NSEC.NSEC",
    "dns.rdtypes.ANY.NSEC3.NSEC3",
    "dns.rdtypes.ANY.NSEC3PARAM.NSEC3PARAM",
    "dns.rdtypes.ANY.OPENPGPKEY.OPENPGPKEY",
    "dns.rdtypes.ANY.RP.RP",
    "dns.rdtypes.ANY.RRSIG.RRSIG",
    "dns.rdtypes.ANY.SOA.SOA",
    "dns.rdtypes.ANY.SSHFP.SSHFP",
    "dns.rdtypes.ANY.TKEY.TKEY",
    "dns.rdtypes.ANY.TSIG.TSIG",
    "dns.rdtypes.ANY.URI.URI",
    "dns.rdtypes.ANY.X25.X25",
    "dns.rdtypes.ANY.ZONEMD.ZONEMD",
    "dns.rdtypes.CH.A.A",
    "dns.rdtypes.IN.A.A",
    "dns.rdtypes.IN.AAAA.AAAA",
    "dns.rdtypes.IN.APL.APL",
    "dns.rdtypes.IN.DHCID.DHCID",
    "dns.rdtypes.IN.IPSECKEY.IPSECKEY",
    "dns.rdtypes.IN.NAPTR.NAPTR",
    "dns.rdtypes.IN.NSAP.NSAP",
    "dns.rdtypes.IN.PX.PX",
    "dns.rdtypes.IN.SRV.SRV",
    "dns.rdtypes.IN.WKS.WKS",
    "dns.rdtypes.dnskeybase.DNSKEYBase",
    "dns.rdtypes.dsbase.DSBase",
    "dns.rdtypes.euibase.EUIBase",
    "dns.rdtypes.mxbase.MXBase",
    "dns.rdtypes.nsbase.NSBase",
    "dns.rdtypes.svcbbase.SVCBBase",
    "dns.rdtypes.tlsabase.TLSABase",
    "dns.rdtypes.txtbase.TXTBase"
  ],
  "dns.rdata.Rdata.from_wire_parser": [
    "dns.rdata.GenericRdata",
    "dns.rdtypes.ANY.AMTRELAY.AMTRELAY",
    "dns.rdtypes.ANY.CAA.CAA",
    "dns.rdtypes.ANY.CERT.CERT",
    "dns.rdtypes.ANY.CSYNC.CSYNC",
    "dns.rdtypes.ANY.GPOS.GPOS",
    "dns.rdtypes.ANY.HINFO.HINFO",
    "dns.rdtypes.ANY.HIP.HIP",
    "dns.rdtypes.ANY.ISDN.ISDN",
    "dns.rdtypes.ANY.L32.L32",
    "dns.rdtypes.ANY.L64.L64",
    "dns.rdtypes.ANY.LOC.LOC",
    "dns.rdtypes.ANY.LP.LP",
    "dns.rdtypes.ANY.NID.NID",
    "dns.rdtypes.ANY.NSEC.NSEC",
    "dns.rdtypes.ANY.NSEC3.NSEC3",
    "dns.rdtypes.ANY.NSEC3PARAM.NSEC3PARAM",
    "dns.rdtypes.ANY.OPENPGPKEY.OPENPGPKEY",
    "dns.rdtypes.ANY.OPT.OPT",
    "dns.rdtypes.ANY.RP.RP",
    "dns.rdtypes.ANY.RRSIG.RRSIG",
    "dns.rdtypes.ANY.SOA.SOA",
    "dns.rdtypes.ANY.SSHFP.SSHFP",
    "dns.rdtypes.ANY.TKEY.TKEY",
    "dns.rdtypes.ANY.TSIG.TSIG",
    "dns.rdtypes.ANY.URI.URI",
    "dns.rdtypes.ANY.X25.X25",
    "dns.rdtypes.ANY.ZONEMD.ZONEMD",
    "dns.rdtypes.CH.A.A",
    "dns.rdtypes.IN.A.A",
    "dns.rdtypes.IN.AAAA.AAAA",
    "dns.rdtypes.IN.APL.APL",
    "dns.rdtypes.IN.DHCID.DHCID",
    "dns.rdtypes.IN.IPSECKEY.IPSECKEY",
    "dns.rdtypes.IN.NAPTR.NAPTR",
    "dns.rdtypes.IN.NSAP.NSAP",
    "dns.rdtypes.IN.PX.PX",
    "dns.rdtypes.IN.SRV.SRV",
    "dns.rdtypes.IN.WKS.WKS",
    "dns.rdtypes.dnskeybase.DNSKEYBase",
    "dns.rdtypes.dsbase.DSBase",
    "dns.rdtypes.euibase.EUIBase",
    "dns.rdtypes.mxbase.MXBase",
    "dns.rdtypes.nsbase.NSBase",
    "dns.rdtypes.svcbbase.SVCBBase",
    "dns.rdtypes.tlsabase.TLSABase",
    "dns.rdtypes.txtbase.TXTBase"
  ],
  "dns.rdata.Rdata.to_text": [
    "dns.rdata.GenericRdata",
    "dns.rdtypes.ANY.AMTRELAY.AMTRELAY",
    "dns.rdtypes.ANY.CAA.CAA",
    "dns.rdtypes.ANY.CERT.CERT",
    "dns.rdtypes.ANY.CSYNC.CSYNC",
    "dns.rdtypes.ANY.GPOS.GPOS",
    "dns.rdtypes.ANY.HINFO.HINFO",
    "dns.rdtypes.ANY.HIP.HIP",
    "dns.rdtypes.ANY.ISDN.ISDN",
    "dns.rdtypes.ANY.L32.L32",
    "dns.rdtypes.ANY.L64.L64",
    "dns.rdtypes.ANY.LOC.LOC",
    "dns.rdtypes.ANY.LP.LP",
    "dns.rdtypes.ANY.NID.NID",
    "dns.rdtypes.ANY.NSEC.NSEC",
    "dns.rdtypes.ANY.NSEC3.NSEC3",
    "dns.rdtypes.ANY.NSEC3PARAM.NSEC3PARAM",
    "dns.rdtypes.ANY.OPENPGPKEY.OPENPGPKEY",
    "dns.rdtypes.ANY.OPT.OPT",
    "dns.rdtypes.ANY.RP.RP",
    "dns.rdtypes.ANY.RRSIG.RRSIG",
    "dns.rdtypes.ANY.SOA.SOA",
    "dns.rdtypes.ANY.SSHFP.SSHFP",
    "dns.rdtypes.ANY.TKEY.TKEY",
    "dns.rdtypes.ANY.TSIG.TSIG",
    "dns.rdtypes.ANY.URI.URI",
    "dns.rdtypes.ANY.X25.X25",
    "dns.rdtypes.ANY.ZONEMD.ZONEMD",
    "dns.rdtypes.CH.A.A",
    "dns.rdtypes.IN.A.A",
    "dns.rdtypes.IN.AAAA.AAAA",
    "dns.rdtypes.IN.APL.APL",
    "dns.rdtypes.IN.DHCID.DHCID",
    "dns.rdtypes.IN.IPSECKEY.IPSECKEY",
    "dns.rdtypes.IN.NAPTR.NAPTR",
    "dns.rdtypes.IN.NSAP.NSAP",
    "dns.rdtypes.IN.PX.PX",
    "dns.rdtypes.IN.SRV.SRV",
    "dns.rdtypes.IN.WKS.WKS",
    "dns.rdtypes.dnskeybase.DNSKEYBase",
    "dns.rdtypes.dsbase.DSBase",
    "dns.rdtypes.euibase.EUIBase",
    "dns.rdtypes.mxbase.MXBase",
    "dns.rdtypes.nsbase.NSBase",
    "dns.rdtypes.svcbbase.SVCBBase",
    "dns.rdtypes.tlsabase.TLSABase",
    "dns.rdtypes.txtbase.TXTBase"
  ],
  "dns.rdataset.Rdataset.__eq__": [
    "dns.rrset.RRset"
  ],
  "dns.rdataset.Rdataset.__init__": [
    "dns.rdataset.ImmutableRdataset",
    "dns.rrset.RRset"
  ],
  "dns.rdataset.Rdataset.__repr__": [
    "dns.rrset.RRset"
  ],
  "dns.rdataset.Rdataset.__str__": [
    "dns.rrset.RRset"
  ],
  "dns.rdataset.Rdataset._clone": [
    "dns.rrset.RRset"
  ],
  "dns.rdataset.Rdataset.add": [
    "dns.rdataset.ImmutableRdataset"
  ],
  "dns.rdataset.Rdataset.intersection_update": [
    "dns.rdataset.ImmutableRdataset"
  ],
  "dns.rdataset.Rdataset.match": [
    "dns.rrset.RRset"
  ],
  "dns.rdataset.Rdataset.to_text": [
    "dns.rrset.RRset"
  ],
  "dns.rdataset.Rdataset.to_wire": [
    "dns.rrset.RRset"
  ],
  "dns.rdataset.Rdataset.union_update": [
    "dns.rdataset.ImmutableRdataset"
  ],
  "dns.rdataset.Rdataset.update": [
    "dns.rdataset.ImmutableRdataset"
  ],
  "dns.rdataset.Rdataset.update_ttl": [
    "dns.rdataset.ImmutableRdataset"
  ],
  "dns.rdtypes.mxbase.MXBase._to_wire": [
    "dns.rdtypes.mxbase.UncompressedDowncasingMX",
    "dns.rdtypes.mxbase.UncompressedMX"
  ],
  "dns.rdtypes.nsbase.NSBase._to_wire": [
    "dns.rdtypes.nsbase.UncompressedNS"
  ],
  "dns.rdtypes.nsbase.UncompressedNS._to_wire": [
    "dns.rdtypes.ANY.DNAME.DNAME"
  ],
  "dns.rdtypes.svcbbase.Param.emptiness": [
    "dns.rdtypes.svcbbase.GenericParam",
    "dns.rdtypes.svcbbase.NoDefaultALPNParam",
    "dns.rdtypes.svcbbase.OHTTPParam"
  ],
  "dns.resolver.CacheBase.__init__": [
    "dns.resolver.Cache",
    "dns.resolver.LRUCache"
  ],
  "dns.set.Set.__copy__": [
    "dns.rdataset.ImmutableRdataset"
  ],
  "dns.set.Set.__delitem__": [
    "dns.rdataset.ImmutableRdataset"
  ],
  "dns.set.Set.__eq__": [
    "dns.rdataset.Rdataset"
  ],
  "dns.set.Set.__iadd__": [
    "dns.rdataset.ImmutableRdataset"
  ],
  "dns.set.Set.__iand__": [
    "dns.rdataset.ImmutableRdataset"
  ],
  "dns.set.Set.__init__": [
    "dns.rdataset.Rdataset"
  ],
  "dns.set.Set.__ior__": [
    "dns.rdataset.ImmutableRdataset"
  ],
  "dns.set.Set.__isub__": [
    "dns.rdataset.ImmutableRdataset"
  ],
  "dns.set.Set.__ne__": [
    "dns.rdataset.Rdataset"
  ],
  "dns.set.Set.__repr__": [
    "dns.rdataset.Rdataset"
  ],
  "dns.set.Set._clone": [
    "dns.rdataset.Rdataset"
  ],
  "dns.set.Set.add": [
    "dns.rdataset.Rdataset"
  ],
  "dns.set.Set.clear": [
    "dns.rdataset.ImmutableRdataset"
  ],
  "dns.set.Set.copy": [
    "dns.rdataset.ImmutableRdataset"
  ],
  "dns.set.Set.difference": [
    "dns.rdataset.ImmutableRdataset"
  ],
  "dns.set.Set.intersection": [
    "dns.rdataset.ImmutableRdataset"
  ],
  "dns.set.Set.intersection_update": [
    "dns.rdataset.Rdataset"
  ],
  "dns.set.Set.symmetric_difference": [
    "dns.rdataset.ImmutableRdataset"
  ],
  "dns.set.Set.union": [
    "dns.rdataset.ImmutableRdataset"
  ],
  "dns.set.Set.union_update": [
    "dns.rdataset.Rdataset"
  ],
  "dns.set.Set.update": [
    "dns.rdataset.Rdataset"
  ],
  "dns.transaction.Transaction.__init__": [
    "dns.zone.Transaction",
    "dns.zonefile.RRsetsReaderTransaction"
  ],
  "dns.transaction.Transaction._changed": [
    "dns.zone.Transaction",
    "dns.zonefile.RRsetsReaderTransaction"
  ],
  "dns.transaction.Transaction._delete_name": [
    "dns.zone.Transaction",
    "dns.zonefile.RRsetsReaderTransaction"
  ],
  "dns.transaction.Transaction._delete_rdataset": [
    "dns.zone.Transaction",
    "dns.zonefile.RRsetsReaderTransaction"
  ],
  "dns.transaction.Transaction._end_transaction": [
    "dns.zone.Transaction",
    "dns.zonefile.RRsetsReaderTransaction"
  ],
  "dns.transaction.Transaction._get_node": [
    "dns.zone.Transaction",
    "dns.zonefile.RRsetsReaderTransaction"
  ],
  "dns.transaction.Transaction._get_rdataset": [
    "dns.zone.Transaction",
    "dns.zonefile.RRsetsReaderTransaction"
  ],
  "dns.transaction.Transaction._iterate_names": [
    "dns.zone.Transaction",
    "dns.zonefile.RRsetsReaderTransaction"
  ],
  "dns.transaction.Transaction._iterate_rdatasets": [
    "dns.zone.Transaction",
    "dns.zonefile.RRsetsReaderTransaction"
  ],
  "dns.transaction.Transaction._name_exists": [
    "dns.zone.Transaction",
    "dns.zonefile.RRsetsReaderTransaction"
  ],
  "dns.transaction.Transaction._origin_information": [
    "dns.zone.Transaction"
  ],
  "dns.transaction.Transaction._put_rdataset": [
    "dns.zone.Transaction",
    "dns.zonefile.RRsetsReaderTransaction"
  ],
  "dns.transaction.Transaction._set_origin": [
    "dns.zone.Transaction",
    "dns.zonefile.RRsetsReaderTransaction"
  ],
  "dns.transaction.TransactionManager.get_class": [
    "dns.query.xfr.DummyTransactionManager",
    "dns.zone.Zone",
    "dns.zonefile.RRSetsReaderManager"
  ],
  "dns.transaction.TransactionManager.origin_information": [
    "dns.query.xfr.DummyTransactionManager",
    "dns.zone.Zone",
    "dns.zonefile.RRSetsReaderManager"
  ],
  "dns.transaction.TransactionManager.reader": [
    "dns.query.xfr.DummyTransactionManager",
    "dns.zone.Zone",
    "dns.zonefile.RRSetsReaderManager"
  ],
  "dns.transaction.TransactionManager.writer": [
    "dns.query.xfr.DummyTransactionManager",
    "dns.zone.Zone",
    "dns.zonefile.RRSetsReaderManager"
  ],
  "dns.zone.Version.__init__": [
    "dns.zone.ImmutableVersion",
    "dns.zone.WritableVersion"
  ],
  "dns.zone.VersionedNode.__init__": [
    "dns.zone.ImmutableVersionedNode"
  ],
  "dns.zone.Zone.__init__": [
    "dns.versioned.Zone"
  ],
  "dns.zone.Zone._commit_version": [
    "dns.versioned.Zone"
  ],
  "dns.zone.Zone._end_read": [
    "dns.versioned.Zone"
  ],
  "dns.zone.Zone._end_write": [
    "dns.versioned.Zone"
  ],
  "dns.zone.Zone._get_next_version_id": [
    "dns.versioned.Zone"
  ],
  "dns.zone.Zone.delete_node": [
    "dns.versioned.Zone"
  ],
  "dns.zone.Zone.delete_rdataset": [
    "dns.versioned.Zone"
  ],
  "dns.zone.Zone.find_node": [
    "dns.versioned.Zone"
  ],
  "dns.zone.Zone.find_rdataset": [
    "dns.versioned.Zone"
  ],
  "dns.zone.Zone.get_rdataset": [
    "dns.versioned.Zone"
  ],
  "dns.zone.Zone.reader": [
    "dns.versioned.Zone"
  ],
  "dns.zone.Zone.replace_rdataset": [
    "dns.versioned.Zone"
  ],
  "dns.zone.Zone.writer": [
    "dns.versioned.Zone"
  ],
  "email._header_value_parser.TokenList.fold": [
    "email._header_value_parser.MsgID"
  ],
  "email._policybase.Policy.fold": [
    "email._policybase.Compat32",
    "email.policy.EmailPolicy"
  ],
  "email._policybase.Policy.fold_binary": [
    "email._policybase.Compat32",
    "email.policy.EmailPolicy"
  ],
  "email._policybase.Policy.header_fetch_parse": [
    "email._policybase.Compat32",
    "email.policy.EmailPolicy"
  ],
  "email._policybase.Policy.header_source_parse": [
    "email._policybase.Compat32",
    "email.policy.EmailPolicy"
  ],
  "email._policybase.Policy.header_store_parse": [
    "email._policybase.Compat32",
    "email.policy.EmailPolicy"
  ],
  "email.feedparser.FeedParser.__init__": [
    "email.feedparser.BytesFeedParser"
  ],
  "email.feedparser.FeedParser.feed": [
    "email.feedparser.BytesFeedParser"
  ],
  "email.generator.Generator.__init__": [
    "email.generator.BytesGenerator",
    "email.generator.DecodedGenerator"
  ],
  "email.message.Message.__init__": [
    "email.message.MIMEPart",
    "email.mime.base.MIMEBase",
    "mailbox.Message"
  ],
  "email.message.Message.as_string": [
    "email.message.MIMEPart"
  ],
  "email.message.Message.attach": [
    "email.message.MIMEPart"
  ],
  "email.mime.base.MIMEBase.__init__": [
    "email.mime.multipart.MIMEMultipart"
  ],
  "email.parser.BytesParser.parse": [
    "email.parser.BytesHeaderParser"
  ],
  "email.parser.BytesParser.parsebytes": [
    "email.parser.BytesHeaderParser"
  ],
  "email.parser.Parser.parse": [
    "email.parser.HeaderParser"
  ],
  "email.parser.Parser.parsestr": [
    "email.parser.HeaderParser"
  ],
  "enum.Enum._generate_next_value_": [
    "enum.StrEnum"
  ],
  "enum.Enum._missing_": [
    "dns.enum.IntEnum"
  ],
  "enum.Enum.name": [
    "enum.Flag"
  ],
  "enum.Enum.value": [
    "enum.Flag",
    "enum.IntEnum",
    "enum.StrEnum"
  ],
  "enum.EnumMeta.__bool__": [
    "enum.Flag",
    "tomlkit.items.BoolType"
  ],
  "enum.EnumMeta.__contains__": [
    "enum.Flag"
  ],
  "enum.EnumMeta.__iter__": [
    "enum.Flag",
    "tomlkit.items.BoolType"
  ],
  "enum.EnumMeta.__len__": [
    "enum.Flag",
    "tomlkit.items.BoolType"
  ],
  "enum.Flag.value": [
    "enum.auto"
  ],
  "enum.IntEnum.__new__": [
    "httpx._status_codes.codes"
  ],
  "enum.IntFlag.__new__": [
    "enum.auto"
  ],
  "filelock._api.BaseFileLock.__del__": [
    "filelock.asyncio.BaseAsyncFileLock"
  ],
  "filelock._api.BaseFileLock.__enter__": [
    "filelock.asyncio.BaseAsyncFileLock"
  ],
  "filelock._api.BaseFileLock.__init__": [
    "filelock.asyncio.BaseAsyncFileLock"
  ],
  "filelock._api.BaseFileLock._acquire": [
    "filelock._soft.SoftFileLock",
    "filelock._unix.UnixFileLock",
    "filelock._windows.WindowsFileLock"
  ],
  "filelock._api.BaseFileLock._release": [
    "filelock._soft.SoftFileLock",
    "filelock._unix.UnixFileLock",
    "filelock._windows.WindowsFileLock"
  ],
  "filelock._api.BaseFileLock.acquire": [
    "filelock.asyncio.BaseAsyncFileLock"
  ],
  "filelock._api.BaseFileLock.release": [
    "filelock.asyncio.BaseAsyncFileLock"
  ],
  "filelock._api.FileLockMeta.__call__": [
    "filelock.asyncio.AsyncFileLockMeta"
  ],
  "flask.json.provider.JSONProvider.dumps": [
    "flask.json.provider.DefaultJSONProvider"
  ],
  "flask.json.provider.JSONProvider.loads": [
    "flask.json.provider.DefaultJSONProvider"
  ],
  "flask.json.provider.JSONProvider.response": [
    "flask.json.provider.DefaultJSONProvider"
  ],
  "flask.json.tag.JSONTag.check": [
    "flask.json.tag.PassDict",
    "flask.json.tag.PassList",
    "flask.json.tag.TagBytes",
    "flask.json.tag.TagDateTime",
    "flask.json.tag.TagDict",
    "flask.json.tag.TagMarkup",
    "flask.json.tag.TagTuple",
    "flask.json.tag.TagUUID"
  ],
  "flask.json.tag.JSONTag.to_json": [
    "flask.json.tag.PassDict",
    "flask.json.tag.PassList",
    "flask.json.tag.TagBytes",
    "flask.json.tag.TagDateTime",
    "flask.json.tag.TagDict",
    "flask.json.tag.TagMarkup",
    "flask.json.tag.TagTuple",
    "flask.json.tag.TagUUID"
  ],
  "flask.json.tag.JSONTag.to_python": [
    "flask.json.tag.TagBytes",
    "flask.json.tag.TagDateTime",
    "flask.json.tag.TagDict",
    "flask.json.tag.TagMarkup",
    "flask.json.tag.TagTuple",
    "flask.json.tag.TagUUID"
  ],
  "flask.scaffold.Scaffold.__init__": [
    "flask.app.Flask",
    "flask.blueprints.Blueprint"
  ],
  "flask.scaffold.Scaffold._check_setup_finished": [
    "flask.app.Flask",
    "flask.blueprints.Blueprint"
  ],
  "flask.scaffold.Scaffold.add_url_rule": [
    "flask.app.Flask",
    "flask.blueprints.Blueprint"
  ],
  "flask.scaffold.Scaffold.name": [
    "flask.app.Flask"
  ],
  "flask.sessions.SessionInterface.open_session": [
    "flask.sessions.SecureCookieSessionInterface"
  ],
  "flask.sessions.SessionInterface.save_session": [
    "flask.sessions.SecureCookieSessionInterface"
  ],
  "flask.views.View.dispatch_request": [
    "flask.views.MethodView"
  ],
  "fractions.Fraction.__new__": [
    "exifread.utils.Ratio"
  ],
  "ftplib.FTP.__init__": [
    "ftplib.FTP_TLS"
  ],
  "ftplib.FTP.login": [
    "ftplib.FTP_TLS"
  ],
  "graphql.backend.base.GraphQLBackend.document_from_string": [
    "graphql.backend.cache.GraphQLCachedBackend",
    "graphql.backend.core.GraphQLCoreBackend",
    "graphql.backend.quiver_cloud.GraphQLQuiverCloudBackend"
  ],
  "graphql.backend.cache.GraphQLCachedBackend.__init__": [
    "graphql.backend.decider.GraphQLDeciderBackend"
  ],
  "graphql.backend.cache.GraphQLCachedBackend.document_from_string": [
    "graphql.backend.decider.GraphQLDeciderBackend"
  ],
  "graphql.error.base.GraphQLError.__init__": [
    "graphql.error.located_error.GraphQLLocatedError",
    "graphql.error.syntax_error.GraphQLSyntaxError"
  ],
  "graphql.language.visitor.Visitor.enter": [
    "graphql.language.tests.test_visitor.test_allows_early_exit_while_visiting.TestVisitor",
    "graphql.language.tests.test_visitor.test_allows_editing_a_node_both_on_enter_and_on_leave.TestVisitor",
    "graphql.language.tests.test_visitor.test_allows_editing_the_root_node_on_enter_and_on_leave.TestVisitor",
    "graphql.language.tests.test_visitor.test_allows_for_editing_on_enter.TestVisitor",
    "graphql.language.tests.test_visitor.test_allows_skipping_a_subtree.TestVisitor",
    "graphql.language.tests.test_visitor.test_visits_edited_node.TestVisitor",
    "graphql.language.tests.test_visitor.test_visits_in_pararell_allows_early_exit_from_different_points.TestVisitor",
    "graphql.language.tests.test_visitor.test_visits_in_pararell_allows_early_exit_while_visiting.TestVisitor",
    "graphql.language.tests.test_visitor.test_visits_in_pararell_allows_for_editing_on_enter.TestVisitor1",
    "graphql.language.tests.test_visitor.test_visits_in_pararell_allows_for_editing_on_enter.TestVisitor2",
    "graphql.language.tests.test_visitor.test_visits_in_pararell_allows_for_editing_on_leave.TestVisitor2",
    "graphql.language.tests.test_visitor.test_visits_in_pararell_allows_skipping_a_subtree.TestVisitor",
    "graphql.language.tests.test_visitor.test_visits_in_pararell_allows_skipping_different_subtrees.TestVisitor",
    "graphql.language.tests.test_visitor.test_visits_kitchen_sink.TestVisitor",
    "graphql.language.tests.test_visitor.test_visits_with_typeinfo_maintains_type_info_during_edit.TestVisitor",
    "graphql.language.tests.test_visitor.test_visits_with_typeinfo_maintains_type_info_during_visit.TestVisitor",
    "graphql.language.visitor.ParallelVisitor",
    "graphql.language.visitor.TypeInfoVisitor"
  ],
  "graphql.language.visitor.Visitor.leave": [
    "graphql.language.tests.test_visitor.test_allows_early_exit_while_visiting.TestVisitor",
    "graphql.language.tests.test_visitor.test_allows_editing_a_node_both_on_enter_and_on_leave.TestVisitor",
    "graphql.language.tests.test_visitor.test_allows_editing_the_root_node_on_enter_and_on_leave.TestVisitor",
    "graphql.language.tests.test_visitor.test_allows_for_editing_on_leave.TestVisitor",
    "graphql.language.tests.test_visitor.test_allows_skipping_a_subtree.TestVisitor",
    "graphql.language.tests.test_visitor.test_visits_in_pararell_allows_early_exit_from_different_points.TestVisitor",
    "graphql.language.tests.test_visitor.test_visits_in_pararell_allows_early_exit_while_visiting.TestVisitor",
    "graphql.language.tests.test_visitor.test_visits_in_pararell_allows_for_editing_on_enter.TestVisitor2",
    "graphql.language.tests.test_visitor.test_visits_in_pararell_allows_for_editing_on_leave.TestVisitor1",
    "graphql.language.tests.test_visitor.test_visits_in_pararell_allows_for_editing_on_leave.TestVisitor2",
    "graphql.language.tests.test_visitor.test_visits_in_pararell_allows_skipping_a_subtree.TestVisitor",
    "graphql.language.tests.test_visitor.test_visits_in_pararell_allows_skipping_different_subtrees.TestVisitor",
    "graphql.language.tests.test_visitor.test_visits_kitchen_sink.TestVisitor",
    "graphql.language.tests.test_visitor.test_visits_with_typeinfo_maintains_type_info_during_edit.TestVisitor",
    "graphql.language.tests.test_visitor.test_visits_with_typeinfo_maintains_type_info_during_visit.TestVisitor",
    "graphql.language.visitor.ParallelVisitor",
    "graphql.language.visitor.TypeInfoVisitor"
  ],
  "graphql.type.definition.GraphQLNamedType.__init__": [
    "graphql.type.definition.GraphQLEnumType",
    "graphql.type.definition.GraphQLInputObjectType",
    "graphql.type.definition.GraphQLInterfaceType",
    "graphql.type.definition.GraphQLObjectType",
    "graphql.type.definition.GraphQLScalarType",
    "graphql.type.definition.GraphQLUnionType"
  ],
  "graphql.type.definition.GraphQLNamedType.__str__": [
    "graphql.type.definition.GraphQLScalarType"
  ],
  "graphql.validation.rules.base.ValidationRule.__init__": [
    "graphql.validation.rules.lone_anonymous_operation.LoneAnonymousOperation",
    "graphql.validation.rules.no_fragment_cycles.NoFragmentCycles",
    "graphql.validation.rules.no_undefined_variables.NoUndefinedVariables",
    "graphql.validation.rules.no_unused_fragments.NoUnusedFragments",
    "graphql.validation.rules.no_unused_variables.NoUnusedVariables",
    "graphql.validation.rules.overlapping_fields_can_be_merged.OverlappingFieldsCanBeMerged",
    "graphql.validation.rules.unique_argument_names.UniqueArgumentNames",
    "graphql.validation.rules.unique_fragment_names.UniqueFragmentNames",
    "graphql.validation.rules.unique_input_field_names.UniqueInputFieldNames",
    "graphql.validation.rules.unique_operation_names.UniqueOperationNames",
    "graphql.validation.rules.unique_variable_names.UniqueVariableNames",
    "graphql.validation.rules.variables_in_allowed_position.VariablesInAllowedPosition"
  ],
  "gzip.GzipFile.__init__": [
    "xmlrpc.client.GzipDecodedResponse"
  ],
  "h11._events._ResponseBase.__post_init__": [
    "h11._events.InformationalResponse",
    "h11._events.Response"
  ],
  "h11._writers.BodyWriter.send_data": [
    "h11._writers.ChunkedWriter",
    "h11._writers.ContentLengthWriter",
    "h11._writers.Http10Writer"
  ],
  "h11._writers.BodyWriter.send_eom": [
    "h11._writers.ChunkedWriter",
    "h11._writers.ContentLengthWriter",
    "h11._writers.Http10Writer"
  ],
  "hashlib._Hash.__init__": [
    "hashlib._BlakeHash"
  ],
  "hatch.cli.terminal.Terminal.__init__": [
    "hatch.cli.application.Application"
  ],
  "hatch.cli.terminal.TerminalStatus.__enter__": [
    "hatch.cli.terminal.BorrowedStatus"
  ],
  "hatch.cli.terminal.TerminalStatus.__exit__": [
    "hatch.cli.terminal.BorrowedStatus",
    "hatch.cli.terminal.NullStatus"
  ],
  "hatch.cli.terminal.TerminalStatus.stop": [
    "hatch.cli.terminal.BorrowedStatus",
    "hatch.cli.terminal.NullStatus"
  ],
  "hatch.config.model.LazilyParsedConfig.__init__": [
    "hatch.config.model.DirsConfig",
    "hatch.config.model.LicensesConfig",
    "hatch.config.model.ProjectConfig",
    "hatch.config.model.RootConfig",
    "hatch.config.model.ShellConfig",
    "hatch.config.model.StylesConfig",
    "hatch.config.model.TemplateConfig",
    "hatch.config.model.TerminalConfig"
  ],
  "hatch.env.collectors.plugin.interface.EnvironmentCollectorInterface.finalize_config": [
    "hatch_mkdocs.plugin.MkDocsEnvironmentCollector"
  ],
  "hatch.env.collectors.plugin.interface.EnvironmentCollectorInterface.get_initial_config": [
    "hatch.env.collectors.default.DefaultEnvironmentCollector"
  ],
  "hatch.env.context.EnvironmentContextFormatterBase.formatters": [
    "hatch.env.context.EnvironmentContextFormatter"
  ],
  "hatch.env.plugin.interface.EnvironmentInterface.__init__": [
    "hatch.env.system.SystemEnvironment",
    "hatch.env.virtual.VirtualEnvironment"
  ],
  "hatch.env.plugin.interface.EnvironmentInterface.activate": [
    "hatch.env.virtual.VirtualEnvironment"
  ],
  "hatch.env.plugin.interface.EnvironmentInterface.build_environment": [
    "hatch.env.virtual.VirtualEnvironment"
  ],
  "hatch.env.plugin.interface.EnvironmentInterface.build_environment_exists": [
    "hatch.env.virtual.VirtualEnvironment"
  ],
  "hatch.env.plugin.interface.EnvironmentInterface.check_compatibility": [
    "hatch.env.virtual.VirtualEnvironment"
  ],
  "hatch.env.plugin.interface.EnvironmentInterface.command_context": [
    "hatch.env.virtual.VirtualEnvironment"
  ],
  "hatch.env.plugin.interface.EnvironmentInterface.construct_pip_install_command": [
    "hatch.env.virtual.VirtualEnvironment"
  ],
  "hatch.env.plugin.interface.EnvironmentInterface.create": [
    "hatch.env.system.SystemEnvironment",
    "hatch.env.virtual.VirtualEnvironment"
  ],
  "hatch.env.plugin.interface.EnvironmentInterface.deactivate": [
    "hatch.env.virtual.VirtualEnvironment"
  ],
  "hatch.env.plugin.interface.EnvironmentInterface.dependencies_in_sync": [
    "hatch.env.system.SystemEnvironment",
    "hatch.env.virtual.VirtualEnvironment"
  ],
  "hatch.env.plugin.interface.EnvironmentInterface.dependency_hash": [
    "hatch_pip_compile.plugin.PipCompileEnvironment"
  ],
  "hatch.env.plugin.interface.EnvironmentInterface.enter_shell": [
    "hatch.env.virtual.VirtualEnvironment"
  ],
  "hatch.env.plugin.interface.EnvironmentInterface.exists": [
    "hatch.env.system.SystemEnvironment",
    "hatch.env.virtual.VirtualEnvironment"
  ],
  "hatch.env.plugin.interface.EnvironmentInterface.find": [
    "hatch.env.system.SystemEnvironment",
    "hatch.env.virtual.VirtualEnvironment"
  ],
  "hatch.env.plugin.interface.EnvironmentInterface.get_option_types": [
    "hatch.env.virtual.VirtualEnvironment"
  ],
  "hatch.env.plugin.interface.EnvironmentInterface.install_project": [
    "hatch.env.system.SystemEnvironment",
    "hatch.env.virtual.VirtualEnvironment"
  ],
  "hatch.env.plugin.interface.EnvironmentInterface.install_project_dev_mode": [
    "hatch.env.system.SystemEnvironment",
    "hatch.env.virtual.VirtualEnvironment"
  ],
  "hatch.env.plugin.interface.EnvironmentInterface.remove": [
    "hatch.env.system.SystemEnvironment",
    "hatch.env.virtual.VirtualEnvironment"
  ],
  "hatch.env.plugin.interface.EnvironmentInterface.sync_dependencies": [
    "hatch.env.system.SystemEnvironment",
    "hatch.env.virtual.VirtualEnvironment"
  ],
  "hatch.env.virtual.VirtualEnvironment.__init__": [
    "hatch_pip_compile.plugin.PipCompileEnvironment"
  ],
  "hatch.env.virtual.VirtualEnvironment.dependencies_in_sync": [
    "hatch_pip_compile.plugin.PipCompileEnvironment"
  ],
  "hatch.env.virtual.VirtualEnvironment.get_option_types": [
    "hatch_pip_compile.plugin.PipCompileEnvironment"
  ],
  "hatch.env.virtual.VirtualEnvironment.install_project": [
    "hatch_pip_compile.plugin.PipCompileEnvironment"
  ],
  "hatch.env.virtual.VirtualEnvironment.install_project_dev_mode": [
    "hatch_pip_compile.plugin.PipCompileEnvironment"
  ],
  "hatch.env.virtual.VirtualEnvironment.sync_dependencies": [
    "hatch_pip_compile.plugin.PipCompileEnvironment"
  ],
  "hatch.publish.plugin.interface.PublisherInterface.publish": [
    "hatch.publish.index.IndexPublisher"
  ],
  "hatch.python.resolve.Distribution.python_path": [
    "hatch.python.resolve.CPythonStandaloneDistribution",
    "hatch.python.resolve.PyPyOfficialDistribution"
  ],
  "hatch.python.resolve.Distribution.version": [
    "hatch.python.resolve.CPythonStandaloneDistribution",
    "hatch.python.resolve.PyPyOfficialDistribution"
  ],
  "hatch.template.File.__init__": [
    "hatch.template.files_default.MetadataFile",
    "hatch.template.files_default.PackageRoot",
    "hatch.template.files_default.PyProject",
    "hatch.template.files_default.Readme",
    "hatch.template.files_feature_ci.CommandLinePackage",
    "hatch.template.files_feature_cli.CommandLinePackage",
    "hatch.template.files_feature_cli.PackageEntryPoint",
    "hatch.template.files_feature_tests.TestsPackageRoot"
  ],
  "hatch.template.plugin.interface.TemplateInterface.__init__": [
    "hatch.template.default.DefaultTemplate"
  ],
  "hatch.template.plugin.interface.TemplateInterface.finalize_files": [
    "hatch.template.default.DefaultTemplate"
  ],
  "hatch.template.plugin.interface.TemplateInterface.get_files": [
    "hatch.template.default.DefaultTemplate"
  ],
  "hatch.template.plugin.interface.TemplateInterface.initialize_config": [
    "hatch.template.default.DefaultTemplate"
  ],
  "hatch.venv.core.VirtualEnv.__enter__": [
    "hatch.venv.core.TempVirtualEnv"
  ],
  "hatch.venv.core.VirtualEnv.__exit__": [
    "hatch.venv.core.TempVirtualEnv"
  ],
  "hatch.venv.core.VirtualEnv.__init__": [
    "hatch.venv.core.TempVirtualEnv"
  ],
  "hatch.venv.core.VirtualEnv.create": [
    "hatch.venv.core.UVVirtualEnv"
  ],
  "hatch.venv.core.VirtualEnv.remove": [
    "hatch.venv.core.TempVirtualEnv"
  ],
  "hatch_pip_compile.installer.PluginInstaller.construct_pip_install_command": [
    "hatch_pip_compile.installer.UvInstaller"
  ],
  "hatch_pip_compile.installer.PluginInstaller.install_dependencies": [
    "hatch_pip_compile.installer.PipInstaller",
    "hatch_pip_compile.installer.PipSyncInstaller"
  ],
  "hatch_pip_compile.installer.PluginInstaller.install_project": [
    "hatch_pip_compile.installer.PipSyncInstaller"
  ],
  "hatch_pip_compile.installer.PluginInstaller.install_project_dev_mode": [
    "hatch_pip_compile.installer.PipSyncInstaller"
  ],
  "hatch_pip_compile.installer.PluginInstaller.sync_dependencies": [
    "hatch_pip_compile.installer.PipSyncInstaller"
  ],
  "hatch_pip_compile.resolver.BaseResolver.resolver_executable": [
    "hatch_pip_compile.resolver.PipCompileResolver",
    "hatch_pip_compile.resolver.UvResolver"
  ],
  "hatchling.builders.binary.BinaryBuilder.build_bootstrap": [
    "hatchling.builders.app.AppBuilder"
  ],
  "hatchling.builders.config.BuilderConfig.__init__": [
    "hatchling.builders.binary.BinaryBuilderConfig",
    "hatchling.builders.sdist.SdistBuilderConfig",
    "hatchling.builders.wheel.WheelBuilderConfig"
  ],
  "hatchling.builders.config.BuilderConfig.default_exclude": [
    "hatchling.builders.wheel.WheelBuilderConfig"
  ],
  "hatchling.builders.config.BuilderConfig.default_include": [
    "hatchling.builders.wheel.WheelBuilderConfig"
  ],
  "hatchling.builders.config.BuilderConfig.default_only_include": [
    "hatchling.builders.wheel.WheelBuilderConfig"
  ],
  "hatchling.builders.config.BuilderConfig.default_packages": [
    "hatchling.builders.wheel.WheelBuilderConfig"
  ],
  "hatchling.builders.hooks.plugin.interface.BuildHookInterface.__init__": [
    "hatchling.builders.hooks.version.VersionBuildHook"
  ],
  "hatchling.builders.hooks.plugin.interface.BuildHookInterface.initialize": [
    "hatchling.builders.hooks.version.VersionBuildHook"
  ],
  "hatchling.builders.plugin.interface.BuilderInterface.clean": [
    "hatchling.builders.binary.BinaryBuilder",
    "hatchling.builders.sdist.SdistBuilder",
    "hatchling.builders.wheel.WheelBuilder"
  ],
  "hatchling.builders.plugin.interface.BuilderInterface.get_config_class": [
    "hatchling.builders.binary.BinaryBuilder",
    "hatchling.builders.sdist.SdistBuilder",
    "hatchling.builders.wheel.WheelBuilder"
  ],
  "hatchling.builders.plugin.interface.BuilderInterface.get_default_build_data": [
    "hatchling.builders.sdist.SdistBuilder",
    "hatchling.builders.wheel.WheelBuilder"
  ],
  "hatchling.builders.plugin.interface.BuilderInterface.get_default_versions": [
    "hatchling.builders.binary.BinaryBuilder",
    "hatchling.builders.sdist.SdistBuilder",
    "hatchling.builders.wheel.WheelBuilder"
  ],
  "hatchling.builders.plugin.interface.BuilderInterface.get_version_api": [
    "hatch.cli.build.build.Builder",
    "hatchling.builders.binary.BinaryBuilder",
    "hatchling.builders.sdist.SdistBuilder",
    "hatchling.builders.wheel.WheelBuilder"
  ],
  "hatchling.plugin.manager.PluginManager.initialize": [
    "hatch.plugin.manager.PluginManager"
  ],
  "hatchling.utils.context.ContextFormatter.get_formatters": [
    "hatch.env.context.EnvironmentContextFormatter",
    "hatchling.utils.context.DefaultContextFormatter"
  ],
  "hatchling.version.scheme.plugin.interface.VersionSchemeInterface.update": [
    "hatchling.version.scheme.standard.StandardScheme"
  ],
  "hatchling.version.source.plugin.interface.VersionSourceInterface.get_version_data": [
    "hatchling.version.source.code.CodeSource",
    "hatchling.version.source.env.EnvSource",
    "hatchling.version.source.regex.RegexSource"
  ],
  "hatchling.version.source.plugin.interface.VersionSourceInterface.set_version": [
    "hatchling.version.source.code.CodeSource",
    "hatchling.version.source.env.EnvSource",
    "hatchling.version.source.regex.RegexSource"
  ],
  "html.parser.HTMLParser.__init__": [
    "contrib.search.search_index.ContentParser",
    "pip._internal.index.collector.HTMLLinkParser"
  ],
  "html.parser.HTMLParser.handle_data": [
    "contrib.search.search_index.ContentParser"
  ],
  "html.parser.HTMLParser.handle_endtag": [
    "contrib.search.search_index.ContentParser"
  ],
  "html.parser.HTMLParser.handle_starttag": [
    "contrib.search.search_index.ContentParser",
    "pip._internal.index.collector.HTMLLinkParser"
  ],
  "http.client.HTTPConnection.__init__": [
    "http.client.HTTPSConnection"
  ],
  "http.client.HTTPConnection.connect": [
    "pip._vendor.distlib.util.HTTPSConnection"
  ],
  "http.client.HTTPResponse.__init__": [
    "boto.connection.HTTPResponse"
  ],
  "http.client.HTTPResponse.read": [
    "boto.connection.HTTPResponse"
  ],
  "http.cookiejar.CookieJar.__init__": [
    "http.cookiejar.FileCookieJar"
  ],
  "http.cookiejar.CookieJar.set_cookie": [
    "pip._vendor.requests.cookies.RequestsCookieJar",
    "requests.cookies.RequestsCookieJar"
  ],
  "http.server.BaseHTTPRequestHandler.address_string": [
    "werkzeug.serving.WSGIRequestHandler"
  ],
  "http.server.BaseHTTPRequestHandler.log_error": [
    "werkzeug.serving.WSGIRequestHandler"
  ],
  "http.server.BaseHTTPRequestHandler.log_message": [
    "livereload._Handler",
    "werkzeug.serving.WSGIRequestHandler"
  ],
  "http.server.BaseHTTPRequestHandler.log_request": [
    "livereload._Handler",
    "werkzeug.serving.WSGIRequestHandler"
  ],
  "http.server.BaseHTTPRequestHandler.server_version": [
    "werkzeug.serving.WSGIRequestHandler"
  ],
  "http.server.SimpleHTTPRequestHandler.translate_path": [
    "h11.tests.test_against_stdlib_http.SingleMindedRequestHandler"
  ],
  "httpcore._async.connection_pool.AsyncConnectionPool.__init__": [
    "httpcore._async.http_proxy.AsyncHTTPProxy",
    "httpcore._async.socks_proxy.AsyncSOCKSProxy"
  ],
  "httpcore._async.connection_pool.AsyncConnectionPool.create_connection": [
    "httpcore._async.http_proxy.AsyncHTTPProxy",
    "httpcore._async.socks_proxy.AsyncSOCKSProxy"
  ],
  "httpcore._async.interfaces.AsyncConnectionInterface.aclose": [
    "httpcore._async.connection.AsyncHTTPConnection",
    "httpcore._async.http11.AsyncHTTP11Connection",
    "httpcore._async.http2.AsyncHTTP2Connection",
    "httpcore._async.http_proxy.AsyncForwardHTTPConnection",
    "httpcore._async.http_proxy.AsyncTunnelHTTPConnection",
    "httpcore._async.socks_proxy.AsyncSocks5Connection"
  ],
  "httpcore._async.interfaces.AsyncConnectionInterface.can_handle_request": [
    "httpcore._async.connection.AsyncHTTPConnection",
    "httpcore._async.http11.AsyncHTTP11Connection",
    "httpcore._async.http2.AsyncHTTP2Connection",
    "httpcore._async.http_proxy.AsyncForwardHTTPConnection",
    "httpcore._async.http_proxy.AsyncTunnelHTTPConnection",
    "httpcore._async.socks_proxy.AsyncSocks5Connection"
  ],
  "httpcore._async.interfaces.AsyncConnectionInterface.has_expired": [
    "httpcore._async.connection.AsyncHTTPConnection",
    "httpcore._async.http11.AsyncHTTP11Connection",
    "httpcore._async.http2.AsyncHTTP2Connection",
    "httpcore._async.http_proxy.AsyncForwardHTTPConnection",
    "httpcore._async.http_proxy.AsyncTunnelHTTPConnection",
    "httpcore._async.socks_proxy.AsyncSocks5Connection"
  ],
  "httpcore._async.interfaces.AsyncConnectionInterface.info": [
    "httpcore._async.connection.AsyncHTTPConnection",
    "httpcore._async.http11.AsyncHTTP11Connection",
    "httpcore._async.http2.AsyncHTTP2Connection",
    "httpcore._async.http_proxy.AsyncForwardHTTPConnection",
    "httpcore._async.http_proxy.AsyncTunnelHTTPConnection",
    "httpcore._async.socks_proxy.AsyncSocks5Connection"
  ],
  "httpcore._async.interfaces.AsyncConnectionInterface.is_available": [
    "httpcore._async.connection.AsyncHTTPConnection",
    "httpcore._async.http11.AsyncHTTP11Connection",
    "httpcore._async.http2.AsyncHTTP2Connection",
    "httpcore._async.http_proxy.AsyncForwardHTTPConnection",
    "httpcore._async.http_proxy.AsyncTunnelHTTPConnection",
    "httpcore._async.socks_proxy.AsyncSocks5Connection"
  ],
  "httpcore._async.interfaces.AsyncConnectionInterface.is_closed": [
    "httpcore._async.connection.AsyncHTTPConnection",
    "httpcore._async.http11.AsyncHTTP11Connection",
    "httpcore._async.http2.AsyncHTTP2Connection",
    "httpcore._async.http_proxy.AsyncForwardHTTPConnection",
    "httpcore._async.http_proxy.AsyncTunnelHTTPConnection",
    "httpcore._async.socks_proxy.AsyncSocks5Connection"
  ],
  "httpcore._async.interfaces.AsyncConnectionInterface.is_idle": [
    "httpcore._async.connection.AsyncHTTPConnection",
    "httpcore._async.http11.AsyncHTTP11Connection",
    "httpcore._async.http2.AsyncHTTP2Connection",
    "httpcore._async.http_proxy.AsyncForwardHTTPConnection",
    "httpcore._async.http_proxy.AsyncTunnelHTTPConnection",
    "httpcore._async.socks_proxy.AsyncSocks5Connection"
  ],
  "httpcore._async.interfaces.AsyncRequestInterface.handle_async_request": [
    "httpcore._async.connection.AsyncHTTPConnection",
    "httpcore._async.connection_pool.AsyncConnectionPool",
    "httpcore._async.http11.AsyncHTTP11Connection",
    "httpcore._async.http2.AsyncHTTP2Connection",
    "httpcore._async.http_proxy.AsyncForwardHTTPConnection",
    "httpcore._async.http_proxy.AsyncTunnelHTTPConnection",
    "httpcore._async.socks_proxy.AsyncSocks5Connection"
  ],
  "httpcore._backends.base.AsyncNetworkBackend.connect_tcp": [
    "dns._asyncio_backend._NetworkBackend",
    "dns._trio_backend._NetworkBackend",
    "httpcore._backends.anyio.AnyIOBackend",
    "httpcore._backends.auto.AutoBackend",
    "httpcore._backends.mock.AsyncMockBackend",
    "httpcore._backends.trio.TrioBackend"
  ],
  "httpcore._backends.base.AsyncNetworkBackend.connect_unix_socket": [
    "dns._asyncio_backend._NetworkBackend",
    "dns._trio_backend._NetworkBackend",
    "httpcore._backends.anyio.AnyIOBackend",
    "httpcore._backends.auto.AutoBackend",
    "httpcore._backends.mock.AsyncMockBackend",
    "httpcore._backends.trio.TrioBackend"
  ],
  "httpcore._backends.base.AsyncNetworkBackend.sleep": [
    "dns._asyncio_backend._NetworkBackend",
    "dns._trio_backend._NetworkBackend",
    "httpcore._backends.anyio.AnyIOBackend",
    "httpcore._backends.auto.AutoBackend",
    "httpcore._backends.mock.AsyncMockBackend",
    "httpcore._backends.trio.TrioBackend"
  ],
  "httpcore._backends.base.AsyncNetworkStream.aclose": [
    "httpcore._async.http11.AsyncHTTP11UpgradeStream",
    "httpcore._backends.anyio.AnyIOStream",
    "httpcore._backends.mock.AsyncMockStream",
    "httpcore._backends.trio.TrioStream"
  ],
  "httpcore._backends.base.AsyncNetworkStream.get_extra_info": [
    "httpcore._async.http11.AsyncHTTP11UpgradeStream",
    "httpcore._backends.anyio.AnyIOStream",
    "httpcore._backends.mock.AsyncMockStream",
    "httpcore._backends.trio.TrioStream"
  ],
  "httpcore._backends.base.AsyncNetworkStream.read": [
    "httpcore._async.http11.AsyncHTTP11UpgradeStream",
    "httpcore._backends.anyio.AnyIOStream",
    "httpcore._backends.mock.AsyncMockStream",
    "httpcore._backends.trio.TrioStream"
  ],
  "httpcore._backends.base.AsyncNetworkStream.start_tls": [
    "httpcore._async.http11.AsyncHTTP11UpgradeStream",
    "httpcore._backends.anyio.AnyIOStream",
    "httpcore._backends.mock.AsyncMockStream",
    "httpcore._backends.trio.TrioStream"
  ],
  "httpcore._backends.base.AsyncNetworkStream.write": [
    "httpcore._async.http11.AsyncHTTP11UpgradeStream",
    "httpcore._backends.anyio.AnyIOStream",
    "httpcore._backends.mock.AsyncMockStream",
    "httpcore._backends.trio.TrioStream"
  ],
  "httpcore._backends.base.NetworkBackend.connect_tcp": [
    "dns.query._NetworkBackend",
    "httpcore._backends.mock.MockBackend",
    "httpcore._backends.sync.SyncBackend"
  ],
  "httpcore._backends.base.NetworkBackend.connect_unix_socket": [
    "dns.query._NetworkBackend",
    "httpcore._backends.mock.MockBackend",
    "httpcore._backends.sync.SyncBackend"
  ],
  "httpcore._backends.base.NetworkBackend.sleep": [
    "httpcore._backends.mock.MockBackend"
  ],
  "httpcore._backends.base.NetworkStream.close": [
    "httpcore._backends.mock.MockStream",
    "httpcore._backends.sync.SyncStream",
    "httpcore._backends.sync.TLSinTLSStream",
    "httpcore._sync.http11.HTTP11UpgradeStream"
  ],
  "httpcore._backends.base.NetworkStream.get_extra_info": [
    "httpcore._backends.mock.MockStream",
    "httpcore._backends.sync.SyncStream",
    "httpcore._backends.sync.TLSinTLSStream",
    "httpcore._sync.http11.HTTP11UpgradeStream"
  ],
  "httpcore._backends.base.NetworkStream.read": [
    "httpcore._backends.mock.MockStream",
    "httpcore._backends.sync.SyncStream",
    "httpcore._backends.sync.TLSinTLSStream",
    "httpcore._sync.http11.HTTP11UpgradeStream"
  ],
  "httpcore._backends.base.NetworkStream.start_tls": [
    "httpcore._backends.mock.MockStream",
    "httpcore._backends.sync.SyncStream",
    "httpcore._backends.sync.TLSinTLSStream",
    "httpcore._sync.http11.HTTP11UpgradeStream"
  ],
  "httpcore._backends.base.NetworkStream.write": [
    "httpcore._backends.mock.MockStream",
    "httpcore._backends.sync.SyncStream",
    "httpcore._backends.sync.TLSinTLSStream",
    "httpcore._sync.http11.HTTP11UpgradeStream"
  ],
  "httpcore._sync.connection_pool.ConnectionPool.__init__": [
    "httpcore._sync.http_proxy.HTTPProxy",
    "httpcore._sync.socks_proxy.SOCKSProxy"
  ],
  "httpcore._sync.connection_pool.ConnectionPool.create_connection": [
    "httpcore._sync.http_proxy.HTTPProxy",
    "httpcore._sync.socks_proxy.SOCKSProxy"
  ],
  "httpcore._sync.interfaces.ConnectionInterface.can_handle_request": [
    "httpcore._sync.connection.HTTPConnection",
    "httpcore._sync.http11.HTTP11Connection",
    "httpcore._sync.http2.HTTP2Connection",
    "httpcore._sync.http_proxy.ForwardHTTPConnection",
    "httpcore._sync.http_proxy.TunnelHTTPConnection",
    "httpcore._sync.socks_proxy.Socks5Connection"
  ],
  "httpcore._sync.interfaces.ConnectionInterface.close": [
    "httpcore._sync.connection.HTTPConnection",
    "httpcore._sync.http11.HTTP11Connection",
    "httpcore._sync.http2.HTTP2Connection",
    "httpcore._sync.http_proxy.ForwardHTTPConnection",
    "httpcore._sync.http_proxy.TunnelHTTPConnection",
    "httpcore._sync.socks_proxy.Socks5Connection"
  ],
  "httpcore._sync.interfaces.ConnectionInterface.has_expired": [
    "httpcore._sync.connection.HTTPConnection",
    "httpcore._sync.http11.HTTP11Connection",
    "httpcore._sync.http2.HTTP2Connection",
    "httpcore._sync.http_proxy.ForwardHTTPConnection",
    "httpcore._sync.http_proxy.TunnelHTTPConnection",
    "httpcore._sync.socks_proxy.Socks5Connection"
  ],
  "httpcore._sync.interfaces.ConnectionInterface.info": [
    "httpcore._sync.connection.HTTPConnection",
    "httpcore._sync.http11.HTTP11Connection",
    "httpcore._sync.http2.HTTP2Connection",
    "httpcore._sync.http_proxy.ForwardHTTPConnection",
    "httpcore._sync.http_proxy.TunnelHTTPConnection",
    "httpcore._sync.socks_proxy.Socks5Connection"
  ],
  "httpcore._sync.interfaces.ConnectionInterface.is_available": [
    "httpcore._sync.connection.HTTPConnection",
    "httpcore._sync.http11.HTTP11Connection",
    "httpcore._sync.http2.HTTP2Connection",
    "httpcore._sync.http_proxy.ForwardHTTPConnection",
    "httpcore._sync.http_proxy.TunnelHTTPConnection",
    "httpcore._sync.socks_proxy.Socks5Connection"
  ],
  "httpcore._sync.interfaces.ConnectionInterface.is_closed": [
    "httpcore._sync.connection.HTTPConnection",
    "httpcore._sync.http11.HTTP11Connection",
    "httpcore._sync.http2.HTTP2Connection",
    "httpcore._sync.http_proxy.ForwardHTTPConnection",
    "httpcore._sync.http_proxy.TunnelHTTPConnection",
    "httpcore._sync.socks_proxy.Socks5Connection"
  ],
  "httpcore._sync.interfaces.ConnectionInterface.is_idle": [
    "httpcore._sync.connection.HTTPConnection",
    "httpcore._sync.http11.HTTP11Connection",
    "httpcore._sync.http2.HTTP2Connection",
    "httpcore._sync.http_proxy.ForwardHTTPConnection",
    "httpcore._sync.http_proxy.TunnelHTTPConnection",
    "httpcore._sync.socks_proxy.Socks5Connection"
  ],
  "httpcore._sync.interfaces.RequestInterface.handle_request": [
    "httpcore._sync.connection.HTTPConnection",
    "httpcore._sync.connection_pool.ConnectionPool",
    "httpcore._sync.http11.HTTP11Connection",
    "httpcore._sync.http2.HTTP2Connection",
    "httpcore._sync.http_proxy.ForwardHTTPConnection",
    "httpcore._sync.http_proxy.TunnelHTTPConnection",
    "httpcore._sync.socks_proxy.Socks5Connection"
  ],
  "httpx._auth.Auth.auth_flow": [
    "httpx._auth.BasicAuth",
    "httpx._auth.DigestAuth",
    "httpx._auth.FunctionAuth",
    "httpx._auth.NetRCAuth"
  ],
  "httpx._client.BaseClient.__init__": [
    "httpx._client.AsyncClient",
    "httpx._client.Client"
  ],
  "httpx._decoders.ContentDecoder.decode": [
    "httpx._decoders.BrotliDecoder",
    "httpx._decoders.DeflateDecoder",
    "httpx._decoders.GZipDecoder",
    "httpx._decoders.IdentityDecoder",
    "httpx._decoders.MultiDecoder",
    "httpx._decoders.ZStandardDecoder"
  ],
  "httpx._decoders.ContentDecoder.flush": [
    "httpx._decoders.BrotliDecoder",
    "httpx._decoders.DeflateDecoder",
    "httpx._decoders.GZipDecoder",
    "httpx._decoders.IdentityDecoder",
    "httpx._decoders.MultiDecoder",
    "httpx._decoders.ZStandardDecoder"
  ],
  "httpx._exceptions.HTTPError.__init__": [
    "httpx._exceptions.HTTPStatusError",
    "httpx._exceptions.RequestError"
  ],
  "httpx._exceptions.StreamError.__init__": [
    "httpx._exceptions.RequestNotRead",
    "httpx._exceptions.ResponseNotRead",
    "httpx._exceptions.StreamClosed",
    "httpx._exceptions.StreamConsumed"
  ],
  "httpx._transports.base.AsyncBaseTransport.__aenter__": [
    "httpx._transports.default.AsyncHTTPTransport"
  ],
  "httpx._transports.base.AsyncBaseTransport.__aexit__": [
    "httpx._transports.default.AsyncHTTPTransport"
  ],
  "httpx._transports.base.AsyncBaseTransport.aclose": [
    "httpx._transports.default.AsyncHTTPTransport"
  ],
  "httpx._transports.base.AsyncBaseTransport.handle_async_request": [
    "httpx._transports.asgi.ASGITransport",
    "httpx._transports.default.AsyncHTTPTransport",
    "httpx._transports.mock.MockTransport"
  ],
  "httpx._transports.base.BaseTransport.__enter__": [
    "httpx._transports.default.HTTPTransport"
  ],
  "httpx._transports.base.BaseTransport.__exit__": [
    "httpx._transports.default.HTTPTransport"
  ],
  "httpx._transports.base.BaseTransport.close": [
    "httpx._transports.default.HTTPTransport"
  ],
  "httpx._transports.base.BaseTransport.handle_request": [
    "httpx._transports.default.HTTPTransport",
    "httpx._transports.mock.MockTransport",
    "httpx._transports.wsgi.WSGITransport"
  ],
  "httpx._transports.default.AsyncHTTPTransport.__init__": [
    "dns._asyncio_backend._HTTPTransport",
    "dns._trio_backend._HTTPTransport"
  ],
  "httpx._types.AsyncByteStream.__aiter__": [
    "httpx._client.BoundAsyncStream",
    "httpx._content.AsyncIteratorByteStream",
    "httpx._content.ByteStream",
    "httpx._content.UnattachedStream",
    "httpx._multipart.MultipartStream",
    "httpx._transports.asgi.ASGIResponseStream",
    "httpx._transports.default.AsyncResponseStream"
  ],
  "httpx._types.AsyncByteStream.aclose": [
    "httpx._client.BoundAsyncStream",
    "httpx._transports.default.AsyncResponseStream"
  ],
  "httpx._types.SyncByteStream.__iter__": [
    "httpx._client.BoundSyncStream",
    "httpx._content.ByteStream",
    "httpx._content.IteratorByteStream",
    "httpx._content.UnattachedStream",
    "httpx._multipart.MultipartStream",
    "httpx._transports.default.ResponseStream",
    "httpx._transports.wsgi.WSGIByteStream"
  ],
  "httpx._types.SyncByteStream.close": [
    "httpx._client.BoundSyncStream",
    "httpx._transports.default.ResponseStream",
    "httpx._transports.wsgi.WSGIByteStream"
  ],
  "imaplib.IMAP4.__init__": [
    "imaplib.IMAP4_SSL",
    "imaplib.IMAP4_stream"
  ],
  "imaplib.IMAP4.open": [
    "imaplib.IMAP4_SSL",
    "imaplib.IMAP4_stream"
  ],
  "importlib._abc.Loader.create_module": [
    "importlib.machinery.BuiltinImporter",
    "importlib.machinery.ExtensionFileLoader",
    "importlib.machinery.FrozenImporter",
    "importlib.machinery.NamespaceLoader"
  ],
  "importlib._abc.Loader.exec_module": [
    "importlib.abc.InspectLoader",
    "importlib.util.LazyLoader"
  ],
  "importlib._abc.Loader.load_module": [
    "importlib.abc.FileLoader",
    "importlib.machinery.BuiltinImporter",
    "importlib.machinery.FrozenImporter",
    "importlib.machinery.NamespaceLoader"
  ],
  "importlib.abc.ExecutionLoader.get_filename": [
    "importlib.abc.FileLoader",
    "importlib.machinery.ExtensionFileLoader"
  ],
  "importlib.abc.InspectLoader.exec_module": [
    "importlib.machinery.BuiltinImporter",
    "importlib.machinery.ExtensionFileLoader",
    "importlib.machinery.FrozenImporter",
    "importlib.machinery.NamespaceLoader",
    "typeguard.importhook.TypeguardLoader"
  ],
  "importlib.abc.InspectLoader.get_code": [
    "importlib.machinery.BuiltinImporter",
    "importlib.machinery.ExtensionFileLoader",
    "importlib.machinery.FrozenImporter",
    "importlib.machinery.NamespaceLoader"
  ],
  "importlib.abc.InspectLoader.get_source": [
    "importlib.abc.SourceLoader",
    "importlib.machinery.BuiltinImporter",
    "importlib.machinery.ExtensionFileLoader",
    "importlib.machinery.FrozenImporter",
    "importlib.machinery.NamespaceLoader"
  ],
  "importlib.abc.InspectLoader.is_package": [
    "importlib.machinery.BuiltinImporter",
    "importlib.machinery.FrozenImporter",
    "importlib.machinery.NamespaceLoader"
  ],
  "importlib.abc.InspectLoader.source_to_code": [
    "typeguard.importhook.TypeguardLoader"
  ],
  "importlib.abc.MetaPathFinder.find_spec": [
    "importlib.machinery.BuiltinImporter",
    "importlib.machinery.FrozenImporter",
    "importlib.machinery.WindowsRegistryFinder",
    "typeguard.importhook.TypeguardFinder"
  ],
  "importlib.abc.MetaPathFinder.invalidate_caches": [
    "importlib.metadata.MetadataPathFinder"
  ],
  "importlib.abc.ResourceLoader.get_data": [
    "importlib.abc.FileLoader"
  ],
  "importlib.abc.ResourceReader.contents": [
    "importlib.abc.TraversableResources"
  ],
  "importlib.abc.ResourceReader.is_resource": [
    "importlib.abc.TraversableResources"
  ],
  "importlib.abc.ResourceReader.open_resource": [
    "importlib.abc.TraversableResources"
  ],
  "importlib.abc.ResourceReader.resource_path": [
    "importlib.abc.TraversableResources"
  ],
  "importlib.abc.SourceLoader.set_data": [
    "importlib.machinery.SourceFileLoader"
  ],
  "importlib.abc.Traversable.is_dir": [
    "importlib.readers.MultiplexedPath",
    "importlib.resources.simple.ResourceContainer",
    "importlib.resources.simple.ResourceHandle"
  ],
  "importlib.abc.Traversable.is_file": [
    "importlib.readers.MultiplexedPath",
    "importlib.resources.simple.ResourceContainer",
    "importlib.resources.simple.ResourceHandle"
  ],
  "importlib.abc.Traversable.iterdir": [
    "importlib.readers.MultiplexedPath",
    "importlib.resources.simple.ResourceContainer"
  ],
  "importlib.abc.Traversable.joinpath": [
    "importlib.readers.MultiplexedPath",
    "importlib.resources.simple.ResourceHandle"
  ],
  "importlib.abc.Traversable.name": [
    "importlib.readers.MultiplexedPath"
  ],
  "importlib.abc.Traversable.open": [
    "importlib.readers.MultiplexedPath",
    "importlib.resources.simple.ResourceContainer",
    "importlib.resources.simple.ResourceHandle"
  ],
  "importlib.abc.Traversable.read_bytes": [
    "importlib.readers.MultiplexedPath"
  ],
  "importlib.abc.Traversable.read_text": [
    "importlib.readers.MultiplexedPath"
  ],
  "importlib.abc.TraversableResources.files": [
    "importlib.readers.FileReader",
    "importlib.readers.NamespaceReader",
    "importlib.readers.ZipReader",
    "importlib.resources.simple.TraversableReader"
  ],
  "importlib.abc.TraversableResources.is_resource": [
    "importlib.readers.ZipReader"
  ],
  "importlib.abc.TraversableResources.open_resource": [
    "importlib.readers.ZipReader"
  ],
  "importlib.abc.TraversableResources.resource_path": [
    "importlib.readers.FileReader",
    "importlib.readers.NamespaceReader"
  ],
  "importlib.metadata.Distribution.locate_file": [
    "importlib.metadata.PathDistribution",
    "pip._internal.metadata.importlib._dists.WheelDistribution"
  ],
  "importlib.metadata.Distribution.read_text": [
    "importlib.metadata.PathDistribution",
    "pip._internal.metadata.importlib._dists.WheelDistribution"
  ],
  "importlib.metadata.DistributionFinder.find_distributions": [
    "importlib.metadata.MetadataPathFinder"
  ],
  "inspect._FrameInfo.__new__": [
    "inspect.FrameInfo"
  ],
  "inspect._Traceback.__new__": [
    "inspect.Traceback"
  ],
  "io.BufferedIOBase.read": [
    "bz2.BZ2File",
    "gzip.GzipFile",
    "http.client.HTTPResponse",
    "lzma.LZMAFile",
    "zipfile.ZipExtFile"
  ],
  "io.BufferedIOBase.read1": [
    "bz2.BZ2File",
    "gzip.GzipFile",
    "http.client.HTTPResponse",
    "io.BytesIO",
    "lzma.LZMAFile",
    "zipfile.ZipExtFile"
  ],
  "io.BufferedIOBase.readinto": [
    "bz2.BZ2File",
    "http.client.HTTPResponse"
  ],
  "io.BufferedIOBase.write": [
    "bz2.BZ2File",
    "gzip.GzipFile",
    "io.BufferedWriter",
    "lzma.LZMAFile"
  ],
  "io.BufferedReader.__enter__": [
    "io.BufferedRandom"
  ],
  "io.BufferedReader.__init__": [
    "tarfile.ExFileObject"
  ],
  "io.IOBase.__del__": [
    "click._compat._NonClosingTextIOWrapper"
  ],
  "io.IOBase.__enter__": [
    "bz2.BZ2File",
    "http.client.HTTPResponse",
    "io.BufferedReader",
    "io.BufferedWriter",
    "io.BytesIO",
    "io.FileIO",
    "io.TextIOWrapper",
    "lzma.LZMAFile",
    "pip._vendor.distlib.compat.ZipExtFile",
    "pip._vendor.rich.progress._Reader",
    "rich.progress._Reader"
  ],
  "io.IOBase.__exit__": [
    "http.client.HTTPResponse",
    "pip._vendor.distlib.compat.ZipExtFile",
    "pip._vendor.rich.progress._Reader",
    "rich.progress._Reader"
  ],
  "io.IOBase.__iter__": [
    "http.client.HTTPResponse",
    "io.TextIOBase",
    "pip._vendor.rich.progress._Reader",
    "pip._vendor.urllib3.response.HTTPResponse",
    "rich.progress._Reader"
  ],
  "io.IOBase.__next__": [
    "io.TextIOBase",
    "pip._vendor.rich.progress._Reader",
    "rich.progress._Reader"
  ],
  "io.IOBase.close": [
    "gzip.GzipFile",
    "os._wrap_close",
    "pip._vendor.pygments.util.UnclosingTextIOWrapper",
    "pip._vendor.rich.progress._Reader",
    "pip._vendor.urllib3.response.HTTPResponse",
    "rich.progress._Reader"
  ],
  "io.IOBase.closed": [
    "io.TextIOWrapper",
    "pip._vendor.rich.progress._Reader",
    "pip._vendor.urllib3.response.HTTPResponse",
    "rich.progress._Reader"
  ],
  "io.IOBase.fileno": [
    "gzip.GzipFile",
    "pip._vendor.rich.file_proxy.FileProxy",
    "pip._vendor.rich.progress._Reader",
    "pip._vendor.urllib3.response.HTTPResponse",
    "rich.file_proxy.FileProxy",
    "rich.progress._Reader"
  ],
  "io.IOBase.flush": [
    "gzip.GzipFile",
    "pip._vendor.rich.file_proxy.FileProxy",
    "pip._vendor.urllib3.response.HTTPResponse",
    "rich.file_proxy.FileProxy"
  ],
  "io.IOBase.isatty": [
    "click._compat._NonClosingTextIOWrapper",
    "click._winconsole._WindowsConsoleRawIOBase",
    "pip._vendor.rich.progress._Reader",
    "rich.progress._Reader"
  ],
  "io.IOBase.read": [
    "io.BufferedIOBase",
    "io.RawIOBase",
    "io.TextIOBase",
    "pip._vendor.urllib3.response.HTTPResponse"
  ],
  "io.IOBase.readable": [
    "click._winconsole._WindowsConsoleReader",
    "pip._vendor.rich.progress._Reader",
    "pip._vendor.urllib3.response.HTTPResponse",
    "rich.progress._Reader",
    "werkzeug.serving.DechunkedInput",
    "werkzeug.wsgi.LimitedStream"
  ],
  "io.IOBase.readline": [
    "bz2.BZ2File",
    "gzip.GzipFile",
    "http.client.HTTPResponse",
    "io.TextIOBase",
    "lzma.LZMAFile",
    "pip._vendor.rich.progress._Reader",
    "rich.progress._Reader",
    "zipfile.ZipExtFile"
  ],
  "io.IOBase.readlines": [
    "bz2.BZ2File",
    "io.TextIOBase",
    "pip._vendor.rich.progress._Reader",
    "rich.progress._Reader"
  ],
  "io.IOBase.seek": [
    "_compression.DecompressReader",
    "bz2.BZ2File",
    "gzip.GzipFile",
    "io.BufferedRandom",
    "io.TextIOWrapper",
    "lzma.LZMAFile",
    "pip._vendor.rich.progress._Reader",
    "rich.progress._Reader",
    "zipfile.ZipExtFile"
  ],
  "io.IOBase.seekable": [
    "pip._vendor.rich.progress._Reader",
    "rich.progress._Reader"
  ],
  "io.IOBase.tell": [
    "pip._vendor.rich.progress._Reader",
    "pip._vendor.urllib3.response.HTTPResponse",
    "rich.progress._Reader",
    "werkzeug.wsgi.LimitedStream"
  ],
  "io.IOBase.writable": [
    "click._winconsole._WindowsConsoleWriter",
    "pip._vendor.rich.progress._Reader",
    "rich.progress._Reader"
  ],
  "io.IOBase.write": [
    "io.BufferedIOBase",
    "io.RawIOBase",
    "io.TextIOBase"
  ],
  "io.IOBase.writelines": [
    "bz2.BZ2File",
    "io.TextIOBase",
    "pip._vendor.rich.progress._Reader",
    "rich.progress._Reader"
  ],
  "io.RawIOBase.read": [
    "_compression.DecompressReader",
    "pip._vendor.rich.progress._Reader",
    "rich.progress._Reader"
  ],
  "io.RawIOBase.readall": [
    "werkzeug.wsgi.LimitedStream"
  ],
  "io.RawIOBase.readinto": [
    "_compression.DecompressReader",
    "click._winconsole._WindowsConsoleReader",
    "pip._vendor.rich.progress._Reader",
    "rich.progress._Reader",
    "socket.SocketIO",
    "werkzeug.serving.DechunkedInput",
    "werkzeug.wsgi.LimitedStream"
  ],
  "io.RawIOBase.write": [
    "click._winconsole._WindowsConsoleWriter",
    "pip._vendor.rich.progress._Reader",
    "rich.progress._Reader",
    "socket.SocketIO"
  ],
  "io.TextIOBase.__iter__": [
    "io.TextIOWrapper"
  ],
  "io.TextIOBase.__next__": [
    "io.TextIOWrapper"
  ],
  "io.TextIOBase.detach": [
    "io.TextIOWrapper"
  ],
  "io.TextIOBase.encoding": [
    "pip._internal.utils.misc.StreamWrapper"
  ],
  "io.TextIOBase.readline": [
    "io.TextIOWrapper"
  ],
  "io.TextIOBase.readlines": [
    "io.TextIOWrapper"
  ],
  "io.TextIOBase.write": [
    "pip._vendor.rich.file_proxy.FileProxy",
    "rich.file_proxy.FileProxy"
  ],
  "io.TextIOBase.writelines": [
    "io.TextIOWrapper"
  ],
  "io.TextIOWrapper.__init__": [
    "click._compat._NonClosingTextIOWrapper",
    "click.testing._NamedTextIOWrapper",
    "io.StringIO",
    "os._wrap_close"
  ],
  "ipaddress.IPv6Address.__eq__": [
    "ipaddress.IPv6Interface"
  ],
  "ipaddress.IPv6Address.__hash__": [
    "ipaddress.IPv6Interface"
  ],
  "itsdangerous.exc.BadData.__init__": [
    "itsdangerous.exc.BadPayload",
    "itsdangerous.exc.BadSignature"
  ],
  "itsdangerous.exc.BadSignature.__init__": [
    "itsdangerous.exc.BadHeader",
    "itsdangerous.exc.BadTimeSignature"
  ],
  "itsdangerous.serializer.Serializer.dump_payload": [
    "itsdangerous.url_safe.URLSafeSerializerMixin"
  ],
  "itsdangerous.serializer.Serializer.iter_unsigners": [
    "itsdangerous.timed.TimedSerializer"
  ],
  "itsdangerous.serializer.Serializer.load_payload": [
    "itsdangerous.url_safe.URLSafeSerializerMixin"
  ],
  "itsdangerous.serializer.Serializer.loads": [
    "itsdangerous.timed.TimedSerializer"
  ],
  "itsdangerous.serializer.Serializer.loads_unsafe": [
    "itsdangerous.timed.TimedSerializer"
  ],
  "itsdangerous.signer.Signer.sign": [
    "itsdangerous.timed.TimestampSigner"
  ],
  "itsdangerous.signer.Signer.unsign": [
    "itsdangerous.timed.TimestampSigner"
  ],
  "itsdangerous.signer.Signer.validate": [
    "itsdangerous.timed.TimestampSigner"
  ],
  "itsdangerous.signer.SigningAlgorithm.get_signature": [
    "itsdangerous.signer.HMACAlgorithm",
    "itsdangerous.signer.NoneAlgorithm"
  ],
  "jinja2.bccache.BytecodeCache.clear": [
    "jinja2.bccache.FileSystemBytecodeCache"
  ],
  "jinja2.bccache.BytecodeCache.dump_bytecode": [
    "jinja2.bccache.FileSystemBytecodeCache",
    "jinja2.bccache.MemcachedBytecodeCache"
  ],
  "jinja2.bccache.BytecodeCache.load_bytecode": [
    "jinja2.bccache.FileSystemBytecodeCache",
    "jinja2.bccache.MemcachedBytecodeCache"
  ],
  "jinja2.compiler.CodeGenerator.__init__": [
    "jinja2.meta.TrackingCodeGenerator"
  ],
  "jinja2.compiler.CodeGenerator._default_finalize": [
    "jinja2.nativetypes.NativeCodeGenerator"
  ],
  "jinja2.compiler.CodeGenerator._output_child_post": [
    "jinja2.nativetypes.NativeCodeGenerator"
  ],
  "jinja2.compiler.CodeGenerator._output_child_pre": [
    "jinja2.nativetypes.NativeCodeGenerator"
  ],
  "jinja2.compiler.CodeGenerator._output_child_to_const": [
    "jinja2.nativetypes.NativeCodeGenerator"
  ],
  "jinja2.compiler.CodeGenerator._output_const_repr": [
    "jinja2.nativetypes.NativeCodeGenerator"
  ],
  "jinja2.compiler.CodeGenerator.enter_frame": [
    "jinja2.meta.TrackingCodeGenerator"
  ],
  "jinja2.compiler.CodeGenerator.write": [
    "jinja2.meta.TrackingCodeGenerator"
  ],
  "jinja2.environment.Environment.__init__": [
    "flask.templating.Environment",
    "jinja2.sandbox.SandboxedEnvironment"
  ],
  "jinja2.environment.Environment.getattr": [
    "jinja2.sandbox.SandboxedEnvironment"
  ],
  "jinja2.environment.Environment.getitem": [
    "jinja2.sandbox.SandboxedEnvironment"
  ],
  "jinja2.environment.Template.render": [
    "jinja2.nativetypes.NativeTemplate"
  ],
  "jinja2.environment.Template.render_async": [
    "jinja2.nativetypes.NativeTemplate"
  ],
  "jinja2.exceptions.TemplateError.__init__": [
    "jinja2.exceptions.TemplateSyntaxError"
  ],
  "jinja2.exceptions.TemplateNotFound.__init__": [
    "jinja2.exceptions.TemplatesNotFound"
  ],
  "jinja2.ext.Extension.__init__": [
    "jinja2.ext.InternationalizationExtension"
  ],
  "jinja2.ext.Extension.parse": [
    "jinja2.ext.DebugExtension",
    "jinja2.ext.ExprStmtExtension",
    "jinja2.ext.InternationalizationExtension",
    "jinja2.ext.LoopControlExtension"
  ],
  "jinja2.ext.InternationalizationExtension.__init__": [
    "localization.NoBabelExtension"
  ],
  "jinja2.loaders.BaseLoader.get_source": [
    "flask.templating.DispatchingJinjaLoader",
    "jinja2.loaders.ChoiceLoader",
    "jinja2.loaders.DictLoader",
    "jinja2.loaders.FileSystemLoader",
    "jinja2.loaders.FunctionLoader",
    "jinja2.loaders.PackageLoader",
    "jinja2.loaders.PrefixLoader"
  ],
  "jinja2.loaders.BaseLoader.list_templates": [
    "flask.templating.DispatchingJinjaLoader",
    "jinja2.loaders.ChoiceLoader",
    "jinja2.loaders.DictLoader",
    "jinja2.loaders.FileSystemLoader",
    "jinja2.loaders.PackageLoader",
    "jinja2.loaders.PrefixLoader"
  ],
  "jinja2.loaders.BaseLoader.load": [
    "jinja2.loaders.ChoiceLoader",
    "jinja2.loaders.ModuleLoader",
    "jinja2.loaders.PrefixLoader"
  ],
  "jinja2.nodes.BinExpr.as_const": [
    "jinja2.nodes.And",
    "jinja2.nodes.Or"
  ],
  "jinja2.nodes.Expr.as_const": [
    "jinja2.nodes.BinExpr",
    "jinja2.nodes.Compare",
    "jinja2.nodes.Concat",
    "jinja2.nodes.CondExpr",
    "jinja2.nodes.Const",
    "jinja2.nodes.Dict",
    "jinja2.nodes.Getattr",
    "jinja2.nodes.Getitem",
    "jinja2.nodes.List",
    "jinja2.nodes.MarkSafe",
    "jinja2.nodes.MarkSafeIfAutoescape",
    "jinja2.nodes.Slice",
    "jinja2.nodes.TemplateData",
    "jinja2.nodes.Tuple",
    "jinja2.nodes.UnaryExpr",
    "jinja2.nodes._FilterTestCommon"
  ],
  "jinja2.nodes.Expr.can_assign": [
    "jinja2.nodes.NSRef",
    "jinja2.nodes.Name",
    "jinja2.nodes.Tuple"
  ],
  "jinja2.nodes._FilterTestCommon.as_const": [
    "jinja2.nodes.Filter"
  ],
  "jinja2.runtime.LoopContext._peek_next": [
    "jinja2.runtime.AsyncLoopContext"
  ],
  "jinja2.runtime.LoopContext._to_iterator": [
    "jinja2.runtime.AsyncLoopContext"
  ],
  "jinja2.runtime.LoopContext.last": [
    "jinja2.runtime.AsyncLoopContext"
  ],
  "jinja2.runtime.LoopContext.length": [
    "jinja2.runtime.AsyncLoopContext"
  ],
  "jinja2.runtime.LoopContext.nextitem": [
    "jinja2.runtime.AsyncLoopContext"
  ],
  "jinja2.runtime.LoopContext.revindex": [
    "jinja2.runtime.AsyncLoopContext"
  ],
  "jinja2.runtime.LoopContext.revindex0": [
    "jinja2.runtime.AsyncLoopContext"
  ],
  "jinja2.runtime.Undefined.__getattr__": [
    "jinja2.runtime.ChainableUndefined"
  ],
  "jinja2.runtime.Undefined.__getitem__": [
    "jinja2.runtime.ChainableUndefined"
  ],
  "jinja2.runtime.Undefined.__str__": [
    "jinja2.runtime.DebugUndefined"
  ],
  "jinja2.sandbox.SandboxedEnvironment.is_safe_attribute": [
    "jinja2.sandbox.ImmutableSandboxedEnvironment"
  ],
  "jinja2.visitor.NodeTransformer.generic_visit": [
    "jinja2.optimizer.Optimizer"
  ],
  "jinja2.visitor.NodeVisitor.generic_visit": [
    "jinja2.idtracking.RootVisitor",
    "jinja2.visitor.NodeTransformer"
  ],
  "json.encoder.JSONEncoder.default": [
    "cbor2.tool.DefaultEncoder",
    "dataclasses_json.core._ExtendedEncoder"
  ],
  "keyring.backend.Crypter.decrypt": [
    "keyring.backend.NullCrypter"
  ],
  "keyring.backend.Crypter.encrypt": [
    "keyring.backend.NullCrypter"
  ],
  "keyring.backend.KeyringBackend.__init__": [
    "keyring.backends.kwallet.DBusKeyring"
  ],
  "keyring.backend.KeyringBackend.delete_password": [
    "keyring.backends.SecretService.Keyring",
    "keyring.backends.Windows.WinVaultKeyring",
    "keyring.backends.chainer.ChainerBackend",
    "keyring.backends.kwallet.DBusKeyring",
    "keyring.backends.libsecret.Keyring",
    "keyring.backends.macOS.Keyring"
  ],
  "keyring.backend.KeyringBackend.get_credential": [
    "keyring.backends.SecretService.Keyring",
    "keyring.backends.Windows.WinVaultKeyring",
    "keyring.backends.chainer.ChainerBackend",
    "keyring.backends.kwallet.DBusKeyring",
    "keyring.backends.libsecret.Keyring"
  ],
  "keyring.backend.KeyringBackend.get_password": [
    "keyring.backends.SecretService.Keyring",
    "keyring.backends.Windows.WinVaultKeyring",
    "keyring.backends.chainer.ChainerBackend",
    "keyring.backends.fail.Keyring",
    "keyring.backends.kwallet.DBusKeyring",
    "keyring.backends.libsecret.Keyring",
    "keyring.backends.macOS.Keyring",
    "keyring.backends.null.Keyring"
  ],
  "keyring.backend.KeyringBackend.priority": [
    "keyring.backends.SecretService.Keyring",
    "keyring.backends.Windows.WinVaultKeyring",
    "keyring.backends.chainer.ChainerBackend",
    "keyring.backends.fail.Keyring",
    "keyring.backends.kwallet.DBusKeyring",
    "keyring.backends.libsecret.Keyring",
    "keyring.backends.macOS.Keyring",
    "keyring.backends.null.Keyring"
  ],
  "keyring.backend.KeyringBackend.set_password": [
    "keyring.backends.SecretService.Keyring",
    "keyring.backends.Windows.WinVaultKeyring",
    "keyring.backends.chainer.ChainerBackend",
    "keyring.backends.kwallet.DBusKeyring",
    "keyring.backends.libsecret.Keyring",
    "keyring.backends.macOS.Keyring"
  ],
  "keyring.backends.kwallet.DBusKeyring.priority": [
    "keyring.backends.kwallet.DBusKeyringKWallet4"
  ],
  "keyring.credentials.Credential._vars": [
    "keyring.credentials.AnonymousCredential"
  ],
  "keyring.credentials.Credential.password": [
    "keyring.credentials.EnvironCredential",
    "keyring.credentials.SimpleCredential"
  ],
  "keyring.credentials.Credential.username": [
    "keyring.credentials.EnvironCredential",
    "keyring.credentials.SimpleCredential"
  ],
  "keyring.credentials.SimpleCredential.__init__": [
    "keyring.credentials.AnonymousCredential"
  ],
  "keyring.credentials.SimpleCredential.username": [
    "keyring.credentials.AnonymousCredential"
  ],
  "ldap3.abstract.cursor.Cursor.__init__": [
    "ldap3.abstract.cursor.Reader",
    "ldap3.abstract.cursor.Writer"
  ],
  "ldap3.abstract.entry.EntryBase.__getattr__": [
    "ldap3.abstract.entry.WritableEntry"
  ],
  "ldap3.abstract.entry.EntryBase.__setattr__": [
    "ldap3.abstract.entry.WritableEntry"
  ],
  "ldap3.extend.ExtendedOperationContainer.__init__": [
    "ldap3.extend.ExtendedOperationsRoot"
  ],
  "ldap3.extend.operation.ExtendedOperation.__init__": [
    "ldap3.extend.novell.endTransaction.EndTransaction",
    "ldap3.extend.novell.listReplicas.ListReplicas",
    "ldap3.extend.novell.nmasGetUniversalPassword.NmasGetUniversalPassword",
    "ldap3.extend.novell.nmasSetUniversalPassword.NmasSetUniversalPassword",
    "ldap3.extend.novell.partition_entry_count.PartitionEntryCount",
    "ldap3.extend.novell.replicaInfo.ReplicaInfo",
    "ldap3.extend.novell.startTransaction.StartTransaction",
    "ldap3.extend.standard.modifyPassword.ModifyPassword"
  ],
  "ldap3.extend.operation.ExtendedOperation.config": [
    "ldap3.extend.novell.endTransaction.EndTransaction",
    "ldap3.extend.novell.getBindDn.GetBindDn",
    "ldap3.extend.novell.listReplicas.ListReplicas",
    "ldap3.extend.novell.nmasGetUniversalPassword.NmasGetUniversalPassword",
    "ldap3.extend.novell.nmasSetUniversalPassword.NmasSetUniversalPassword",
    "ldap3.extend.novell.partition_entry_count.PartitionEntryCount",
    "ldap3.extend.novell.replicaInfo.ReplicaInfo",
    "ldap3.extend.novell.startTransaction.StartTransaction",
    "ldap3.extend.standard.modifyPassword.ModifyPassword",
    "ldap3.extend.standard.whoAmI.WhoAmI"
  ],
  "ldap3.extend.operation.ExtendedOperation.populate_result": [
    "ldap3.extend.novell.endTransaction.EndTransaction",
    "ldap3.extend.novell.getBindDn.GetBindDn",
    "ldap3.extend.novell.listReplicas.ListReplicas",
    "ldap3.extend.novell.nmasGetUniversalPassword.NmasGetUniversalPassword",
    "ldap3.extend.novell.nmasSetUniversalPassword.NmasSetUniversalPassword",
    "ldap3.extend.novell.partition_entry_count.PartitionEntryCount",
    "ldap3.extend.novell.replicaInfo.ReplicaInfo",
    "ldap3.extend.novell.startTransaction.StartTransaction",
    "ldap3.extend.standard.modifyPassword.ModifyPassword",
    "ldap3.extend.standard.whoAmI.WhoAmI"
  ],
  "ldap3.extend.operation.ExtendedOperation.set_response": [
    "ldap3.extend.novell.endTransaction.EndTransaction",
    "ldap3.extend.novell.startTransaction.StartTransaction"
  ],
  "ldap3.protocol.rfc4512.BaseObjectInfo.__init__": [
    "ldap3.protocol.rfc4512.AttributeTypeInfo",
    "ldap3.protocol.rfc4512.DitContentRuleInfo",
    "ldap3.protocol.rfc4512.DitStructureRuleInfo",
    "ldap3.protocol.rfc4512.LdapSyntaxInfo",
    "ldap3.protocol.rfc4512.MatchingRuleInfo",
    "ldap3.protocol.rfc4512.MatchingRuleUseInfo",
    "ldap3.protocol.rfc4512.NameFormInfo",
    "ldap3.protocol.rfc4512.ObjectClassInfo"
  ],
  "ldap3.protocol.rfc4512.BaseServerInfo.__init__": [
    "ldap3.protocol.rfc4512.DsaInfo",
    "ldap3.protocol.rfc4512.SchemaInfo"
  ],
  "ldap3.strategy.asynchronous.AsyncStrategy.__init__": [
    "ldap3.strategy.asyncStream.AsyncStreamStrategy"
  ],
  "ldap3.strategy.asynchronous.AsyncStrategy.get_stream": [
    "ldap3.strategy.asyncStream.AsyncStreamStrategy"
  ],
  "ldap3.strategy.asynchronous.AsyncStrategy.post_send_search": [
    "ldap3.strategy.mockAsync.MockAsyncStrategy"
  ],
  "ldap3.strategy.asynchronous.AsyncStrategy.post_send_single_response": [
    "ldap3.strategy.mockAsync.MockAsyncStrategy"
  ],
  "ldap3.strategy.asynchronous.AsyncStrategy.set_stream": [
    "ldap3.strategy.asyncStream.AsyncStreamStrategy"
  ],
  "ldap3.strategy.base.BaseStrategy.__init__": [
    "ldap3.strategy.asynchronous.AsyncStrategy",
    "ldap3.strategy.ldifProducer.LdifProducerStrategy",
    "ldap3.strategy.reusable.ReusableStrategy",
    "ldap3.strategy.sync.SyncStrategy"
  ],
  "ldap3.strategy.base.BaseStrategy.close": [
    "ldap3.strategy.asynchronous.AsyncStrategy"
  ],
  "ldap3.strategy.base.BaseStrategy.get_response": [
    "ldap3.strategy.mockAsync.MockAsyncStrategy",
    "ldap3.strategy.reusable.ReusableStrategy"
  ],
  "ldap3.strategy.base.BaseStrategy.get_stream": [
    "ldap3.strategy.asynchronous.AsyncStrategy",
    "ldap3.strategy.ldifProducer.LdifProducerStrategy",
    "ldap3.strategy.reusable.ReusableStrategy",
    "ldap3.strategy.sync.SyncStrategy"
  ],
  "ldap3.strategy.base.BaseStrategy.open": [
    "ldap3.strategy.asynchronous.AsyncStrategy",
    "ldap3.strategy.reusable.ReusableStrategy",
    "ldap3.strategy.sync.SyncStrategy"
  ],
  "ldap3.strategy.base.BaseStrategy.post_send_search": [
    "ldap3.strategy.asynchronous.AsyncStrategy",
    "ldap3.strategy.ldifProducer.LdifProducerStrategy",
    "ldap3.strategy.reusable.ReusableStrategy",
    "ldap3.strategy.sync.SyncStrategy"
  ],
  "ldap3.strategy.base.BaseStrategy.post_send_single_response": [
    "ldap3.strategy.asynchronous.AsyncStrategy",
    "ldap3.strategy.ldifProducer.LdifProducerStrategy",
    "ldap3.strategy.reusable.ReusableStrategy",
    "ldap3.strategy.sync.SyncStrategy"
  ],
  "ldap3.strategy.base.BaseStrategy.receiving": [
    "ldap3.strategy.asynchronous.AsyncStrategy",
    "ldap3.strategy.ldifProducer.LdifProducerStrategy",
    "ldap3.strategy.reusable.ReusableStrategy",
    "ldap3.strategy.sync.SyncStrategy"
  ],
  "ldap3.strategy.base.BaseStrategy.send": [
    "ldap3.strategy.ldifProducer.LdifProducerStrategy",
    "ldap3.strategy.restartable.RestartableStrategy",
    "ldap3.strategy.reusable.ReusableStrategy"
  ],
  "ldap3.strategy.base.BaseStrategy.set_stream": [
    "ldap3.strategy.asynchronous.AsyncStrategy",
    "ldap3.strategy.ldifProducer.LdifProducerStrategy",
    "ldap3.strategy.reusable.ReusableStrategy",
    "ldap3.strategy.sync.SyncStrategy"
  ],
  "ldap3.strategy.mockBase.MockBaseStrategy.__init__": [
    "ldap3.strategy.mockAsync.MockAsyncStrategy",
    "ldap3.strategy.mockSync.MockSyncStrategy"
  ],
  "ldap3.strategy.restartable.RestartableStrategy.__init__": [
    "ldap3.strategy.safeRestartable.SafeRestartableStrategy"
  ],
  "ldap3.strategy.sync.SyncStrategy.__init__": [
    "ldap3.strategy.restartable.RestartableStrategy",
    "ldap3.strategy.safeSync.SafeSyncStrategy"
  ],
  "ldap3.strategy.sync.SyncStrategy.get_stream": [
    "ldap3.strategy.restartable.RestartableStrategy"
  ],
  "ldap3.strategy.sync.SyncStrategy.open": [
    "ldap3.strategy.restartable.RestartableStrategy"
  ],
  "ldap3.strategy.sync.SyncStrategy.post_send_search": [
    "ldap3.strategy.mockSync.MockSyncStrategy",
    "ldap3.strategy.restartable.RestartableStrategy"
  ],
  "ldap3.strategy.sync.SyncStrategy.post_send_single_response": [
    "ldap3.strategy.mockSync.MockSyncStrategy",
    "ldap3.strategy.restartable.RestartableStrategy"
  ],
  "ldap3.strategy.sync.SyncStrategy.set_stream": [
    "ldap3.strategy.restartable.RestartableStrategy"
  ],
  "ldap3.utils.ciDict.CaseInsensitiveDict.__delitem__": [
    "ldap3.utils.ciDict.CaseInsensitiveWithAliasDict"
  ],
  "ldap3.utils.ciDict.CaseInsensitiveDict.__getitem__": [
    "ldap3.utils.ciDict.CaseInsensitiveWithAliasDict"
  ],
  "ldap3.utils.ciDict.CaseInsensitiveDict.__init__": [
    "ldap3.utils.ciDict.CaseInsensitiveWithAliasDict"
  ],
  "ldap3.utils.ciDict.CaseInsensitiveDict.__setitem__": [
    "ldap3.utils.ciDict.CaseInsensitiveWithAliasDict"
  ],
  "ldap3.utils.ciDict.CaseInsensitiveDict.copy": [
    "ldap3.utils.ciDict.CaseInsensitiveWithAliasDict"
  ],
  "lib2to3.fixer_base.BaseFix.__init__": [
    "lib2to3.fixes.fix_exitfunc.FixExitfunc"
  ],
  "lib2to3.fixer_base.BaseFix.compile_pattern": [
    "lib2to3.fixes.fix_imports.FixImports"
  ],
  "lib2to3.fixer_base.BaseFix.finish_tree": [
    "lib2to3.fixes.fix_xrange.FixXrange"
  ],
  "lib2to3.fixer_base.BaseFix.match": [
    "lib2to3.fixes.fix_idioms.FixIdioms",
    "lib2to3.fixes.fix_imports.FixImports",
    "lib2to3.fixes.fix_ne.FixNe",
    "lib2to3.fixes.fix_numliterals.FixNumliterals",
    "lib2to3.fixes.fix_renames.FixRenames"
  ],
  "lib2to3.fixer_base.BaseFix.start_tree": [
    "lib2to3.fixer_base.ConditionalFix",
    "lib2to3.fixes.fix_exitfunc.FixExitfunc",
    "lib2to3.fixes.fix_import.FixImport",
    "lib2to3.fixes.fix_imports.FixImports",
    "lib2to3.fixes.fix_next.FixNext",
    "lib2to3.fixes.fix_unicode.FixUnicode",
    "lib2to3.fixes.fix_xrange.FixXrange"
  ],
  "lib2to3.fixer_base.BaseFix.transform": [
    "lib2to3.fixes.fix_apply.FixApply",
    "lib2to3.fixes.fix_asserts.FixAsserts",
    "lib2to3.fixes.fix_basestring.FixBasestring",
    "lib2to3.fixes.fix_buffer.FixBuffer",
    "lib2to3.fixes.fix_dict.FixDict",
    "lib2to3.fixes.fix_except.FixExcept",
    "lib2to3.fixes.fix_exec.FixExec",
    "lib2to3.fixes.fix_execfile.FixExecfile",
    "lib2to3.fixes.fix_exitfunc.FixExitfunc",
    "lib2to3.fixes.fix_filter.FixFilter",
    "lib2to3.fixes.fix_funcattrs.FixFuncattrs",
    "lib2to3.fixes.fix_future.FixFuture",
    "lib2to3.fixes.fix_getcwdu.FixGetcwdu",
    "lib2to3.fixes.fix_has_key.FixHasKey",
    "lib2to3.fixes.fix_idioms.FixIdioms",
    "lib2to3.fixes.fix_import.FixImport",
    "lib2to3.fixes.fix_imports.FixImports",
    "lib2to3.fixes.fix_input.FixInput",
    "lib2to3.fixes.fix_intern.FixIntern",
    "lib2to3.fixes.fix_isinstance.FixIsinstance",
    "lib2to3.fixes.fix_itertools.FixItertools",
    "lib2to3.fixes.fix_itertools_imports.FixItertoolsImports",
    "lib2to3.fixes.fix_long.FixLong",
    "lib2to3.fixes.fix_map.FixMap",
    "lib2to3.fixes.fix_metaclass.FixMetaclass",
    "lib2to3.fixes.fix_methodattrs.FixMethodattrs",
    "lib2to3.fixes.fix_ne.FixNe",
    "lib2to3.fixes.fix_next.FixNext",
    "lib2to3.fixes.fix_nonzero.FixNonzero",
    "lib2to3.fixes.fix_numliterals.FixNumliterals",
    "lib2to3.fixes.fix_operator.FixOperator",
    "lib2to3.fixes.fix_paren.FixParen",
    "lib2to3.fixes.fix_print.FixPrint",
    "lib2to3.fixes.fix_raise.FixRaise",
    "lib2to3.fixes.fix_raw_input.FixRawInput",
    "lib2to3.fixes.fix_reduce.FixReduce",
    "lib2to3.fixes.fix_reload.FixReload",
    "lib2to3.fixes.fix_renames.FixRenames",
    "lib2to3.fixes.fix_repr.FixRepr",
    "lib2to3.fixes.fix_set_literal.FixSetLiteral",
    "lib2to3.fixes.fix_standarderror.FixStandarderror",
    "lib2to3.fixes.fix_sys_exc.FixSysExc",
    "lib2to3.fixes.fix_throw.FixThrow",
    "lib2to3.fixes.fix_tuple_params.FixTupleParams",
    "lib2to3.fixes.fix_types.FixTypes",
    "lib2to3.fixes.fix_unicode.FixUnicode",
    "lib2to3.fixes.fix_ws_comma.FixWsComma",
    "lib2to3.fixes.fix_xrange.FixXrange",
    "lib2to3.fixes.fix_xreadlines.FixXreadlines",
    "lib2to3.fixes.fix_zip.FixZip"
  ],
  "lib2to3.fixes.fix_imports.FixImports.build_pattern": [
    "lib2to3.fixes.fix_urllib.FixUrllib"
  ],
  "lib2to3.fixes.fix_imports.FixImports.transform": [
    "lib2to3.fixes.fix_urllib.FixUrllib"
  ],
  "lib2to3.pytree.Base._eq": [
    "lib2to3.pytree.Leaf",
    "lib2to3.pytree.Node"
  ],
  "lib2to3.pytree.Base.clone": [
    "lib2to3.pytree.Leaf",
    "lib2to3.pytree.Node"
  ],
  "lib2to3.pytree.Base.post_order": [
    "lib2to3.pytree.Leaf",
    "lib2to3.pytree.Node"
  ],
  "lib2to3.pytree.Base.pre_order": [
    "lib2to3.pytree.Leaf",
    "lib2to3.pytree.Node"
  ],
  "lib2to3.refactor.RefactoringTool.log_error": [
    "lib2to3.main.StdoutRefactoringTool"
  ],
  "lib2to3.refactor.RefactoringTool.print_output": [
    "lib2to3.main.StdoutRefactoringTool"
  ],
  "lib2to3.refactor.RefactoringTool.refactor": [
    "lib2to3.refactor.MultiprocessRefactoringTool"
  ],
  "lib2to3.refactor.RefactoringTool.write_file": [
    "lib2to3.main.StdoutRefactoringTool"
  ],
  "libcst._metadata_dependent.MetadataDependent.__init__": [
    "libcst.codemod._codemod.Codemod",
    "libcst.metadata.base_provider.BaseMetadataProvider"
  ],
  "libcst._metadata_dependent.MetadataDependent.get_metadata": [
    "libcst.metadata.base_provider.BaseMetadataProvider"
  ],
  "libcst._nodes.base.CSTNode._codegen_impl": [
    "libcst._nodes.base.BaseValueToken",
    "libcst._nodes.expression.Annotation",
    "libcst._nodes.expression.Arg",
    "libcst._nodes.expression.Asynchronous",
    "libcst._nodes.expression.Attribute",
    "libcst._nodes.expression.Await",
    "libcst._nodes.expression.BinaryOperation",
    "libcst._nodes.expression.BooleanOperation",
    "libcst._nodes.expression.Call",
    "libcst._nodes.expression.CompFor",
    "libcst._nodes.expression.CompIf",
    "libcst._nodes.expression.Comparison",
    "libcst._nodes.expression.ComparisonTarget",
    "libcst._nodes.expression.ConcatenatedString",
    "libcst._nodes.expression.Dict",
    "libcst._nodes.expression.DictComp",
    "libcst._nodes.expression.Ellipsis",
    "libcst._nodes.expression.Float",
    "libcst._nodes.expression.FormattedString",
    "libcst._nodes.expression.FormattedStringExpression",
    "libcst._nodes.expression.FormattedStringText",
    "libcst._nodes.expression.From",
    "libcst._nodes.expression.GeneratorExp",
    "libcst._nodes.expression.IfExp",
    "libcst._nodes.expression.Imaginary",
    "libcst._nodes.expression.Index",
    "libcst._nodes.expression.Integer",
    "libcst._nodes.expression.Lambda",
    "libcst._nodes.expression.LeftCurlyBrace",
    "libcst._nodes.expression.LeftParen",
    "libcst._nodes.expression.LeftSquareBracket",
    "libcst._nodes.expression.List",
    "libcst._nodes.expression.ListComp",
    "libcst._nodes.expression.Name",
    "libcst._nodes.expression.NamedExpr",
    "libcst._nodes.expression.Param",
    "libcst._nodes.expression.ParamSlash",
    "libcst._nodes.expression.ParamStar",
    "libcst._nodes.expression.Parameters",
    "libcst._nodes.expression.RightCurlyBrace",
    "libcst._nodes.expression.RightParen",
    "libcst._nodes.expression.RightSquareBracket",
    "libcst._nodes.expression.Set",
    "libcst._nodes.expression.SetComp",
    "libcst._nodes.expression.SimpleString",
    "libcst._nodes.expression.Slice",
    "libcst._nodes.expression.Subscript",
    "libcst._nodes.expression.SubscriptElement",
    "libcst._nodes.expression.Tuple",
    "libcst._nodes.expression.UnaryOperation",
    "libcst._nodes.expression.Yield",
    "libcst._nodes.expression._BaseElementImpl",
    "libcst._nodes.module.Module",
    "libcst._nodes.op.BaseUnaryOp",
    "libcst._nodes.op.ImportStar",
    "libcst._nodes.op._BaseOneTokenOp",
    "libcst._nodes.op._BaseTwoTokenOp",
    "libcst._nodes.statement.AsName",
    "libcst._nodes.statement.AssignTarget",
    "libcst._nodes.statement.BaseSmallStatement",
    "libcst._nodes.statement.ClassDef",
    "libcst._nodes.statement.Decorator",
    "libcst._nodes.statement.Else",
    "libcst._nodes.statement.ExceptHandler",
    "libcst._nodes.statement.ExceptStarHandler",
    "libcst._nodes.statement.Finally",
    "libcst._nodes.statement.For",
    "libcst._nodes.statement.FunctionDef",
    "libcst._nodes.statement.If",
    "libcst._nodes.statement.ImportAlias",
    "libcst._nodes.statement.IndentedBlock",
    "libcst._nodes.statement.Match",
    "libcst._nodes.statement.MatchAs",
    "libcst._nodes.statement.MatchCase",
    "libcst._nodes.statement.MatchClass",
    "libcst._nodes.statement.MatchKeywordElement",
    "libcst._nodes.statement.MatchList",
    "libcst._nodes.statement.MatchMapping",
    "libcst._nodes.statement.MatchMappingElement",
    "libcst._nodes.statement.MatchOr",
    "libcst._nodes.statement.MatchOrElement",
    "libcst._nodes.statement.MatchSequenceElement",
    "libcst._nodes.statement.MatchSingleton",
    "libcst._nodes.statement.MatchStar",
    "libcst._nodes.statement.MatchTuple",
    "libcst._nodes.statement.MatchValue",
    "libcst._nodes.statement.NameItem",
    "libcst._nodes.statement.ParamSpec",
    "libcst._nodes.statement.Try",
    "libcst._nodes.statement.TryStar",
    "libcst._nodes.statement.TypeParam",
    "libcst._nodes.statement.TypeParameters",
    "libcst._nodes.statement.TypeVar",
    "libcst._nodes.statement.TypeVarTuple",
    "libcst._nodes.statement.While",
    "libcst._nodes.statement.With",
    "libcst._nodes.statement.WithItem",
    "libcst._nodes.statement._BaseSimpleStatement",
    "libcst._nodes.whitespace.EmptyLine",
    "libcst._nodes.whitespace.Newline",
    "libcst._nodes.whitespace.ParenthesizedWhitespace",
    "libcst._nodes.whitespace.TrailingWhitespace"
  ],
  "libcst._nodes.base.CSTNode._is_removable": [
    "libcst._nodes.statement.SimpleStatementLine"
  ],
  "libcst._nodes.base.CSTNode._validate": [
    "libcst._nodes.expression.Arg",
    "libcst._nodes.expression.Asynchronous",
    "libcst._nodes.expression.CompFor",
    "libcst._nodes.expression.CompIf",
    "libcst._nodes.expression.ComparisonTarget",
    "libcst._nodes.expression.FormattedStringExpression",
    "libcst._nodes.expression.From",
    "libcst._nodes.expression.Param",
    "libcst._nodes.expression.Parameters",
    "libcst._nodes.expression._BaseParenthesizedNode",
    "libcst._nodes.op.NotEqual",
    "libcst._nodes.op._BaseTwoTokenOp",
    "libcst._nodes.statement.AnnAssign",
    "libcst._nodes.statement.AsName",
    "libcst._nodes.statement.Assert",
    "libcst._nodes.statement.Assign",
    "libcst._nodes.statement.ClassDef",
    "libcst._nodes.statement.Del",
    "libcst._nodes.statement.ExceptHandler",
    "libcst._nodes.statement.ExceptStarHandler",
    "libcst._nodes.statement.For",
    "libcst._nodes.statement.FunctionDef",
    "libcst._nodes.statement.Global",
    "libcst._nodes.statement.If",
    "libcst._nodes.statement.Import",
    "libcst._nodes.statement.ImportAlias",
    "libcst._nodes.statement.ImportFrom",
    "libcst._nodes.statement.IndentedBlock",
    "libcst._nodes.statement.Match",
    "libcst._nodes.statement.NameItem",
    "libcst._nodes.statement.Nonlocal",
    "libcst._nodes.statement.Raise",
    "libcst._nodes.statement.Return",
    "libcst._nodes.statement.Try",
    "libcst._nodes.statement.TryStar",
    "libcst._nodes.statement.TypeAlias",
    "libcst._nodes.statement.TypeParam",
    "libcst._nodes.statement.While",
    "libcst._nodes.statement.With",
    "libcst._nodes.statement.WithItem",
    "libcst._nodes.statement._BaseSimpleStatement",
    "libcst._nodes.whitespace.Comment",
    "libcst._nodes.whitespace.Newline",
    "libcst._nodes.whitespace.SimpleWhitespace"
  ],
  "libcst._nodes.base.CSTNode._visit_and_replace_children": [
    "libcst._nodes.base.BaseLeaf",
    "libcst._nodes.expression.Annotation",
    "libcst._nodes.expression.Arg",
    "libcst._nodes.expression.Asynchronous",
    "libcst._nodes.expression.Attribute",
    "libcst._nodes.expression.Await",
    "libcst._nodes.expression.BinaryOperation",
    "libcst._nodes.expression.BooleanOperation",
    "libcst._nodes.expression.Call",
    "libcst._nodes.expression.CompFor",
    "libcst._nodes.expression.CompIf",
    "libcst._nodes.expression.Comparison",
    "libcst._nodes.expression.ComparisonTarget",
    "libcst._nodes.expression.ConcatenatedString",
    "libcst._nodes.expression.Dict",
    "libcst._nodes.expression.DictComp",
    "libcst._nodes.expression.DictElement",
    "libcst._nodes.expression.Element",
    "libcst._nodes.expression.Ellipsis",
    "libcst._nodes.expression.Float",
    "libcst._nodes.expression.FormattedString",
    "libcst._nodes.expression.FormattedStringExpression",
    "libcst._nodes.expression.FormattedStringText",
    "libcst._nodes.expression.From",
    "libcst._nodes.expression.GeneratorExp",
    "libcst._nodes.expression.IfExp",
    "libcst._nodes.expression.Imaginary",
    "libcst._nodes.expression.Index",
    "libcst._nodes.expression.Integer",
    "libcst._nodes.expression.Lambda",
    "libcst._nodes.expression.LeftCurlyBrace",
    "libcst._nodes.expression.LeftParen",
    "libcst._nodes.expression.LeftSquareBracket",
    "libcst._nodes.expression.List",
    "libcst._nodes.expression.ListComp",
    "libcst._nodes.expression.Name",
    "libcst._nodes.expression.NamedExpr",
    "libcst._nodes.expression.Param",
    "libcst._nodes.expression.ParamSlash",
    "libcst._nodes.expression.ParamStar",
    "libcst._nodes.expression.Parameters",
    "libcst._nodes.expression.RightCurlyBrace",
    "libcst._nodes.expression.RightParen",
    "libcst._nodes.expression.RightSquareBracket",
    "libcst._nodes.expression.Set",
    "libcst._nodes.expression.SetComp",
    "libcst._nodes.expression.SimpleString",
    "libcst._nodes.expression.Slice",
    "libcst._nodes.expression.StarredDictElement",
    "libcst._nodes.expression.StarredElement",
    "libcst._nodes.expression.Subscript",
    "libcst._nodes.expression.SubscriptElement",
    "libcst._nodes.expression.Tuple",
    "libcst._nodes.expression.UnaryOperation",
    "libcst._nodes.expression.Yield",
    "libcst._nodes.module.Module",
    "libcst._nodes.op.BaseUnaryOp",
    "libcst._nodes.op._BaseOneTokenOp",
    "libcst._nodes.op._BaseTwoTokenOp",
    "libcst._nodes.statement.AnnAssign",
    "libcst._nodes.statement.AsName",
    "libcst._nodes.statement.Assert",
    "libcst._nodes.statement.Assign",
    "libcst._nodes.statement.AssignTarget",
    "libcst._nodes.statement.AugAssign",
    "libcst._nodes.statement.Break",
    "libcst._nodes.statement.ClassDef",
    "libcst._nodes.statement.Continue",
    "libcst._nodes.statement.Decorator",
    "libcst._nodes.statement.Del",
    "libcst._nodes.statement.Else",
    "libcst._nodes.statement.ExceptHandler",
    "libcst._nodes.statement.ExceptStarHandler",
    "libcst._nodes.statement.Expr",
    "libcst._nodes.statement.Finally",
    "libcst._nodes.statement.For",
    "libcst._nodes.statement.FunctionDef",
    "libcst._nodes.statement.Global",
    "libcst._nodes.statement.If",
    "libcst._nodes.statement.Import",
    "libcst._nodes.statement.ImportAlias",
    "libcst._nodes.statement.ImportFrom",
    "libcst._nodes.statement.IndentedBlock",
    "libcst._nodes.statement.Match",
    "libcst._nodes.statement.MatchAs",
    "libcst._nodes.statement.MatchCase",
    "libcst._nodes.statement.MatchClass",
    "libcst._nodes.statement.MatchKeywordElement",
    "libcst._nodes.statement.MatchList",
    "libcst._nodes.statement.MatchMapping",
    "libcst._nodes.statement.MatchMappingElement",
    "libcst._nodes.statement.MatchOr",
    "libcst._nodes.statement.MatchOrElement",
    "libcst._nodes.statement.MatchSequenceElement",
    "libcst._nodes.statement.MatchSingleton",
    "libcst._nodes.statement.MatchStar",
    "libcst._nodes.statement.MatchTuple",
    "libcst._nodes.statement.MatchValue",
    "libcst._nodes.statement.NameItem",
    "libcst._nodes.statement.Nonlocal",
    "libcst._nodes.statement.ParamSpec",
    "libcst._nodes.statement.Pass",
    "libcst._nodes.statement.Raise",
    "libcst._nodes.statement.Return",
    "libcst._nodes.statement.SimpleStatementLine",
    "libcst._nodes.statement.SimpleStatementSuite",
    "libcst._nodes.statement.Try",
    "libcst._nodes.statement.TryStar",
    "libcst._nodes.statement.TypeAlias",
    "libcst._nodes.statement.TypeParam",
    "libcst._nodes.statement.TypeParameters",
    "libcst._nodes.statement.TypeVar",
    "libcst._nodes.statement.TypeVarTuple",
    "libcst._nodes.statement.While",
    "libcst._nodes.statement.With",
    "libcst._nodes.statement.WithItem",
    "libcst._nodes.whitespace.EmptyLine",
    "libcst._nodes.whitespace.ParenthesizedWhitespace",
    "libcst._nodes.whitespace.TrailingWhitespace"
  ],
  "libcst._nodes.base.CSTNode.children": [
    "libcst._nodes.base.BaseLeaf"
  ],
  "libcst._nodes.base.CSTNode.visit": [
    "libcst._nodes.module.Module"
  ],
  "libcst._nodes.expression.BaseExpression._safe_to_use_with_word_operator": [
    "libcst._nodes.expression.Attribute",
    "libcst._nodes.expression.BaseList",
    "libcst._nodes.expression.BaseNumber",
    "libcst._nodes.expression.BinaryOperation",
    "libcst._nodes.expression.BooleanOperation",
    "libcst._nodes.expression.Call",
    "libcst._nodes.expression.Comparison",
    "libcst._nodes.expression.ConcatenatedString",
    "libcst._nodes.expression.Ellipsis",
    "libcst._nodes.expression.GeneratorExp",
    "libcst._nodes.expression.IfExp",
    "libcst._nodes.expression.Lambda",
    "libcst._nodes.expression.NamedExpr",
    "libcst._nodes.expression.Subscript",
    "libcst._nodes.expression.Tuple",
    "libcst._nodes.expression.UnaryOperation",
    "libcst._nodes.expression._BasePrefixedString",
    "libcst._nodes.expression._BaseSetOrDict"
  ],
  "libcst._nodes.expression._BaseElementImpl._codegen_impl": [
    "libcst._nodes.expression.DictElement",
    "libcst._nodes.expression.Element",
    "libcst._nodes.expression.StarredDictElement",
    "libcst._nodes.expression.StarredElement"
  ],
  "libcst._nodes.expression._BaseParenthesizedNode._validate": [
    "libcst._nodes.expression.Await",
    "libcst._nodes.expression.BaseSimpleComp",
    "libcst._nodes.expression.BooleanOperation",
    "libcst._nodes.expression.Comparison",
    "libcst._nodes.expression.ConcatenatedString",
    "libcst._nodes.expression.DictComp",
    "libcst._nodes.expression.Float",
    "libcst._nodes.expression.FormattedString",
    "libcst._nodes.expression.IfExp",
    "libcst._nodes.expression.Imaginary",
    "libcst._nodes.expression.Integer",
    "libcst._nodes.expression.Lambda",
    "libcst._nodes.expression.Name",
    "libcst._nodes.expression.Set",
    "libcst._nodes.expression.SimpleString",
    "libcst._nodes.expression.Subscript",
    "libcst._nodes.expression.Tuple",
    "libcst._nodes.expression.UnaryOperation",
    "libcst._nodes.expression.Yield",
    "libcst._nodes.expression._BaseExpressionWithArgs",
    "libcst._nodes.statement.MatchAs",
    "libcst._nodes.statement.MatchList",
    "libcst._nodes.statement.MatchMapping",
    "libcst._nodes.statement.MatchSingleton",
    "libcst._nodes.statement.MatchTuple"
  ],
  "libcst._nodes.expression._BaseParenthesizedNode.lpar": [
    "libcst._nodes.statement.MatchSingleton",
    "libcst._nodes.statement.MatchValue"
  ],
  "libcst._nodes.expression._BaseParenthesizedNode.lpar@setter": [
    "libcst._nodes.statement.MatchSingleton",
    "libcst._nodes.statement.MatchValue"
  ],
  "libcst._nodes.expression._BaseParenthesizedNode.rpar": [
    "libcst._nodes.statement.MatchSingleton",
    "libcst._nodes.statement.MatchValue"
  ],
  "libcst._nodes.expression._BaseParenthesizedNode.rpar@setter": [
    "libcst._nodes.statement.MatchSingleton",
    "libcst._nodes.statement.MatchValue"
  ],
  "libcst._nodes.expression._BasePrefixedString.prefix": [
    "libcst._nodes.expression.FormattedString",
    "libcst._nodes.expression.SimpleString"
  ],
  "libcst._nodes.expression._BasePrefixedString.quote": [
    "libcst._nodes.expression.FormattedString",
    "libcst._nodes.expression.SimpleString"
  ],
  "libcst._nodes.internal.CodegenState.add_indent_tokens": [
    "libcst.metadata.position_provider.WhitespaceInclusivePositionProvidingCodegenState",
    "libcst.metadata.reentrant_codegen._ReentrantCodegenState",
    "libcst.metadata.span_provider.SpanProvidingCodegenState"
  ],
  "libcst._nodes.internal.CodegenState.add_token": [
    "libcst.metadata.position_provider.WhitespaceInclusivePositionProvidingCodegenState",
    "libcst.metadata.reentrant_codegen._ReentrantCodegenState",
    "libcst.metadata.span_provider.SpanProvidingCodegenState"
  ],
  "libcst._nodes.internal.CodegenState.after_codegen": [
    "libcst.metadata.position_provider.WhitespaceInclusivePositionProvidingCodegenState",
    "libcst.metadata.reentrant_codegen._ReentrantCodegenState",
    "libcst.metadata.span_provider.SpanProvidingCodegenState"
  ],
  "libcst._nodes.internal.CodegenState.before_codegen": [
    "libcst.metadata.position_provider.WhitespaceInclusivePositionProvidingCodegenState",
    "libcst.metadata.reentrant_codegen._ReentrantCodegenState",
    "libcst.metadata.span_provider.SpanProvidingCodegenState"
  ],
  "libcst._nodes.internal.CodegenState.decrease_indent": [
    "libcst.metadata.reentrant_codegen._ReentrantCodegenState"
  ],
  "libcst._nodes.internal.CodegenState.increase_indent": [
    "libcst.metadata.reentrant_codegen._ReentrantCodegenState"
  ],
  "libcst._nodes.internal.CodegenState.pop_trailing_newline": [
    "libcst.metadata.reentrant_codegen._ReentrantCodegenState"
  ],
  "libcst._nodes.internal.CodegenState.record_syntactic_position": [
    "libcst.metadata.position_provider.PositionProvidingCodegenState",
    "libcst.metadata.span_provider.SpanProvidingCodegenState"
  ],
  "libcst._nodes.op.BaseUnaryOp._get_token": [
    "libcst._nodes.op.BitInvert",
    "libcst._nodes.op.Minus",
    "libcst._nodes.op.Not",
    "libcst._nodes.op.Plus"
  ],
  "libcst._nodes.op._BaseOneTokenOp._get_token": [
    "libcst._nodes.op.Add",
    "libcst._nodes.op.AddAssign",
    "libcst._nodes.op.And",
    "libcst._nodes.op.AssignEqual",
    "libcst._nodes.op.BitAnd",
    "libcst._nodes.op.BitAndAssign",
    "libcst._nodes.op.BitOr",
    "libcst._nodes.op.BitOrAssign",
    "libcst._nodes.op.BitXor",
    "libcst._nodes.op.BitXorAssign",
    "libcst._nodes.op.Colon",
    "libcst._nodes.op.Comma",
    "libcst._nodes.op.Divide",
    "libcst._nodes.op.DivideAssign",
    "libcst._nodes.op.Dot",
    "libcst._nodes.op.Equal",
    "libcst._nodes.op.FloorDivide",
    "libcst._nodes.op.FloorDivideAssign",
    "libcst._nodes.op.GreaterThan",
    "libcst._nodes.op.GreaterThanEqual",
    "libcst._nodes.op.In",
    "libcst._nodes.op.Is",
    "libcst._nodes.op.LeftShift",
    "libcst._nodes.op.LeftShiftAssign",
    "libcst._nodes.op.LessThan",
    "libcst._nodes.op.LessThanEqual",
    "libcst._nodes.op.MatrixMultiply",
    "libcst._nodes.op.MatrixMultiplyAssign",
    "libcst._nodes.op.Modulo",
    "libcst._nodes.op.ModuloAssign",
    "libcst._nodes.op.Multiply",
    "libcst._nodes.op.MultiplyAssign",
    "libcst._nodes.op.NotEqual",
    "libcst._nodes.op.Or",
    "libcst._nodes.op.Power",
    "libcst._nodes.op.PowerAssign",
    "libcst._nodes.op.RightShift",
    "libcst._nodes.op.RightShiftAssign",
    "libcst._nodes.op.Semicolon",
    "libcst._nodes.op.Subtract",
    "libcst._nodes.op.SubtractAssign"
  ],
  "libcst._nodes.op._BaseOneTokenOp._visit_and_replace_children": [
    "libcst._nodes.op.NotEqual"
  ],
  "libcst._nodes.op._BaseTwoTokenOp._get_tokens": [
    "libcst._nodes.op.IsNot",
    "libcst._nodes.op.NotIn"
  ],
  "libcst._nodes.statement.BaseSmallStatement._codegen_impl": [
    "libcst._nodes.statement.AnnAssign",
    "libcst._nodes.statement.Assert",
    "libcst._nodes.statement.Assign",
    "libcst._nodes.statement.AugAssign",
    "libcst._nodes.statement.Break",
    "libcst._nodes.statement.Continue",
    "libcst._nodes.statement.Del",
    "libcst._nodes.statement.Expr",
    "libcst._nodes.statement.Global",
    "libcst._nodes.statement.Import",
    "libcst._nodes.statement.ImportFrom",
    "libcst._nodes.statement.Nonlocal",
    "libcst._nodes.statement.Pass",
    "libcst._nodes.statement.Raise",
    "libcst._nodes.statement.Return",
    "libcst._nodes.statement.TypeAlias"
  ],
  "libcst._nodes.statement._BaseSimpleStatement._codegen_impl": [
    "libcst._nodes.statement.SimpleStatementLine",
    "libcst._nodes.statement.SimpleStatementSuite"
  ],
  "libcst._nodes.whitespace.BaseParenthesizableWhitespace.empty": [
    "libcst._nodes.whitespace.ParenthesizedWhitespace",
    "libcst._nodes.whitespace.SimpleWhitespace"
  ],
  "libcst._parser.base_parser.BaseParser.__init__": [
    "libcst._parser.python_parser.PythonCSTParser"
  ],
  "libcst._parser.base_parser.BaseParser.convert_nonterminal": [
    "libcst._parser.python_parser.PythonCSTParser"
  ],
  "libcst._parser.base_parser.BaseParser.convert_terminal": [
    "libcst._parser.python_parser.PythonCSTParser"
  ],
  "libcst._typed_visitor.CSTTypedBaseFunctions.leave_ClassDef_bases": [
    "libcst.metadata.scope_provider.ScopeVisitor"
  ],
  "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Module_header": [
    "libcst.codemod.commands.fix_pyre_directives.FixPyreDirectivesCommand"
  ],
  "libcst._typed_visitor.CSTTypedBaseFunctions.visit_AnnAssign": [
    "libcst.codemod.visitors._apply_type_annotations.TypeCollector",
    "libcst.codemod.visitors._gather_exports.GatherExportsVisitor",
    "libcst.codemod.visitors._gather_global_names.GatherGlobalNamesVisitor",
    "libcst.metadata.expression_context_provider.ExpressionContextVisitor"
  ],
  "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Annotation": [
    "libcst.codemod.visitors._apply_type_annotations.ImportedSymbolCollector",
    "libcst.codemod.visitors._gather_string_annotation_names.GatherNamesFromStringAnnotationsVisitor",
    "libcst.metadata.scope_provider.ScopeVisitor"
  ],
  "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Arg": [
    "libcst.metadata.scope_provider.ScopeVisitor"
  ],
  "libcst._typed_visitor.CSTTypedBaseFunctions.visit_AsName": [
    "libcst.metadata.expression_context_provider.ExpressionContextVisitor"
  ],
  "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Assign": [
    "libcst.codemod.visitors._apply_type_annotations.ApplyTypeAnnotationsVisitor",
    "libcst.codemod.visitors._apply_type_annotations.TypeCollector",
    "libcst.codemod.visitors._gather_exports.GatherExportsVisitor",
    "libcst.codemod.visitors._gather_global_names.GatherGlobalNamesVisitor",
    "libcst.metadata.expression_context_provider.ExpressionContextVisitor"
  ],
  "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Attribute": [
    "libcst.codemod.visitors._apply_type_annotations.ImportedSymbolCollector",
    "libcst.codemod.visitors._apply_type_annotations._TypeCollectorDequalifier",
    "libcst.codemod.visitors._remove_imports.RemovedNodeVisitor",
    "libcst.metadata.expression_context_provider.ExpressionContextVisitor",
    "libcst.metadata.scope_provider.ScopeVisitor",
    "libcst.metadata.type_inference_provider.TypeInferenceProvider"
  ],
  "libcst._typed_visitor.CSTTypedBaseFunctions.visit_AugAssign": [
    "libcst.codemod.visitors._gather_exports.GatherExportsVisitor",
    "libcst.metadata.expression_context_provider.ExpressionContextVisitor"
  ],
  "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Call": [
    "libcst.codemod.visitors._gather_string_annotation_names.GatherNamesFromStringAnnotationsVisitor",
    "libcst.metadata.scope_provider.ScopeVisitor",
    "libcst.metadata.type_inference_provider.TypeInferenceProvider"
  ],
  "libcst._typed_visitor.CSTTypedBaseFunctions.visit_ClassDef": [
    "libcst.codemod.visitors._apply_type_annotations.ApplyTypeAnnotationsVisitor",
    "libcst.codemod.visitors._apply_type_annotations.ImportedSymbolCollector",
    "libcst.codemod.visitors._apply_type_annotations.TypeCollector",
    "libcst.codemod.visitors._gather_global_names.GatherGlobalNamesVisitor",
    "libcst.metadata.expression_context_provider.ExpressionContextVisitor",
    "libcst.metadata.scope_provider.ScopeVisitor"
  ],
  "libcst._typed_visitor.CSTTypedBaseFunctions.visit_ClassDef_bases": [
    "libcst.metadata.scope_provider.ScopeVisitor"
  ],
  "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Comment": [
    "libcst.codemod.commands.add_pyre_directive.AddPyreDirectiveCommand"
  ],
  "libcst._typed_visitor.CSTTypedBaseFunctions.visit_CompFor": [
    "libcst.metadata.expression_context_provider.ExpressionContextVisitor"
  ],
  "libcst._typed_visitor.CSTTypedBaseFunctions.visit_ConcatenatedString": [
    "libcst.codemod.visitors._gather_exports.GatherExportsVisitor",
    "libcst.codemod.visitors._gather_string_annotation_names.GatherNamesFromStringAnnotationsVisitor",
    "libcst.metadata.scope_provider.ScopeVisitor"
  ],
  "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Del": [
    "libcst.metadata.expression_context_provider.ExpressionContextVisitor"
  ],
  "libcst._typed_visitor.CSTTypedBaseFunctions.visit_DictComp": [
    "libcst.metadata.scope_provider.ScopeVisitor"
  ],
  "libcst._typed_visitor.CSTTypedBaseFunctions.visit_EmptyLine": [
    "libcst.codemod.visitors._gather_comments.GatherCommentsVisitor"
  ],
  "libcst._typed_visitor.CSTTypedBaseFunctions.visit_For": [
    "libcst.metadata.expression_context_provider.ExpressionContextVisitor",
    "libcst.metadata.scope_provider.ScopeVisitor"
  ],
  "libcst._typed_visitor.CSTTypedBaseFunctions.visit_FunctionDef": [
    "libcst.codemod.visitors._apply_type_annotations.ApplyTypeAnnotationsVisitor",
    "libcst.codemod.visitors._apply_type_annotations.TypeCollector",
    "libcst.codemod.visitors._gather_global_names.GatherGlobalNamesVisitor",
    "libcst.metadata.expression_context_provider.ExpressionContextVisitor",
    "libcst.metadata.scope_provider.ScopeVisitor"
  ],
  "libcst._typed_visitor.CSTTypedBaseFunctions.visit_FunctionDef_body": [
    "libcst.codemod.commands.convert_type_comments.ConvertTypeComments"
  ],
  "libcst._typed_visitor.CSTTypedBaseFunctions.visit_GeneratorExp": [
    "libcst.metadata.scope_provider.ScopeVisitor"
  ],
  "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Global": [
    "libcst.metadata.scope_provider.ScopeVisitor"
  ],
  "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Import": [
    "libcst.codemod.commands.remove_unused_imports.RemoveUnusedImportsCommand",
    "libcst.codemod.commands.rename.RenameCommand",
    "libcst.codemod.visitors._gather_imports.GatherImportsVisitor",
    "libcst.codemod.visitors._gather_unused_imports.GatherUnusedImportsVisitor",
    "libcst.metadata.scope_provider.ScopeVisitor"
  ],
  "libcst._typed_visitor.CSTTypedBaseFunctions.visit_ImportFrom": [
    "libcst.codemod.commands.remove_unused_imports.RemoveUnusedImportsCommand",
    "libcst.codemod.commands.rename.RenameCommand",
    "libcst.codemod.visitors._gather_imports.GatherImportsVisitor",
    "libcst.codemod.visitors._gather_unused_imports.GatherUnusedImportsVisitor",
    "libcst.metadata.scope_provider.ScopeVisitor"
  ],
  "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Lambda": [
    "libcst.codemod.commands.convert_type_comments.ConvertTypeComments",
    "libcst.metadata.scope_provider.ScopeVisitor"
  ],
  "libcst._typed_visitor.CSTTypedBaseFunctions.visit_List": [
    "libcst.codemod.visitors._gather_exports.GatherExportsVisitor",
    "libcst.metadata.expression_context_provider.ExpressionContextVisitor"
  ],
  "libcst._typed_visitor.CSTTypedBaseFunctions.visit_ListComp": [
    "libcst.metadata.scope_provider.ScopeVisitor"
  ],
  "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Module": [
    "libcst.codemod.commands.remove_unused_imports.RemoveUnusedImportsCommand",
    "libcst.codemod.visitors._add_imports.AddImportsVisitor",
    "libcst.codemod.visitors._gather_unused_imports.GatherUnusedImportsVisitor",
    "libcst.codemod.visitors._remove_imports.RemoveImportsVisitor",
    "libcst.metadata.expression_context_provider.ExpressionContextProvider",
    "libcst.metadata.file_path_provider.FilePathProvider",
    "libcst.metadata.name_provider.FullyQualifiedNameProvider",
    "libcst.metadata.name_provider.QualifiedNameProvider",
    "libcst.metadata.parent_node_provider.ParentNodeProvider",
    "libcst.metadata.scope_provider.ScopeProvider"
  ],
  "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Module_header": [
    "libcst.codemod.commands.fix_pyre_directives.FixPyreDirectivesCommand"
  ],
  "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Name": [
    "libcst.codemod.visitors._apply_type_annotations.ImportedSymbolCollector",
    "libcst.codemod.visitors._remove_imports.RemovedNodeVisitor",
    "libcst.helpers._template.TemplateChecker",
    "libcst.metadata.expression_context_provider.ExpressionContextVisitor",
    "libcst.metadata.scope_provider.ScopeVisitor",
    "libcst.metadata.type_inference_provider.TypeInferenceProvider"
  ],
  "libcst._typed_visitor.CSTTypedBaseFunctions.visit_NamedExpr": [
    "libcst.metadata.expression_context_provider.ExpressionContextVisitor"
  ],
  "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Nonlocal": [
    "libcst.metadata.scope_provider.ScopeVisitor"
  ],
  "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Param": [
    "libcst.metadata.expression_context_provider.ExpressionContextVisitor",
    "libcst.metadata.scope_provider.ScopeVisitor"
  ],
  "libcst._typed_visitor.CSTTypedBaseFunctions.visit_ParamSpec": [
    "libcst.metadata.scope_provider.ScopeVisitor"
  ],
  "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Set": [
    "libcst.codemod.visitors._gather_exports.GatherExportsVisitor"
  ],
  "libcst._typed_visitor.CSTTypedBaseFunctions.visit_SetComp": [
    "libcst.metadata.scope_provider.ScopeVisitor"
  ],
  "libcst._typed_visitor.CSTTypedBaseFunctions.visit_SimpleString": [
    "libcst.codemod.commands.convert_format_to_fstring.StringQuoteGatherer",
    "libcst.codemod.visitors._gather_exports.GatherExportsVisitor",
    "libcst.codemod.visitors._gather_string_annotation_names.GatherNamesFromStringAnnotationsVisitor",
    "libcst.metadata.scope_provider.ScopeVisitor"
  ],
  "libcst._typed_visitor.CSTTypedBaseFunctions.visit_StarredElement": [
    "libcst.metadata.expression_context_provider.ExpressionContextVisitor"
  ],
  "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Subscript": [
    "libcst.codegen.gen_matcher_classes.AddWildcardsToSequenceUnions",
    "libcst.codemod.visitors._apply_type_annotations.ImportedSymbolCollector",
    "libcst.codemod.visitors._apply_type_annotations._TypeCollectorDequalifier",
    "libcst.codemod.visitors._gather_string_annotation_names.GatherNamesFromStringAnnotationsVisitor",
    "libcst.metadata.expression_context_provider.ExpressionContextVisitor",
    "libcst.metadata.scope_provider.ScopeVisitor"
  ],
  "libcst._typed_visitor.CSTTypedBaseFunctions.visit_TrailingWhitespace": [
    "libcst.codemod.visitors._gather_comments.GatherCommentsVisitor"
  ],
  "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Tuple": [
    "libcst.codemod.visitors._gather_exports.GatherExportsVisitor",
    "libcst.metadata.expression_context_provider.ExpressionContextVisitor"
  ],
  "libcst._typed_visitor.CSTTypedBaseFunctions.visit_TypeAlias": [
    "libcst.metadata.scope_provider.ScopeVisitor"
  ],
  "libcst._typed_visitor.CSTTypedBaseFunctions.visit_TypeVar": [
    "libcst.metadata.scope_provider.ScopeVisitor"
  ],
  "libcst._typed_visitor.CSTTypedBaseFunctions.visit_TypeVarTuple": [
    "libcst.metadata.scope_provider.ScopeVisitor"
  ],
  "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_Annotation": [
    "libcst.helpers._template.TemplateTransformer"
  ],
  "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_Arg": [
    "libcst.helpers._template.TemplateTransformer"
  ],
  "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_Assign": [
    "libcst.codemod.visitors._apply_type_annotations.ApplyTypeAnnotationsVisitor"
  ],
  "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_AssignTarget": [
    "libcst.helpers._template.TemplateTransformer"
  ],
  "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_Attribute": [
    "libcst.codegen.gen_matcher_classes.CleanseFullTypeNames",
    "libcst.codemod.commands.rename.RenameCommand",
    "libcst.codemod.visitors._apply_type_annotations._TypeCollectorDequalifier"
  ],
  "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_BinaryOperation": [
    "libcst.codemod.commands.convert_percent_format_to_fstring.ConvertPercentFormatStringCommand"
  ],
  "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_Call": [
    "libcst.codegen.gen_matcher_classes.CleanseFullTypeNames",
    "libcst.codemod.commands.add_trailing_commas.AddTrailingCommas",
    "libcst.codemod.commands.convert_format_to_fstring.ConvertFormatStringCommand"
  ],
  "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_ClassDef": [
    "libcst.codemod.commands.convert_namedtuple_to_dataclass.ConvertNamedTupleToDataclassCommand",
    "libcst.codemod.visitors._apply_type_annotations.ApplyTypeAnnotationsVisitor"
  ],
  "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_Decorator": [
    "libcst.helpers._template.TemplateTransformer"
  ],
  "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_EmptyLine": [
    "libcst.codemod.commands.convert_type_comments.ConvertTypeComments",
    "libcst.codemod.commands.fix_pyre_directives.FixPyreDirectivesCommand",
    "libcst.codemod.commands.remove_pyre_directive.RemovePyreDirectiveCommand"
  ],
  "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_Expr": [
    "libcst.helpers._template.TemplateTransformer"
  ],
  "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_For": [
    "libcst.codemod.commands.convert_type_comments.ConvertTypeComments"
  ],
  "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_FunctionDef": [
    "libcst.codemod.commands.convert_type_comments.ConvertTypeComments",
    "libcst.codemod.visitors._apply_type_annotations.ApplyTypeAnnotationsVisitor"
  ],
  "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_Import": [
    "libcst.codemod.commands.rename.RenameCommand",
    "libcst.codemod.visitors._remove_imports.RemoveImportsVisitor"
  ],
  "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_ImportFrom": [
    "libcst.codemod.commands.rename.RenameCommand",
    "libcst.codemod.visitors._add_imports.AddImportsVisitor",
    "libcst.codemod.visitors._apply_type_annotations.ApplyTypeAnnotationsVisitor",
    "libcst.codemod.visitors._remove_imports.RemoveImportsVisitor"
  ],
  "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_IndentedBlock": [
    "libcst.codemod.commands.convert_type_comments.ConvertTypeComments",
    "libcst.helpers._template.TemplateTransformer"
  ],
  "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_Index": [
    "libcst.codemod.visitors._apply_type_annotations._TypeCollectorDequalifier",
    "libcst.helpers._template.TemplateTransformer"
  ],
  "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_Module": [
    "libcst.codemod.commands.add_pyre_directive.AddPyreDirectiveCommand",
    "libcst.codemod.commands.convert_union_to_or.ConvertUnionToOrCommand",
    "libcst.codemod.commands.fix_pyre_directives.FixPyreDirectivesCommand",
    "libcst.codemod.commands.rename.RenameCommand",
    "libcst.codemod.visitors._add_imports.AddImportsVisitor",
    "libcst.codemod.visitors._apply_type_annotations.ApplyTypeAnnotationsVisitor"
  ],
  "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_Name": [
    "libcst.codegen.gen_matcher_classes.CleanseFullTypeNames",
    "libcst.codemod.commands.rename.RenameCommand",
    "libcst.codemod.visitors._apply_type_annotations._TypeCollectorDequalifier",
    "libcst.helpers._template.TemplateTransformer"
  ],
  "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_Param": [
    "libcst.codemod.commands.convert_type_comments.ConvertTypeComments",
    "libcst.helpers._template.TemplateTransformer"
  ],
  "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_Parameters": [
    "libcst.codemod.commands.add_trailing_commas.AddTrailingCommas",
    "libcst.helpers._template.TemplateTransformer"
  ],
  "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_ParenthesizedWhitespace": [
    "libcst.codemod.commands.convert_format_to_fstring.StripNewlinesTransformer"
  ],
  "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_SimpleStatementLine": [
    "libcst.codemod.commands.convert_type_comments.ConvertTypeComments",
    "libcst.helpers._template.TemplateTransformer"
  ],
  "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_SimpleStatementSuite": [
    "libcst.helpers._template.TemplateTransformer"
  ],
  "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_SimpleString": [
    "libcst.codegen.gen_matcher_classes.MatcherClassToLibCSTClass",
    "libcst.codegen.transforms.DoubleQuoteForwardRefsTransformer",
    "libcst.codemod.commands.convert_format_to_fstring.SwitchStringQuotesTransformer",
    "libcst.codemod.commands.convert_percent_format_to_fstring.EscapeStringQuote",
    "libcst.codemod.commands.strip_strings_from_types.StripStringsCommand"
  ],
  "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_Subscript": [
    "libcst.codegen.gen_matcher_classes.AddLogicMatchersToUnions",
    "libcst.codegen.gen_matcher_classes.AddWildcardsToSequenceUnions",
    "libcst.codemod.commands.convert_union_to_or.ConvertUnionToOrCommand",
    "libcst.codemod.commands.fix_variadic_callable.FixVariadicCallableCommmand",
    "libcst.codemod.visitors._apply_type_annotations._TypeCollectorDequalifier"
  ],
  "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_SubscriptElement": [
    "libcst.codegen.gen_matcher_classes.CleanseFullTypeNames",
    "libcst.codegen.gen_matcher_classes.RemoveTypesFromGeneric",
    "libcst.helpers._template.TemplateTransformer"
  ],
  "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_TrailingWhitespace": [
    "libcst.codemod.commands.convert_type_comments.ConvertTypeComments"
  ],
  "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_With": [
    "libcst.codemod.commands.convert_type_comments.ConvertTypeComments"
  ],
  "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_AnnAssign": [
    "libcst.codemod.visitors._apply_type_annotations.TypeCollector"
  ],
  "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_Annotation": [
    "libcst.codemod.visitors._apply_type_annotations.ImportedSymbolCollector",
    "libcst.codemod.visitors._gather_string_annotation_names.GatherNamesFromStringAnnotationsVisitor",
    "libcst.metadata.scope_provider.ScopeVisitor"
  ],
  "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_Assign": [
    "libcst.codemod.visitors._apply_type_annotations.TypeCollector"
  ],
  "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_Call": [
    "libcst.codemod.visitors._gather_string_annotation_names.GatherNamesFromStringAnnotationsVisitor",
    "libcst.metadata.scope_provider.ScopeVisitor"
  ],
  "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_ClassDef": [
    "libcst.codemod.visitors._apply_type_annotations.TypeCollector",
    "libcst.codemod.visitors._gather_global_names.GatherGlobalNamesVisitor"
  ],
  "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_FunctionDef": [
    "libcst.codemod.visitors._apply_type_annotations.TypeCollector",
    "libcst.codemod.visitors._gather_global_names.GatherGlobalNamesVisitor"
  ],
  "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_List": [
    "libcst.codemod.visitors._gather_exports.GatherExportsVisitor"
  ],
  "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_Module": [
    "libcst.codemod.visitors._add_imports._GatherTopImportsBeforeStatements",
    "libcst.codemod.visitors._apply_type_annotations.TypeCollector",
    "libcst.codemod.visitors._gather_unused_imports.GatherUnusedImportsVisitor"
  ],
  "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_Set": [
    "libcst.codemod.visitors._gather_exports.GatherExportsVisitor"
  ],
  "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_Subscript": [
    "libcst.metadata.scope_provider.ScopeVisitor"
  ],
  "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_Tuple": [
    "libcst.codemod.visitors._gather_exports.GatherExportsVisitor"
  ],
  "libcst._visitors.CSTTransformer.on_leave": [
    "libcst._nodes.base._ChildReplacementTransformer",
    "libcst._nodes.base._ChildWithChangesTransformer",
    "libcst.matchers._matcher_base._ReplaceTransformer",
    "libcst.matchers._visitors.MatcherDecoratableTransformer"
  ],
  "libcst._visitors.CSTTransformer.on_leave_attribute": [
    "libcst.matchers._visitors.MatcherDecoratableTransformer"
  ],
  "libcst._visitors.CSTTransformer.on_visit": [
    "libcst._nodes.base._ChildReplacementTransformer",
    "libcst._nodes.base._ChildWithChangesTransformer",
    "libcst.matchers._visitors.MatcherDecoratableTransformer"
  ],
  "libcst._visitors.CSTTransformer.on_visit_attribute": [
    "libcst.matchers._visitors.MatcherDecoratableTransformer"
  ],
  "libcst._visitors.CSTVisitor.on_leave": [
    "libcst._batched_visitor._BatchedCSTVisitor",
    "libcst.matchers._visitors.MatcherDecoratableVisitor",
    "libcst.metadata.parent_node_provider.ParentNodeVisitor",
    "libcst.metadata.scope_provider.ScopeVisitor"
  ],
  "libcst._visitors.CSTVisitor.on_leave_attribute": [
    "libcst._batched_visitor._BatchedCSTVisitor",
    "libcst.matchers._visitors.MatcherDecoratableVisitor"
  ],
  "libcst._visitors.CSTVisitor.on_visit": [
    "libcst._batched_visitor._BatchedCSTVisitor",
    "libcst._nodes.base._ChildrenCollectionVisitor",
    "libcst.matchers._matcher_base._FindAllVisitor",
    "libcst.matchers._visitors.MatcherDecoratableVisitor",
    "libcst.metadata.accessor_provider.AccessorProvider",
    "libcst.metadata.name_provider.FullyQualifiedNameVisitor",
    "libcst.metadata.name_provider.QualifiedNameVisitor"
  ],
  "libcst._visitors.CSTVisitor.on_visit_attribute": [
    "libcst._batched_visitor._BatchedCSTVisitor",
    "libcst.matchers._visitors.MatcherDecoratableVisitor"
  ],
  "libcst.codemod._codemod.Codemod.__init__": [
    "libcst.codemod._visitor.ContextAwareTransformer"
  ],
  "libcst.codemod._codemod.Codemod.transform_module": [
    "libcst.codemod._command.CodemodCommand"
  ],
  "libcst.codemod._codemod.Codemod.transform_module_impl": [
    "libcst.codemod._command.CodemodCommand",
    "libcst.codemod._visitor.ContextAwareTransformer"
  ],
  "libcst.codemod._command.CodemodCommand.add_args": [
    "libcst.codemod.commands.add_trailing_commas.AddTrailingCommas",
    "libcst.codemod.commands.convert_format_to_fstring.ConvertFormatStringCommand",
    "libcst.codemod.commands.convert_type_comments.ConvertTypeComments",
    "libcst.codemod.commands.ensure_import_present.EnsureImportPresentCommand",
    "libcst.codemod.commands.rename.RenameCommand"
  ],
  "libcst.codemod._command.CodemodCommand.transform_module_impl": [
    "libcst.codemod._command.MagicArgsCodemodCommand",
    "libcst.codemod.commands.noop.NOOPCommand"
  ],
  "libcst.codemod._command.MagicArgsCodemodCommand.get_transforms": [
    "libcst.codemod.commands.ensure_import_present.EnsureImportPresentCommand",
    "libcst.codemod.commands.rename_typing_generic_aliases.RenameTypingGenericAliases"
  ],
  "libcst.codemod._visitor.ContextAwareTransformer.__init__": [
    "libcst.codemod.commands.convert_format_to_fstring.SwitchStringQuotesTransformer",
    "libcst.codemod.visitors._add_imports.AddImportsVisitor",
    "libcst.codemod.visitors._apply_type_annotations.ApplyTypeAnnotationsVisitor",
    "libcst.codemod.visitors._remove_imports.RemoveImportsVisitor"
  ],
  "libcst.codemod._visitor.ContextAwareTransformer.transform_module_impl": [
    "libcst.codemod.visitors._apply_type_annotations.ApplyTypeAnnotationsVisitor"
  ],
  "libcst.codemod._visitor.ContextAwareVisitor.__init__": [
    "libcst.codemod.commands.convert_format_to_fstring.StringQuoteGatherer",
    "libcst.codemod.visitors._gather_comments.GatherCommentsVisitor",
    "libcst.codemod.visitors._gather_exports.GatherExportsVisitor",
    "libcst.codemod.visitors._gather_global_names.GatherGlobalNamesVisitor",
    "libcst.codemod.visitors._gather_imports._GatherImportsMixin",
    "libcst.codemod.visitors._gather_string_annotation_names.GatherNamesFromStringAnnotationsVisitor",
    "libcst.codemod.visitors._gather_unused_imports.GatherUnusedImportsVisitor"
  ],
  "libcst.codemod.visitors._gather_imports._GatherImportsMixin.__init__": [
    "libcst.codemod.visitors._add_imports._GatherTopImportsBeforeStatements",
    "libcst.codemod.visitors._gather_imports.GatherImportsVisitor"
  ],
  "libcst.matchers._matcher_base.BaseMatcherNode.__and__": [
    "libcst.matchers._matcher_base.AllOf",
    "libcst.matchers._matcher_base.OneOf",
    "libcst.matchers._matcher_base.TypeOf"
  ],
  "libcst.matchers._matcher_base.BaseMatcherNode.__invert__": [
    "libcst.matchers._matcher_base.AllOf",
    "libcst.matchers._matcher_base.OneOf",
    "libcst.matchers._matcher_base.TypeOf"
  ],
  "libcst.matchers._visitors.MatcherDecoratableVisitor.__init__": [
    "libcst.codemod._visitor.ContextAwareVisitor",
    "libcst.codemod.visitors._apply_type_annotations.ImportedSymbolCollector",
    "libcst.codemod.visitors._apply_type_annotations.TypeCollector"
  ],
  "libcst.metadata.base_provider.BaseMetadataProvider._gen_impl": [
    "libcst.metadata.base_provider.BatchableMetadataProvider",
    "libcst.metadata.base_provider.VisitorMetadataProvider",
    "libcst.metadata.position_provider.PositionProvider",
    "libcst.metadata.position_provider.WhitespaceInclusivePositionProvider",
    "libcst.metadata.reentrant_codegen.ExperimentalReentrantCodegenProvider",
    "libcst.metadata.span_provider.ByteSpanPositionProvider"
  ],
  "libcst.metadata.base_provider.BaseMetadataProvider.gen_cache": [
    "libcst.metadata.file_path_provider.FilePathProvider",
    "libcst.metadata.name_provider.FullyQualifiedNameProvider",
    "libcst.metadata.type_inference_provider.TypeInferenceProvider"
  ],
  "libcst.metadata.scope_provider.Assignment.__init__": [
    "libcst.metadata.scope_provider.ImportAssignment"
  ],
  "libcst.metadata.scope_provider.Assignment.get_qualified_names_for": [
    "libcst.metadata.scope_provider.ImportAssignment"
  ],
  "libcst.metadata.scope_provider.BaseAssignment.__init__": [
    "libcst.metadata.scope_provider.Assignment"
  ],
  "libcst.metadata.scope_provider.BaseAssignment._index": [
    "libcst.metadata.scope_provider.Assignment"
  ],
  "libcst.metadata.scope_provider.BaseAssignment.get_qualified_names_for": [
    "libcst.metadata.scope_provider.Assignment",
    "libcst.metadata.scope_provider.BuiltinAssignment"
  ],
  "libcst.metadata.scope_provider.LocalScope._make_name_prefix": [
    "libcst.metadata.scope_provider.AnnotationScope",
    "libcst.metadata.scope_provider.ClassScope",
    "libcst.metadata.scope_provider.ComprehensionScope"
  ],
  "libcst.metadata.scope_provider.Scope.__contains__": [
    "libcst.metadata.scope_provider.BuiltinScope",
    "libcst.metadata.scope_provider.GlobalScope",
    "libcst.metadata.scope_provider.LocalScope"
  ],
  "libcst.metadata.scope_provider.Scope.__init__": [
    "libcst.metadata.scope_provider.BuiltinScope",
    "libcst.metadata.scope_provider.GlobalScope",
    "libcst.metadata.scope_provider.LocalScope"
  ],
  "libcst.metadata.scope_provider.Scope._find_assignment_target": [
    "libcst.metadata.scope_provider.BuiltinScope",
    "libcst.metadata.scope_provider.LocalScope"
  ],
  "libcst.metadata.scope_provider.Scope._is_visible_from_children": [
    "libcst.metadata.scope_provider.ClassScope"
  ],
  "libcst.metadata.scope_provider.Scope._resolve_scope_for_access": [
    "libcst.metadata.scope_provider.BuiltinScope",
    "libcst.metadata.scope_provider.GlobalScope",
    "libcst.metadata.scope_provider.LocalScope"
  ],
  "libcst.metadata.scope_provider.Scope.record_global_overwrite": [
    "libcst.metadata.scope_provider.BuiltinScope",
    "libcst.metadata.scope_provider.GlobalScope",
    "libcst.metadata.scope_provider.LocalScope"
  ],
  "libcst.metadata.scope_provider.Scope.record_nonlocal_overwrite": [
    "libcst.metadata.scope_provider.BuiltinScope",
    "libcst.metadata.scope_provider.GlobalScope",
    "libcst.metadata.scope_provider.LocalScope"
  ],
  "libcst.tool._SerializerBase.__init__": [
    "libcst.tool._ListSerializer"
  ],
  "libcst.tool._SerializerBase._serialize_impl": [
    "libcst.tool._ListSerializer",
    "libcst.tool._StrSerializer"
  ],
  "list.__hash__": [
    "pip._vendor.typing_extensions.ParamSpec",
    "pip._vendor.typing_extensions._ConcatenateGenericAlias",
    "werkzeug.datastructures.mixins.ImmutableListMixin"
  ],
  "logging.FileHandler.__init__": [
    "logging.handlers.BaseRotatingHandler",
    "logging.handlers.WatchedFileHandler"
  ],
  "logging.FileHandler._open": [
    "pip._internal.utils.logging.BetterRotatingFileHandler"
  ],
  "logging.Filter.__init__": [
    "pip._internal.utils.logging.MaxLevelFilter"
  ],
  "logging.Filter.filter": [
    "pip._internal.utils.logging.ExcludeLoggerFilter",
    "pip._internal.utils.logging.MaxLevelFilter"
  ],
  "logging.Formatter.__init__": [
    "exifread.exif_log.Formatter",
    "pip._internal.utils.logging.IndentingFormatter"
  ],
  "logging.Formatter.format": [
    "pip._internal.utils.logging.IndentingFormatter",
    "traitlets.config.application.LevelFormatter"
  ],
  "logging.Handler.__init__": [
    "logging.StreamHandler",
    "logging.handlers.BufferingHandler",
    "logging.handlers.HTTPHandler",
    "logging.handlers.NTEventLogHandler",
    "logging.handlers.QueueHandler",
    "logging.handlers.SMTPHandler",
    "logging.handlers.SocketHandler",
    "logging.handlers.SysLogHandler",
    "pip._vendor.rich.logging.RichHandler",
    "rich.logging.RichHandler",
    "tests.DisallowLogsHandler"
  ],
  "logging.Handler.createLock": [
    "pip._vendor.distlib.NullHandler"
  ],
  "logging.Handler.emit": [
    "boto.NullHandler",
    "pip._vendor.distlib.NullHandler",
    "pip._vendor.rich.logging.RichHandler",
    "rich.logging.RichHandler",
    "tests.DisallowLogsHandler"
  ],
  "logging.Handler.handle": [
    "mkdocs_get_deps.__main__.CountHandler",
    "pip._vendor.distlib.NullHandler",
    "utils.CountHandler"
  ],
  "logging.Handler.handleError": [
    "pip._internal.utils.logging.RichPipStreamHandler"
  ],
  "logging.Logger.__init__": [
    "logging.RootLogger"
  ],
  "logging.LoggerAdapter.__init__": [
    "plugins.PrefixedLogger"
  ],
  "logging.LoggerAdapter.process": [
    "livereload._LoggerAdapter",
    "plugins.PrefixedLogger"
  ],
  "logging.StreamHandler.__init__": [
    "exifread.exif_log.Handler",
    "logging.FileHandler",
    "werkzeug._internal._ColorStreamHandler"
  ],
  "logging.handlers.BaseRotatingHandler.__init__": [
    "logging.handlers.RotatingFileHandler",
    "logging.handlers.TimedRotatingFileHandler"
  ],
  "logging.handlers.BufferingHandler.__init__": [
    "logging.handlers.MemoryHandler"
  ],
  "logging.handlers.SMTPHandler.__init__": [
    "boto.utils.AuthSMTPHandler"
  ],
  "logging.handlers.SocketHandler.makeSocket": [
    "logging.handlers.DatagramHandler"
  ],
  "mailbox.Mailbox.__contains__": [
    "mailbox.MH",
    "mailbox.Maildir",
    "mailbox._singlefileMailbox"
  ],
  "mailbox.Mailbox.__init__": [
    "mailbox.MH",
    "mailbox.Maildir"
  ],
  "mailbox.Mailbox.__len__": [
    "mailbox.MH",
    "mailbox.Maildir",
    "mailbox._singlefileMailbox"
  ],
  "mailbox.Mailbox.__setitem__": [
    "mailbox.MH",
    "mailbox.Maildir",
    "mailbox._singlefileMailbox"
  ],
  "mailbox.Mailbox.add": [
    "mailbox.MH",
    "mailbox.Maildir",
    "mailbox._singlefileMailbox"
  ],
  "mailbox.Mailbox.close": [
    "mailbox.MH",
    "mailbox.Maildir",
    "mailbox._singlefileMailbox"
  ],
  "mailbox.Mailbox.flush": [
    "mailbox.MH",
    "mailbox.Maildir",
    "mailbox._singlefileMailbox"
  ],
  "mailbox.Mailbox.get_bytes": [
    "mailbox.Babyl",
    "mailbox.MH",
    "mailbox.Maildir",
    "mailbox._mboxMMDF"
  ],
  "mailbox.Mailbox.get_file": [
    "mailbox.Babyl",
    "mailbox.MH",
    "mailbox.Maildir",
    "mailbox._mboxMMDF"
  ],
  "mailbox.Mailbox.get_message": [
    "mailbox.Babyl",
    "mailbox.MH",
    "mailbox.Maildir",
    "mailbox._mboxMMDF"
  ],
  "mailbox.Mailbox.get_string": [
    "mailbox._mboxMMDF"
  ],
  "mailbox.Mailbox.iterkeys": [
    "mailbox.MH",
    "mailbox.Maildir",
    "mailbox._singlefileMailbox"
  ],
  "mailbox.Mailbox.lock": [
    "mailbox.MH",
    "mailbox.Maildir",
    "mailbox._singlefileMailbox"
  ],
  "mailbox.Mailbox.remove": [
    "mailbox.MH",
    "mailbox.Maildir",
    "mailbox._singlefileMailbox"
  ],
  "mailbox.Mailbox.unlock": [
    "mailbox.MH",
    "mailbox.Maildir",
    "mailbox._singlefileMailbox"
  ],
  "mailbox._ProxyFile.__init__": [
    "mailbox._PartialFile"
  ],
  "markdown_it.renderer.RendererProtocol.render": [
    "markdown_it.renderer.RendererHTML"
  ],
  "markdown_it.ruler.StateBase.__init__": [
    "markdown_it.rules_block.state_block.StateBlock",
    "markdown_it.rules_core.state_core.StateCore",
    "markdown_it.rules_inline.state_inline.StateInline"
  ],
  "marshmallow.base.FieldABC._deserialize": [
    "marshmallow.fields.Field"
  ],
  "marshmallow.base.FieldABC._serialize": [
    "marshmallow.fields.Field"
  ],
  "marshmallow.base.FieldABC.deserialize": [
    "marshmallow.fields.Field"
  ],
  "marshmallow.base.FieldABC.serialize": [
    "marshmallow.fields.Field"
  ],
  "marshmallow.base.SchemaABC.dump": [
    "marshmallow.schema.Schema"
  ],
  "marshmallow.base.SchemaABC.dumps": [
    "marshmallow.schema.Schema"
  ],
  "marshmallow.base.SchemaABC.load": [
    "marshmallow.schema.Schema"
  ],
  "marshmallow.base.SchemaABC.loads": [
    "marshmallow.schema.Schema"
  ],
  "marshmallow.fields.DateTime.__init__": [
    "marshmallow.fields.AwareDateTime",
    "marshmallow.fields.NaiveDateTime"
  ],
  "marshmallow.fields.DateTime._deserialize": [
    "marshmallow.fields.AwareDateTime",
    "marshmallow.fields.NaiveDateTime"
  ],
  "marshmallow.fields.DateTime._make_object_from_format": [
    "marshmallow.fields.Date",
    "marshmallow.fields.Time"
  ],
  "marshmallow.fields.Field.__init__": [
    "dataclasses_json.mm._UnionField",
    "marshmallow.fields.Boolean",
    "marshmallow.fields.Constant",
    "marshmallow.fields.DateTime",
    "marshmallow.fields.Enum",
    "marshmallow.fields.Function",
    "marshmallow.fields.IP",
    "marshmallow.fields.IPInterface",
    "marshmallow.fields.Inferred",
    "marshmallow.fields.List",
    "marshmallow.fields.Mapping",
    "marshmallow.fields.Method",
    "marshmallow.fields.Nested",
    "marshmallow.fields.Number",
    "marshmallow.fields.TimeDelta",
    "marshmallow.fields.Tuple"
  ],
  "marshmallow.fields.Field._bind_to_schema": [
    "marshmallow.fields.DateTime",
    "marshmallow.fields.List",
    "marshmallow.fields.Mapping",
    "marshmallow.fields.Method",
    "marshmallow.fields.Tuple"
  ],
  "marshmallow.fields.Field._deserialize": [
    "dataclasses_json.mm._IsoField",
    "dataclasses_json.mm._TimestampField",
    "dataclasses_json.mm._UnionField",
    "marshmallow.fields.Boolean",
    "marshmallow.fields.Constant",
    "marshmallow.fields.DateTime",
    "marshmallow.fields.Enum",
    "marshmallow.fields.Function",
    "marshmallow.fields.IP",
    "marshmallow.fields.IPInterface",
    "marshmallow.fields.List",
    "marshmallow.fields.Mapping",
    "marshmallow.fields.Method",
    "marshmallow.fields.Nested",
    "marshmallow.fields.Number",
    "marshmallow.fields.String",
    "marshmallow.fields.TimeDelta",
    "marshmallow.fields.Tuple"
  ],
  "marshmallow.fields.Field._serialize": [
    "dataclasses_json.mm._IsoField",
    "dataclasses_json.mm._TimestampField",
    "dataclasses_json.mm._UnionField",
    "marshmallow.fields.Boolean",
    "marshmallow.fields.Constant",
    "marshmallow.fields.DateTime",
    "marshmallow.fields.Enum",
    "marshmallow.fields.Function",
    "marshmallow.fields.IP",
    "marshmallow.fields.IPInterface",
    "marshmallow.fields.Inferred",
    "marshmallow.fields.List",
    "marshmallow.fields.Mapping",
    "marshmallow.fields.Method",
    "marshmallow.fields.Nested",
    "marshmallow.fields.Number",
    "marshmallow.fields.String",
    "marshmallow.fields.TimeDelta",
    "marshmallow.fields.Tuple"
  ],
  "marshmallow.fields.Nested.__init__": [
    "marshmallow.fields.Pluck"
  ],
  "marshmallow.fields.Nested._deserialize": [
    "marshmallow.fields.Pluck"
  ],
  "marshmallow.fields.Nested._serialize": [
    "marshmallow.fields.Pluck"
  ],
  "marshmallow.fields.Number.__init__": [
    "marshmallow.fields.Decimal",
    "marshmallow.fields.Float",
    "marshmallow.fields.Integer"
  ],
  "marshmallow.fields.Number._format_num": [
    "marshmallow.fields.Decimal"
  ],
  "marshmallow.fields.Number._to_string": [
    "marshmallow.fields.Decimal"
  ],
  "marshmallow.fields.Number._validated": [
    "marshmallow.fields.Decimal",
    "marshmallow.fields.Float",
    "marshmallow.fields.Integer"
  ],
  "marshmallow.fields.String._deserialize": [
    "marshmallow.fields.UUID"
  ],
  "marshmallow.schema.Schema.__init__": [
    "dataclasses_json.mm.SchemaF"
  ],
  "marshmallow.schema.Schema.dump": [
    "dataclasses_json.mm.SchemaF"
  ],
  "marshmallow.schema.Schema.dumps": [
    "dataclasses_json.mm.SchemaF"
  ],
  "marshmallow.schema.Schema.load": [
    "dataclasses_json.mm.SchemaF"
  ],
  "marshmallow.schema.Schema.loads": [
    "dataclasses_json.mm.SchemaF"
  ],
  "marshmallow.validate.NoneOf.__call__": [
    "marshmallow.validate.ContainsNoneOf"
  ],
  "marshmallow.validate.NoneOf._format_error": [
    "marshmallow.validate.ContainsNoneOf"
  ],
  "marshmallow.validate.OneOf.__call__": [
    "marshmallow.validate.ContainsOnly"
  ],
  "marshmallow.validate.OneOf._format_error": [
    "marshmallow.validate.ContainsOnly"
  ],
  "marshmallow.validate.Validator.__call__": [
    "marshmallow.validate.And",
    "marshmallow.validate.Email",
    "marshmallow.validate.Equal",
    "marshmallow.validate.Length",
    "marshmallow.validate.NoneOf",
    "marshmallow.validate.OneOf",
    "marshmallow.validate.Predicate",
    "marshmallow.validate.Range",
    "marshmallow.validate.Regexp",
    "marshmallow.validate.URL"
  ],
  "marshmallow.validate.Validator._repr_args": [
    "marshmallow.validate.And",
    "marshmallow.validate.Equal",
    "marshmallow.validate.Length",
    "marshmallow.validate.NoneOf",
    "marshmallow.validate.OneOf",
    "marshmallow.validate.Predicate",
    "marshmallow.validate.Range",
    "marshmallow.validate.Regexp",
    "marshmallow.validate.URL"
  ],
  "multiprocessing.context.BaseContext.get_start_method": [
    "multiprocessing.context.DefaultContext"
  ],
  "multiprocessing.managers.BaseManager.get_server": [
    "multiprocessing.managers.SharedMemoryManager"
  ],
  "multiprocessing.pool.ApplyResult.__init__": [
    "multiprocessing.pool.MapResult"
  ],
  "multiprocessing.pool.Pool.__init__": [
    "multiprocessing.pool.ThreadPool"
  ],
  "multiprocessing.queues.Queue.__init__": [
    "concurrent.futures.process._SafeQueue"
  ],
  "multiprocessing.sharedctypes.SynchronizedArray.__getitem__": [
    "multiprocessing.sharedctypes.SynchronizedString"
  ],
  "multiprocessing.sharedctypes.SynchronizedArray.__getslice__": [
    "multiprocessing.sharedctypes.SynchronizedString"
  ],
  "multiprocessing.sharedctypes.SynchronizedArray.__setitem__": [
    "multiprocessing.sharedctypes.SynchronizedString"
  ],
  "multiprocessing.sharedctypes.SynchronizedArray.__setslice__": [
    "multiprocessing.sharedctypes.SynchronizedString"
  ],
  "multiprocessing.synchronize.Semaphore.__init__": [
    "multiprocessing.synchronize.BoundedSemaphore"
  ],
  "nntplib.NNTP.__init__": [
    "nntplib.NNTP_SSL"
  ],
  "numbers.Complex.__abs__": [
    "complex",
    "fractions.Fraction",
    "numbers.Integral"
  ],
  "numbers.Complex.__add__": [
    "complex",
    "fractions.Fraction"
  ],
  "numbers.Complex.__bool__": [
    "complex",
    "fractions.Fraction"
  ],
  "numbers.Complex.__complex__": [
    "complex",
    "numbers.Real"
  ],
  "numbers.Complex.__eq__": [
    "complex"
  ],
  "numbers.Complex.__mul__": [
    "complex",
    "fractions.Fraction"
  ],
  "numbers.Complex.__neg__": [
    "complex",
    "numbers.Real"
  ],
  "numbers.Complex.__pos__": [
    "complex",
    "numbers.Real"
  ],
  "numbers.Complex.__pow__": [
    "complex",
    "fractions.Fraction",
    "numbers.Integral"
  ],
  "numbers.Complex.__radd__": [
    "complex",
    "fractions.Fraction"
  ],
  "numbers.Complex.__rmul__": [
    "complex",
    "fractions.Fraction"
  ],
  "numbers.Complex.__rpow__": [
    "complex",
    "fractions.Fraction"
  ],
  "numbers.Complex.__rsub__": [
    "complex",
    "fractions.Fraction"
  ],
  "numbers.Complex.__rtruediv__": [
    "complex",
    "fractions.Fraction"
  ],
  "numbers.Complex.__sub__": [
    "complex",
    "fractions.Fraction"
  ],
  "numbers.Complex.__truediv__": [
    "complex",
    "fractions.Fraction"
  ],
  "numbers.Complex.conjugate": [
    "complex",
    "numbers.Real"
  ],
  "numbers.Complex.imag": [
    "complex",
    "numbers.Real"
  ],
  "numbers.Complex.real": [
    "complex",
    "numbers.Real"
  ],
  "numbers.Integral.__and__": [
    "int"
  ],
  "numbers.Integral.__index__": [
    "int"
  ],
  "numbers.Integral.__invert__": [
    "int"
  ],
  "numbers.Integral.__lshift__": [
    "int"
  ],
  "numbers.Integral.__rand__": [
    "int"
  ],
  "numbers.Integral.__rlshift__": [
    "int"
  ],
  "numbers.Integral.__rrshift__": [
    "int"
  ],
  "numbers.Integral.__rshift__": [
    "int"
  ],
  "numbers.Integral.__rxor__": [
    "int"
  ],
  "numbers.Integral.__xor__": [
    "int"
  ],
  "numbers.Integral.denominator": [
    "int"
  ],
  "numbers.Integral.numerator": [
    "int"
  ],
  "numbers.Rational.__float__": [
    "float",
    "numbers.Integral"
  ],
  "numbers.Rational.denominator": [
    "fractions.Fraction",
    "numbers.Integral"
  ],
  "numbers.Rational.numerator": [
    "fractions.Fraction",
    "numbers.Integral"
  ],
  "numbers.Real.__ceil__": [
    "float",
    "fractions.Fraction"
  ],
  "numbers.Real.__divmod__": [
    "float",
    "fractions.Fraction"
  ],
  "numbers.Real.__float__": [
    "numbers.Rational"
  ],
  "numbers.Real.__floor__": [
    "float",
    "fractions.Fraction"
  ],
  "numbers.Real.__floordiv__": [
    "float",
    "fractions.Fraction"
  ],
  "numbers.Real.__le__": [
    "float",
    "fractions.Fraction"
  ],
  "numbers.Real.__lt__": [
    "float",
    "fractions.Fraction"
  ],
  "numbers.Real.__mod__": [
    "float",
    "fractions.Fraction"
  ],
  "numbers.Real.__neg__": [
    "fractions.Fraction",
    "numbers.Integral"
  ],
  "numbers.Real.__pos__": [
    "fractions.Fraction",
    "numbers.Integral"
  ],
  "numbers.Real.__rdivmod__": [
    "float",
    "fractions.Fraction"
  ],
  "numbers.Real.__rfloordiv__": [
    "float",
    "fractions.Fraction"
  ],
  "numbers.Real.__rmod__": [
    "float",
    "fractions.Fraction"
  ],
  "numbers.Real.__round__": [
    "float",
    "fractions.Fraction",
    "numbers.Integral"
  ],
  "numbers.Real.__trunc__": [
    "float",
    "fractions.Fraction"
  ],
  "numbers.Real.conjugate": [
    "fractions.Fraction"
  ],
  "numbers.Real.imag": [
    "fractions.Fraction"
  ],
  "numbers.Real.real": [
    "fractions.Fraction"
  ],
  "numbers._ComplexLike.__abs__": [
    "numbers._IntegralLike"
  ],
  "numbers._ComplexLike.__neg__": [
    "numbers._RealLike"
  ],
  "numbers._ComplexLike.__pos__": [
    "numbers._RealLike"
  ],
  "numbers._IntegralLike.__index__": [
    "numbers.Integral"
  ],
  "numbers._IntegralLike.__int__": [
    "numbers.Integral"
  ],
  "numbers._IntegralLike.__invert__": [
    "numbers.Integral"
  ],
  "numbers._RealLike.__ceil__": [
    "numbers.Real"
  ],
  "numbers._RealLike.__float__": [
    "numbers.Real"
  ],
  "numbers._RealLike.__floor__": [
    "numbers.Real"
  ],
  "numbers._RealLike.__neg__": [
    "numbers._IntegralLike"
  ],
  "numbers._RealLike.__pos__": [
    "numbers._IntegralLike"
  ],
  "numbers._RealLike.__trunc__": [
    "numbers.Real"
  ],
  "object.__dict__": [
    "types.ModuleType"
  ],
  "object.__module__": [
    "typing.TypeAliasType"
  ],
  "optparse.BadOptionError.__init__": [
    "optparse.AmbiguousOptionError"
  ],
  "optparse.HelpFormatter.__init__": [
    "optparse.IndentedHelpFormatter",
    "optparse.TitledHelpFormatter"
  ],
  "optparse.HelpFormatter.expand_default": [
    "pip._internal.cli.parser.UpdatingDefaultsHelpFormatter"
  ],
  "optparse.HelpFormatter.format_description": [
    "pip._internal.cli.parser.PrettyHelpFormatter"
  ],
  "optparse.HelpFormatter.format_epilog": [
    "pip._internal.cli.parser.PrettyHelpFormatter"
  ],
  "optparse.HelpFormatter.format_heading": [
    "optparse.IndentedHelpFormatter",
    "optparse.TitledHelpFormatter"
  ],
  "optparse.HelpFormatter.format_option_strings": [
    "pip._internal.cli.parser.PrettyHelpFormatter"
  ],
  "optparse.HelpFormatter.format_usage": [
    "optparse.IndentedHelpFormatter",
    "optparse.TitledHelpFormatter"
  ],
  "optparse.IndentedHelpFormatter.__init__": [
    "pip._internal.cli.parser.PrettyHelpFormatter"
  ],
  "optparse.IndentedHelpFormatter.format_heading": [
    "pip._internal.cli.parser.PrettyHelpFormatter"
  ],
  "optparse.IndentedHelpFormatter.format_usage": [
    "pip._internal.cli.parser.PrettyHelpFormatter"
  ],
  "optparse.OptParseError.__init__": [
    "optparse.BadOptionError",
    "optparse.OptionError"
  ],
  "optparse.OptionContainer.__init__": [
    "optparse.OptionGroup",
    "optparse.OptionParser"
  ],
  "optparse.OptionContainer.format_help": [
    "optparse.OptionParser"
  ],
  "optparse.OptionContainer.format_option_help": [
    "optparse.OptionParser"
  ],
  "optparse.OptionParser.error": [
    "pip._internal.cli.parser.ConfigOptionParser"
  ],
  "optparse.OptionParser.get_default_values": [
    "pip._internal.cli.parser.ConfigOptionParser"
  ],
  "os.PathLike.__fspath__": [
    "pathlib.PurePath",
    "utils.yaml._DirPlaceholder"
  ],
  "packaging._parser.Node.serialize": [
    "packaging._parser.Op",
    "packaging._parser.Value",
    "packaging._parser.Variable"
  ],
  "packaging.requirements.Requirement.__eq__": [
    "pkg_resources.Requirement"
  ],
  "packaging.requirements.Requirement.__hash__": [
    "pkg_resources.Requirement"
  ],
  "packaging.requirements.Requirement.__init__": [
    "pkg_resources.Requirement"
  ],
  "packaging.requirements.Requirement.__repr__": [
    "pkg_resources.Requirement"
  ],
  "packaging.specifiers.BaseSpecifier.__eq__": [
    "packaging.specifiers.Specifier",
    "packaging.specifiers.SpecifierSet"
  ],
  "packaging.specifiers.BaseSpecifier.__hash__": [
    "packaging.specifiers.Specifier",
    "packaging.specifiers.SpecifierSet"
  ],
  "packaging.specifiers.BaseSpecifier.__str__": [
    "packaging.specifiers.Specifier",
    "packaging.specifiers.SpecifierSet"
  ],
  "packaging.specifiers.BaseSpecifier.contains": [
    "packaging.specifiers.Specifier",
    "packaging.specifiers.SpecifierSet"
  ],
  "packaging.specifiers.BaseSpecifier.filter": [
    "packaging.specifiers.Specifier",
    "packaging.specifiers.SpecifierSet"
  ],
  "packaging.specifiers.BaseSpecifier.prereleases": [
    "packaging.specifiers.Specifier",
    "packaging.specifiers.SpecifierSet"
  ],
  "packaging.specifiers.BaseSpecifier.prereleases@setter": [
    "packaging.specifiers.Specifier",
    "packaging.specifiers.SpecifierSet"
  ],
  "packaging.version.Version.release": [
    "packaging.version._TrimmedRelease"
  ],
  "paramiko.agent.AgentProxyThread.__init__": [
    "paramiko.agent.AgentLocalProxy",
    "paramiko.agent.AgentRemoteProxy"
  ],
  "paramiko.agent.AgentSSH.__init__": [
    "paramiko.agent.Agent",
    "paramiko.agent.AgentServerProxy"
  ],
  "paramiko.auth_strategy.AuthSource.__init__": [
    "paramiko.auth_strategy.Password"
  ],
  "paramiko.auth_strategy.AuthSource.authenticate": [
    "paramiko.auth_strategy.NoneAuth",
    "paramiko.auth_strategy.Password",
    "paramiko.auth_strategy.PrivateKey"
  ],
  "paramiko.client.MissingHostKeyPolicy.missing_host_key": [
    "paramiko.client.AutoAddPolicy",
    "paramiko.client.RejectPolicy",
    "paramiko.client.WarningPolicy"
  ],
  "paramiko.file.BufferedFile.__del__": [
    "paramiko.sftp_file.SFTPFile"
  ],
  "paramiko.file.BufferedFile.__init__": [
    "paramiko.channel.ChannelFile",
    "paramiko.sftp_file.SFTPFile"
  ],
  "paramiko.file.BufferedFile.close": [
    "paramiko.channel.ChannelStdinFile",
    "paramiko.sftp_file.SFTPFile"
  ],
  "paramiko.file.BufferedFile.seek": [
    "paramiko.sftp_file.SFTPFile"
  ],
  "paramiko.file.BufferedFile.seekable": [
    "paramiko.sftp_file.SFTPFile"
  ],
  "paramiko.pkey.PKey.__hash__": [
    "paramiko.dsskey.DSSKey",
    "paramiko.ecdsakey.ECDSAKey",
    "paramiko.ed25519key.Ed25519Key",
    "paramiko.rsakey.RSAKey"
  ],
  "paramiko.pkey.PKey.__init__": [
    "paramiko.agent.AgentKey",
    "paramiko.dsskey.DSSKey",
    "paramiko.ecdsakey.ECDSAKey",
    "paramiko.ed25519key.Ed25519Key",
    "paramiko.rsakey.RSAKey"
  ],
  "paramiko.pkey.PKey.asbytes": [
    "paramiko.agent.AgentKey",
    "paramiko.dsskey.DSSKey",
    "paramiko.ecdsakey.ECDSAKey",
    "paramiko.ed25519key.Ed25519Key",
    "paramiko.rsakey.RSAKey"
  ],
  "paramiko.pkey.PKey.can_sign": [
    "paramiko.dsskey.DSSKey",
    "paramiko.ecdsakey.ECDSAKey",
    "paramiko.ed25519key.Ed25519Key",
    "paramiko.rsakey.RSAKey"
  ],
  "paramiko.pkey.PKey.get_bits": [
    "paramiko.dsskey.DSSKey",
    "paramiko.ecdsakey.ECDSAKey",
    "paramiko.ed25519key.Ed25519Key",
    "paramiko.rsakey.RSAKey"
  ],
  "paramiko.pkey.PKey.get_name": [
    "paramiko.agent.AgentKey",
    "paramiko.dsskey.DSSKey",
    "paramiko.ecdsakey.ECDSAKey",
    "paramiko.ed25519key.Ed25519Key",
    "paramiko.rsakey.RSAKey"
  ],
  "paramiko.pkey.PKey.sign_ssh_data": [
    "paramiko.agent.AgentKey",
    "paramiko.dsskey.DSSKey",
    "paramiko.ecdsakey.ECDSAKey",
    "paramiko.ed25519key.Ed25519Key",
    "paramiko.rsakey.RSAKey"
  ],
  "paramiko.pkey.PKey.verify_ssh_sig": [
    "paramiko.dsskey.DSSKey",
    "paramiko.ecdsakey.ECDSAKey",
    "paramiko.ed25519key.Ed25519Key",
    "paramiko.rsakey.RSAKey"
  ],
  "paramiko.pkey.PKey.write_private_key": [
    "paramiko.dsskey.DSSKey",
    "paramiko.ecdsakey.ECDSAKey",
    "paramiko.rsakey.RSAKey"
  ],
  "paramiko.pkey.PKey.write_private_key_file": [
    "paramiko.dsskey.DSSKey",
    "paramiko.ecdsakey.ECDSAKey",
    "paramiko.rsakey.RSAKey"
  ],
  "paramiko.server.SubsystemHandler.finish_subsystem": [
    "paramiko.sftp_server.SFTPServer"
  ],
  "paramiko.server.SubsystemHandler.start_subsystem": [
    "paramiko.sftp_server.SFTPServer"
  ],
  "paramiko.sftp.BaseSFTP.__init__": [
    "paramiko.sftp_client.SFTPClient",
    "paramiko.sftp_server.SFTPServer"
  ],
  "paramiko.ssh_gss._SSH_GSSAuth.__init__": [
    "paramiko.ssh_gss._SSH_GSSAPI_NEW",
    "paramiko.ssh_gss._SSH_GSSAPI_OLD",
    "paramiko.ssh_gss._SSH_SSPI"
  ],
  "parso.file_io.FileIO.__init__": [
    "parso.file_io.KnownContentFileIO"
  ],
  "parso.file_io.FileIO.read": [
    "parso.file_io.KnownContentFileIO"
  ],
  "parso.grammar.Grammar.__init__": [
    "parso.grammar.PythonGrammar"
  ],
  "parso.normalizer.Normalizer.__init__": [
    "parso.normalizer.RefactoringNormalizer",
    "parso.python.errors.ErrorFinder"
  ],
  "parso.normalizer.Normalizer.add_issue": [
    "parso.python.errors.ErrorFinder"
  ],
  "parso.normalizer.Normalizer.finalize": [
    "parso.python.errors.ErrorFinder"
  ],
  "parso.normalizer.Normalizer.initialize": [
    "parso.python.errors.ErrorFinder"
  ],
  "parso.normalizer.Normalizer.visit": [
    "parso.normalizer.RefactoringNormalizer",
    "parso.python.errors.ErrorFinder"
  ],
  "parso.normalizer.Normalizer.visit_leaf": [
    "parso.normalizer.RefactoringNormalizer",
    "parso.python.errors.ErrorFinder"
  ],
  "parso.normalizer.Normalizer.visit_node": [
    "parso.python.errors.ErrorFinder"
  ],
  "parso.normalizer.Rule._get_message": [
    "parso.python.errors.IndentationRule",
    "parso.python.errors.SyntaxRule"
  ],
  "parso.normalizer.Rule.get_node": [
    "parso.python.errors._AnnotatorRule",
    "parso.python.errors._ExpectIndentedBlock",
    "parso.python.errors._InvalidSyntaxRule",
    "parso.python.errors._ReturnAndYieldChecks",
    "parso.python.errors._YieldFromCheck"
  ],
  "parso.normalizer.Rule.is_issue": [
    "parso.python.errors._AnnotatorRule",
    "parso.python.errors._ArglistRule",
    "parso.python.errors._ArgumentRule",
    "parso.python.errors._AwaitOutsideAsync",
    "parso.python.errors._BreakOutsideLoop",
    "parso.python.errors._BytesAndStringMix",
    "parso.python.errors._CompForRule",
    "parso.python.errors._ContinueChecks",
    "parso.python.errors._DelStmtRule",
    "parso.python.errors._ExpectIndentedBlock",
    "parso.python.errors._ExprListRule",
    "parso.python.errors._ExprStmtRule",
    "parso.python.errors._FStringRule",
    "parso.python.errors._ForStmtRule",
    "parso.python.errors._FutureImportRule",
    "parso.python.errors._ImportStarInFunction",
    "parso.python.errors._InvalidSyntaxRule",
    "parso.python.errors._NameChecks",
    "parso.python.errors._NamedExprRule",
    "parso.python.errors._NonlocalModuleLevelRule",
    "parso.python.errors._ParameterRule",
    "parso.python.errors._ReturnAndYieldChecks",
    "parso.python.errors._StarCheck",
    "parso.python.errors._StarExprParentRule",
    "parso.python.errors._StarExprRule",
    "parso.python.errors._StarStarCheck",
    "parso.python.errors._StringChecks",
    "parso.python.errors._TrailingImportComma",
    "parso.python.errors._TryStmtRule",
    "parso.python.errors._WithItemRule",
    "parso.python.errors._YieldFromCheck",
    "parso.python.pep8.BlankLineAtEnd"
  ],
  "parso.normalizer.Rule.message": [
    "parso.python.errors._ArglistRule"
  ],
  "parso.parser.BaseParser.__init__": [
    "parso.python.parser.Parser"
  ],
  "parso.parser.BaseParser.convert_leaf": [
    "parso.python.parser.Parser"
  ],
  "parso.parser.BaseParser.convert_node": [
    "parso.python.parser.Parser"
  ],
  "parso.parser.BaseParser.error_recovery": [
    "parso.python.parser.Parser"
  ],
  "parso.parser.BaseParser.parse": [
    "parso.python.parser.Parser"
  ],
  "parso.python.errors.ErrorFinder.__init__": [
    "parso.python.pep8.PEP8Normalizer"
  ],
  "parso.python.errors.ErrorFinder.add_issue": [
    "parso.python.pep8.PEP8Normalizer"
  ],
  "parso.python.errors.ErrorFinder.visit_leaf": [
    "parso.python.pep8.PEP8Normalizer"
  ],
  "parso.python.errors.ErrorFinder.visit_node": [
    "parso.python.pep8.PEP8Normalizer"
  ],
  "parso.python.pep8.BracketNode.__init__": [
    "parso.python.pep8.ImplicitNode"
  ],
  "parso.python.pep8.IndentationNode.__init__": [
    "parso.python.pep8.BackslashNode",
    "parso.python.pep8.BracketNode"
  ],
  "parso.python.tree.ClassOrFunc.name": [
    "parso.python.tree.Function"
  ],
  "parso.python.tree.Function.__init__": [
    "parso.python.tree.Lambda"
  ],
  "parso.python.tree.Function._get_param_nodes": [
    "parso.python.tree.Lambda"
  ],
  "parso.python.tree.Function.annotation": [
    "parso.python.tree.Lambda"
  ],
  "parso.python.tree.Function.name": [
    "parso.python.tree.Lambda"
  ],
  "parso.python.tree.Import.is_nested": [
    "parso.python.tree.ImportName"
  ],
  "parso.python.tree.Scope.__init__": [
    "parso.python.tree.Module"
  ],
  "parso.tree.BaseNode.__init__": [
    "parso.tree.Node"
  ],
  "parso.tree.BaseNode.__repr__": [
    "parso.tree.Node"
  ],
  "parso.tree.BaseNode.get_code": [
    "parso.python.tree.Param"
  ],
  "parso.tree.Leaf.__init__": [
    "parso.tree.ErrorLeaf",
    "parso.tree.TypedLeaf"
  ],
  "parso.tree.Leaf.__repr__": [
    "parso.tree.ErrorLeaf"
  ],
  "parso.tree.Leaf.end_pos": [
    "parso.python.tree._LeafWithoutNewlines"
  ],
  "parso.tree.Leaf.get_start_pos_of_prefix": [
    "parso.python.tree.PythonLeaf"
  ],
  "parso.tree.NodeOrLeaf.end_pos": [
    "parso.tree.BaseNode",
    "parso.tree.Leaf"
  ],
  "parso.tree.NodeOrLeaf.get_code": [
    "parso.tree.BaseNode",
    "parso.tree.Leaf"
  ],
  "parso.tree.NodeOrLeaf.get_first_leaf": [
    "parso.tree.BaseNode",
    "parso.tree.Leaf"
  ],
  "parso.tree.NodeOrLeaf.get_last_leaf": [
    "parso.tree.BaseNode",
    "parso.tree.Leaf"
  ],
  "parso.tree.NodeOrLeaf.get_start_pos_of_prefix": [
    "parso.tree.BaseNode",
    "parso.tree.Leaf"
  ],
  "parso.tree.NodeOrLeaf.start_pos": [
    "parso.tree.BaseNode",
    "parso.tree.Leaf"
  ],
  "parso.tree.NodeOrLeaf.start_pos@setter": [
    "parso.tree.Leaf"
  ],
  "parso.tree.NodeOrLeaf.type": [
    "parso.python.tree.KeywordStatement"
  ],
  "pathlib.PurePath.__new__": [
    "pathlib.Path"
  ],
  "pathspec.pathspec.PathSpec.__eq__": [
    "pathspec.gitignore.GitIgnoreSpec"
  ],
  "pathspec.pathspec.PathSpec._match_file": [
    "pathspec.gitignore.GitIgnoreSpec"
  ],
  "pathspec.pathspec.PathSpec.from_lines": [
    "pathspec.gitignore.GitIgnoreSpec"
  ],
  "pathspec.pattern.Pattern.__init__": [
    "pathspec.pattern.RegexPattern"
  ],
  "pathspec.pattern.Pattern.match_file": [
    "pathspec.pattern.RegexPattern"
  ],
  "pathspec.pattern.RegexPattern.pattern_to_regex": [
    "pathspec.patterns.gitwildmatch.GitWildMatchPattern"
  ],
  "pathspec.patterns.gitwildmatch.GitWildMatchPattern.pattern_to_regex": [
    "pathspec.patterns.gitwildmatch.GitIgnorePattern"
  ],
  "pickle.Pickler.__init__": [
    "multiprocessing.reduction.ForkingPickler"
  ],
  "pip._internal.build_env.BuildEnvironment.__enter__": [
    "pip._internal.build_env.NoOpBuildEnvironment"
  ],
  "pip._internal.build_env.BuildEnvironment.__exit__": [
    "pip._internal.build_env.NoOpBuildEnvironment"
  ],
  "pip._internal.build_env.BuildEnvironment.__init__": [
    "pip._internal.build_env.NoOpBuildEnvironment"
  ],
  "pip._internal.build_env.BuildEnvironment.install_requirements": [
    "pip._internal.build_env.NoOpBuildEnvironment"
  ],
  "pip._internal.cache.Cache.__init__": [
    "pip._internal.cache.SimpleWheelCache",
    "pip._internal.cache.WheelCache"
  ],
  "pip._internal.cache.Cache.get": [
    "pip._internal.cache.SimpleWheelCache",
    "pip._internal.cache.WheelCache"
  ],
  "pip._internal.cache.Cache.get_path_for_link": [
    "pip._internal.cache.SimpleWheelCache",
    "pip._internal.cache.WheelCache"
  ],
  "pip._internal.cache.SimpleWheelCache.__init__": [
    "pip._internal.cache.EphemWheelCache"
  ],
  "pip._internal.cli.base_command.Command.add_options": [
    "pip._internal.commands.cache.CacheCommand",
    "pip._internal.commands.completion.CompletionCommand",
    "pip._internal.commands.configuration.ConfigurationCommand",
    "pip._internal.commands.debug.DebugCommand",
    "pip._internal.commands.download.DownloadCommand",
    "pip._internal.commands.freeze.FreezeCommand",
    "pip._internal.commands.hash.HashCommand",
    "pip._internal.commands.index.IndexCommand",
    "pip._internal.commands.inspect.InspectCommand",
    "pip._internal.commands.install.InstallCommand",
    "pip._internal.commands.list.ListCommand",
    "pip._internal.commands.search.SearchCommand",
    "pip._internal.commands.show.ShowCommand",
    "pip._internal.commands.uninstall.UninstallCommand",
    "pip._internal.commands.wheel.WheelCommand"
  ],
  "pip._internal.cli.base_command.Command.handle_pip_version_check": [
    "pip._internal.cli.index_command.IndexGroupCommand"
  ],
  "pip._internal.cli.base_command.Command.run": [
    "pip._internal.commands.cache.CacheCommand",
    "pip._internal.commands.check.CheckCommand",
    "pip._internal.commands.completion.CompletionCommand",
    "pip._internal.commands.configuration.ConfigurationCommand",
    "pip._internal.commands.debug.DebugCommand",
    "pip._internal.commands.download.DownloadCommand",
    "pip._internal.commands.freeze.FreezeCommand",
    "pip._internal.commands.hash.HashCommand",
    "pip._internal.commands.help.HelpCommand",
    "pip._internal.commands.index.IndexCommand",
    "pip._internal.commands.inspect.InspectCommand",
    "pip._internal.commands.install.InstallCommand",
    "pip._internal.commands.list.ListCommand",
    "pip._internal.commands.search.SearchCommand",
    "pip._internal.commands.show.ShowCommand",
    "pip._internal.commands.uninstall.UninstallCommand",
    "pip._internal.commands.wheel.WheelCommand"
  ],
  "pip._internal.cli.command_context.CommandContextMixIn.__init__": [
    "pip._internal.cli.base_command.Command",
    "pip._internal.cli.index_command.SessionCommandMixin"
  ],
  "pip._internal.cli.index_command.IndexGroupCommand.handle_pip_version_check": [
    "pip._internal.commands.list.ListCommand"
  ],
  "pip._internal.cli.spinners.SpinnerInterface.finish": [
    "pip._internal.cli.spinners.InteractiveSpinner",
    "pip._internal.cli.spinners.NonInteractiveSpinner"
  ],
  "pip._internal.cli.spinners.SpinnerInterface.spin": [
    "pip._internal.cli.spinners.InteractiveSpinner",
    "pip._internal.cli.spinners.NonInteractiveSpinner"
  ],
  "pip._internal.distributions.base.AbstractDistribution.build_tracker_id": [
    "pip._internal.distributions.installed.InstalledDistribution",
    "pip._internal.distributions.sdist.SourceDistribution",
    "pip._internal.distributions.wheel.WheelDistribution"
  ],
  "pip._internal.distributions.base.AbstractDistribution.get_metadata_distribution": [
    "pip._internal.distributions.installed.InstalledDistribution",
    "pip._internal.distributions.sdist.SourceDistribution",
    "pip._internal.distributions.wheel.WheelDistribution"
  ],
  "pip._internal.distributions.base.AbstractDistribution.prepare_distribution_metadata": [
    "pip._internal.distributions.installed.InstalledDistribution",
    "pip._internal.distributions.sdist.SourceDistribution",
    "pip._internal.distributions.wheel.WheelDistribution"
  ],
  "pip._internal.exceptions.DiagnosticPipError.__init__": [
    "pip._internal.exceptions.ExternallyManagedEnvironment",
    "pip._internal.exceptions.InstallationSubprocessError",
    "pip._internal.exceptions.InvalidInstalledPackage",
    "pip._internal.exceptions.InvalidPyProjectBuildRequires",
    "pip._internal.exceptions.LegacyDistutilsInstall",
    "pip._internal.exceptions.MissingPyProjectBuildRequires",
    "pip._internal.exceptions.UninstallMissingRecord"
  ],
  "pip._internal.exceptions.HashError.body": [
    "pip._internal.exceptions.HashMismatch",
    "pip._internal.exceptions.HashMissing"
  ],
  "pip._internal.exceptions.InstallationSubprocessError.__init__": [
    "pip._internal.exceptions.MetadataGenerationFailed"
  ],
  "pip._internal.exceptions.InstallationSubprocessError.__str__": [
    "pip._internal.exceptions.MetadataGenerationFailed"
  ],
  "pip._internal.index.sources.LinkSource.file_links": [
    "pip._internal.index.sources._FlatDirectorySource",
    "pip._internal.index.sources._IndexDirectorySource",
    "pip._internal.index.sources._LocalFileSource",
    "pip._internal.index.sources._RemoteFileSource"
  ],
  "pip._internal.index.sources.LinkSource.link": [
    "pip._internal.index.sources._FlatDirectorySource",
    "pip._internal.index.sources._IndexDirectorySource",
    "pip._internal.index.sources._LocalFileSource",
    "pip._internal.index.sources._RemoteFileSource"
  ],
  "pip._internal.index.sources.LinkSource.page_candidates": [
    "pip._internal.index.sources._FlatDirectorySource",
    "pip._internal.index.sources._IndexDirectorySource",
    "pip._internal.index.sources._LocalFileSource",
    "pip._internal.index.sources._RemoteFileSource"
  ],
  "pip._internal.metadata.base.BaseDistribution._metadata_impl": [
    "pip._internal.metadata.importlib._dists.Distribution",
    "pip._internal.metadata.pkg_resources.Distribution"
  ],
  "pip._internal.metadata.base.BaseDistribution.canonical_name": [
    "pip._internal.metadata.importlib._dists.Distribution",
    "pip._internal.metadata.pkg_resources.Distribution"
  ],
  "pip._internal.metadata.base.BaseDistribution.from_directory": [
    "pip._internal.metadata.importlib._dists.Distribution",
    "pip._internal.metadata.pkg_resources.Distribution"
  ],
  "pip._internal.metadata.base.BaseDistribution.from_metadata_file_contents": [
    "pip._internal.metadata.importlib._dists.Distribution",
    "pip._internal.metadata.pkg_resources.Distribution"
  ],
  "pip._internal.metadata.base.BaseDistribution.from_wheel": [
    "pip._internal.metadata.importlib._dists.Distribution",
    "pip._internal.metadata.pkg_resources.Distribution"
  ],
  "pip._internal.metadata.base.BaseDistribution.info_location": [
    "pip._internal.metadata.importlib._dists.Distribution",
    "pip._internal.metadata.pkg_resources.Distribution"
  ],
  "pip._internal.metadata.base.BaseDistribution.installed_by_distutils": [
    "pip._internal.metadata.pkg_resources.Distribution"
  ],
  "pip._internal.metadata.base.BaseDistribution.installed_location": [
    "pip._internal.metadata.importlib._dists.Distribution",
    "pip._internal.metadata.pkg_resources.Distribution"
  ],
  "pip._internal.metadata.base.BaseDistribution.is_file": [
    "pip._internal.metadata.importlib._dists.Distribution",
    "pip._internal.metadata.pkg_resources.Distribution"
  ],
  "pip._internal.metadata.base.BaseDistribution.iter_dependencies": [
    "pip._internal.metadata.importlib._dists.Distribution",
    "pip._internal.metadata.pkg_resources.Distribution"
  ],
  "pip._internal.metadata.base.BaseDistribution.iter_distutils_script_names": [
    "pip._internal.metadata.importlib._dists.Distribution",
    "pip._internal.metadata.pkg_resources.Distribution"
  ],
  "pip._internal.metadata.base.BaseDistribution.iter_entry_points": [
    "pip._internal.metadata.importlib._dists.Distribution",
    "pip._internal.metadata.pkg_resources.Distribution"
  ],
  "pip._internal.metadata.base.BaseDistribution.iter_provided_extras": [
    "pip._internal.metadata.importlib._dists.Distribution",
    "pip._internal.metadata.pkg_resources.Distribution"
  ],
  "pip._internal.metadata.base.BaseDistribution.location": [
    "pip._internal.metadata.importlib._dists.Distribution",
    "pip._internal.metadata.pkg_resources.Distribution"
  ],
  "pip._internal.metadata.base.BaseDistribution.raw_version": [
    "pip._internal.metadata.importlib._dists.Distribution",
    "pip._internal.metadata.pkg_resources.Distribution"
  ],
  "pip._internal.metadata.base.BaseDistribution.read_text": [
    "pip._internal.metadata.importlib._dists.Distribution",
    "pip._internal.metadata.pkg_resources.Distribution"
  ],
  "pip._internal.metadata.base.BaseDistribution.version": [
    "pip._internal.metadata.importlib._dists.Distribution",
    "pip._internal.metadata.pkg_resources.Distribution"
  ],
  "pip._internal.metadata.base.BaseEnvironment._iter_distributions": [
    "pip._internal.metadata.importlib._envs.Environment",
    "pip._internal.metadata.pkg_resources.Environment"
  ],
  "pip._internal.metadata.base.BaseEnvironment.default": [
    "pip._internal.metadata.importlib._envs.Environment",
    "pip._internal.metadata.pkg_resources.Environment"
  ],
  "pip._internal.metadata.base.BaseEnvironment.from_paths": [
    "pip._internal.metadata.importlib._envs.Environment",
    "pip._internal.metadata.pkg_resources.Environment"
  ],
  "pip._internal.metadata.base.BaseEnvironment.get_distribution": [
    "pip._internal.metadata.importlib._envs.Environment",
    "pip._internal.metadata.pkg_resources.Environment"
  ],
  "pip._internal.metadata.base.Wheel.as_zipfile": [
    "pip._internal.metadata.base.FilesystemWheel",
    "pip._internal.metadata.base.MemoryWheel"
  ],
  "pip._internal.network.auth.KeyRingBaseProvider.get_auth_info": [
    "pip._internal.network.auth.KeyRingCliProvider",
    "pip._internal.network.auth.KeyRingNullProvider",
    "pip._internal.network.auth.KeyRingPythonProvider"
  ],
  "pip._internal.network.auth.KeyRingBaseProvider.save_auth_info": [
    "pip._internal.network.auth.KeyRingCliProvider",
    "pip._internal.network.auth.KeyRingNullProvider",
    "pip._internal.network.auth.KeyRingPythonProvider"
  ],
  "pip._internal.resolution.base.BaseResolver.get_installation_order": [
    "pip._internal.resolution.legacy.resolver.Resolver",
    "pip._internal.resolution.resolvelib.resolver.Resolver"
  ],
  "pip._internal.resolution.base.BaseResolver.resolve": [
    "pip._internal.resolution.legacy.resolver.Resolver",
    "pip._internal.resolution.resolvelib.resolver.Resolver"
  ],
  "pip._internal.resolution.resolvelib.base.Candidate.format_for_error": [
    "pip._internal.resolution.resolvelib.candidates.AlreadyInstalledCandidate",
    "pip._internal.resolution.resolvelib.candidates.ExtrasCandidate",
    "pip._internal.resolution.resolvelib.candidates.RequiresPythonCandidate",
    "pip._internal.resolution.resolvelib.candidates._InstallRequirementBackedCandidate"
  ],
  "pip._internal.resolution.resolvelib.base.Candidate.get_install_requirement": [
    "pip._internal.resolution.resolvelib.candidates.AlreadyInstalledCandidate",
    "pip._internal.resolution.resolvelib.candidates.ExtrasCandidate",
    "pip._internal.resolution.resolvelib.candidates.RequiresPythonCandidate",
    "pip._internal.resolution.resolvelib.candidates._InstallRequirementBackedCandidate"
  ],
  "pip._internal.resolution.resolvelib.base.Candidate.is_editable": [
    "pip._internal.resolution.resolvelib.candidates.AlreadyInstalledCandidate",
    "pip._internal.resolution.resolvelib.candidates.ExtrasCandidate"
  ],
  "pip._internal.resolution.resolvelib.base.Candidate.is_installed": [
    "pip._internal.resolution.resolvelib.candidates.ExtrasCandidate"
  ],
  "pip._internal.resolution.resolvelib.base.Candidate.iter_dependencies": [
    "pip._internal.resolution.resolvelib.candidates.AlreadyInstalledCandidate",
    "pip._internal.resolution.resolvelib.candidates.ExtrasCandidate",
    "pip._internal.resolution.resolvelib.candidates.RequiresPythonCandidate",
    "pip._internal.resolution.resolvelib.candidates._InstallRequirementBackedCandidate"
  ],
  "pip._internal.resolution.resolvelib.base.Candidate.name": [
    "pip._internal.resolution.resolvelib.candidates.AlreadyInstalledCandidate",
    "pip._internal.resolution.resolvelib.candidates.ExtrasCandidate",
    "pip._internal.resolution.resolvelib.candidates.RequiresPythonCandidate",
    "pip._internal.resolution.resolvelib.candidates._InstallRequirementBackedCandidate"
  ],
  "pip._internal.resolution.resolvelib.base.Candidate.project_name": [
    "pip._internal.resolution.resolvelib.candidates.AlreadyInstalledCandidate",
    "pip._internal.resolution.resolvelib.candidates.ExtrasCandidate",
    "pip._internal.resolution.resolvelib.candidates.RequiresPythonCandidate",
    "pip._internal.resolution.resolvelib.candidates._InstallRequirementBackedCandidate"
  ],
  "pip._internal.resolution.resolvelib.base.Candidate.source_link": [
    "pip._internal.resolution.resolvelib.candidates.ExtrasCandidate",
    "pip._internal.resolution.resolvelib.candidates._InstallRequirementBackedCandidate"
  ],
  "pip._internal.resolution.resolvelib.base.Candidate.version": [
    "pip._internal.resolution.resolvelib.candidates.AlreadyInstalledCandidate",
    "pip._internal.resolution.resolvelib.candidates.ExtrasCandidate",
    "pip._internal.resolution.resolvelib.candidates.RequiresPythonCandidate",
    "pip._internal.resolution.resolvelib.candidates._InstallRequirementBackedCandidate"
  ],
  "pip._internal.resolution.resolvelib.base.Requirement.format_for_error": [
    "pip._internal.resolution.resolvelib.requirements.ExplicitRequirement",
    "pip._internal.resolution.resolvelib.requirements.RequiresPythonRequirement",
    "pip._internal.resolution.resolvelib.requirements.SpecifierRequirement",
    "pip._internal.resolution.resolvelib.requirements.UnsatisfiableRequirement"
  ],
  "pip._internal.resolution.resolvelib.base.Requirement.get_candidate_lookup": [
    "pip._internal.resolution.resolvelib.requirements.ExplicitRequirement",
    "pip._internal.resolution.resolvelib.requirements.RequiresPythonRequirement",
    "pip._internal.resolution.resolvelib.requirements.SpecifierRequirement",
    "pip._internal.resolution.resolvelib.requirements.UnsatisfiableRequirement"
  ],
  "pip._internal.resolution.resolvelib.base.Requirement.is_satisfied_by": [
    "pip._internal.resolution.resolvelib.requirements.ExplicitRequirement",
    "pip._internal.resolution.resolvelib.requirements.RequiresPythonRequirement",
    "pip._internal.resolution.resolvelib.requirements.SpecifierRequirement",
    "pip._internal.resolution.resolvelib.requirements.UnsatisfiableRequirement"
  ],
  "pip._internal.resolution.resolvelib.base.Requirement.name": [
    "pip._internal.resolution.resolvelib.requirements.ExplicitRequirement",
    "pip._internal.resolution.resolvelib.requirements.RequiresPythonRequirement",
    "pip._internal.resolution.resolvelib.requirements.SpecifierRequirement",
    "pip._internal.resolution.resolvelib.requirements.UnsatisfiableRequirement"
  ],
  "pip._internal.resolution.resolvelib.base.Requirement.project_name": [
    "pip._internal.resolution.resolvelib.requirements.ExplicitRequirement",
    "pip._internal.resolution.resolvelib.requirements.RequiresPythonRequirement",
    "pip._internal.resolution.resolvelib.requirements.SpecifierRequirement",
    "pip._internal.resolution.resolvelib.requirements.UnsatisfiableRequirement"
  ],
  "pip._internal.resolution.resolvelib.candidates._InstallRequirementBackedCandidate.__init__": [
    "pip._internal.resolution.resolvelib.candidates.EditableCandidate",
    "pip._internal.resolution.resolvelib.candidates.LinkCandidate"
  ],
  "pip._internal.resolution.resolvelib.candidates._InstallRequirementBackedCandidate._prepare_distribution": [
    "pip._internal.resolution.resolvelib.candidates.EditableCandidate",
    "pip._internal.resolution.resolvelib.candidates.LinkCandidate"
  ],
  "pip._internal.resolution.resolvelib.requirements.SpecifierRequirement.__eq__": [
    "pip._internal.resolution.resolvelib.requirements.SpecifierWithoutExtrasRequirement"
  ],
  "pip._internal.resolution.resolvelib.requirements.SpecifierRequirement.__hash__": [
    "pip._internal.resolution.resolvelib.requirements.SpecifierWithoutExtrasRequirement"
  ],
  "pip._internal.resolution.resolvelib.requirements.SpecifierRequirement.__init__": [
    "pip._internal.resolution.resolvelib.requirements.SpecifierWithoutExtrasRequirement"
  ],
  "pip._internal.resolution.resolvelib.requirements.SpecifierRequirement._equal": [
    "pip._internal.resolution.resolvelib.requirements.SpecifierWithoutExtrasRequirement"
  ],
  "pip._internal.utils.hashes.Hashes.__init__": [
    "pip._internal.utils.hashes.MissingHashes"
  ],
  "pip._internal.utils.hashes.Hashes._raise": [
    "pip._internal.utils.hashes.MissingHashes"
  ],
  "pip._internal.utils.temp_dir.TempDirectory.__init__": [
    "pip._internal.utils.temp_dir.AdjacentTempDirectory"
  ],
  "pip._internal.utils.temp_dir.TempDirectory._create": [
    "pip._internal.utils.temp_dir.AdjacentTempDirectory"
  ],
  "pip._internal.vcs.versioncontrol.VersionControl.fetch_new": [
    "pip._internal.vcs.bazaar.Bazaar",
    "pip._internal.vcs.git.Git",
    "pip._internal.vcs.mercurial.Mercurial",
    "pip._internal.vcs.subversion.Subversion"
  ],
  "pip._internal.vcs.versioncontrol.VersionControl.get_base_rev_args": [
    "pip._internal.vcs.bazaar.Bazaar",
    "pip._internal.vcs.git.Git",
    "pip._internal.vcs.mercurial.Mercurial",
    "pip._internal.vcs.subversion.Subversion"
  ],
  "pip._internal.vcs.versioncontrol.VersionControl.get_netloc_and_auth": [
    "pip._internal.vcs.subversion.Subversion"
  ],
  "pip._internal.vcs.versioncontrol.VersionControl.get_remote_url": [
    "pip._internal.vcs.bazaar.Bazaar",
    "pip._internal.vcs.git.Git",
    "pip._internal.vcs.mercurial.Mercurial",
    "pip._internal.vcs.subversion.Subversion"
  ],
  "pip._internal.vcs.versioncontrol.VersionControl.get_repository_root": [
    "pip._internal.vcs.git.Git",
    "pip._internal.vcs.mercurial.Mercurial"
  ],
  "pip._internal.vcs.versioncontrol.VersionControl.get_requirement_revision": [
    "pip._internal.vcs.mercurial.Mercurial"
  ],
  "pip._internal.vcs.versioncontrol.VersionControl.get_revision": [
    "pip._internal.vcs.bazaar.Bazaar",
    "pip._internal.vcs.git.Git",
    "pip._internal.vcs.mercurial.Mercurial",
    "pip._internal.vcs.subversion.Subversion"
  ],
  "pip._internal.vcs.versioncontrol.VersionControl.get_subdirectory": [
    "pip._internal.vcs.git.Git",
    "pip._internal.vcs.mercurial.Mercurial"
  ],
  "pip._internal.vcs.versioncontrol.VersionControl.get_url_rev_and_auth": [
    "pip._internal.vcs.bazaar.Bazaar",
    "pip._internal.vcs.git.Git",
    "pip._internal.vcs.subversion.Subversion"
  ],
  "pip._internal.vcs.versioncontrol.VersionControl.is_commit_id_equal": [
    "pip._internal.vcs.bazaar.Bazaar",
    "pip._internal.vcs.git.Git",
    "pip._internal.vcs.mercurial.Mercurial",
    "pip._internal.vcs.subversion.Subversion"
  ],
  "pip._internal.vcs.versioncontrol.VersionControl.is_immutable_rev_checkout": [
    "pip._internal.vcs.git.Git"
  ],
  "pip._internal.vcs.versioncontrol.VersionControl.make_rev_args": [
    "pip._internal.vcs.subversion.Subversion"
  ],
  "pip._internal.vcs.versioncontrol.VersionControl.should_add_vcs_url_prefix": [
    "pip._internal.vcs.git.Git",
    "pip._internal.vcs.subversion.Subversion"
  ],
  "pip._internal.vcs.versioncontrol.VersionControl.switch": [
    "pip._internal.vcs.bazaar.Bazaar",
    "pip._internal.vcs.git.Git",
    "pip._internal.vcs.mercurial.Mercurial",
    "pip._internal.vcs.subversion.Subversion"
  ],
  "pip._internal.vcs.versioncontrol.VersionControl.update": [
    "pip._internal.vcs.bazaar.Bazaar",
    "pip._internal.vcs.git.Git",
    "pip._internal.vcs.mercurial.Mercurial",
    "pip._internal.vcs.subversion.Subversion"
  ],
  "pip._vendor.cachecontrol.cache.BaseCache.close": [
    "pip._vendor.cachecontrol.caches.redis_cache.RedisCache"
  ],
  "pip._vendor.cachecontrol.cache.BaseCache.delete": [
    "pip._internal.network.cache.SafeFileCache",
    "pip._vendor.cachecontrol.cache.DictCache",
    "pip._vendor.cachecontrol.caches.file_cache.FileCache",
    "pip._vendor.cachecontrol.caches.file_cache.SeparateBodyFileCache",
    "pip._vendor.cachecontrol.caches.redis_cache.RedisCache"
  ],
  "pip._vendor.cachecontrol.cache.BaseCache.get": [
    "pip._internal.network.cache.SafeFileCache",
    "pip._vendor.cachecontrol.cache.DictCache",
    "pip._vendor.cachecontrol.caches.redis_cache.RedisCache"
  ],
  "pip._vendor.cachecontrol.cache.BaseCache.set": [
    "pip._internal.network.cache.SafeFileCache",
    "pip._vendor.cachecontrol.cache.DictCache",
    "pip._vendor.cachecontrol.caches.redis_cache.RedisCache"
  ],
  "pip._vendor.cachecontrol.cache.SeparateBodyBaseCache.get_body": [
    "pip._internal.network.cache.SafeFileCache",
    "pip._vendor.cachecontrol.caches.file_cache.SeparateBodyFileCache"
  ],
  "pip._vendor.cachecontrol.cache.SeparateBodyBaseCache.set_body": [
    "pip._internal.network.cache.SafeFileCache",
    "pip._vendor.cachecontrol.caches.file_cache.SeparateBodyFileCache"
  ],
  "pip._vendor.cachecontrol.heuristics.BaseHeuristic.update_headers": [
    "pip._vendor.cachecontrol.heuristics.ExpiresAfter",
    "pip._vendor.cachecontrol.heuristics.LastModified",
    "pip._vendor.cachecontrol.heuristics.OneDayCache"
  ],
  "pip._vendor.cachecontrol.heuristics.BaseHeuristic.warning": [
    "pip._vendor.cachecontrol.heuristics.ExpiresAfter",
    "pip._vendor.cachecontrol.heuristics.LastModified"
  ],
  "pip._vendor.distlib.compat.BaseConfigurator.__init__": [
    "pip._vendor.distlib.util.Configurator"
  ],
  "pip._vendor.distlib.compat.BaseConfigurator.configure_custom": [
    "pip._vendor.distlib.util.Configurator"
  ],
  "pip._vendor.distlib.database.BaseInstalledDistribution.__init__": [
    "pip._vendor.distlib.database.EggInfoDistribution",
    "pip._vendor.distlib.database.InstalledDistribution"
  ],
  "pip._vendor.distlib.database.Distribution.__init__": [
    "pip._vendor.distlib.database.BaseInstalledDistribution"
  ],
  "pip._vendor.distlib.locators.Locator.__init__": [
    "pip._vendor.distlib.locators.AggregatingLocator",
    "pip._vendor.distlib.locators.DirectoryLocator",
    "pip._vendor.distlib.locators.DistPathLocator",
    "pip._vendor.distlib.locators.PyPIJSONLocator",
    "pip._vendor.distlib.locators.PyPIRPCLocator",
    "pip._vendor.distlib.locators.SimpleScrapingLocator"
  ],
  "pip._vendor.distlib.locators.Locator._get_project": [
    "pip._vendor.distlib.locators.AggregatingLocator",
    "pip._vendor.distlib.locators.DirectoryLocator",
    "pip._vendor.distlib.locators.DistPathLocator",
    "pip._vendor.distlib.locators.JSONLocator",
    "pip._vendor.distlib.locators.PyPIJSONLocator",
    "pip._vendor.distlib.locators.PyPIRPCLocator",
    "pip._vendor.distlib.locators.SimpleScrapingLocator"
  ],
  "pip._vendor.distlib.locators.Locator._set_scheme": [
    "pip._vendor.distlib.locators.AggregatingLocator"
  ],
  "pip._vendor.distlib.locators.Locator.clear_cache": [
    "pip._vendor.distlib.locators.AggregatingLocator"
  ],
  "pip._vendor.distlib.locators.Locator.get_distribution_names": [
    "pip._vendor.distlib.locators.AggregatingLocator",
    "pip._vendor.distlib.locators.DirectoryLocator",
    "pip._vendor.distlib.locators.JSONLocator",
    "pip._vendor.distlib.locators.PyPIJSONLocator",
    "pip._vendor.distlib.locators.PyPIRPCLocator",
    "pip._vendor.distlib.locators.SimpleScrapingLocator"
  ],
  "pip._vendor.distlib.resources.ResourceFinder.__init__": [
    "pip._vendor.distlib.resources.ZipResourceFinder"
  ],
  "pip._vendor.distlib.resources.ResourceFinder._adjust_path": [
    "pip._vendor.distlib.resources.ZipResourceFinder"
  ],
  "pip._vendor.distlib.resources.ResourceFinder._find": [
    "pip._vendor.distlib.resources.ZipResourceFinder"
  ],
  "pip._vendor.distlib.resources.ResourceFinder._is_directory": [
    "pip._vendor.distlib.resources.ZipResourceFinder"
  ],
  "pip._vendor.distlib.resources.ResourceFinder.get_bytes": [
    "pip._vendor.distlib.resources.ZipResourceFinder"
  ],
  "pip._vendor.distlib.resources.ResourceFinder.get_cache_info": [
    "pip._vendor.distlib.resources.ZipResourceFinder"
  ],
  "pip._vendor.distlib.resources.ResourceFinder.get_resources": [
    "pip._vendor.distlib.resources.ZipResourceFinder"
  ],
  "pip._vendor.distlib.resources.ResourceFinder.get_size": [
    "pip._vendor.distlib.resources.ZipResourceFinder"
  ],
  "pip._vendor.distlib.resources.ResourceFinder.get_stream": [
    "pip._vendor.distlib.resources.ZipResourceFinder"
  ],
  "pip._vendor.distlib.scripts.ScriptMaker.make": [
    "pip._internal.operations.install.wheel.PipScriptMaker"
  ],
  "pip._vendor.distlib.util.Cache.__init__": [
    "pip._vendor.distlib.resources.ResourceCache"
  ],
  "pip._vendor.distlib.version.Version.is_prerelease": [
    "pip._vendor.distlib.version.LegacyVersion",
    "pip._vendor.distlib.version.NormalizedVersion",
    "pip._vendor.distlib.version.SemanticVersion"
  ],
  "pip._vendor.distlib.version.Version.parse": [
    "pip._vendor.distlib.version.LegacyVersion",
    "pip._vendor.distlib.version.NormalizedVersion",
    "pip._vendor.distlib.version.SemanticVersion"
  ],
  "pip._vendor.packaging._parser.Node.serialize": [
    "pip._vendor.packaging._parser.Op",
    "pip._vendor.packaging._parser.Value",
    "pip._vendor.packaging._parser.Variable"
  ],
  "pip._vendor.packaging.requirements.Requirement.__eq__": [
    "pip._vendor.pkg_resources.Requirement"
  ],
  "pip._vendor.packaging.requirements.Requirement.__hash__": [
    "pip._vendor.pkg_resources.Requirement"
  ],
  "pip._vendor.packaging.requirements.Requirement.__init__": [
    "pip._vendor.pkg_resources.Requirement"
  ],
  "pip._vendor.packaging.requirements.Requirement.__repr__": [
    "pip._vendor.pkg_resources.Requirement"
  ],
  "pip._vendor.packaging.specifiers.BaseSpecifier.__eq__": [
    "pip._vendor.packaging.specifiers.Specifier",
    "pip._vendor.packaging.specifiers.SpecifierSet"
  ],
  "pip._vendor.packaging.specifiers.BaseSpecifier.__hash__": [
    "pip._vendor.packaging.specifiers.Specifier",
    "pip._vendor.packaging.specifiers.SpecifierSet"
  ],
  "pip._vendor.packaging.specifiers.BaseSpecifier.__str__": [
    "pip._vendor.packaging.specifiers.Specifier",
    "pip._vendor.packaging.specifiers.SpecifierSet"
  ],
  "pip._vendor.packaging.specifiers.BaseSpecifier.contains": [
    "pip._vendor.packaging.specifiers.Specifier",
    "pip._vendor.packaging.specifiers.SpecifierSet"
  ],
  "pip._vendor.packaging.specifiers.BaseSpecifier.filter": [
    "pip._vendor.packaging.specifiers.Specifier",
    "pip._vendor.packaging.specifiers.SpecifierSet"
  ],
  "pip._vendor.packaging.specifiers.BaseSpecifier.prereleases": [
    "pip._vendor.packaging.specifiers.Specifier",
    "pip._vendor.packaging.specifiers.SpecifierSet"
  ],
  "pip._vendor.packaging.specifiers.BaseSpecifier.prereleases@setter": [
    "pip._vendor.packaging.specifiers.Specifier",
    "pip._vendor.packaging.specifiers.SpecifierSet"
  ],
  "pip._vendor.packaging.version.Version.release": [
    "pip._vendor.packaging.version._TrimmedRelease"
  ],
  "pip._vendor.pkg_resources.Distribution._dep_map": [
    "pip._vendor.pkg_resources.DistInfoDistribution"
  ],
  "pip._vendor.pkg_resources.Distribution._reload_version": [
    "pip._vendor.pkg_resources.EggInfoDistribution"
  ],
  "pip._vendor.pkg_resources.EggProvider.__init__": [
    "pip._vendor.pkg_resources.ZipProvider"
  ],
  "pip._vendor.pkg_resources.EmptyProvider.__init__": [
    "pip._vendor.pkg_resources.FileMetadata"
  ],
  "pip._vendor.pkg_resources.NullProvider.__init__": [
    "pip._vendor.pkg_resources.EggProvider",
    "pip._vendor.pkg_resources.EmptyProvider"
  ],
  "pip._vendor.pkg_resources.NullProvider._get": [
    "pip._vendor.pkg_resources.DefaultProvider",
    "pip._vendor.pkg_resources.EmptyProvider"
  ],
  "pip._vendor.pkg_resources.NullProvider._get_metadata_path": [
    "pip._vendor.pkg_resources.FileMetadata"
  ],
  "pip._vendor.pkg_resources.NullProvider._has": [
    "pip._vendor.pkg_resources.DefaultProvider",
    "pip._vendor.pkg_resources.ZipProvider"
  ],
  "pip._vendor.pkg_resources.NullProvider._isdir": [
    "pip._vendor.pkg_resources.DefaultProvider",
    "pip._vendor.pkg_resources.ZipProvider"
  ],
  "pip._vendor.pkg_resources.NullProvider._listdir": [
    "pip._vendor.pkg_resources.DefaultProvider",
    "pip._vendor.pkg_resources.EmptyProvider",
    "pip._vendor.pkg_resources.ZipProvider"
  ],
  "pip._vendor.pkg_resources.NullProvider.get_metadata": [
    "pip._vendor.pkg_resources.FileMetadata"
  ],
  "pip._vendor.pkg_resources.NullProvider.get_metadata_lines": [
    "pip._vendor.pkg_resources.FileMetadata"
  ],
  "pip._vendor.pkg_resources.NullProvider.get_resource_filename": [
    "pip._vendor.pkg_resources.ZipProvider"
  ],
  "pip._vendor.pkg_resources.NullProvider.get_resource_stream": [
    "pip._vendor.pkg_resources.DefaultProvider"
  ],
  "pip._vendor.pkg_resources.NullProvider.has_metadata": [
    "pip._vendor.pkg_resources.FileMetadata"
  ],
  "pip._vendor.pkg_resources.ZipManifests.load": [
    "pip._vendor.pkg_resources.MemoizedZipManifests"
  ],
  "pip._vendor.pkg_resources.ZipProvider.__init__": [
    "pip._vendor.pkg_resources.EggMetadata"
  ],
  "pip._vendor.platformdirs.api.PlatformDirsABC.iter_config_dirs": [
    "pip._vendor.platformdirs.unix.Unix"
  ],
  "pip._vendor.platformdirs.api.PlatformDirsABC.iter_data_dirs": [
    "pip._vendor.platformdirs.unix.Unix"
  ],
  "pip._vendor.platformdirs.api.PlatformDirsABC.site_cache_dir": [
    "pip._vendor.platformdirs.android.Android",
    "pip._vendor.platformdirs.macos.MacOS",
    "pip._vendor.platformdirs.unix.Unix",
    "pip._vendor.platformdirs.windows.Windows"
  ],
  "pip._vendor.platformdirs.api.PlatformDirsABC.site_cache_path": [
    "pip._vendor.platformdirs.macos.MacOS",
    "pip._vendor.platformdirs.unix.Unix"
  ],
  "pip._vendor.platformdirs.api.PlatformDirsABC.site_config_dir": [
    "pip._vendor.platformdirs.android.Android",
    "pip._vendor.platformdirs.macos.MacOS",
    "pip._vendor.platformdirs.unix.Unix",
    "pip._vendor.platformdirs.windows.Windows"
  ],
  "pip._vendor.platformdirs.api.PlatformDirsABC.site_config_path": [
    "pip._vendor.platformdirs.unix.Unix"
  ],
  "pip._vendor.platformdirs.api.PlatformDirsABC.site_data_dir": [
    "pip._vendor.platformdirs.android.Android",
    "pip._vendor.platformdirs.macos.MacOS",
    "pip._vendor.platformdirs.unix.Unix",
    "pip._vendor.platformdirs.windows.Windows"
  ],
  "pip._vendor.platformdirs.api.PlatformDirsABC.site_data_path": [
    "pip._vendor.platformdirs.macos.MacOS",
    "pip._vendor.platformdirs.unix.Unix"
  ],
  "pip._vendor.platformdirs.api.PlatformDirsABC.site_runtime_dir": [
    "pip._vendor.platformdirs.android.Android",
    "pip._vendor.platformdirs.macos.MacOS",
    "pip._vendor.platformdirs.unix.Unix",
    "pip._vendor.platformdirs.windows.Windows"
  ],
  "pip._vendor.platformdirs.api.PlatformDirsABC.user_cache_dir": [
    "pip._vendor.platformdirs.android.Android",
    "pip._vendor.platformdirs.macos.MacOS",
    "pip._vendor.platformdirs.unix.Unix",
    "pip._vendor.platformdirs.windows.Windows"
  ],
  "pip._vendor.platformdirs.api.PlatformDirsABC.user_config_dir": [
    "pip._vendor.platformdirs.android.Android",
    "pip._vendor.platformdirs.macos.MacOS",
    "pip._vendor.platformdirs.unix.Unix",
    "pip._vendor.platformdirs.windows.Windows"
  ],
  "pip._vendor.platformdirs.api.PlatformDirsABC.user_data_dir": [
    "pip._vendor.platformdirs.android.Android",
    "pip._vendor.platformdirs.macos.MacOS",
    "pip._vendor.platformdirs.unix.Unix",
    "pip._vendor.platformdirs.windows.Windows"
  ],
  "pip._vendor.platformdirs.api.PlatformDirsABC.user_desktop_dir": [
    "pip._vendor.platformdirs.android.Android",
    "pip._vendor.platformdirs.macos.MacOS",
    "pip._vendor.platformdirs.unix.Unix",
    "pip._vendor.platformdirs.windows.Windows"
  ],
  "pip._vendor.platformdirs.api.PlatformDirsABC.user_documents_dir": [
    "pip._vendor.platformdirs.android.Android",
    "pip._vendor.platformdirs.macos.MacOS",
    "pip._vendor.platformdirs.unix.Unix",
    "pip._vendor.platformdirs.windows.Windows"
  ],
  "pip._vendor.platformdirs.api.PlatformDirsABC.user_downloads_dir": [
    "pip._vendor.platformdirs.android.Android",
    "pip._vendor.platformdirs.macos.MacOS",
    "pip._vendor.platformdirs.unix.Unix",
    "pip._vendor.platformdirs.windows.Windows"
  ],
  "pip._vendor.platformdirs.api.PlatformDirsABC.user_log_dir": [
    "pip._vendor.platformdirs.android.Android",
    "pip._vendor.platformdirs.macos.MacOS",
    "pip._vendor.platformdirs.unix.Unix",
    "pip._vendor.platformdirs.windows.Windows"
  ],
  "pip._vendor.platformdirs.api.PlatformDirsABC.user_music_dir": [
    "pip._vendor.platformdirs.android.Android",
    "pip._vendor.platformdirs.macos.MacOS",
    "pip._vendor.platformdirs.unix.Unix",
    "pip._vendor.platformdirs.windows.Windows"
  ],
  "pip._vendor.platformdirs.api.PlatformDirsABC.user_pictures_dir": [
    "pip._vendor.platformdirs.android.Android",
    "pip._vendor.platformdirs.macos.MacOS",
    "pip._vendor.platformdirs.unix.Unix",
    "pip._vendor.platformdirs.windows.Windows"
  ],
  "pip._vendor.platformdirs.api.PlatformDirsABC.user_runtime_dir": [
    "pip._vendor.platformdirs.android.Android",
    "pip._vendor.platformdirs.macos.MacOS",
    "pip._vendor.platformdirs.unix.Unix",
    "pip._vendor.platformdirs.windows.Windows"
  ],
  "pip._vendor.platformdirs.api.PlatformDirsABC.user_state_dir": [
    "pip._vendor.platformdirs.android.Android",
    "pip._vendor.platformdirs.macos.MacOS",
    "pip._vendor.platformdirs.unix.Unix",
    "pip._vendor.platformdirs.windows.Windows"
  ],
  "pip._vendor.platformdirs.api.PlatformDirsABC.user_videos_dir": [
    "pip._vendor.platformdirs.android.Android",
    "pip._vendor.platformdirs.macos.MacOS",
    "pip._vendor.platformdirs.unix.Unix",
    "pip._vendor.platformdirs.windows.Windows"
  ],
  "pip._vendor.pygments.filter.Filter.__init__": [
    "pip._vendor.pygments.filter.FunctionFilter",
    "pip._vendor.pygments.filters.CodeTagFilter",
    "pip._vendor.pygments.filters.GobbleFilter",
    "pip._vendor.pygments.filters.KeywordCaseFilter",
    "pip._vendor.pygments.filters.NameHighlightFilter",
    "pip._vendor.pygments.filters.RaiseOnErrorTokenFilter",
    "pip._vendor.pygments.filters.SymbolFilter",
    "pip._vendor.pygments.filters.TokenMergeFilter",
    "pip._vendor.pygments.filters.VisibleWhitespaceFilter"
  ],
  "pip._vendor.pygments.filter.Filter.filter": [
    "pip._vendor.pygments.filter.FunctionFilter",
    "pip._vendor.pygments.filters.CodeTagFilter",
    "pip._vendor.pygments.filters.GobbleFilter",
    "pip._vendor.pygments.filters.KeywordCaseFilter",
    "pip._vendor.pygments.filters.NameHighlightFilter",
    "pip._vendor.pygments.filters.RaiseOnErrorTokenFilter",
    "pip._vendor.pygments.filters.SymbolFilter",
    "pip._vendor.pygments.filters.TokenMergeFilter",
    "pip._vendor.pygments.filters.VisibleWhitespaceFilter"
  ],
  "pip._vendor.pygments.formatter.Formatter.__init__": [
    "pip._vendor.pygments.formatters.bbcode.BBCodeFormatter",
    "pip._vendor.pygments.formatters.groff.GroffFormatter",
    "pip._vendor.pygments.formatters.html.HtmlFormatter",
    "pip._vendor.pygments.formatters.img.ImageFormatter",
    "pip._vendor.pygments.formatters.irc.IRCFormatter",
    "pip._vendor.pygments.formatters.latex.LatexFormatter",
    "pip._vendor.pygments.formatters.other.RawTokenFormatter",
    "pip._vendor.pygments.formatters.other.TestcaseFormatter",
    "pip._vendor.pygments.formatters.pangomarkup.PangoMarkupFormatter",
    "pip._vendor.pygments.formatters.rtf.RtfFormatter",
    "pip._vendor.pygments.formatters.svg.SvgFormatter",
    "pip._vendor.pygments.formatters.terminal.TerminalFormatter",
    "pip._vendor.pygments.formatters.terminal256.Terminal256Formatter"
  ],
  "pip._vendor.pygments.formatter.Formatter.format": [
    "pip._vendor.pygments.formatters.img.ImageFormatter",
    "pip._vendor.pygments.formatters.other.NullFormatter",
    "pip._vendor.pygments.formatters.other.RawTokenFormatter",
    "pip._vendor.pygments.formatters.other.TestcaseFormatter",
    "pip._vendor.pygments.formatters.terminal.TerminalFormatter",
    "pip._vendor.pygments.formatters.terminal256.Terminal256Formatter"
  ],
  "pip._vendor.pygments.formatter.Formatter.get_style_defs": [
    "pip._vendor.pygments.formatters.html.HtmlFormatter",
    "pip._vendor.pygments.formatters.img.ImageFormatter",
    "pip._vendor.pygments.formatters.latex.LatexFormatter"
  ],
  "pip._vendor.pygments.formatters.terminal256.Terminal256Formatter._build_color_table": [
    "pip._vendor.pygments.formatters.terminal256.TerminalTrueColorFormatter"
  ],
  "pip._vendor.pygments.formatters.terminal256.Terminal256Formatter._setup_styles": [
    "pip._vendor.pygments.formatters.terminal256.TerminalTrueColorFormatter"
  ],
  "pip._vendor.pygments.lexer.DelegatingLexer.__init__": [
    "pip._vendor.pygments.lexers.python.PythonConsoleLexer",
    "pip._vendor.pygments.lexers.python.PythonConsoleLexer.__init__._ReplaceInnerCode"
  ],
  "pip._vendor.pygments.lexer.Lexer.__init__": [
    "pip._vendor.pygments.formatters.latex.LatexEmbeddedLexer",
    "pip._vendor.pygments.lexer.DelegatingLexer"
  ],
  "pip._vendor.pygments.lexer.Lexer.analyse_text": [
    "pip._vendor.pygments.lexers.python.Python2Lexer",
    "pip._vendor.pygments.lexers.python.PythonLexer"
  ],
  "pip._vendor.pygments.lexer.Lexer.get_tokens_unprocessed": [
    "pip._vendor.pygments.formatters.latex.LatexEmbeddedLexer",
    "pip._vendor.pygments.lexer.DelegatingLexer",
    "pip._vendor.pygments.lexer.RegexLexer"
  ],
  "pip._vendor.pygments.lexer.RegexLexer.get_tokens_unprocessed": [
    "pip._vendor.pygments.lexer.ExtendedRegexLexer",
    "pip._vendor.pygments.lexer.ProfilingRegexLexer",
    "pip._vendor.pygments.lexers.python.NumPyLexer"
  ],
  "pip._vendor.pygments.lexer.RegexLexerMeta._process_regex": [
    "pip._vendor.pygments.lexer.ProfilingRegexLexerMeta"
  ],
  "pip._vendor.pygments.lexers.python.PythonLexer.analyse_text": [
    "pip._vendor.pygments.lexers.python.NumPyLexer"
  ],
  "pip._vendor.pygments.util.Future.get": [
    "pip._vendor.pygments.lexer.words"
  ],
  "pip._vendor.pyproject_hooks._impl.BuildBackendHookCaller.__init__": [
    "pip._internal.utils.misc.ConfiguredBuildBackendHookCaller"
  ],
  "pip._vendor.pyproject_hooks._impl.BuildBackendHookCaller.build_editable": [
    "pip._internal.utils.misc.ConfiguredBuildBackendHookCaller"
  ],
  "pip._vendor.pyproject_hooks._impl.BuildBackendHookCaller.build_sdist": [
    "pip._internal.utils.misc.ConfiguredBuildBackendHookCaller"
  ],
  "pip._vendor.pyproject_hooks._impl.BuildBackendHookCaller.build_wheel": [
    "pip._internal.utils.misc.ConfiguredBuildBackendHookCaller"
  ],
  "pip._vendor.pyproject_hooks._impl.BuildBackendHookCaller.get_requires_for_build_editable": [
    "pip._internal.utils.misc.ConfiguredBuildBackendHookCaller"
  ],
  "pip._vendor.pyproject_hooks._impl.BuildBackendHookCaller.get_requires_for_build_sdist": [
    "pip._internal.utils.misc.ConfiguredBuildBackendHookCaller"
  ],
  "pip._vendor.pyproject_hooks._impl.BuildBackendHookCaller.get_requires_for_build_wheel": [
    "pip._internal.utils.misc.ConfiguredBuildBackendHookCaller"
  ],
  "pip._vendor.pyproject_hooks._impl.BuildBackendHookCaller.prepare_metadata_for_build_editable": [
    "pip._internal.utils.misc.ConfiguredBuildBackendHookCaller"
  ],
  "pip._vendor.pyproject_hooks._impl.BuildBackendHookCaller.prepare_metadata_for_build_wheel": [
    "pip._internal.utils.misc.ConfiguredBuildBackendHookCaller"
  ],
  "pip._vendor.requests.adapters.BaseAdapter.__init__": [
    "pip._vendor.requests.adapters.HTTPAdapter"
  ],
  "pip._vendor.requests.adapters.BaseAdapter.close": [
    "pip._internal.network.session.LocalFSAdapter",
    "pip._vendor.requests.adapters.HTTPAdapter"
  ],
  "pip._vendor.requests.adapters.BaseAdapter.send": [
    "pip._internal.network.session.LocalFSAdapter",
    "pip._vendor.requests.adapters.HTTPAdapter"
  ],
  "pip._vendor.requests.adapters.HTTPAdapter.__init__": [
    "pip._vendor.cachecontrol.adapter.CacheControlAdapter"
  ],
  "pip._vendor.requests.adapters.HTTPAdapter.build_response": [
    "pip._vendor.cachecontrol.adapter.CacheControlAdapter"
  ],
  "pip._vendor.requests.adapters.HTTPAdapter.cert_verify": [
    "pip._internal.network.session.InsecureCacheControlAdapter",
    "pip._internal.network.session.InsecureHTTPAdapter"
  ],
  "pip._vendor.requests.adapters.HTTPAdapter.close": [
    "pip._vendor.cachecontrol.adapter.CacheControlAdapter"
  ],
  "pip._vendor.requests.adapters.HTTPAdapter.send": [
    "pip._vendor.cachecontrol.adapter.CacheControlAdapter"
  ],
  "pip._vendor.requests.auth.AuthBase.__call__": [
    "pip._internal.network.auth.MultiDomainBasicAuth",
    "pip._vendor.requests.auth.HTTPBasicAuth",
    "pip._vendor.requests.auth.HTTPDigestAuth"
  ],
  "pip._vendor.requests.auth.HTTPBasicAuth.__call__": [
    "pip._vendor.requests.auth.HTTPProxyAuth"
  ],
  "pip._vendor.requests.sessions.Session.__init__": [
    "pip._internal.network.session.PipSession"
  ],
  "pip._vendor.requests.sessions.Session.request": [
    "pip._internal.network.session.PipSession"
  ],
  "pip._vendor.resolvelib.providers.AbstractProvider.find_matches": [
    "pip._internal.resolution.resolvelib.provider.PipProvider"
  ],
  "pip._vendor.resolvelib.providers.AbstractProvider.get_dependencies": [
    "pip._internal.resolution.resolvelib.provider.PipProvider"
  ],
  "pip._vendor.resolvelib.providers.AbstractProvider.get_preference": [
    "pip._internal.resolution.resolvelib.provider.PipProvider"
  ],
  "pip._vendor.resolvelib.providers.AbstractProvider.identify": [
    "pip._internal.resolution.resolvelib.provider.PipProvider"
  ],
  "pip._vendor.resolvelib.providers.AbstractProvider.is_satisfied_by": [
    "pip._internal.resolution.resolvelib.provider.PipProvider"
  ],
  "pip._vendor.resolvelib.providers.AbstractResolver.resolve": [
    "pip._vendor.resolvelib.resolvers.Resolver"
  ],
  "pip._vendor.resolvelib.reporters.BaseReporter.adding_requirement": [
    "pip._internal.resolution.resolvelib.reporter.PipDebuggingReporter"
  ],
  "pip._vendor.resolvelib.reporters.BaseReporter.ending": [
    "pip._internal.resolution.resolvelib.reporter.PipDebuggingReporter"
  ],
  "pip._vendor.resolvelib.reporters.BaseReporter.ending_round": [
    "pip._internal.resolution.resolvelib.reporter.PipDebuggingReporter"
  ],
  "pip._vendor.resolvelib.reporters.BaseReporter.pinning": [
    "pip._internal.resolution.resolvelib.reporter.PipDebuggingReporter"
  ],
  "pip._vendor.resolvelib.reporters.BaseReporter.rejecting_candidate": [
    "pip._internal.resolution.resolvelib.reporter.PipDebuggingReporter",
    "pip._internal.resolution.resolvelib.reporter.PipReporter"
  ],
  "pip._vendor.resolvelib.reporters.BaseReporter.starting": [
    "pip._internal.resolution.resolvelib.reporter.PipDebuggingReporter"
  ],
  "pip._vendor.resolvelib.reporters.BaseReporter.starting_round": [
    "pip._internal.resolution.resolvelib.reporter.PipDebuggingReporter"
  ],
  "pip._vendor.rich.console.Console.on_broken_pipe": [
    "pip._internal.utils.logging.PipConsole"
  ],
  "pip._vendor.rich.console.RenderHook.process_renderables": [
    "pip._vendor.rich.live.Live"
  ],
  "pip._vendor.rich.highlighter.Highlighter.highlight": [
    "pip._vendor.rich.highlighter.NullHighlighter",
    "pip._vendor.rich.highlighter.RegexHighlighter"
  ],
  "pip._vendor.rich.highlighter.RegexHighlighter.highlight": [
    "pip._vendor.rich.highlighter.JSONHighlighter"
  ],
  "pip._vendor.rich.layout.Splitter.divide": [
    "pip._vendor.rich.layout.ColumnSplitter",
    "pip._vendor.rich.layout.RowSplitter"
  ],
  "pip._vendor.rich.layout.Splitter.get_tree_icon": [
    "pip._vendor.rich.layout.ColumnSplitter",
    "pip._vendor.rich.layout.RowSplitter"
  ],
  "pip._vendor.rich.logging.RichHandler.__init__": [
    "pip._internal.utils.logging.RichPipStreamHandler"
  ],
  "pip._vendor.rich.logging.RichHandler.emit": [
    "pip._internal.utils.logging.RichPipStreamHandler"
  ],
  "pip._vendor.rich.pager.Pager.show": [
    "pip._vendor.rich.pager.SystemPager"
  ],
  "pip._vendor.rich.progress.ProgressColumn.__init__": [
    "pip._vendor.rich.progress.BarColumn",
    "pip._vendor.rich.progress.DownloadColumn",
    "pip._vendor.rich.progress.MofNCompleteColumn",
    "pip._vendor.rich.progress.RenderableColumn",
    "pip._vendor.rich.progress.SpinnerColumn",
    "pip._vendor.rich.progress.TextColumn",
    "pip._vendor.rich.progress.TimeRemainingColumn"
  ],
  "pip._vendor.rich.progress.ProgressColumn.render": [
    "pip._vendor.rich.progress.BarColumn",
    "pip._vendor.rich.progress.DownloadColumn",
    "pip._vendor.rich.progress.FileSizeColumn",
    "pip._vendor.rich.progress.MofNCompleteColumn",
    "pip._vendor.rich.progress.RenderableColumn",
    "pip._vendor.rich.progress.SpinnerColumn",
    "pip._vendor.rich.progress.TextColumn",
    "pip._vendor.rich.progress.TimeElapsedColumn",
    "pip._vendor.rich.progress.TimeRemainingColumn",
    "pip._vendor.rich.progress.TotalFileSizeColumn",
    "pip._vendor.rich.progress.TransferSpeedColumn"
  ],
  "pip._vendor.rich.progress.TextColumn.__init__": [
    "pip._vendor.rich.progress.TaskProgressColumn"
  ],
  "pip._vendor.rich.progress.TextColumn.render": [
    "pip._vendor.rich.progress.TaskProgressColumn"
  ],
  "pip._vendor.rich.prompt.PromptBase.process_response": [
    "pip._vendor.rich.prompt.Confirm"
  ],
  "pip._vendor.rich.prompt.PromptBase.render_default": [
    "pip._vendor.rich.prompt.Confirm"
  ],
  "pip._vendor.rich.syntax.SyntaxTheme.get_background_style": [
    "pip._vendor.rich.syntax.ANSISyntaxTheme",
    "pip._vendor.rich.syntax.PygmentsSyntaxTheme"
  ],
  "pip._vendor.rich.syntax.SyntaxTheme.get_style_for_token": [
    "pip._vendor.rich.syntax.ANSISyntaxTheme",
    "pip._vendor.rich.syntax.PygmentsSyntaxTheme"
  ],
  "pip._vendor.typing_extensions._DefaultMixin.__init__": [
    "pip._vendor.typing_extensions.TypeVarTuple"
  ],
  "pip._vendor.urllib3.connection.HTTPConnection.__init__": [
    "pip._vendor.urllib3.connection.HTTPSConnection",
    "pip._vendor.urllib3.contrib.socks.SOCKSConnection"
  ],
  "pip._vendor.urllib3.connection.HTTPConnection._new_conn": [
    "pip._vendor.urllib3.contrib.socks.SOCKSConnection"
  ],
  "pip._vendor.urllib3.connection.HTTPConnection.connect": [
    "pip._vendor.urllib3.connection.HTTPSConnection"
  ],
  "pip._vendor.urllib3.connectionpool.ConnectionPool.__init__": [
    "pip._vendor.urllib3.connectionpool.HTTPConnectionPool"
  ],
  "pip._vendor.urllib3.connectionpool.ConnectionPool.close": [
    "pip._vendor.urllib3.connectionpool.HTTPConnectionPool"
  ],
  "pip._vendor.urllib3.connectionpool.HTTPConnectionPool.__init__": [
    "pip._vendor.urllib3.connectionpool.HTTPSConnectionPool"
  ],
  "pip._vendor.urllib3.connectionpool.HTTPConnectionPool._new_conn": [
    "pip._vendor.urllib3.connectionpool.HTTPSConnectionPool"
  ],
  "pip._vendor.urllib3.connectionpool.HTTPConnectionPool._prepare_proxy": [
    "pip._vendor.urllib3.connectionpool.HTTPSConnectionPool"
  ],
  "pip._vendor.urllib3.connectionpool.HTTPConnectionPool._validate_conn": [
    "pip._vendor.urllib3.connectionpool.HTTPSConnectionPool"
  ],
  "pip._vendor.urllib3.connectionpool.HTTPConnectionPool.urlopen": [
    "pip._vendor.urllib3.contrib.ntlmpool.NTLMConnectionPool"
  ],
  "pip._vendor.urllib3.connectionpool.HTTPSConnectionPool.__init__": [
    "pip._vendor.urllib3.contrib.ntlmpool.NTLMConnectionPool"
  ],
  "pip._vendor.urllib3.connectionpool.HTTPSConnectionPool._new_conn": [
    "pip._vendor.urllib3.contrib.ntlmpool.NTLMConnectionPool"
  ],
  "pip._vendor.urllib3.exceptions.PoolError.__init__": [
    "pip._vendor.urllib3.exceptions.RequestError"
  ],
  "pip._vendor.urllib3.exceptions.PoolError.__reduce__": [
    "pip._vendor.urllib3.exceptions.RequestError"
  ],
  "pip._vendor.urllib3.exceptions.RequestError.__init__": [
    "pip._vendor.urllib3.exceptions.HostChangedError",
    "pip._vendor.urllib3.exceptions.MaxRetryError"
  ],
  "pip._vendor.urllib3.packages.six._LazyDescr.__init__": [
    "pip._vendor.urllib3.packages.six.MovedAttribute",
    "pip._vendor.urllib3.packages.six.MovedModule"
  ],
  "pip._vendor.urllib3.poolmanager.PoolManager.__init__": [
    "pip._vendor.urllib3.contrib.socks.SOCKSProxyManager",
    "pip._vendor.urllib3.poolmanager.ProxyManager"
  ],
  "pip._vendor.urllib3.poolmanager.PoolManager.connection_from_host": [
    "pip._vendor.urllib3.poolmanager.ProxyManager"
  ],
  "pip._vendor.urllib3.poolmanager.PoolManager.urlopen": [
    "pip._vendor.urllib3.poolmanager.ProxyManager"
  ],
  "pip._vendor.urllib3.request.RequestMethods.__init__": [
    "pip._vendor.urllib3.contrib.appengine.AppEngineManager",
    "pip._vendor.urllib3.poolmanager.PoolManager"
  ],
  "pip._vendor.urllib3.request.RequestMethods.urlopen": [
    "pip._vendor.urllib3.connectionpool.HTTPConnectionPool",
    "pip._vendor.urllib3.contrib.appengine.AppEngineManager",
    "pip._vendor.urllib3.poolmanager.PoolManager"
  ],
  "piptools.repositories.base.BaseRepository.allow_all_wheels": [
    "piptools.repositories.local.LocalRequirementsRepository",
    "piptools.repositories.pypi.PyPIRepository"
  ],
  "piptools.repositories.base.BaseRepository.clear_caches": [
    "piptools.repositories.local.LocalRequirementsRepository",
    "piptools.repositories.pypi.PyPIRepository"
  ],
  "piptools.repositories.base.BaseRepository.command": [
    "piptools.repositories.local.LocalRequirementsRepository",
    "piptools.repositories.pypi.PyPIRepository"
  ],
  "piptools.repositories.base.BaseRepository.find_best_match": [
    "piptools.repositories.local.LocalRequirementsRepository",
    "piptools.repositories.pypi.PyPIRepository"
  ],
  "piptools.repositories.base.BaseRepository.finder": [
    "piptools.repositories.local.LocalRequirementsRepository",
    "piptools.repositories.pypi.PyPIRepository"
  ],
  "piptools.repositories.base.BaseRepository.get_dependencies": [
    "piptools.repositories.local.LocalRequirementsRepository",
    "piptools.repositories.pypi.PyPIRepository"
  ],
  "piptools.repositories.base.BaseRepository.get_hashes": [
    "piptools.repositories.local.LocalRequirementsRepository",
    "piptools.repositories.pypi.PyPIRepository"
  ],
  "piptools.repositories.base.BaseRepository.options": [
    "piptools.repositories.local.LocalRequirementsRepository",
    "piptools.repositories.pypi.PyPIRepository"
  ],
  "piptools.repositories.base.BaseRepository.session": [
    "piptools.repositories.local.LocalRequirementsRepository",
    "piptools.repositories.pypi.PyPIRepository"
  ],
  "piptools.resolver.BaseResolver.resolve": [
    "piptools.resolver.BacktrackingResolver",
    "piptools.resolver.LegacyResolver"
  ],
  "pkg_resources.Distribution._dep_map": [
    "pkg_resources.DistInfoDistribution"
  ],
  "pkg_resources.Distribution._reload_version": [
    "pkg_resources.EggInfoDistribution"
  ],
  "pkg_resources.EggProvider.__init__": [
    "pkg_resources.ZipProvider"
  ],
  "pkg_resources.EmptyProvider.__init__": [
    "pkg_resources.FileMetadata"
  ],
  "pkg_resources.NullProvider.__init__": [
    "pkg_resources.EggProvider",
    "pkg_resources.EmptyProvider"
  ],
  "pkg_resources.NullProvider._get": [
    "pkg_resources.DefaultProvider",
    "pkg_resources.EmptyProvider"
  ],
  "pkg_resources.NullProvider._get_metadata_path": [
    "pkg_resources.FileMetadata"
  ],
  "pkg_resources.NullProvider._has": [
    "pkg_resources.DefaultProvider",
    "pkg_resources.ZipProvider"
  ],
  "pkg_resources.NullProvider._isdir": [
    "pkg_resources.DefaultProvider",
    "pkg_resources.ZipProvider"
  ],
  "pkg_resources.NullProvider._listdir": [
    "pkg_resources.DefaultProvider",
    "pkg_resources.EmptyProvider",
    "pkg_resources.ZipProvider"
  ],
  "pkg_resources.NullProvider.get_metadata": [
    "pkg_resources.FileMetadata"
  ],
  "pkg_resources.NullProvider.get_metadata_lines": [
    "pkg_resources.FileMetadata"
  ],
  "pkg_resources.NullProvider.get_resource_filename": [
    "pkg_resources.ZipProvider"
  ],
  "pkg_resources.NullProvider.get_resource_stream": [
    "pkg_resources.DefaultProvider"
  ],
  "pkg_resources.NullProvider.has_metadata": [
    "pkg_resources.FileMetadata"
  ],
  "pkg_resources.ZipManifests.load": [
    "pkg_resources.MemoizedZipManifests"
  ],
  "pkg_resources.ZipProvider.__init__": [
    "pkg_resources.EggMetadata"
  ],
  "platformdirs.api.PlatformDirsABC.iter_config_dirs": [
    "platformdirs.unix.Unix"
  ],
  "platformdirs.api.PlatformDirsABC.iter_data_dirs": [
    "platformdirs.unix.Unix"
  ],
  "platformdirs.api.PlatformDirsABC.site_cache_dir": [
    "platformdirs.android.Android",
    "platformdirs.macos.MacOS",
    "platformdirs.unix.Unix",
    "platformdirs.windows.Windows"
  ],
  "platformdirs.api.PlatformDirsABC.site_cache_path": [
    "platformdirs.macos.MacOS",
    "platformdirs.unix.Unix"
  ],
  "platformdirs.api.PlatformDirsABC.site_config_dir": [
    "platformdirs.android.Android",
    "platformdirs.macos.MacOS",
    "platformdirs.unix.Unix",
    "platformdirs.windows.Windows"
  ],
  "platformdirs.api.PlatformDirsABC.site_config_path": [
    "platformdirs.unix.Unix"
  ],
  "platformdirs.api.PlatformDirsABC.site_data_dir": [
    "platformdirs.android.Android",
    "platformdirs.macos.MacOS",
    "platformdirs.unix.Unix",
    "platformdirs.windows.Windows"
  ],
  "platformdirs.api.PlatformDirsABC.site_data_path": [
    "platformdirs.macos.MacOS",
    "platformdirs.unix.Unix"
  ],
  "platformdirs.api.PlatformDirsABC.site_runtime_dir": [
    "platformdirs.android.Android",
    "platformdirs.macos.MacOS",
    "platformdirs.unix.Unix",
    "platformdirs.windows.Windows"
  ],
  "platformdirs.api.PlatformDirsABC.user_cache_dir": [
    "platformdirs.android.Android",
    "platformdirs.macos.MacOS",
    "platformdirs.unix.Unix",
    "platformdirs.windows.Windows"
  ],
  "platformdirs.api.PlatformDirsABC.user_config_dir": [
    "platformdirs.android.Android",
    "platformdirs.macos.MacOS",
    "platformdirs.unix.Unix",
    "platformdirs.windows.Windows"
  ],
  "platformdirs.api.PlatformDirsABC.user_data_dir": [
    "platformdirs.android.Android",
    "platformdirs.macos.MacOS",
    "platformdirs.unix.Unix",
    "platformdirs.windows.Windows"
  ],
  "platformdirs.api.PlatformDirsABC.user_desktop_dir": [
    "platformdirs.android.Android",
    "platformdirs.macos.MacOS",
    "platformdirs.unix.Unix",
    "platformdirs.windows.Windows"
  ],
  "platformdirs.api.PlatformDirsABC.user_documents_dir": [
    "platformdirs.android.Android",
    "platformdirs.macos.MacOS",
    "platformdirs.unix.Unix",
    "platformdirs.windows.Windows"
  ],
  "platformdirs.api.PlatformDirsABC.user_downloads_dir": [
    "platformdirs.android.Android",
    "platformdirs.macos.MacOS",
    "platformdirs.unix.Unix",
    "platformdirs.windows.Windows"
  ],
  "platformdirs.api.PlatformDirsABC.user_log_dir": [
    "platformdirs.android.Android",
    "platformdirs.macos.MacOS",
    "platformdirs.unix.Unix",
    "platformdirs.windows.Windows"
  ],
  "platformdirs.api.PlatformDirsABC.user_music_dir": [
    "platformdirs.android.Android",
    "platformdirs.macos.MacOS",
    "platformdirs.unix.Unix",
    "platformdirs.windows.Windows"
  ],
  "platformdirs.api.PlatformDirsABC.user_pictures_dir": [
    "platformdirs.android.Android",
    "platformdirs.macos.MacOS",
    "platformdirs.unix.Unix",
    "platformdirs.windows.Windows"
  ],
  "platformdirs.api.PlatformDirsABC.user_runtime_dir": [
    "platformdirs.android.Android",
    "platformdirs.macos.MacOS",
    "platformdirs.unix.Unix",
    "platformdirs.windows.Windows"
  ],
  "platformdirs.api.PlatformDirsABC.user_state_dir": [
    "platformdirs.android.Android",
    "platformdirs.macos.MacOS",
    "platformdirs.unix.Unix",
    "platformdirs.windows.Windows"
  ],
  "platformdirs.api.PlatformDirsABC.user_videos_dir": [
    "platformdirs.android.Android",
    "platformdirs.macos.MacOS",
    "platformdirs.unix.Unix",
    "platformdirs.windows.Windows"
  ],
  "pluggy._hooks.HookCaller.__init__": [
    "pluggy._hooks._SubsetHookCaller"
  ],
  "pluggy._hooks.HookCaller.__repr__": [
    "pluggy._hooks._SubsetHookCaller"
  ],
  "pluggy._hooks.HookCaller._call_history": [
    "pluggy._hooks._SubsetHookCaller"
  ],
  "pluggy._hooks.HookCaller._hookimpls": [
    "pluggy._hooks._SubsetHookCaller"
  ],
  "pluggy._hooks.HookCaller.spec": [
    "pluggy._hooks._SubsetHookCaller"
  ],
  "poplib.POP3.__init__": [
    "poplib.POP3_SSL"
  ],
  "poplib.POP3.stls": [
    "poplib.POP3_SSL"
  ],
  "promise.promise.Promise.fulfilled": [
    "graphql.execution.tests.test_resolve.CustomPromise"
  ],
  "promise.promise.Promise.rejected": [
    "graphql.execution.tests.test_resolve.CustomPromise"
  ],
  "prompt_toolkit.application.application.Application.__init__": [
    "prompt_toolkit.application.dummy.DummyApplication"
  ],
  "prompt_toolkit.application.application.Application.run": [
    "prompt_toolkit.application.dummy.DummyApplication"
  ],
  "prompt_toolkit.application.application.Application.run_async": [
    "prompt_toolkit.application.dummy.DummyApplication"
  ],
  "prompt_toolkit.application.application.Application.run_system_command": [
    "prompt_toolkit.application.dummy.DummyApplication"
  ],
  "prompt_toolkit.application.application.Application.suspend_to_background": [
    "prompt_toolkit.application.dummy.DummyApplication"
  ],
  "prompt_toolkit.auto_suggest.AutoSuggest.get_suggestion": [
    "prompt_toolkit.auto_suggest.AutoSuggestFromHistory",
    "prompt_toolkit.auto_suggest.ConditionalAutoSuggest",
    "prompt_toolkit.auto_suggest.DummyAutoSuggest",
    "prompt_toolkit.auto_suggest.DynamicAutoSuggest",
    "prompt_toolkit.auto_suggest.ThreadedAutoSuggest"
  ],
  "prompt_toolkit.auto_suggest.AutoSuggest.get_suggestion_async": [
    "prompt_toolkit.auto_suggest.DynamicAutoSuggest",
    "prompt_toolkit.auto_suggest.ThreadedAutoSuggest"
  ],
  "prompt_toolkit.clipboard.base.Clipboard.get_data": [
    "prompt_toolkit.clipboard.base.DummyClipboard",
    "prompt_toolkit.clipboard.base.DynamicClipboard",
    "prompt_toolkit.clipboard.in_memory.InMemoryClipboard",
    "prompt_toolkit.clipboard.pyperclip.PyperclipClipboard"
  ],
  "prompt_toolkit.clipboard.base.Clipboard.rotate": [
    "prompt_toolkit.clipboard.base.DummyClipboard",
    "prompt_toolkit.clipboard.base.DynamicClipboard",
    "prompt_toolkit.clipboard.in_memory.InMemoryClipboard"
  ],
  "prompt_toolkit.clipboard.base.Clipboard.set_data": [
    "prompt_toolkit.clipboard.base.DummyClipboard",
    "prompt_toolkit.clipboard.base.DynamicClipboard",
    "prompt_toolkit.clipboard.in_memory.InMemoryClipboard",
    "prompt_toolkit.clipboard.pyperclip.PyperclipClipboard"
  ],
  "prompt_toolkit.clipboard.base.Clipboard.set_text": [
    "prompt_toolkit.clipboard.base.DummyClipboard",
    "prompt_toolkit.clipboard.base.DynamicClipboard"
  ],
  "prompt_toolkit.completion.base.Completer.get_completions": [
    "prompt_toolkit.completion.base.ConditionalCompleter",
    "prompt_toolkit.completion.base.DummyCompleter",
    "prompt_toolkit.completion.base.DynamicCompleter",
    "prompt_toolkit.completion.base.ThreadedCompleter",
    "prompt_toolkit.completion.base._MergedCompleter",
    "prompt_toolkit.completion.deduplicate.DeduplicateCompleter",
    "prompt_toolkit.completion.filesystem.PathCompleter",
    "prompt_toolkit.completion.fuzzy_completer.FuzzyCompleter",
    "prompt_toolkit.completion.fuzzy_completer.FuzzyWordCompleter",
    "prompt_toolkit.completion.nested.NestedCompleter",
    "prompt_toolkit.completion.word_completer.WordCompleter",
    "prompt_toolkit.contrib.regular_languages.completion.GrammarCompleter"
  ],
  "prompt_toolkit.completion.base.Completer.get_completions_async": [
    "prompt_toolkit.completion.base.ConditionalCompleter",
    "prompt_toolkit.completion.base.DynamicCompleter",
    "prompt_toolkit.completion.base.ThreadedCompleter",
    "prompt_toolkit.completion.base._MergedCompleter"
  ],
  "prompt_toolkit.completion.filesystem.PathCompleter.__init__": [
    "prompt_toolkit.completion.filesystem.ExecutableCompleter"
  ],
  "prompt_toolkit.contrib.regular_languages.completion.GrammarCompleter.__init__": [
    "prompt_toolkit.contrib.completers.system.SystemCompleter"
  ],
  "prompt_toolkit.contrib.regular_languages.regex_parser.Node.__add__": [
    "prompt_toolkit.contrib.regular_languages.regex_parser.NodeSequence"
  ],
  "prompt_toolkit.contrib.regular_languages.regex_parser.Node.__or__": [
    "prompt_toolkit.contrib.regular_languages.regex_parser.AnyNode"
  ],
  "prompt_toolkit.cursor_shapes.CursorShapeConfig.get_cursor_shape": [
    "prompt_toolkit.cursor_shapes.DynamicCursorShapeConfig",
    "prompt_toolkit.cursor_shapes.ModalCursorShapeConfig",
    "prompt_toolkit.cursor_shapes.SimpleCursorShapeConfig"
  ],
  "prompt_toolkit.eventloop.async_context_manager.AbstractAsyncContextManager.__aenter__": [
    "prompt_toolkit.eventloop.async_context_manager._AsyncGeneratorContextManager"
  ],
  "prompt_toolkit.eventloop.async_context_manager.AbstractAsyncContextManager.__aexit__": [
    "prompt_toolkit.eventloop.async_context_manager._AsyncGeneratorContextManager"
  ],
  "prompt_toolkit.filters.base.Filter.__call__": [
    "prompt_toolkit.filters.base.Always",
    "prompt_toolkit.filters.base.Condition",
    "prompt_toolkit.filters.base.Never",
    "prompt_toolkit.filters.base._AndList",
    "prompt_toolkit.filters.base._Invert",
    "prompt_toolkit.filters.base._OrList"
  ],
  "prompt_toolkit.filters.base.Filter.__invert__": [
    "prompt_toolkit.filters.base.Always",
    "prompt_toolkit.filters.base.Never"
  ],
  "prompt_toolkit.history.History.__init__": [
    "prompt_toolkit.history.FileHistory",
    "prompt_toolkit.history.InMemoryHistory",
    "prompt_toolkit.history.ThreadedHistory"
  ],
  "prompt_toolkit.history.History.append_string": [
    "prompt_toolkit.history.DummyHistory",
    "prompt_toolkit.history.ThreadedHistory"
  ],
  "prompt_toolkit.history.History.load": [
    "prompt_toolkit.history.ThreadedHistory"
  ],
  "prompt_toolkit.history.History.load_history_strings": [
    "prompt_toolkit.history.DummyHistory",
    "prompt_toolkit.history.FileHistory",
    "prompt_toolkit.history.InMemoryHistory",
    "prompt_toolkit.history.ThreadedHistory"
  ],
  "prompt_toolkit.history.History.store_string": [
    "prompt_toolkit.history.DummyHistory",
    "prompt_toolkit.history.FileHistory",
    "prompt_toolkit.history.InMemoryHistory",
    "prompt_toolkit.history.ThreadedHistory"
  ],
  "prompt_toolkit.input.base.Input.attach": [
    "prompt_toolkit.input.base.DummyInput",
    "prompt_toolkit.input.vt100.Vt100Input",
    "prompt_toolkit.input.win32.Win32Input",
    "prompt_toolkit.input.win32_pipe.Win32PipeInput"
  ],
  "prompt_toolkit.input.base.Input.close": [
    "prompt_toolkit.input.posix_pipe.PosixPipeInput",
    "prompt_toolkit.input.win32.Win32Input",
    "prompt_toolkit.input.win32_pipe.Win32PipeInput"
  ],
  "prompt_toolkit.input.base.Input.closed": [
    "prompt_toolkit.input.base.DummyInput",
    "prompt_toolkit.input.vt100.Vt100Input",
    "prompt_toolkit.input.win32.Win32Input",
    "prompt_toolkit.input.win32_pipe.Win32PipeInput"
  ],
  "prompt_toolkit.input.base.Input.cooked_mode": [
    "prompt_toolkit.input.base.DummyInput",
    "prompt_toolkit.input.vt100.Vt100Input",
    "prompt_toolkit.input.win32.Win32Input",
    "prompt_toolkit.input.win32_pipe.Win32PipeInput"
  ],
  "prompt_toolkit.input.base.Input.detach": [
    "prompt_toolkit.input.base.DummyInput",
    "prompt_toolkit.input.vt100.Vt100Input",
    "prompt_toolkit.input.win32.Win32Input",
    "prompt_toolkit.input.win32_pipe.Win32PipeInput"
  ],
  "prompt_toolkit.input.base.Input.fileno": [
    "prompt_toolkit.input.base.DummyInput",
    "prompt_toolkit.input.vt100.Vt100Input",
    "prompt_toolkit.input.win32.Win32Input",
    "prompt_toolkit.input.win32_pipe.Win32PipeInput"
  ],
  "prompt_toolkit.input.base.Input.flush": [
    "prompt_toolkit.input.win32.Win32Input"
  ],
  "prompt_toolkit.input.base.Input.flush_keys": [
    "prompt_toolkit.input.vt100.Vt100Input",
    "prompt_toolkit.input.win32_pipe.Win32PipeInput"
  ],
  "prompt_toolkit.input.base.Input.raw_mode": [
    "prompt_toolkit.input.base.DummyInput",
    "prompt_toolkit.input.vt100.Vt100Input",
    "prompt_toolkit.input.win32.Win32Input",
    "prompt_toolkit.input.win32_pipe.Win32PipeInput"
  ],
  "prompt_toolkit.input.base.Input.read_keys": [
    "prompt_toolkit.input.base.DummyInput",
    "prompt_toolkit.input.vt100.Vt100Input",
    "prompt_toolkit.input.win32.Win32Input",
    "prompt_toolkit.input.win32_pipe.Win32PipeInput"
  ],
  "prompt_toolkit.input.base.Input.typeahead_hash": [
    "prompt_toolkit.input.base.DummyInput",
    "prompt_toolkit.input.vt100.Vt100Input",
    "prompt_toolkit.input.win32.Win32Input",
    "prompt_toolkit.input.win32_pipe.Win32PipeInput"
  ],
  "prompt_toolkit.input.base.PipeInput.send_bytes": [
    "prompt_toolkit.input.posix_pipe.PosixPipeInput",
    "prompt_toolkit.input.win32_pipe.Win32PipeInput"
  ],
  "prompt_toolkit.input.base.PipeInput.send_text": [
    "prompt_toolkit.input.posix_pipe.PosixPipeInput",
    "prompt_toolkit.input.win32_pipe.Win32PipeInput"
  ],
  "prompt_toolkit.input.vt100.Vt100Input.__init__": [
    "prompt_toolkit.input.posix_pipe.PosixPipeInput"
  ],
  "prompt_toolkit.input.vt100.Vt100Input.cooked_mode": [
    "prompt_toolkit.input.posix_pipe.PosixPipeInput"
  ],
  "prompt_toolkit.input.vt100.Vt100Input.raw_mode": [
    "prompt_toolkit.input.posix_pipe.PosixPipeInput"
  ],
  "prompt_toolkit.input.vt100.Vt100Input.typeahead_hash": [
    "prompt_toolkit.input.posix_pipe.PosixPipeInput"
  ],
  "prompt_toolkit.input.vt100.raw_mode._patch_iflag": [
    "prompt_toolkit.input.vt100.cooked_mode"
  ],
  "prompt_toolkit.input.vt100.raw_mode._patch_lflag": [
    "prompt_toolkit.input.vt100.cooked_mode"
  ],
  "prompt_toolkit.input.win32._Win32InputBase.__init__": [
    "prompt_toolkit.input.win32.Win32Input",
    "prompt_toolkit.input.win32_pipe.Win32PipeInput"
  ],
  "prompt_toolkit.input.win32._Win32InputBase.handle": [
    "prompt_toolkit.input.win32.Win32Input",
    "prompt_toolkit.input.win32_pipe.Win32PipeInput"
  ],
  "prompt_toolkit.input.win32.raw_mode._patch": [
    "prompt_toolkit.input.win32.cooked_mode"
  ],
  "prompt_toolkit.key_binding.key_bindings.KeyBindingsBase._version": [
    "prompt_toolkit.application.application._CombinedRegistry",
    "prompt_toolkit.key_binding.key_bindings.KeyBindings",
    "prompt_toolkit.key_binding.key_bindings._Proxy"
  ],
  "prompt_toolkit.key_binding.key_bindings.KeyBindingsBase.bindings": [
    "prompt_toolkit.application.application._CombinedRegistry",
    "prompt_toolkit.key_binding.key_bindings.KeyBindings",
    "prompt_toolkit.key_binding.key_bindings._Proxy"
  ],
  "prompt_toolkit.key_binding.key_bindings.KeyBindingsBase.get_bindings_for_keys": [
    "prompt_toolkit.application.application._CombinedRegistry",
    "prompt_toolkit.key_binding.key_bindings.KeyBindings",
    "prompt_toolkit.key_binding.key_bindings._Proxy"
  ],
  "prompt_toolkit.key_binding.key_bindings.KeyBindingsBase.get_bindings_starting_with_keys": [
    "prompt_toolkit.application.application._CombinedRegistry",
    "prompt_toolkit.key_binding.key_bindings.KeyBindings",
    "prompt_toolkit.key_binding.key_bindings._Proxy"
  ],
  "prompt_toolkit.key_binding.key_bindings._Proxy.__init__": [
    "prompt_toolkit.key_binding.key_bindings.ConditionalKeyBindings",
    "prompt_toolkit.key_binding.key_bindings.DynamicKeyBindings",
    "prompt_toolkit.key_binding.key_bindings.GlobalOnlyKeyBindings",
    "prompt_toolkit.key_binding.key_bindings._MergedKeyBindings"
  ],
  "prompt_toolkit.key_binding.key_bindings._Proxy._update_cache": [
    "prompt_toolkit.key_binding.key_bindings.ConditionalKeyBindings",
    "prompt_toolkit.key_binding.key_bindings.DynamicKeyBindings",
    "prompt_toolkit.key_binding.key_bindings.GlobalOnlyKeyBindings",
    "prompt_toolkit.key_binding.key_bindings._MergedKeyBindings"
  ],
  "prompt_toolkit.layout.containers.ConditionalContainer.__init__": [
    "prompt_toolkit.layout.menus.CompletionsMenu"
  ],
  "prompt_toolkit.layout.containers.Container.get_children": [
    "prompt_toolkit.layout.containers.ConditionalContainer",
    "prompt_toolkit.layout.containers.DynamicContainer",
    "prompt_toolkit.layout.containers.FloatContainer",
    "prompt_toolkit.layout.containers.Window",
    "prompt_toolkit.layout.containers._Split",
    "prompt_toolkit.layout.scrollable_pane.ScrollablePane"
  ],
  "prompt_toolkit.layout.containers.Container.get_key_bindings": [
    "prompt_toolkit.layout.containers.DynamicContainer",
    "prompt_toolkit.layout.containers.FloatContainer",
    "prompt_toolkit.layout.containers.Window",
    "prompt_toolkit.layout.containers._Split",
    "prompt_toolkit.layout.scrollable_pane.ScrollablePane"
  ],
  "prompt_toolkit.layout.containers.Container.is_modal": [
    "prompt_toolkit.layout.containers.DynamicContainer",
    "prompt_toolkit.layout.containers.FloatContainer",
    "prompt_toolkit.layout.containers._Split",
    "prompt_toolkit.layout.scrollable_pane.ScrollablePane"
  ],
  "prompt_toolkit.layout.containers.Container.preferred_height": [
    "prompt_toolkit.layout.containers.ConditionalContainer",
    "prompt_toolkit.layout.containers.DynamicContainer",
    "prompt_toolkit.layout.containers.FloatContainer",
    "prompt_toolkit.layout.containers.HSplit",
    "prompt_toolkit.layout.containers.VSplit",
    "prompt_toolkit.layout.containers.Window",
    "prompt_toolkit.layout.scrollable_pane.ScrollablePane"
  ],
  "prompt_toolkit.layout.containers.Container.preferred_width": [
    "prompt_toolkit.layout.containers.ConditionalContainer",
    "prompt_toolkit.layout.containers.DynamicContainer",
    "prompt_toolkit.layout.containers.FloatContainer",
    "prompt_toolkit.layout.containers.HSplit",
    "prompt_toolkit.layout.containers.VSplit",
    "prompt_toolkit.layout.containers.Window",
    "prompt_toolkit.layout.scrollable_pane.ScrollablePane"
  ],
  "prompt_toolkit.layout.containers.Container.reset": [
    "prompt_toolkit.layout.containers.ConditionalContainer",
    "prompt_toolkit.layout.containers.DynamicContainer",
    "prompt_toolkit.layout.containers.FloatContainer",
    "prompt_toolkit.layout.containers.HSplit",
    "prompt_toolkit.layout.containers.VSplit",
    "prompt_toolkit.layout.containers.Window",
    "prompt_toolkit.layout.scrollable_pane.ScrollablePane"
  ],
  "prompt_toolkit.layout.containers.Container.write_to_screen": [
    "prompt_toolkit.layout.containers.ConditionalContainer",
    "prompt_toolkit.layout.containers.DynamicContainer",
    "prompt_toolkit.layout.containers.FloatContainer",
    "prompt_toolkit.layout.containers.HSplit",
    "prompt_toolkit.layout.containers.VSplit",
    "prompt_toolkit.layout.containers.Window",
    "prompt_toolkit.layout.scrollable_pane.ScrollablePane"
  ],
  "prompt_toolkit.layout.containers.HSplit.__init__": [
    "prompt_toolkit.layout.menus.MultiColumnCompletionsMenu"
  ],
  "prompt_toolkit.layout.containers.Window.__init__": [
    "prompt_toolkit.shortcuts.prompt._RPrompt",
    "prompt_toolkit.widgets.toolbars.FormattedTextToolbar"
  ],
  "prompt_toolkit.layout.containers._Split.__init__": [
    "prompt_toolkit.layout.containers.HSplit",
    "prompt_toolkit.layout.containers.VSplit"
  ],
  "prompt_toolkit.layout.controls.BufferControl.__init__": [
    "prompt_toolkit.layout.controls.SearchBufferControl"
  ],
  "prompt_toolkit.layout.controls.UIControl.create_content": [
    "prompt_toolkit.layout.controls.BufferControl",
    "prompt_toolkit.layout.controls.DummyControl",
    "prompt_toolkit.layout.controls.FormattedTextControl",
    "prompt_toolkit.layout.menus.CompletionsMenuControl",
    "prompt_toolkit.layout.menus.MultiColumnCompletionMenuControl",
    "prompt_toolkit.layout.menus._SelectedCompletionMetaControl",
    "prompt_toolkit.shortcuts.progress_bar.base._ProgressControl",
    "prompt_toolkit.widgets.toolbars._CompletionsToolbarControl"
  ],
  "prompt_toolkit.layout.controls.UIControl.get_invalidate_events": [
    "prompt_toolkit.layout.controls.BufferControl"
  ],
  "prompt_toolkit.layout.controls.UIControl.get_key_bindings": [
    "prompt_toolkit.layout.controls.BufferControl",
    "prompt_toolkit.layout.controls.FormattedTextControl",
    "prompt_toolkit.layout.menus.MultiColumnCompletionMenuControl",
    "prompt_toolkit.shortcuts.progress_bar.base._ProgressControl"
  ],
  "prompt_toolkit.layout.controls.UIControl.is_focusable": [
    "prompt_toolkit.layout.controls.BufferControl",
    "prompt_toolkit.layout.controls.DummyControl",
    "prompt_toolkit.layout.controls.FormattedTextControl",
    "prompt_toolkit.shortcuts.progress_bar.base._ProgressControl"
  ],
  "prompt_toolkit.layout.controls.UIControl.mouse_handler": [
    "prompt_toolkit.layout.controls.BufferControl",
    "prompt_toolkit.layout.controls.FormattedTextControl",
    "prompt_toolkit.layout.menus.CompletionsMenuControl",
    "prompt_toolkit.layout.menus.MultiColumnCompletionMenuControl"
  ],
  "prompt_toolkit.layout.controls.UIControl.move_cursor_down": [
    "prompt_toolkit.layout.controls.BufferControl"
  ],
  "prompt_toolkit.layout.controls.UIControl.move_cursor_up": [
    "prompt_toolkit.layout.controls.BufferControl"
  ],
  "prompt_toolkit.layout.controls.UIControl.preferred_height": [
    "prompt_toolkit.layout.controls.BufferControl",
    "prompt_toolkit.layout.controls.FormattedTextControl",
    "prompt_toolkit.layout.menus.CompletionsMenuControl",
    "prompt_toolkit.layout.menus.MultiColumnCompletionMenuControl",
    "prompt_toolkit.layout.menus._SelectedCompletionMetaControl"
  ],
  "prompt_toolkit.layout.controls.UIControl.preferred_width": [
    "prompt_toolkit.layout.controls.BufferControl",
    "prompt_toolkit.layout.controls.FormattedTextControl",
    "prompt_toolkit.layout.menus.CompletionsMenuControl",
    "prompt_toolkit.layout.menus.MultiColumnCompletionMenuControl",
    "prompt_toolkit.layout.menus._SelectedCompletionMetaControl"
  ],
  "prompt_toolkit.layout.controls.UIControl.reset": [
    "prompt_toolkit.layout.controls.FormattedTextControl",
    "prompt_toolkit.layout.menus.MultiColumnCompletionMenuControl"
  ],
  "prompt_toolkit.layout.margins.Margin.create_margin": [
    "prompt_toolkit.layout.margins.ConditionalMargin",
    "prompt_toolkit.layout.margins.NumberedMargin",
    "prompt_toolkit.layout.margins.PromptMargin",
    "prompt_toolkit.layout.margins.ScrollbarMargin"
  ],
  "prompt_toolkit.layout.margins.Margin.get_width": [
    "prompt_toolkit.layout.margins.ConditionalMargin",
    "prompt_toolkit.layout.margins.NumberedMargin",
    "prompt_toolkit.layout.margins.PromptMargin",
    "prompt_toolkit.layout.margins.ScrollbarMargin"
  ],
  "prompt_toolkit.layout.processors.BeforeInput.__init__": [
    "prompt_toolkit.layout.processors.ShowArg"
  ],
  "prompt_toolkit.layout.processors.BeforeInput.__repr__": [
    "prompt_toolkit.layout.processors.ShowArg"
  ],
  "prompt_toolkit.layout.processors.HighlightSearchProcessor._get_search_text": [
    "prompt_toolkit.layout.processors.HighlightIncrementalSearchProcessor"
  ],
  "prompt_toolkit.layout.processors.Processor.apply_transformation": [
    "prompt_toolkit.layout.processors.AfterInput",
    "prompt_toolkit.layout.processors.AppendAutoSuggestion",
    "prompt_toolkit.layout.processors.BeforeInput",
    "prompt_toolkit.layout.processors.ConditionalProcessor",
    "prompt_toolkit.layout.processors.DisplayMultipleCursors",
    "prompt_toolkit.layout.processors.DummyProcessor",
    "prompt_toolkit.layout.processors.DynamicProcessor",
    "prompt_toolkit.layout.processors.HighlightMatchingBracketProcessor",
    "prompt_toolkit.layout.processors.HighlightSearchProcessor",
    "prompt_toolkit.layout.processors.HighlightSelectionProcessor",
    "prompt_toolkit.layout.processors.PasswordProcessor",
    "prompt_toolkit.layout.processors.ReverseSearchProcessor",
    "prompt_toolkit.layout.processors.ShowLeadingWhiteSpaceProcessor",
    "prompt_toolkit.layout.processors.ShowTrailingWhiteSpaceProcessor",
    "prompt_toolkit.layout.processors.TabsProcessor",
    "prompt_toolkit.layout.processors._MergedProcessor"
  ],
  "prompt_toolkit.lexers.base.Lexer.invalidation_hash": [
    "prompt_toolkit.lexers.base.DynamicLexer"
  ],
  "prompt_toolkit.lexers.base.Lexer.lex_document": [
    "prompt_toolkit.contrib.regular_languages.lexer.GrammarLexer",
    "prompt_toolkit.lexers.base.DynamicLexer",
    "prompt_toolkit.lexers.base.SimpleLexer",
    "prompt_toolkit.lexers.pygments.PygmentsLexer"
  ],
  "prompt_toolkit.lexers.pygments.SyntaxSync.get_sync_start_position": [
    "prompt_toolkit.lexers.pygments.RegexSync",
    "prompt_toolkit.lexers.pygments.SyncFromStart"
  ],
  "prompt_toolkit.output.base.Output.ask_for_cpr": [
    "prompt_toolkit.output.base.DummyOutput",
    "prompt_toolkit.output.plain_text.PlainTextOutput",
    "prompt_toolkit.output.vt100.Vt100_Output"
  ],
  "prompt_toolkit.output.base.Output.bell": [
    "prompt_toolkit.output.base.DummyOutput",
    "prompt_toolkit.output.plain_text.PlainTextOutput",
    "prompt_toolkit.output.vt100.Vt100_Output"
  ],
  "prompt_toolkit.output.base.Output.clear_title": [
    "prompt_toolkit.output.base.DummyOutput",
    "prompt_toolkit.output.plain_text.PlainTextOutput",
    "prompt_toolkit.output.vt100.Vt100_Output",
    "prompt_toolkit.output.win32.Win32Output"
  ],
  "prompt_toolkit.output.base.Output.cursor_backward": [
    "prompt_toolkit.output.base.DummyOutput",
    "prompt_toolkit.output.plain_text.PlainTextOutput",
    "prompt_toolkit.output.vt100.Vt100_Output",
    "prompt_toolkit.output.win32.Win32Output"
  ],
  "prompt_toolkit.output.base.Output.cursor_down": [
    "prompt_toolkit.output.base.DummyOutput",
    "prompt_toolkit.output.plain_text.PlainTextOutput",
    "prompt_toolkit.output.vt100.Vt100_Output",
    "prompt_toolkit.output.win32.Win32Output"
  ],
  "prompt_toolkit.output.base.Output.cursor_forward": [
    "prompt_toolkit.output.base.DummyOutput",
    "prompt_toolkit.output.plain_text.PlainTextOutput",
    "prompt_toolkit.output.vt100.Vt100_Output",
    "prompt_toolkit.output.win32.Win32Output"
  ],
  "prompt_toolkit.output.base.Output.cursor_goto": [
    "prompt_toolkit.output.base.DummyOutput",
    "prompt_toolkit.output.plain_text.PlainTextOutput",
    "prompt_toolkit.output.vt100.Vt100_Output",
    "prompt_toolkit.output.win32.Win32Output"
  ],
  "prompt_toolkit.output.base.Output.cursor_up": [
    "prompt_toolkit.output.base.DummyOutput",
    "prompt_toolkit.output.plain_text.PlainTextOutput",
    "prompt_toolkit.output.vt100.Vt100_Output",
    "prompt_toolkit.output.win32.Win32Output"
  ],
  "prompt_toolkit.output.base.Output.disable_autowrap": [
    "prompt_toolkit.output.base.DummyOutput",
    "prompt_toolkit.output.plain_text.PlainTextOutput",
    "prompt_toolkit.output.vt100.Vt100_Output",
    "prompt_toolkit.output.win32.Win32Output"
  ],
  "prompt_toolkit.output.base.Output.disable_bracketed_paste": [
    "prompt_toolkit.output.base.DummyOutput",
    "prompt_toolkit.output.plain_text.PlainTextOutput",
    "prompt_toolkit.output.vt100.Vt100_Output"
  ],
  "prompt_toolkit.output.base.Output.disable_mouse_support": [
    "prompt_toolkit.output.base.DummyOutput",
    "prompt_toolkit.output.plain_text.PlainTextOutput",
    "prompt_toolkit.output.vt100.Vt100_Output",
    "prompt_toolkit.output.win32.Win32Output"
  ],
  "prompt_toolkit.output.base.Output.enable_autowrap": [
    "prompt_toolkit.output.base.DummyOutput",
    "prompt_toolkit.output.plain_text.PlainTextOutput",
    "prompt_toolkit.output.vt100.Vt100_Output",
    "prompt_toolkit.output.win32.Win32Output"
  ],
  "prompt_toolkit.output.base.Output.enable_bracketed_paste": [
    "prompt_toolkit.output.base.DummyOutput",
    "prompt_toolkit.output.plain_text.PlainTextOutput",
    "prompt_toolkit.output.vt100.Vt100_Output"
  ],
  "prompt_toolkit.output.base.Output.enable_mouse_support": [
    "prompt_toolkit.output.base.DummyOutput",
    "prompt_toolkit.output.plain_text.PlainTextOutput",
    "prompt_toolkit.output.vt100.Vt100_Output",
    "prompt_toolkit.output.win32.Win32Output"
  ],
  "prompt_toolkit.output.base.Output.encoding": [
    "prompt_toolkit.output.base.DummyOutput",
    "prompt_toolkit.output.plain_text.PlainTextOutput",
    "prompt_toolkit.output.vt100.Vt100_Output",
    "prompt_toolkit.output.win32.Win32Output"
  ],
  "prompt_toolkit.output.base.Output.enter_alternate_screen": [
    "prompt_toolkit.output.base.DummyOutput",
    "prompt_toolkit.output.plain_text.PlainTextOutput",
    "prompt_toolkit.output.vt100.Vt100_Output",
    "prompt_toolkit.output.win32.Win32Output"
  ],
  "prompt_toolkit.output.base.Output.erase_down": [
    "prompt_toolkit.output.base.DummyOutput",
    "prompt_toolkit.output.plain_text.PlainTextOutput",
    "prompt_toolkit.output.vt100.Vt100_Output",
    "prompt_toolkit.output.win32.Win32Output"
  ],
  "prompt_toolkit.output.base.Output.erase_end_of_line": [
    "prompt_toolkit.output.base.DummyOutput",
    "prompt_toolkit.output.plain_text.PlainTextOutput",
    "prompt_toolkit.output.vt100.Vt100_Output",
    "prompt_toolkit.output.win32.Win32Output"
  ],
  "prompt_toolkit.output.base.Output.erase_screen": [
    "prompt_toolkit.output.base.DummyOutput",
    "prompt_toolkit.output.plain_text.PlainTextOutput",
    "prompt_toolkit.output.vt100.Vt100_Output",
    "prompt_toolkit.output.win32.Win32Output"
  ],
  "prompt_toolkit.output.base.Output.fileno": [
    "prompt_toolkit.output.base.DummyOutput",
    "prompt_toolkit.output.plain_text.PlainTextOutput",
    "prompt_toolkit.output.vt100.Vt100_Output",
    "prompt_toolkit.output.win32.Win32Output"
  ],
  "prompt_toolkit.output.base.Output.flush": [
    "prompt_toolkit.output.base.DummyOutput",
    "prompt_toolkit.output.plain_text.PlainTextOutput",
    "prompt_toolkit.output.vt100.Vt100_Output",
    "prompt_toolkit.output.win32.Win32Output"
  ],
  "prompt_toolkit.output.base.Output.get_default_color_depth": [
    "prompt_toolkit.output.base.DummyOutput",
    "prompt_toolkit.output.plain_text.PlainTextOutput",
    "prompt_toolkit.output.vt100.Vt100_Output",
    "prompt_toolkit.output.win32.Win32Output"
  ],
  "prompt_toolkit.output.base.Output.get_rows_below_cursor_position": [
    "prompt_toolkit.output.base.DummyOutput",
    "prompt_toolkit.output.plain_text.PlainTextOutput",
    "prompt_toolkit.output.win32.Win32Output"
  ],
  "prompt_toolkit.output.base.Output.get_size": [
    "prompt_toolkit.output.base.DummyOutput",
    "prompt_toolkit.output.plain_text.PlainTextOutput",
    "prompt_toolkit.output.vt100.Vt100_Output",
    "prompt_toolkit.output.win32.Win32Output"
  ],
  "prompt_toolkit.output.base.Output.hide_cursor": [
    "prompt_toolkit.output.base.DummyOutput",
    "prompt_toolkit.output.plain_text.PlainTextOutput",
    "prompt_toolkit.output.vt100.Vt100_Output",
    "prompt_toolkit.output.win32.Win32Output"
  ],
  "prompt_toolkit.output.base.Output.quit_alternate_screen": [
    "prompt_toolkit.output.base.DummyOutput",
    "prompt_toolkit.output.plain_text.PlainTextOutput",
    "prompt_toolkit.output.vt100.Vt100_Output",
    "prompt_toolkit.output.win32.Win32Output"
  ],
  "prompt_toolkit.output.base.Output.reset_attributes": [
    "prompt_toolkit.output.base.DummyOutput",
    "prompt_toolkit.output.plain_text.PlainTextOutput",
    "prompt_toolkit.output.vt100.Vt100_Output",
    "prompt_toolkit.output.win32.Win32Output"
  ],
  "prompt_toolkit.output.base.Output.reset_cursor_key_mode": [
    "prompt_toolkit.output.vt100.Vt100_Output"
  ],
  "prompt_toolkit.output.base.Output.reset_cursor_shape": [
    "prompt_toolkit.output.base.DummyOutput",
    "prompt_toolkit.output.plain_text.PlainTextOutput",
    "prompt_toolkit.output.vt100.Vt100_Output",
    "prompt_toolkit.output.win32.Win32Output"
  ],
  "prompt_toolkit.output.base.Output.responds_to_cpr": [
    "prompt_toolkit.output.vt100.Vt100_Output"
  ],
  "prompt_toolkit.output.base.Output.scroll_buffer_to_prompt": [
    "prompt_toolkit.output.base.DummyOutput",
    "prompt_toolkit.output.plain_text.PlainTextOutput",
    "prompt_toolkit.output.win32.Win32Output"
  ],
  "prompt_toolkit.output.base.Output.set_attributes": [
    "prompt_toolkit.output.base.DummyOutput",
    "prompt_toolkit.output.plain_text.PlainTextOutput",
    "prompt_toolkit.output.vt100.Vt100_Output",
    "prompt_toolkit.output.win32.Win32Output"
  ],
  "prompt_toolkit.output.base.Output.set_cursor_shape": [
    "prompt_toolkit.output.base.DummyOutput",
    "prompt_toolkit.output.plain_text.PlainTextOutput",
    "prompt_toolkit.output.vt100.Vt100_Output",
    "prompt_toolkit.output.win32.Win32Output"
  ],
  "prompt_toolkit.output.base.Output.set_title": [
    "prompt_toolkit.output.base.DummyOutput",
    "prompt_toolkit.output.plain_text.PlainTextOutput",
    "prompt_toolkit.output.vt100.Vt100_Output",
    "prompt_toolkit.output.win32.Win32Output"
  ],
  "prompt_toolkit.output.base.Output.show_cursor": [
    "prompt_toolkit.output.base.DummyOutput",
    "prompt_toolkit.output.plain_text.PlainTextOutput",
    "prompt_toolkit.output.vt100.Vt100_Output",
    "prompt_toolkit.output.win32.Win32Output"
  ],
  "prompt_toolkit.output.base.Output.write": [
    "prompt_toolkit.output.base.DummyOutput",
    "prompt_toolkit.output.plain_text.PlainTextOutput",
    "prompt_toolkit.output.vt100.Vt100_Output",
    "prompt_toolkit.output.win32.Win32Output"
  ],
  "prompt_toolkit.output.base.Output.write_raw": [
    "prompt_toolkit.output.base.DummyOutput",
    "prompt_toolkit.output.plain_text.PlainTextOutput",
    "prompt_toolkit.output.vt100.Vt100_Output",
    "prompt_toolkit.output.win32.Win32Output"
  ],
  "prompt_toolkit.shortcuts.progress_bar.formatters.Formatter.format": [
    "prompt_toolkit.shortcuts.progress_bar.formatters.Bar",
    "prompt_toolkit.shortcuts.progress_bar.formatters.IterationsPerSecond",
    "prompt_toolkit.shortcuts.progress_bar.formatters.Label",
    "prompt_toolkit.shortcuts.progress_bar.formatters.Percentage",
    "prompt_toolkit.shortcuts.progress_bar.formatters.Progress",
    "prompt_toolkit.shortcuts.progress_bar.formatters.Rainbow",
    "prompt_toolkit.shortcuts.progress_bar.formatters.SpinningWheel",
    "prompt_toolkit.shortcuts.progress_bar.formatters.Text",
    "prompt_toolkit.shortcuts.progress_bar.formatters.TimeElapsed",
    "prompt_toolkit.shortcuts.progress_bar.formatters.TimeLeft"
  ],
  "prompt_toolkit.shortcuts.progress_bar.formatters.Formatter.get_width": [
    "prompt_toolkit.shortcuts.progress_bar.formatters.Bar",
    "prompt_toolkit.shortcuts.progress_bar.formatters.IterationsPerSecond",
    "prompt_toolkit.shortcuts.progress_bar.formatters.Label",
    "prompt_toolkit.shortcuts.progress_bar.formatters.Percentage",
    "prompt_toolkit.shortcuts.progress_bar.formatters.Progress",
    "prompt_toolkit.shortcuts.progress_bar.formatters.Rainbow",
    "prompt_toolkit.shortcuts.progress_bar.formatters.SpinningWheel",
    "prompt_toolkit.shortcuts.progress_bar.formatters.Text",
    "prompt_toolkit.shortcuts.progress_bar.formatters.TimeElapsed",
    "prompt_toolkit.shortcuts.progress_bar.formatters.TimeLeft"
  ],
  "prompt_toolkit.styles.base.BaseStyle.get_attrs_for_style_str": [
    "prompt_toolkit.styles.base.DummyStyle",
    "prompt_toolkit.styles.base.DynamicStyle",
    "prompt_toolkit.styles.style.Style",
    "prompt_toolkit.styles.style._MergedStyle"
  ],
  "prompt_toolkit.styles.base.BaseStyle.invalidation_hash": [
    "prompt_toolkit.styles.base.DummyStyle",
    "prompt_toolkit.styles.base.DynamicStyle",
    "prompt_toolkit.styles.style.Style",
    "prompt_toolkit.styles.style._MergedStyle"
  ],
  "prompt_toolkit.styles.base.BaseStyle.style_rules": [
    "prompt_toolkit.styles.base.DummyStyle",
    "prompt_toolkit.styles.base.DynamicStyle",
    "prompt_toolkit.styles.style.Style",
    "prompt_toolkit.styles.style._MergedStyle"
  ],
  "prompt_toolkit.styles.style_transformation.StyleTransformation.invalidation_hash": [
    "prompt_toolkit.styles.style_transformation.AdjustBrightnessStyleTransformation",
    "prompt_toolkit.styles.style_transformation.ConditionalStyleTransformation",
    "prompt_toolkit.styles.style_transformation.DummyStyleTransformation",
    "prompt_toolkit.styles.style_transformation.DynamicStyleTransformation",
    "prompt_toolkit.styles.style_transformation.SetDefaultColorStyleTransformation",
    "prompt_toolkit.styles.style_transformation._MergedStyleTransformation"
  ],
  "prompt_toolkit.styles.style_transformation.StyleTransformation.transform_attrs": [
    "prompt_toolkit.styles.style_transformation.AdjustBrightnessStyleTransformation",
    "prompt_toolkit.styles.style_transformation.ConditionalStyleTransformation",
    "prompt_toolkit.styles.style_transformation.DummyStyleTransformation",
    "prompt_toolkit.styles.style_transformation.DynamicStyleTransformation",
    "prompt_toolkit.styles.style_transformation.ReverseStyleTransformation",
    "prompt_toolkit.styles.style_transformation.SetDefaultColorStyleTransformation",
    "prompt_toolkit.styles.style_transformation.SwapLightAndDarkStyleTransformation",
    "prompt_toolkit.styles.style_transformation._MergedStyleTransformation"
  ],
  "prompt_toolkit.validation.Validator.validate": [
    "prompt_toolkit.contrib.regular_languages.validation.GrammarValidator",
    "prompt_toolkit.validation.ConditionalValidator",
    "prompt_toolkit.validation.DummyValidator",
    "prompt_toolkit.validation.DynamicValidator",
    "prompt_toolkit.validation.ThreadedValidator",
    "prompt_toolkit.validation._ValidatorFromCallable"
  ],
  "prompt_toolkit.validation.Validator.validate_async": [
    "prompt_toolkit.validation.DynamicValidator",
    "prompt_toolkit.validation.ThreadedValidator"
  ],
  "prompt_toolkit.widgets.base._DialogList.__init__": [
    "prompt_toolkit.widgets.base.RadioList"
  ],
  "property.__delete__": [
    "werkzeug.utils.cached_property"
  ],
  "property.__get__": [
    "werkzeug.utils.cached_property"
  ],
  "property.__init__": [
    "werkzeug.utils.cached_property"
  ],
  "property.__set__": [
    "werkzeug.utils.cached_property"
  ],
  "psycopg2._psycopg.ReplicationConnection.__init__": [
    "psycopg2.extras.LogicalReplicationConnection",
    "psycopg2.extras.PhysicalReplicationConnection"
  ],
  "psycopg2._psycopg.ReplicationCursor.consume_stream": [
    "psycopg2.extras.ReplicationCursor"
  ],
  "psycopg2._psycopg.connection.__init__": [
    "psycopg2._psycopg.ReplicationConnection"
  ],
  "psycopg2._psycopg.connection.cursor": [
    "psycopg2._psycopg.ReplicationConnection",
    "psycopg2.extras.DictConnection",
    "psycopg2.extras.LoggingConnection",
    "psycopg2.extras.NamedTupleConnection",
    "psycopg2.extras.RealDictConnection"
  ],
  "psycopg2._psycopg.cursor.__init__": [
    "psycopg2._psycopg.ReplicationCursor",
    "psycopg2.extras.DictCursorBase"
  ],
  "psycopg2._psycopg.cursor.__next__": [
    "psycopg2.extras.DictCursor",
    "psycopg2.extras.NamedTupleCursor",
    "psycopg2.extras.RealDictCursor"
  ],
  "psycopg2._psycopg.cursor.callproc": [
    "psycopg2.extras.DictCursor",
    "psycopg2.extras.LoggingCursor",
    "psycopg2.extras.NamedTupleCursor",
    "psycopg2.extras.RealDictCursor"
  ],
  "psycopg2._psycopg.cursor.execute": [
    "psycopg2.extras.DictCursor",
    "psycopg2.extras.LoggingCursor",
    "psycopg2.extras.NamedTupleCursor",
    "psycopg2.extras.RealDictCursor"
  ],
  "psycopg2._psycopg.cursor.executemany": [
    "psycopg2.extras.NamedTupleCursor"
  ],
  "psycopg2._psycopg.cursor.fetchall": [
    "psycopg2.extras.DictCursor",
    "psycopg2.extras.NamedTupleCursor",
    "psycopg2.extras.RealDictCursor"
  ],
  "psycopg2._psycopg.cursor.fetchmany": [
    "psycopg2.extras.DictCursor",
    "psycopg2.extras.NamedTupleCursor",
    "psycopg2.extras.RealDictCursor"
  ],
  "psycopg2._psycopg.cursor.fetchone": [
    "psycopg2.extras.DictCursor",
    "psycopg2.extras.NamedTupleCursor",
    "psycopg2.extras.RealDictCursor"
  ],
  "psycopg2._range.RangeAdapter.getquoted": [
    "psycopg2._range.NumberRangeAdapter"
  ],
  "psycopg2.extras.DictCursorBase.__init__": [
    "psycopg2.extras.DictCursor",
    "psycopg2.extras.RealDictCursor"
  ],
  "psycopg2.extras.LoggingConnection.cursor": [
    "psycopg2.extras.MinTimeLoggingConnection"
  ],
  "psycopg2.extras.LoggingConnection.filter": [
    "psycopg2.extras.MinTimeLoggingConnection"
  ],
  "psycopg2.extras.LoggingConnection.initialize": [
    "psycopg2.extras.MinTimeLoggingConnection"
  ],
  "psycopg2.extras.LoggingCursor.callproc": [
    "psycopg2.extras.MinTimeLoggingCursor"
  ],
  "psycopg2.extras.LoggingCursor.execute": [
    "psycopg2.extras.MinTimeLoggingCursor"
  ],
  "psycopg2.pool.AbstractConnectionPool.putconn": [
    "psycopg2.pool.ThreadedConnectionPool"
  ],
  "psycopg2.sql.Composable.__add__": [
    "psycopg2.sql.Composed"
  ],
  "psycopg2.sql.Composable.__init__": [
    "psycopg2.sql.Composed",
    "psycopg2.sql.Identifier",
    "psycopg2.sql.Literal",
    "psycopg2.sql.Placeholder",
    "psycopg2.sql.SQL"
  ],
  "pyclbr._Object.__init__": [
    "pyclbr.Class",
    "pyclbr.Function"
  ],
  "pydantic._internal._repr.Representation.__repr_args__": [
    "pydantic._internal._utils.ValueItems",
    "pydantic.color.Color",
    "pydantic.fields.FieldInfo"
  ],
  "pydantic._internal._repr.Representation.__str__": [
    "pydantic.color.Color",
    "pydantic.networks.NameEmail"
  ],
  "pydantic.annotated_handlers.GetCoreSchemaHandler.__call__": [
    "pydantic._internal._schema_generation_shared.CallbackGetCoreSchemaHandler"
  ],
  "pydantic.annotated_handlers.GetCoreSchemaHandler._get_types_namespace": [
    "pydantic._internal._schema_generation_shared.CallbackGetCoreSchemaHandler"
  ],
  "pydantic.annotated_handlers.GetCoreSchemaHandler.field_name": [
    "pydantic._internal._schema_generation_shared.CallbackGetCoreSchemaHandler"
  ],
  "pydantic.annotated_handlers.GetCoreSchemaHandler.generate_schema": [
    "pydantic._internal._schema_generation_shared.CallbackGetCoreSchemaHandler"
  ],
  "pydantic.annotated_handlers.GetCoreSchemaHandler.resolve_ref_schema": [
    "pydantic._internal._schema_generation_shared.CallbackGetCoreSchemaHandler"
  ],
  "pydantic.annotated_handlers.GetJsonSchemaHandler.__call__": [
    "pydantic._internal._schema_generation_shared.GenerateJsonSchemaHandler"
  ],
  "pydantic.annotated_handlers.GetJsonSchemaHandler.resolve_ref_schema": [
    "pydantic._internal._schema_generation_shared.GenerateJsonSchemaHandler"
  ],
  "pydantic.errors.PydanticErrorMixin.__init__": [
    "pydantic.errors.PydanticImportError",
    "pydantic.errors.PydanticUndefinedAnnotation"
  ],
  "pydantic.main.BaseModel.__copy__": [
    "pydantic.root_model.RootModel"
  ],
  "pydantic.main.BaseModel.__deepcopy__": [
    "pydantic.root_model.RootModel"
  ],
  "pydantic.main.BaseModel.__eq__": [
    "pydantic.root_model.RootModel"
  ],
  "pydantic.main.BaseModel.__getstate__": [
    "pydantic.root_model.RootModel"
  ],
  "pydantic.main.BaseModel.__init__": [
    "pydantic.root_model.RootModel"
  ],
  "pydantic.main.BaseModel.__init_subclass__": [
    "pydantic.root_model.RootModel"
  ],
  "pydantic.main.BaseModel.__repr_args__": [
    "pydantic.root_model.RootModel"
  ],
  "pydantic.main.BaseModel.__setstate__": [
    "pydantic.root_model.RootModel"
  ],
  "pydantic.main.BaseModel.model_construct": [
    "pydantic.root_model.RootModel"
  ],
  "pydantic.main.BaseModel.model_dump": [
    "pydantic.root_model.RootModel"
  ],
  "pydantic.networks._BaseUrl.host": [
    "pydantic.networks.CockroachDsn",
    "pydantic.networks.RedisDsn",
    "pydantic.networks.SnowflakeDsn"
  ],
  "pydantic.plugin.BaseValidateHandlerProtocol.on_enter": [
    "pydantic.plugin.ValidateJsonHandlerProtocol",
    "pydantic.plugin.ValidatePythonHandlerProtocol",
    "pydantic.plugin.ValidateStringsHandlerProtocol"
  ],
  "pydantic.types.EncoderProtocol.decode": [
    "pydantic.types.Base64Encoder",
    "pydantic.types.Base64UrlEncoder"
  ],
  "pydantic.types.EncoderProtocol.encode": [
    "pydantic.types.Base64Encoder",
    "pydantic.types.Base64UrlEncoder"
  ],
  "pydantic.types.EncoderProtocol.get_json_format": [
    "pydantic.types.Base64Encoder",
    "pydantic.types.Base64UrlEncoder"
  ],
  "pydantic.types._SecretBase._display": [
    "pydantic.types.Secret",
    "pydantic.types.SecretBytes",
    "pydantic.types.SecretStr"
  ],
  "pydantic.v1.config.BaseConfig.prepare_field": [
    "pydantic.v1.env_settings.BaseSettings.Config"
  ],
  "pydantic.v1.main.BaseModel.__init__": [
    "pydantic.v1.env_settings.BaseSettings"
  ],
  "pydantic.v1.networks.AnyUrl.__init__": [
    "pydantic.v1.networks.MultiHostDsn"
  ],
  "pydantic.v1.networks.AnyUrl._build_url": [
    "pydantic.v1.networks.MultiHostDsn"
  ],
  "pydantic.v1.networks.AnyUrl._match_url": [
    "pydantic.v1.networks.MultiHostDsn"
  ],
  "pydantic.v1.networks.AnyUrl.get_default_parts": [
    "pydantic.v1.networks.HttpUrl",
    "pydantic.v1.networks.KafkaDsn",
    "pydantic.v1.networks.MongoDsn",
    "pydantic.v1.networks.RedisDsn"
  ],
  "pydantic.v1.networks.AnyUrl.validate_parts": [
    "pydantic.v1.networks.MultiHostDsn"
  ],
  "pydantic.v1.types.SecretField.get_secret_value": [
    "pydantic.v1.types.SecretBytes",
    "pydantic.v1.types.SecretStr"
  ],
  "pydantic.v1.utils.Representation.__repr_args__": [
    "pydantic.v1.color.Color",
    "pydantic.v1.error_wrappers.ErrorWrapper",
    "pydantic.v1.error_wrappers.ValidationError",
    "pydantic.v1.fields.FieldInfo",
    "pydantic.v1.fields.ModelField",
    "pydantic.v1.main.BaseModel",
    "pydantic.v1.utils.GetterDict",
    "pydantic.v1.utils.ValueItems"
  ],
  "pydantic.v1.utils.Representation.__repr_name__": [
    "pydantic.v1.utils.GetterDict"
  ],
  "pydantic.v1.utils.Representation.__str__": [
    "pydantic.v1.color.Color",
    "pydantic.v1.error_wrappers.ValidationError",
    "pydantic.v1.networks.NameEmail"
  ],
  "pydantic.warnings.PydanticDeprecationWarning.__init__": [
    "pydantic.warnings.PydanticDeprecatedSince20",
    "pydantic.warnings.PydanticDeprecatedSince210",
    "pydantic.warnings.PydanticDeprecatedSince26",
    "pydantic.warnings.PydanticDeprecatedSince29"
  ],
  "pydantic_core.core_schema.ValidatorFunctionWrapHandler.__call__": [
    "pydantic.functional_validators.ModelWrapValidatorHandler"
  ],
  "pydoc.Doc.docclass": [
    "pydoc.HTMLDoc",
    "pydoc.TextDoc"
  ],
  "pydoc.Doc.docdata": [
    "pydoc.HTMLDoc",
    "pydoc.TextDoc"
  ],
  "pydoc.Doc.docmodule": [
    "pydoc.HTMLDoc",
    "pydoc.TextDoc"
  ],
  "pydoc.Doc.docother": [
    "pydoc.HTMLDoc",
    "pydoc.TextDoc"
  ],
  "pydoc.Doc.docproperty": [
    "pydoc.HTMLDoc",
    "pydoc.TextDoc"
  ],
  "pydoc.Doc.docroutine": [
    "pydoc.HTMLDoc",
    "pydoc.TextDoc"
  ],
  "pydoc.HTMLDoc.docroutine": [
    "xmlrpc.server.ServerHTMLDoc"
  ],
  "pymysql.connections.MysqlPacket.__init__": [
    "pymysql.connections.FieldDescriptorPacket"
  ],
  "pymysql.cursors.Cursor.fetchall": [
    "pymysql.cursors.SSCursor"
  ],
  "pymysql.cursors.Cursor.scroll": [
    "pymysql.cursors.SSCursor"
  ],
  "pymysql.cursors.SSCursor.fetchall_unbuffered": [
    "pymysql.cursors.SSDictCursor"
  ],
  "pytz.tzinfo.BaseTzInfo.dst": [
    "pytz._UTCclass",
    "pytz.tzinfo.DstTzInfo",
    "pytz.tzinfo.StaticTzInfo"
  ],
  "pytz.tzinfo.BaseTzInfo.localize": [
    "pytz._UTCclass",
    "pytz.tzinfo.DstTzInfo",
    "pytz.tzinfo.StaticTzInfo"
  ],
  "pytz.tzinfo.BaseTzInfo.normalize": [
    "pytz._UTCclass",
    "pytz.tzinfo.DstTzInfo",
    "pytz.tzinfo.StaticTzInfo"
  ],
  "pytz.tzinfo.BaseTzInfo.tzname": [
    "pytz._UTCclass",
    "pytz.tzinfo.DstTzInfo",
    "pytz.tzinfo.StaticTzInfo"
  ],
  "pytz.tzinfo.BaseTzInfo.utcoffset": [
    "pytz._UTCclass",
    "pytz.tzinfo.DstTzInfo",
    "pytz.tzinfo.StaticTzInfo"
  ],
  "random.Random.getstate": [
    "random.SystemRandom"
  ],
  "random.Random.setstate": [
    "random.SystemRandom"
  ],
  "reprlib.Repr.__init__": [
    "pydoc.HTMLRepr",
    "pydoc.TextRepr"
  ],
  "reprlib.Repr.repr": [
    "pydoc.HTMLRepr"
  ],
  "reprlib.Repr.repr1": [
    "pydoc.HTMLRepr",
    "pydoc.TextRepr"
  ],
  "reprlib.Repr.repr_instance": [
    "pydoc.HTMLRepr",
    "pydoc.TextRepr"
  ],
  "reprlib.Repr.repr_str": [
    "pydoc.HTMLRepr",
    "pydoc.TextRepr"
  ],
  "requests.adapters.BaseAdapter.__init__": [
    "requests.adapters.HTTPAdapter"
  ],
  "requests.adapters.BaseAdapter.close": [
    "requests.adapters.HTTPAdapter"
  ],
  "requests.adapters.BaseAdapter.send": [
    "requests.adapters.HTTPAdapter"
  ],
  "requests.auth.AuthBase.__call__": [
    "requests.auth.HTTPBasicAuth",
    "requests.auth.HTTPDigestAuth"
  ],
  "requests.auth.HTTPBasicAuth.__call__": [
    "requests.auth.HTTPProxyAuth"
  ],
  "rich.console.RenderHook.process_renderables": [
    "rich.live.Live"
  ],
  "rich.highlighter.Highlighter.highlight": [
    "rich.highlighter.NullHighlighter",
    "rich.highlighter.RegexHighlighter"
  ],
  "rich.highlighter.RegexHighlighter.highlight": [
    "rich.highlighter.JSONHighlighter"
  ],
  "rich.layout.Splitter.divide": [
    "rich.layout.ColumnSplitter",
    "rich.layout.RowSplitter"
  ],
  "rich.layout.Splitter.get_tree_icon": [
    "rich.layout.ColumnSplitter",
    "rich.layout.RowSplitter"
  ],
  "rich.markdown.MarkdownElement.__rich_console__": [
    "rich.markdown.BlockQuote",
    "rich.markdown.CodeBlock",
    "rich.markdown.Heading",
    "rich.markdown.HorizontalRule",
    "rich.markdown.ImageItem",
    "rich.markdown.ListElement",
    "rich.markdown.Paragraph",
    "rich.markdown.TableElement"
  ],
  "rich.markdown.MarkdownElement.create": [
    "rich.markdown.CodeBlock",
    "rich.markdown.Heading",
    "rich.markdown.ImageItem",
    "rich.markdown.Link",
    "rich.markdown.ListElement",
    "rich.markdown.Paragraph",
    "rich.markdown.TableDataElement"
  ],
  "rich.markdown.MarkdownElement.on_child_close": [
    "rich.markdown.BlockQuote",
    "rich.markdown.ListElement",
    "rich.markdown.ListItem",
    "rich.markdown.TableBodyElement",
    "rich.markdown.TableElement",
    "rich.markdown.TableHeaderElement",
    "rich.markdown.TableRowElement"
  ],
  "rich.markdown.MarkdownElement.on_enter": [
    "rich.markdown.TextElement"
  ],
  "rich.markdown.MarkdownElement.on_leave": [
    "rich.markdown.TextElement"
  ],
  "rich.markdown.MarkdownElement.on_text": [
    "rich.markdown.TableDataElement",
    "rich.markdown.TextElement"
  ],
  "rich.markdown.TextElement.on_enter": [
    "rich.markdown.Heading",
    "rich.markdown.ImageItem"
  ],
  "rich.pager.Pager.show": [
    "rich.pager.SystemPager"
  ],
  "rich.progress.ProgressColumn.__init__": [
    "rich.progress.BarColumn",
    "rich.progress.DownloadColumn",
    "rich.progress.MofNCompleteColumn",
    "rich.progress.RenderableColumn",
    "rich.progress.SpinnerColumn",
    "rich.progress.TextColumn",
    "rich.progress.TimeRemainingColumn"
  ],
  "rich.progress.ProgressColumn.render": [
    "rich.progress.BarColumn",
    "rich.progress.DownloadColumn",
    "rich.progress.FileSizeColumn",
    "rich.progress.MofNCompleteColumn",
    "rich.progress.RenderableColumn",
    "rich.progress.SpinnerColumn",
    "rich.progress.TextColumn",
    "rich.progress.TimeElapsedColumn",
    "rich.progress.TimeRemainingColumn",
    "rich.progress.TotalFileSizeColumn",
    "rich.progress.TransferSpeedColumn"
  ],
  "rich.progress.TextColumn.__init__": [
    "rich.progress.TaskProgressColumn"
  ],
  "rich.progress.TextColumn.render": [
    "rich.progress.TaskProgressColumn"
  ],
  "rich.prompt.PromptBase.process_response": [
    "rich.prompt.Confirm"
  ],
  "rich.prompt.PromptBase.render_default": [
    "rich.prompt.Confirm"
  ],
  "rich.syntax.SyntaxTheme.get_background_style": [
    "rich.syntax.ANSISyntaxTheme",
    "rich.syntax.PygmentsSyntaxTheme"
  ],
  "rich.syntax.SyntaxTheme.get_style_for_token": [
    "rich.syntax.ANSISyntaxTheme",
    "rich.syntax.PygmentsSyntaxTheme"
  ],
  "selectors.BaseSelector.close": [
    "prompt_toolkit.eventloop.inputhook.InputHookSelector"
  ],
  "selectors.BaseSelector.get_map": [
    "prompt_toolkit.eventloop.inputhook.InputHookSelector",
    "selectors._BaseSelectorImpl"
  ],
  "selectors.BaseSelector.modify": [
    "prompt_toolkit.eventloop.inputhook.InputHookSelector",
    "selectors._BaseSelectorImpl"
  ],
  "selectors.BaseSelector.register": [
    "prompt_toolkit.eventloop.inputhook.InputHookSelector",
    "selectors._BaseSelectorImpl"
  ],
  "selectors.BaseSelector.select": [
    "prompt_toolkit.eventloop.inputhook.InputHookSelector",
    "selectors.DefaultSelector",
    "selectors.KqueueSelector",
    "selectors.SelectSelector",
    "selectors._PollLikeSelector"
  ],
  "selectors.BaseSelector.unregister": [
    "prompt_toolkit.eventloop.inputhook.InputHookSelector",
    "selectors._BaseSelectorImpl"
  ],
  "shelve.Shelf.__init__": [
    "shelve.DbfilenameShelf"
  ],
  "smtpd.SMTPServer.process_message": [
    "smtpd.PureProxy"
  ],
  "smtplib.SMTP.__init__": [
    "smtplib.LMTP",
    "smtplib.SMTP_SSL"
  ],
  "smtplib.SMTPResponseException.__init__": [
    "smtplib.SMTPSenderRefused"
  ],
  "socket.socket.__init__": [
    "ssl.SSLSocket"
  ],
  "socket.socket.accept": [
    "ssl.SSLSocket"
  ],
  "socketserver.BaseRequestHandler.handle": [
    "h11.tests.test_against_stdlib_http.H11RequestHandler",
    "werkzeug.serving.WSGIRequestHandler"
  ],
  "socketserver.BaseServer.__init__": [
    "socketserver.TCPServer"
  ],
  "socketserver.BaseServer.get_request": [
    "socketserver.TCPServer"
  ],
  "socketserver.BaseServer.handle_error": [
    "werkzeug.serving.BaseWSGIServer"
  ],
  "socketserver.BaseServer.serve_forever": [
    "werkzeug.serving.BaseWSGIServer"
  ],
  "socketserver.BaseServer.shutdown": [
    "livereload.LiveReloadServer"
  ],
  "socketserver.TCPServer.__init__": [
    "socketserver.UnixStreamServer",
    "xmlrpc.server.SimpleXMLRPCServer"
  ],
  "socketserver.TCPServer.get_request": [
    "socketserver.UDPServer"
  ],
  "ssl.SSLObject.do_handshake": [
    "pip._vendor.truststore._api.SSLContext.__init__.TruststoreSSLObject"
  ],
  "ssl._ASN1ObjectBase.__new__": [
    "ssl._ASN1Object"
  ],
  "staticmethod.__init__": [
    "abc.abstractstaticmethod"
  ],
  "string.Formatter.convert_field": [
    "config.config_options.EditURITemplate.Formatter"
  ],
  "string.Formatter.format_field": [
    "hatchling.utils.context.ContextStringFormatter",
    "markupsafe.EscapeFormatter",
    "prompt_toolkit.formatted_text.ansi.ANSIFormatter",
    "prompt_toolkit.formatted_text.html.HTMLFormatter"
  ],
  "string.Formatter.get_field": [
    "jinja2.sandbox.SandboxedFormatter"
  ],
  "string.Formatter.get_value": [
    "hatchling.utils.context.ContextStringFormatter"
  ],
  "string.Formatter.parse": [
    "hatchling.utils.context.ContextStringFormatter"
  ],
  "string.Formatter.vformat": [
    "hatchling.utils.context.ContextStringFormatter"
  ],
  "tempfile._TemporaryFileWrapper.__exit__": [
    "urllib.response.addbase"
  ],
  "tempfile._TemporaryFileWrapper.__init__": [
    "urllib.response.addbase"
  ],
  "tempfile._TemporaryFileWrapper.write": [
    "urllib.response.addbase"
  ],
  "tempfile._TemporaryFileWrapper.writelines": [
    "urllib.response.addbase"
  ],
  "testslide.matchers._FloatComparison.__init__": [
    "testslide.matchers.AnyFloat",
    "testslide.matchers.FloatBetween",
    "testslide.matchers.FloatGreaterOrEquals",
    "testslide.matchers.FloatGreaterThan",
    "testslide.matchers.FloatLessOrEquals",
    "testslide.matchers.FloatLessThan",
    "testslide.matchers.NotThisFloat"
  ],
  "testslide.matchers._IntComparison.__init__": [
    "testslide.matchers.AnyInt",
    "testslide.matchers.IntBetween",
    "testslide.matchers.IntGreaterOrEquals",
    "testslide.matchers.IntGreaterThan",
    "testslide.matchers.IntLessOrEquals",
    "testslide.matchers.IntLessThan",
    "testslide.matchers.NotThisInt"
  ],
  "testslide.matchers._RichComparison.__eq__": [
    "testslide.matchers.DictContainingKeys",
    "testslide.matchers.DictSupersetOf",
    "testslide.matchers.ListContaining",
    "testslide.matchers.ListContainingAll"
  ],
  "testslide.matchers._RichComparison.__init__": [
    "testslide.matchers.AnyDict",
    "testslide.matchers.AnyInstanceOf",
    "testslide.matchers.AnyList",
    "testslide.matchers.AnyStr",
    "testslide.matchers.DictContainingKeys",
    "testslide.matchers.DictSupersetOf",
    "testslide.matchers.ListContaining",
    "testslide.matchers.ListContainingAll",
    "testslide.matchers._FloatComparison",
    "testslide.matchers._IntComparison"
  ],
  "testslide.matchers._RichComparison.__repr__": [
    "testslide.matchers.ListContaining",
    "testslide.matchers.ListContainingAll"
  ],
  "testslide.mock_callable._AsyncRunner.run": [
    "testslide.mock_callable._AsyncCallOriginalRunner",
    "testslide.mock_callable._AsyncImplementationRunner"
  ],
  "testslide.mock_callable._MockCallableDSL.__init__": [
    "testslide.mock_callable._MockAsyncCallableDSL",
    "testslide.mock_constructor._MockConstructorDSL"
  ],
  "testslide.mock_callable._MockCallableDSL._get_callable_mock": [
    "testslide.mock_callable._MockAsyncCallableDSL"
  ],
  "testslide.mock_callable._MockCallableDSL._validate_patch": [
    "testslide.mock_callable._MockAsyncCallableDSL"
  ],
  "testslide.mock_callable._MockCallableDSL.for_call": [
    "testslide.mock_constructor._MockConstructorDSL"
  ],
  "testslide.mock_callable._MockCallableDSL.to_call_original": [
    "testslide.mock_callable._MockAsyncCallableDSL"
  ],
  "testslide.mock_callable._MockCallableDSL.with_implementation": [
    "testslide.mock_callable._MockAsyncCallableDSL",
    "testslide.mock_constructor._MockConstructorDSL"
  ],
  "testslide.mock_callable._MockCallableDSL.with_wrapper": [
    "testslide.mock_callable._MockAsyncCallableDSL",
    "testslide.mock_constructor._MockConstructorDSL"
  ],
  "testslide.mock_callable._Runner.run": [
    "testslide.mock_callable._CallOriginalRunner",
    "testslide.mock_callable._ImplementationRunner",
    "testslide.mock_callable._RaiseRunner",
    "testslide.mock_callable._ReturnValueRunner",
    "testslide.mock_callable._ReturnValuesRunner",
    "testslide.mock_callable._YieldValuesRunner"
  ],
  "testslide.runner.BaseFormatter.fail": [
    "testslide.runner.DocumentFormatter",
    "testslide.runner.LongFormatter",
    "testslide.runner.ProgressFormatter"
  ],
  "testslide.runner.BaseFormatter.finish": [
    "testslide.runner.ProgressFormatter",
    "testslide.runner.VerboseFinishMixin"
  ],
  "testslide.runner.BaseFormatter.new_context": [
    "testslide.runner.DocumentFormatter"
  ],
  "testslide.runner.BaseFormatter.new_example": [
    "testslide.runner.LongFormatter",
    "testslide.runner.ProgressFormatter"
  ],
  "testslide.runner.BaseFormatter.skip": [
    "testslide.runner.DocumentFormatter",
    "testslide.runner.LongFormatter",
    "testslide.runner.ProgressFormatter"
  ],
  "testslide.runner.BaseFormatter.success": [
    "testslide.runner.DocumentFormatter",
    "testslide.runner.LongFormatter",
    "testslide.runner.ProgressFormatter"
  ],
  "testslide.runner.DSLDebugMixin.get_dsl_debug_indent": [
    "testslide.runner.DocumentFormatter",
    "testslide.runner.LongFormatter"
  ],
  "textwrap.TextWrapper._handle_long_word": [
    "click._textwrap.TextWrapper"
  ],
  "threading.Barrier.__init__": [
    "multiprocessing.synchronize.Barrier"
  ],
  "threading.Thread.__init__": [
    "anyio._backends._asyncio.WorkerThread",
    "concurrent.futures.process._ExecutorManagerThread",
    "ldap3.strategy.asynchronous.AsyncStrategy.ReceiverSocketThread",
    "ldap3.strategy.reusable.ReusableStrategy.PooledConnectionThread",
    "multiprocessing.dummy.DummyProcess",
    "paramiko.agent.AgentProxyThread",
    "paramiko.server.SubsystemHandler",
    "paramiko.transport.Transport",
    "pip._vendor.rich.live._RefreshThread",
    "pip._vendor.rich.progress._TrackThread",
    "rich.live._RefreshThread",
    "rich.progress._TrackThread",
    "threading.Timer",
    "threading._DummyThread",
    "tqdm._monitor.TMonitor",
    "watchdog.observers.fsevents2.FSEventsQueue",
    "watchdog.utils.BaseThread"
  ],
  "threading.Thread.run": [
    "anyio._backends._asyncio.WorkerThread",
    "concurrent.futures.process._ExecutorManagerThread",
    "ldap3.strategy.asynchronous.AsyncStrategy.ReceiverSocketThread",
    "ldap3.strategy.reusable.ReusableStrategy.PooledConnectionThread",
    "paramiko.agent.AgentProxyThread",
    "paramiko.transport.Transport",
    "pip._vendor.rich.live._RefreshThread",
    "pip._vendor.rich.progress._TrackThread",
    "rich.live._RefreshThread",
    "rich.progress._TrackThread",
    "tqdm._monitor.TMonitor",
    "watchdog.observers.api.EventDispatcher",
    "watchdog.observers.api.EventEmitter",
    "watchdog.observers.fsevents2.FSEventsQueue",
    "watchdog.observers.inotify_buffer.InotifyBuffer",
    "watchdog.utils.event_debouncer.EventDebouncer",
    "watchdog.utils.process_watcher.ProcessWatcher"
  ],
  "threading.Thread.start": [
    "watchdog.utils.BaseThread"
  ],
  "tkinter.BaseWidget.__init__": [
    "tkinter.Toplevel"
  ],
  "tkinter.BaseWidget.destroy": [
    "tkinter.dialog.Dialog"
  ],
  "tkinter.Canvas.__init__": [
    "turtle.ScrolledCanvas"
  ],
  "tkinter.Entry.config": [
    "tkinter.ttk.Entry"
  ],
  "tkinter.Entry.configure": [
    "tkinter.ttk.Entry"
  ],
  "tkinter.Image.__getitem__": [
    "tkinter.PhotoImage"
  ],
  "tkinter.Image.__init__": [
    "tkinter.BitmapImage",
    "tkinter.PhotoImage"
  ],
  "tkinter.Image.configure": [
    "tkinter.PhotoImage"
  ],
  "tkinter.Menubutton.__init__": [
    "tkinter.OptionMenu"
  ],
  "tkinter.Misc.bbox": [
    "tkinter.Canvas",
    "tkinter.Listbox",
    "tkinter.Spinbox",
    "tkinter.Text",
    "tkinter.ttk.Entry",
    "tkinter.ttk.Treeview"
  ],
  "tkinter.Misc.bind": [
    "tkinter.Widget"
  ],
  "tkinter.Misc.configure": [
    "tkinter.Button",
    "tkinter.Canvas",
    "tkinter.Checkbutton",
    "tkinter.Entry",
    "tkinter.Frame",
    "tkinter.Label",
    "tkinter.LabelFrame",
    "tkinter.Listbox",
    "tkinter.Menu",
    "tkinter.Menubutton",
    "tkinter.Message",
    "tkinter.PanedWindow",
    "tkinter.Radiobutton",
    "tkinter.Scale",
    "tkinter.Scrollbar",
    "tkinter.Spinbox",
    "tkinter.Text",
    "tkinter.Tk",
    "tkinter.Toplevel",
    "tkinter.ttk.Button",
    "tkinter.ttk.Checkbutton",
    "tkinter.ttk.Frame",
    "tkinter.ttk.Label",
    "tkinter.ttk.Labelframe",
    "tkinter.ttk.Menubutton",
    "tkinter.ttk.Notebook",
    "tkinter.ttk.Progressbar",
    "tkinter.ttk.Radiobutton",
    "tkinter.ttk.Separator",
    "tkinter.ttk.Sizegrip",
    "tkinter.ttk.Treeview"
  ],
  "tkinter.Misc.destroy": [
    "tkinter.BaseWidget",
    "tkinter.Tk"
  ],
  "tkinter.Misc.focus": [
    "tkinter.Canvas",
    "tkinter.ttk.Treeview"
  ],
  "tkinter.Misc.image_names": [
    "tkinter.Text"
  ],
  "tkinter.Misc.lift": [
    "tkinter.Canvas"
  ],
  "tkinter.Misc.lower": [
    "tkinter.Canvas"
  ],
  "tkinter.Misc.selection_clear": [
    "tkinter.Entry",
    "tkinter.Listbox",
    "tkinter.Spinbox",
    "tkinter.tix.HList",
    "tkinter.tix.TList"
  ],
  "tkinter.Misc.size": [
    "tkinter.Listbox"
  ],
  "tkinter.Misc.tkraise": [
    "tkinter.Canvas"
  ],
  "tkinter.Pack.forget": [
    "tkinter.tix.PanedWindow",
    "tkinter.ttk.Notebook"
  ],
  "tkinter.PanedWindow.add": [
    "tkinter.ttk.Panedwindow"
  ],
  "tkinter.PanedWindow.config": [
    "tkinter.ttk.Panedwindow"
  ],
  "tkinter.PanedWindow.configure": [
    "tkinter.ttk.Panedwindow"
  ],
  "tkinter.Scale.config": [
    "tkinter.ttk.Scale"
  ],
  "tkinter.Scale.configure": [
    "tkinter.ttk.Scale"
  ],
  "tkinter.Scale.get": [
    "tkinter.ttk.Scale"
  ],
  "tkinter.Scrollbar.config": [
    "tkinter.ttk.Scrollbar"
  ],
  "tkinter.Scrollbar.configure": [
    "tkinter.ttk.Scrollbar"
  ],
  "tkinter.Text.__init__": [
    "tkinter.scrolledtext.ScrolledText"
  ],
  "tkinter.Tk.__init__": [
    "tkinter.tix.Tk"
  ],
  "tkinter.Toplevel.__init__": [
    "tkinter.simpledialog.Dialog"
  ],
  "tkinter.Variable.__init__": [
    "tkinter.BooleanVar",
    "tkinter.DoubleVar",
    "tkinter.IntVar",
    "tkinter.StringVar"
  ],
  "tkinter.Variable.get": [
    "tkinter.BooleanVar",
    "tkinter.DoubleVar",
    "tkinter.IntVar",
    "tkinter.StringVar"
  ],
  "tkinter.Variable.set": [
    "tkinter.BooleanVar",
    "tkinter.DoubleVar",
    "tkinter.IntVar",
    "tkinter.StringVar"
  ],
  "tkinter.filedialog.FileDialog.ok_command": [
    "tkinter.filedialog.LoadFileDialog",
    "tkinter.filedialog.SaveFileDialog"
  ],
  "tkinter.tix.TixWidget.__init__": [
    "tkinter.tix.Balloon",
    "tkinter.tix.ButtonBox",
    "tkinter.tix.CheckList",
    "tkinter.tix.ComboBox",
    "tkinter.tix.Control",
    "tkinter.tix.DirList",
    "tkinter.tix.DirSelectBox",
    "tkinter.tix.DirSelectDialog",
    "tkinter.tix.DirTree",
    "tkinter.tix.ExFileSelectBox",
    "tkinter.tix.FileEntry",
    "tkinter.tix.FileSelectBox",
    "tkinter.tix.HList",
    "tkinter.tix.InputOnly",
    "tkinter.tix.LabelEntry",
    "tkinter.tix.LabelFrame",
    "tkinter.tix.ListNoteBook",
    "tkinter.tix.Meter",
    "tkinter.tix.NoteBook",
    "tkinter.tix.OptionMenu",
    "tkinter.tix.PanedWindow",
    "tkinter.tix.PopupMenu",
    "tkinter.tix.Select",
    "tkinter.tix.StdButtonBox",
    "tkinter.tix.TList",
    "tkinter.tix.TixSubWidget",
    "tkinter.tix.Tree"
  ],
  "tkinter.ttk.Entry.__init__": [
    "tkinter.ttk.Combobox",
    "tkinter.ttk.Spinbox"
  ],
  "tkinter.ttk.Entry.config": [
    "tkinter.ttk.Combobox"
  ],
  "tkinter.ttk.Entry.configure": [
    "tkinter.ttk.Combobox",
    "tkinter.ttk.Spinbox"
  ],
  "tkinter.ttk.Frame.__init__": [
    "tkinter.ttk.LabeledScale"
  ],
  "tkinter.ttk.Menubutton.__init__": [
    "tkinter.ttk.OptionMenu"
  ],
  "tkinter.ttk.Widget.__init__": [
    "tkinter.ttk.Button",
    "tkinter.ttk.Checkbutton",
    "tkinter.ttk.Entry",
    "tkinter.ttk.Frame",
    "tkinter.ttk.Label",
    "tkinter.ttk.Labelframe",
    "tkinter.ttk.Menubutton",
    "tkinter.ttk.Notebook",
    "tkinter.ttk.Panedwindow",
    "tkinter.ttk.Progressbar",
    "tkinter.ttk.Radiobutton",
    "tkinter.ttk.Scale",
    "tkinter.ttk.Scrollbar",
    "tkinter.ttk.Separator",
    "tkinter.ttk.Sizegrip",
    "tkinter.ttk.Treeview"
  ],
  "tkinter.ttk.Widget.identify": [
    "tkinter.ttk.Entry",
    "tkinter.ttk.Notebook",
    "tkinter.ttk.Treeview"
  ],
  "tomlkit.exceptions.ParseError.__init__": [
    "tomlkit.exceptions.EmptyKeyError",
    "tomlkit.exceptions.EmptyTableNameError",
    "tomlkit.exceptions.InternalParserError",
    "tomlkit.exceptions.InvalidCharInStringError",
    "tomlkit.exceptions.InvalidControlChar",
    "tomlkit.exceptions.InvalidDateError",
    "tomlkit.exceptions.InvalidDateTimeError",
    "tomlkit.exceptions.InvalidNumberError",
    "tomlkit.exceptions.InvalidNumberOrDateError",
    "tomlkit.exceptions.InvalidTimeError",
    "tomlkit.exceptions.InvalidUnicodeValueError",
    "tomlkit.exceptions.MixedArrayTypesError",
    "tomlkit.exceptions.UnexpectedCharError",
    "tomlkit.exceptions.UnexpectedEofError"
  ],
  "tomlkit.items.AbstractTable.__init__": [
    "tomlkit.items.InlineTable",
    "tomlkit.items.Table"
  ],
  "tomlkit.items.AbstractTable.__setitem__": [
    "tomlkit.items.InlineTable"
  ],
  "tomlkit.items.AbstractTable.append": [
    "tomlkit.items.InlineTable",
    "tomlkit.items.Table"
  ],
  "tomlkit.items.Item.__init__": [
    "tomlkit.items.AbstractTable",
    "tomlkit.items.AoT",
    "tomlkit.items.Array",
    "tomlkit.items.Bool",
    "tomlkit.items.Date",
    "tomlkit.items.DateTime",
    "tomlkit.items.Float",
    "tomlkit.items.Integer",
    "tomlkit.items.Null",
    "tomlkit.items.Time",
    "tomlkit.items.Whitespace"
  ],
  "tomlkit.items.Item._getstate": [
    "tomlkit.items.AoT",
    "tomlkit.items.Array",
    "tomlkit.items.Bool",
    "tomlkit.items.Date",
    "tomlkit.items.DateTime",
    "tomlkit.items.Float",
    "tomlkit.items.InlineTable",
    "tomlkit.items.Integer",
    "tomlkit.items.Null",
    "tomlkit.items.String",
    "tomlkit.items.Table",
    "tomlkit.items.Time",
    "tomlkit.items.Whitespace"
  ],
  "tomlkit.items.Item.as_string": [
    "tomlkit.items.AoT",
    "tomlkit.items.Array",
    "tomlkit.items.Bool",
    "tomlkit.items.Comment",
    "tomlkit.items.Date",
    "tomlkit.items.DateTime",
    "tomlkit.items.Float",
    "tomlkit.items.InlineTable",
    "tomlkit.items.Integer",
    "tomlkit.items.Null",
    "tomlkit.items.String",
    "tomlkit.items.Table",
    "tomlkit.items.Time",
    "tomlkit.items.Whitespace"
  ],
  "tomlkit.items.Item.discriminant": [
    "tomlkit.items.AoT",
    "tomlkit.items.Array",
    "tomlkit.items.Bool",
    "tomlkit.items.Comment",
    "tomlkit.items.Date",
    "tomlkit.items.DateTime",
    "tomlkit.items.Float",
    "tomlkit.items.InlineTable",
    "tomlkit.items.Integer",
    "tomlkit.items.Null",
    "tomlkit.items.String",
    "tomlkit.items.Table",
    "tomlkit.items.Time",
    "tomlkit.items.Whitespace"
  ],
  "tomlkit.items.Item.indent": [
    "tomlkit.items.Table"
  ],
  "tomlkit.items.Item.trivia": [
    "tomlkit.items.Whitespace"
  ],
  "tomlkit.items.Item.unwrap": [
    "tomlkit.items.AbstractTable",
    "tomlkit.items.AoT",
    "tomlkit.items.Array",
    "tomlkit.items.Bool",
    "tomlkit.items.Date",
    "tomlkit.items.DateTime",
    "tomlkit.items.Float",
    "tomlkit.items.Integer",
    "tomlkit.items.Null",
    "tomlkit.items.String",
    "tomlkit.items.Time"
  ],
  "tomlkit.items.Item.value": [
    "tomlkit.items.AbstractTable",
    "tomlkit.items.AoT",
    "tomlkit.items.Array",
    "tomlkit.items.Bool",
    "tomlkit.items.Date",
    "tomlkit.items.DateTime",
    "tomlkit.items.Float",
    "tomlkit.items.Integer",
    "tomlkit.items.Null",
    "tomlkit.items.String",
    "tomlkit.items.Time",
    "tomlkit.items.Whitespace"
  ],
  "tomlkit.items.Key.__eq__": [
    "tomlkit.items.DottedKey",
    "tomlkit.items.SingleKey"
  ],
  "tomlkit.items.Key.__hash__": [
    "tomlkit.items.DottedKey",
    "tomlkit.items.SingleKey"
  ],
  "tqdm.asyncio.tqdm_asyncio.__init__": [
    "tqdm.contrib.discord.tqdm_discord",
    "tqdm.contrib.slack.tqdm_slack",
    "tqdm.contrib.telegram.tqdm_telegram"
  ],
  "tqdm.dask._Callback.__init__": [
    "tqdm.dask.TqdmCallback"
  ],
  "tqdm.keras._Callback.__init__": [
    "tqdm.keras.TqdmCallback"
  ],
  "tqdm.keras._Callback.on_epoch_begin": [
    "tqdm.keras.TqdmCallback"
  ],
  "tqdm.keras._Callback.on_train_begin": [
    "tqdm.keras.TqdmCallback"
  ],
  "tqdm.keras._Callback.on_train_end": [
    "tqdm.keras.TqdmCallback"
  ],
  "tqdm.rich._ProgressColumn.__init__": [
    "tqdm.rich.FractionColumn",
    "tqdm.rich.RateColumn"
  ],
  "tqdm.rich._ProgressColumn.render": [
    "tqdm.rich.FractionColumn",
    "tqdm.rich.RateColumn"
  ],
  "tqdm.std.tqdm.__init__": [
    "tqdm.asyncio.tqdm_asyncio",
    "tqdm.gui.tqdm_gui",
    "tqdm.notebook.tqdm_notebook",
    "tqdm.rich.tqdm_rich",
    "tqdm.tk.tqdm_tk"
  ],
  "tqdm.std.tqdm.__iter__": [
    "tqdm.notebook.tqdm_notebook"
  ],
  "tqdm.std.tqdm.clear": [
    "tqdm.contrib.discord.tqdm_discord",
    "tqdm.contrib.slack.tqdm_slack",
    "tqdm.contrib.telegram.tqdm_telegram",
    "tqdm.gui.tqdm_gui",
    "tqdm.notebook.tqdm_notebook",
    "tqdm.rich.tqdm_rich",
    "tqdm.tk.tqdm_tk"
  ],
  "tqdm.std.tqdm.close": [
    "tqdm.contrib.telegram.tqdm_telegram",
    "tqdm.gui.tqdm_gui",
    "tqdm.notebook.tqdm_notebook",
    "tqdm.rich.tqdm_rich",
    "tqdm.tk.tqdm_tk"
  ],
  "tqdm.std.tqdm.colour": [
    "tqdm.notebook.tqdm_notebook"
  ],
  "tqdm.std.tqdm.colour@setter": [
    "tqdm.notebook.tqdm_notebook"
  ],
  "tqdm.std.tqdm.display": [
    "tqdm.contrib.discord.tqdm_discord",
    "tqdm.contrib.slack.tqdm_slack",
    "tqdm.contrib.telegram.tqdm_telegram",
    "tqdm.gui.tqdm_gui",
    "tqdm.notebook.tqdm_notebook",
    "tqdm.rich.tqdm_rich",
    "tqdm.tk.tqdm_tk"
  ],
  "tqdm.std.tqdm.reset": [
    "tqdm.notebook.tqdm_notebook",
    "tqdm.rich.tqdm_rich",
    "tqdm.tk.tqdm_tk"
  ],
  "tqdm.std.tqdm.set_description": [
    "tqdm.tk.tqdm_tk"
  ],
  "tqdm.std.tqdm.set_description_str": [
    "tqdm.tk.tqdm_tk"
  ],
  "tqdm.std.tqdm.status_printer": [
    "tqdm.notebook.tqdm_notebook"
  ],
  "tqdm.std.tqdm.update": [
    "tqdm.notebook.tqdm_notebook"
  ],
  "tqdm.utils.ObjectWrapper.__init__": [
    "tqdm.contrib.DummyTqdmFile",
    "tqdm.utils.CallbackIOWrapper",
    "tqdm.utils.DisableOnWriteError",
    "tqdm.utils.SimpleTextIOWrapper"
  ],
  "traceback.FrameSummary.__init__": [
    "werkzeug.debug.tbtools.DebugFrameSummary"
  ],
  "tracemalloc.BaseFilter.__init__": [
    "tracemalloc.DomainFilter",
    "tracemalloc.Filter"
  ],
  "traitlets.config.configurable.Configurable._config_changed": [
    "traitlets.config.application.Application"
  ],
  "traitlets.config.configurable.LoggingConfigurable._log_default": [
    "traitlets.config.application.Application"
  ],
  "traitlets.config.loader.ArgParseConfigLoader._add_arguments": [
    "traitlets.config.loader.KVArgParseConfigLoader"
  ],
  "traitlets.config.loader.ArgParseConfigLoader._convert_to_config": [
    "traitlets.config.loader.KVArgParseConfigLoader"
  ],
  "traitlets.config.loader.ConfigLoader.__init__": [
    "traitlets.config.loader.FileConfigLoader"
  ],
  "traitlets.config.loader.ConfigLoader.load_config": [
    "traitlets.config.loader.ArgParseConfigLoader",
    "traitlets.config.loader.JSONFileConfigLoader",
    "traitlets.config.loader.PyFileConfigLoader"
  ],
  "traitlets.config.loader.DeferredConfig.get_value": [
    "traitlets.config.loader.DeferredConfigList",
    "traitlets.config.loader.DeferredConfigString"
  ],
  "traitlets.traitlets.BaseDescriptor.class_init": [
    "traitlets.traitlets.Container",
    "traitlets.traitlets.DefaultHandler",
    "traitlets.traitlets.Dict",
    "traitlets.traitlets.Union"
  ],
  "traitlets.traitlets.BaseDescriptor.instance_init": [
    "traitlets.traitlets.Instance",
    "traitlets.traitlets.ObserveHandler",
    "traitlets.traitlets.Type",
    "traitlets.traitlets.Union",
    "traitlets.traitlets.ValidateHandler"
  ],
  "traitlets.traitlets.Bool.validate": [
    "traitlets.traitlets.CBool"
  ],
  "traitlets.traitlets.Bytes.validate": [
    "traitlets.traitlets.CBytes"
  ],
  "traitlets.traitlets.Complex.validate": [
    "traitlets.traitlets.CComplex"
  ],
  "traitlets.traitlets.Container.__init__": [
    "traitlets.traitlets.List",
    "traitlets.traitlets.Tuple"
  ],
  "traitlets.traitlets.Container.class_init": [
    "traitlets.traitlets.Tuple"
  ],
  "traitlets.traitlets.Container.instance_init": [
    "traitlets.traitlets.Tuple"
  ],
  "traitlets.traitlets.Container.item_from_string": [
    "traitlets.traitlets.Tuple"
  ],
  "traitlets.traitlets.Container.validate_elements": [
    "traitlets.traitlets.List",
    "traitlets.traitlets.Tuple"
  ],
  "traitlets.traitlets.Enum.__init__": [
    "traitlets.traitlets.CaselessStrEnum",
    "traitlets.traitlets.FuzzyEnum"
  ],
  "traitlets.traitlets.Enum._info": [
    "traitlets.traitlets.CaselessStrEnum",
    "traitlets.traitlets.FuzzyEnum"
  ],
  "traitlets.traitlets.Enum.info": [
    "traitlets.traitlets.CaselessStrEnum",
    "traitlets.traitlets.FuzzyEnum"
  ],
  "traitlets.traitlets.Enum.info_rst": [
    "traitlets.traitlets.CaselessStrEnum",
    "traitlets.traitlets.FuzzyEnum"
  ],
  "traitlets.traitlets.Enum.validate": [
    "traitlets.traitlets.CaselessStrEnum",
    "traitlets.traitlets.FuzzyEnum"
  ],
  "traitlets.traitlets.Float.validate": [
    "traitlets.traitlets.CFloat"
  ],
  "traitlets.traitlets.HasDescriptors.setup_instance": [
    "traitlets.traitlets.HasTraits"
  ],
  "traitlets.traitlets.HasTraits.__init__": [
    "traitlets.config.configurable.Configurable"
  ],
  "traitlets.traitlets.Instance.__init__": [
    "traitlets.traitlets.Container",
    "traitlets.traitlets.Dict"
  ],
  "traitlets.traitlets.Instance.default_value_repr": [
    "traitlets.traitlets.Set"
  ],
  "traitlets.traitlets.Instance.from_string": [
    "traitlets.traitlets.Container",
    "traitlets.traitlets.Dict"
  ],
  "traitlets.traitlets.Instance.instance_init": [
    "traitlets.traitlets.Container",
    "traitlets.traitlets.Dict"
  ],
  "traitlets.traitlets.Instance.validate": [
    "traitlets.traitlets.Container",
    "traitlets.traitlets.Dict"
  ],
  "traitlets.traitlets.Int.validate": [
    "traitlets.traitlets.CInt"
  ],
  "traitlets.traitlets.List.__init__": [
    "traitlets.traitlets.Set"
  ],
  "traitlets.traitlets.MetaHasDescriptors.__init__": [
    "traitlets.config.application.Application",
    "traitlets.traitlets.HasTraits"
  ],
  "traitlets.traitlets.MetaHasDescriptors.setup_class": [
    "traitlets.traitlets.MetaHasTraits"
  ],
  "traitlets.traitlets.ObjectName.validate": [
    "traitlets.traitlets.DottedObjectName"
  ],
  "traitlets.traitlets.TraitType.__init__": [
    "traitlets.traitlets.Enum",
    "traitlets.traitlets.Float",
    "traitlets.traitlets.Int",
    "traitlets.traitlets.Union",
    "traitlets.traitlets.UseEnum"
  ],
  "traitlets.traitlets.TraitType.__or__": [
    "traitlets.traitlets.Union"
  ],
  "traitlets.traitlets.TraitType.default": [
    "traitlets.traitlets.Union"
  ],
  "traitlets.traitlets.TraitType.default_value_repr": [
    "traitlets.traitlets.Instance",
    "traitlets.traitlets.Type"
  ],
  "traitlets.traitlets.TraitType.from_string": [
    "traitlets.traitlets.Bool",
    "traitlets.traitlets.Bytes",
    "traitlets.traitlets.Complex",
    "traitlets.traitlets.Enum",
    "traitlets.traitlets.Float",
    "traitlets.traitlets.Instance",
    "traitlets.traitlets.Int",
    "traitlets.traitlets.ObjectName",
    "traitlets.traitlets.TCPAddress",
    "traitlets.traitlets.Unicode"
  ],
  "traitlets.traitlets.TraitType.info": [
    "traitlets.traitlets.Enum",
    "traitlets.traitlets.Instance",
    "traitlets.traitlets.Type",
    "traitlets.traitlets.UseEnum"
  ],
  "traitlets.traitlets.TraitType.set": [
    "traitlets.traitlets.List"
  ],
  "traitlets.traitlets.Unicode.validate": [
    "traitlets.traitlets.CUnicode"
  ],
  "traitlets.utils.sentinel.Sentinel.__init__": [
    "traitlets.Sentinel"
  ],
  "turtle.RawTurtle.__init__": [
    "turtle.Turtle"
  ],
  "turtle.TNavigator.reset": [
    "turtle.RawTurtle"
  ],
  "turtle.TPen.__init__": [
    "turtle.RawTurtle"
  ],
  "turtle.TurtleScreen.__init__": [
    "turtle._Screen"
  ],
  "turtle.TurtleScreenBase.__init__": [
    "turtle.TurtleScreen"
  ],
  "type.__name__": [
    "types.BuiltinFunctionType",
    "types.ClassMethodDescriptorType",
    "types.GetSetDescriptorType",
    "types.MemberDescriptorType",
    "types.MethodDescriptorType",
    "types.MethodType",
    "types.MethodWrapperType",
    "types.WrapperDescriptorType",
    "typing.ParamSpec",
    "typing.TypeAliasType",
    "typing.TypeVar",
    "typing.TypeVarTuple",
    "typing_extensions.ParamSpec",
    "typing_extensions.TypeVar",
    "typing_extensions.TypeVarTuple"
  ],
  "type.__qualname__": [
    "types.BuiltinFunctionType",
    "types.ClassMethodDescriptorType",
    "types.GetSetDescriptorType",
    "types.MemberDescriptorType",
    "types.MethodDescriptorType",
    "types.MethodType",
    "types.MethodWrapperType",
    "types.WrapperDescriptorType"
  ],
  "type.__type_params__": [
    "typing.TypeAliasType"
  ],
  "typeguard._TypeCheckMemo.__init__": [
    "typeguard._CallMemo"
  ],
  "types.ModuleType.__getattr__": [
    "cryptography.utils._ModuleWithDeprecations",
    "pip._vendor.pygments.formatters._automodule",
    "pip._vendor.pygments.lexers._automodule"
  ],
  "types.ModuleType.__init__": [
    "cryptography.utils._ModuleWithDeprecations",
    "pip._vendor.urllib3.packages.six._LazyModule"
  ],
  "typing.AsyncGenerator.__anext__": [
    "types.AsyncGeneratorType"
  ],
  "typing.AsyncGenerator.aclose": [
    "types.AsyncGeneratorType"
  ],
  "typing.AsyncGenerator.ag_await": [
    "types.AsyncGeneratorType"
  ],
  "typing.AsyncGenerator.asend": [
    "types.AsyncGeneratorType"
  ],
  "typing.AsyncGenerator.athrow": [
    "types.AsyncGeneratorType"
  ],
  "typing.AsyncIterable.__aiter__": [
    "typing.AsyncIterator"
  ],
  "typing.AsyncIterator.__aiter__": [
    "asyncio.streams.StreamReader",
    "types.AsyncGeneratorType"
  ],
  "typing.AsyncIterator.__anext__": [
    "anyio._core._fileio._PathIterator",
    "asyncio.streams.StreamReader",
    "typing.AsyncGenerator"
  ],
  "typing.Awaitable.__await__": [
    "aiofiles.base.AiofilesContextManager",
    "asyncio.futures.Future",
    "types.CoroutineType"
  ],
  "typing.BinaryIO.__enter__": [
    "codecs.StreamRecoder",
    "zstandard.ZstdCompressionReader",
    "zstandard.ZstdCompressionWriter",
    "zstandard.ZstdDecompressionReader",
    "zstandard.ZstdDecompressionWriter"
  ],
  "typing.Container.__contains__": [
    "more_itertools.more.bucket",
    "typing.AbstractSet",
    "typing.Mapping",
    "typing.Sequence",
    "typing.ValuesView",
    "werkzeug.datastructures.etag.ETags"
  ],
  "typing.Coroutine.close": [
    "types.CoroutineType"
  ],
  "typing.Coroutine.send": [
    "types.CoroutineType"
  ],
  "typing.Coroutine.throw": [
    "types.CoroutineType"
  ],
  "typing.Generator.__iter__": [
    "types.GeneratorType"
  ],
  "typing.Generator.__next__": [
    "types.GeneratorType"
  ],
  "typing.Generator.gi_yieldfrom": [
    "types.GeneratorType"
  ],
  "typing.Generator.send": [
    "types.GeneratorType"
  ],
  "typing.Generator.throw": [
    "types.GeneratorType"
  ],
  "typing.GenericMeta.__getitem__": [
    "_FormatMapMapping",
    "_GetItemIterable",
    "_TranslateTable",
    "_ctypes.Array",
    "_ctypes._Pointer",
    "_typeshed.IndexableBuffer",
    "_typeshed.SliceableBuffer",
    "_typeshed.SupportsContainsAndGetItem",
    "_typeshed.SupportsGetItem",
    "_typeshed.SupportsItemAccess",
    "_typeshed.SupportsKeysAndGetItem",
    "_typeshed.SupportsLenAndGetItem",
    "cgi._Environ",
    "ctypes.LibraryLoader",
    "email.message.Message",
    "enum.EnumMeta",
    "graphql.pyutils.enum.EnumMeta",
    "importlib.metadata.Deprecated",
    "importlib.metadata._meta.PackageMetadata",
    "ipaddress._BaseNetwork",
    "mailbox.Mailbox",
    "mmap.mmap",
    "more_itertools.more._SupportsSlicing",
    "more_itertools.more.bucket",
    "more_itertools.more.islice_extended",
    "more_itertools.more.peekable",
    "multiprocessing.shared_memory.ShareableList",
    "multiprocessing.sharedctypes.SynchronizedArray",
    "pydantic.v1.types.JsonMeta",
    "re.Match",
    "regex.regex.Match",
    "traceback.FrameSummary",
    "typing.Mapping",
    "typing.Sequence",
    "websockets.datastructures.SupportsKeysAndGetItem",
    "werkzeug.datastructures.structures.HeaderSet"
  ],
  "typing.IO.__enter__": [
    "pip._vendor.rich._null_file.NullFile",
    "rich._null_file.NullFile",
    "tempfile.SpooledTemporaryFile",
    "tempfile._TemporaryFileWrapper",
    "typing.BinaryIO",
    "typing.TextIO"
  ],
  "typing.IO.__exit__": [
    "codecs.StreamReaderWriter",
    "codecs.StreamRecoder",
    "pip._vendor.rich._null_file.NullFile",
    "rich._null_file.NullFile",
    "tempfile.SpooledTemporaryFile",
    "tempfile._TemporaryFileWrapper",
    "zstandard.ZstdCompressionReader",
    "zstandard.ZstdCompressionWriter",
    "zstandard.ZstdDecompressionReader",
    "zstandard.ZstdDecompressionWriter"
  ],
  "typing.IO.__iter__": [
    "codecs.StreamReaderWriter",
    "codecs.StreamRecoder",
    "pip._vendor.rich._null_file.NullFile",
    "rich._null_file.NullFile",
    "tempfile.SpooledTemporaryFile",
    "tempfile._TemporaryFileWrapper",
    "zstandard.ZstdCompressionReader",
    "zstandard.ZstdDecompressionReader"
  ],
  "typing.IO.__next__": [
    "codecs.StreamReaderWriter",
    "codecs.StreamRecoder",
    "pip._vendor.rich._null_file.NullFile",
    "rich._null_file.NullFile",
    "tempfile.SpooledTemporaryFile",
    "tempfile._TemporaryFileWrapper",
    "zstandard.ZstdCompressionReader",
    "zstandard.ZstdDecompressionReader"
  ],
  "typing.IO.close": [
    "codecs.StreamReaderWriter",
    "codecs.StreamRecoder",
    "pip._vendor.rich._null_file.NullFile",
    "rich._null_file.NullFile",
    "tempfile.SpooledTemporaryFile",
    "tempfile._TemporaryFileWrapper",
    "zstandard.ZstdCompressionReader",
    "zstandard.ZstdCompressionWriter",
    "zstandard.ZstdDecompressionReader",
    "zstandard.ZstdDecompressionWriter"
  ],
  "typing.IO.closed": [
    "tempfile._TemporaryFileWrapper",
    "zstandard.ZstdCompressionReader",
    "zstandard.ZstdCompressionWriter",
    "zstandard.ZstdDecompressionReader",
    "zstandard.ZstdDecompressionWriter"
  ],
  "typing.IO.fileno": [
    "codecs.StreamReaderWriter",
    "codecs.StreamRecoder",
    "pip._vendor.rich._null_file.NullFile",
    "rich._null_file.NullFile",
    "tempfile.SpooledTemporaryFile",
    "tempfile._TemporaryFileWrapper",
    "zstandard.ZstdCompressionWriter",
    "zstandard.ZstdDecompressionWriter"
  ],
  "typing.IO.flush": [
    "codecs.StreamReaderWriter",
    "codecs.StreamRecoder",
    "pip._vendor.rich._null_file.NullFile",
    "rich._null_file.NullFile",
    "tempfile.SpooledTemporaryFile",
    "tempfile._TemporaryFileWrapper",
    "zstandard.ZstdCompressionReader",
    "zstandard.ZstdCompressionWriter",
    "zstandard.ZstdDecompressionReader",
    "zstandard.ZstdDecompressionWriter"
  ],
  "typing.IO.isatty": [
    "codecs.StreamReaderWriter",
    "codecs.StreamRecoder",
    "pip._vendor.rich._null_file.NullFile",
    "rich._null_file.NullFile",
    "tempfile.SpooledTemporaryFile",
    "tempfile._TemporaryFileWrapper",
    "zstandard.ZstdCompressionReader",
    "zstandard.ZstdCompressionWriter",
    "zstandard.ZstdDecompressionReader",
    "zstandard.ZstdDecompressionWriter"
  ],
  "typing.IO.mode": [
    "click.testing._NamedTextIOWrapper",
    "pip._vendor.rich.progress._Reader",
    "rich.progress._Reader"
  ],
  "typing.IO.name": [
    "click.testing._NamedTextIOWrapper",
    "pip._vendor.rich.progress._Reader",
    "rich.progress._Reader"
  ],
  "typing.IO.read": [
    "codecs.StreamReaderWriter",
    "codecs.StreamRecoder",
    "pip._vendor.rich._null_file.NullFile",
    "rich._null_file.NullFile",
    "tempfile.SpooledTemporaryFile",
    "tempfile._TemporaryFileWrapper",
    "zstandard.ZstdCompressionReader",
    "zstandard.ZstdCompressionWriter",
    "zstandard.ZstdDecompressionReader",
    "zstandard.ZstdDecompressionWriter"
  ],
  "typing.IO.readable": [
    "codecs.StreamReaderWriter",
    "codecs.StreamRecoder",
    "pip._vendor.rich._null_file.NullFile",
    "rich._null_file.NullFile",
    "tempfile.SpooledTemporaryFile",
    "tempfile._TemporaryFileWrapper",
    "zstandard.ZstdCompressionReader",
    "zstandard.ZstdCompressionWriter",
    "zstandard.ZstdDecompressionReader",
    "zstandard.ZstdDecompressionWriter"
  ],
  "typing.IO.readline": [
    "codecs.StreamReaderWriter",
    "codecs.StreamRecoder",
    "pip._vendor.rich._null_file.NullFile",
    "rich._null_file.NullFile",
    "tempfile.SpooledTemporaryFile",
    "tempfile._TemporaryFileWrapper",
    "zstandard.ZstdCompressionReader",
    "zstandard.ZstdCompressionWriter",
    "zstandard.ZstdDecompressionReader",
    "zstandard.ZstdDecompressionWriter"
  ],
  "typing.IO.readlines": [
    "codecs.StreamReaderWriter",
    "codecs.StreamRecoder",
    "pip._vendor.rich._null_file.NullFile",
    "rich._null_file.NullFile",
    "tempfile.SpooledTemporaryFile",
    "tempfile._TemporaryFileWrapper",
    "zstandard.ZstdCompressionReader",
    "zstandard.ZstdCompressionWriter",
    "zstandard.ZstdDecompressionReader",
    "zstandard.ZstdDecompressionWriter"
  ],
  "typing.IO.seek": [
    "codecs.StreamReaderWriter",
    "codecs.StreamRecoder",
    "pip._vendor.rich._null_file.NullFile",
    "rich._null_file.NullFile",
    "tempfile.SpooledTemporaryFile",
    "tempfile._TemporaryFileWrapper",
    "zstandard.ZstdCompressionWriter",
    "zstandard.ZstdDecompressionReader",
    "zstandard.ZstdDecompressionWriter"
  ],
  "typing.IO.seekable": [
    "codecs.StreamReaderWriter",
    "codecs.StreamRecoder",
    "pip._vendor.rich._null_file.NullFile",
    "rich._null_file.NullFile",
    "tempfile.SpooledTemporaryFile",
    "tempfile._TemporaryFileWrapper",
    "zstandard.ZstdCompressionReader",
    "zstandard.ZstdCompressionWriter",
    "zstandard.ZstdDecompressionReader",
    "zstandard.ZstdDecompressionWriter"
  ],
  "typing.IO.tell": [
    "codecs.StreamReaderWriter",
    "codecs.StreamRecoder",
    "pip._vendor.rich._null_file.NullFile",
    "rich._null_file.NullFile",
    "tempfile.SpooledTemporaryFile",
    "tempfile._TemporaryFileWrapper",
    "zstandard.ZstdCompressionReader",
    "zstandard.ZstdCompressionWriter",
    "zstandard.ZstdDecompressionReader",
    "zstandard.ZstdDecompressionWriter"
  ],
  "typing.IO.truncate": [
    "codecs.StreamReaderWriter",
    "codecs.StreamRecoder",
    "pip._vendor.rich._null_file.NullFile",
    "rich._null_file.NullFile",
    "tempfile.SpooledTemporaryFile",
    "tempfile._TemporaryFileWrapper",
    "zstandard.ZstdCompressionWriter",
    "zstandard.ZstdDecompressionWriter"
  ],
  "typing.IO.writable": [
    "codecs.StreamReaderWriter",
    "codecs.StreamRecoder",
    "pip._vendor.rich._null_file.NullFile",
    "rich._null_file.NullFile",
    "tempfile.SpooledTemporaryFile",
    "tempfile._TemporaryFileWrapper",
    "zstandard.ZstdCompressionReader",
    "zstandard.ZstdCompressionWriter",
    "zstandard.ZstdDecompressionReader",
    "zstandard.ZstdDecompressionWriter"
  ],
  "typing.IO.write": [
    "codecs.StreamReaderWriter",
    "codecs.StreamRecoder",
    "pip._vendor.rich._null_file.NullFile",
    "rich._null_file.NullFile",
    "tempfile.SpooledTemporaryFile",
    "tempfile._TemporaryFileWrapper",
    "zstandard.ZstdCompressionReader",
    "zstandard.ZstdCompressionWriter",
    "zstandard.ZstdDecompressionReader",
    "zstandard.ZstdDecompressionWriter"
  ],
  "typing.IO.writelines": [
    "codecs.StreamReaderWriter",
    "codecs.StreamRecoder",
    "pip._vendor.rich._null_file.NullFile",
    "rich._null_file.NullFile",
    "tempfile.SpooledTemporaryFile",
    "tempfile._TemporaryFileWrapper",
    "zstandard.ZstdCompressionReader",
    "zstandard.ZstdCompressionWriter",
    "zstandard.ZstdDecompressionReader",
    "zstandard.ZstdDecompressionWriter"
  ],
  "typing.ItemsView.__reversed__": [
    "collections._OrderedDictItemsView",
    "collections._odict_items"
  ],
  "typing.KeysView.__reversed__": [
    "collections._OrderedDictKeysView",
    "collections._odict_keys"
  ],
  "typing.MappingView.__init__": [
    "typing.ItemsView",
    "typing.KeysView",
    "typing.ValuesView"
  ],
  "typing.Reversible.__reversed__": [
    "typing.Sequence"
  ],
  "typing.TextIO.__enter__": [
    "codecs.StreamReaderWriter"
  ],
  "typing.TextIO.buffer": [
    "io.TextIOWrapper"
  ],
  "typing.TextIO.line_buffering": [
    "io.TextIOWrapper"
  ],
  "typing.ValuesView.__reversed__": [
    "collections._OrderedDictValuesView",
    "collections._odict_values"
  ],
  "typing._SpecialForm.__getitem__": [
    "pip._vendor.typing_extensions._ConcatenateForm",
    "pip._vendor.typing_extensions._ReadOnlyForm",
    "pip._vendor.typing_extensions._RequiredForm",
    "pip._vendor.typing_extensions._TypeGuardForm",
    "pip._vendor.typing_extensions._TypeIsForm"
  ],
  "typing_validation.validation_failure.ValidationFailure.__new__": [
    "typing_validation.validation_failure.InvalidNumpyDTypeValidationFailure",
    "typing_validation.validation_failure.MissingKeysValidationFailure",
    "typing_validation.validation_failure.SubtypeValidationFailure",
    "typing_validation.validation_failure.TypeVarBoundValidationFailure",
    "typing_validation.validation_failure.UnionValidationFailure",
    "typing_validation.validation_failure.ValidationFailureAtIdx",
    "typing_validation.validation_failure.ValidationFailureAtKey"
  ],
  "typing_validation.validation_failure.ValidationFailure._str_causes_lines": [
    "typing_validation.validation_failure.UnionValidationFailure"
  ],
  "typing_validation.validation_failure.ValidationFailure._str_main_msg": [
    "typing_validation.validation_failure.InvalidNumpyDTypeValidationFailure",
    "typing_validation.validation_failure.MissingKeysValidationFailure",
    "typing_validation.validation_failure.SubtypeValidationFailure",
    "typing_validation.validation_failure.TypeVarBoundValidationFailure",
    "typing_validation.validation_failure.ValidationFailureAtIdx",
    "typing_validation.validation_failure.ValidationFailureAtKey"
  ],
  "typing_validation.validation_failure.ValidationFailure._str_type_descr": [
    "typing_validation.validation_failure.UnionValidationFailure"
  ],
  "unittest.case._BaseTestCaseContext.__init__": [
    "unittest._log._AssertLogsContext"
  ],
  "unittest.mock.AsyncMockMixin.reset_mock": [
    "unittest.mock.AsyncMock"
  ],
  "unittest.mock.Base.__init__": [
    "unittest.mock.AsyncMockMixin",
    "unittest.mock.CallableMixin",
    "unittest.mock.NonCallableMock"
  ],
  "unittest.mock.MagicMixin.__init__": [
    "unittest.mock.AsyncMagicMixin"
  ],
  "unittest.mock._patch.__call__": [
    "unittest.mock._patch_default_new"
  ],
  "unittest.result.TestResult.__init__": [
    "unittest.runner.TextTestResult"
  ],
  "unittest.suite.BaseTestSuite.run": [
    "unittest.suite.TestSuite"
  ],
  "urllib.error.URLError.__init__": [
    "urllib.error.ContentTooShortError",
    "urllib.error.HTTPError"
  ],
  "urllib.error.URLError.reason": [
    "urllib.error.HTTPError"
  ],
  "urllib.request.AbstractHTTPHandler.__init__": [
    "urllib.request.HTTPSHandler"
  ],
  "urllib.request.HTTPHandler.http_open": [
    "pip._vendor.distlib.util.HTTPSOnlyHandler"
  ],
  "urllib.request.HTTPPasswordMgr.add_password": [
    "urllib.request.HTTPPasswordMgrWithDefaultRealm"
  ],
  "urllib.request.HTTPPasswordMgr.find_user_password": [
    "urllib.request.HTTPPasswordMgrWithDefaultRealm"
  ],
  "urllib.request.HTTPPasswordMgrWithDefaultRealm.add_password": [
    "urllib.request.HTTPPasswordMgrWithPriorAuth"
  ],
  "urllib.request.HTTPRedirectHandler.http_error_302": [
    "pip._vendor.distlib.locators.RedirectHandler"
  ],
  "urllib.request.HTTPSHandler.__init__": [
    "pip._vendor.distlib.util.HTTPSHandler"
  ],
  "urllib.request.HTTPSHandler.https_open": [
    "pip._vendor.distlib.util.HTTPSHandler"
  ],
  "urllib.request.Request.__init__": [
    "httpx._models.Cookies._CookieCompatRequest"
  ],
  "urllib.request.Request.add_unredirected_header": [
    "httpx._models.Cookies._CookieCompatRequest"
  ],
  "urllib.request.URLopener.http_error_default": [
    "urllib.request.FancyURLopener"
  ],
  "urllib.response.addbase.__init__": [
    "urllib.response.addclosehook",
    "urllib.response.addinfo"
  ],
  "urllib.response.addinfo.__init__": [
    "urllib.response.addinfourl"
  ],
  "urllib.response.addinfo.headers": [
    "urllib.error.HTTPError"
  ],
  "urllib.response.addinfo.headers@setter": [
    "urllib.error.HTTPError"
  ],
  "utils.yaml._DirPlaceholder.__init__": [
    "utils.yaml.RelativeDirPlaceholder"
  ],
  "utils.yaml._DirPlaceholder.value": [
    "utils.yaml.ConfigDirPlaceholder",
    "utils.yaml.DocsDirPlaceholder",
    "utils.yaml.RelativeDirPlaceholder"
  ],
  "watchdog.events.FileSystemEventHandler.dispatch": [
    "watchdog.events.PatternMatchingEventHandler",
    "watchdog.events.RegexMatchingEventHandler"
  ],
  "watchdog.events.FileSystemEventHandler.on_any_event": [
    "watchdog.tricks.AutoRestartTrick",
    "watchdog.tricks.LoggerTrick",
    "watchdog.tricks.ShellCommandTrick",
    "werkzeug._reloader.WatchdogReloaderLoop.__init__.EventHandler"
  ],
  "watchdog.events.FileSystemEventHandler.on_closed": [
    "watchdog.events.LoggingEventHandler"
  ],
  "watchdog.events.FileSystemEventHandler.on_closed_no_write": [
    "watchdog.events.LoggingEventHandler"
  ],
  "watchdog.events.FileSystemEventHandler.on_created": [
    "watchdog.events.LoggingEventHandler"
  ],
  "watchdog.events.FileSystemEventHandler.on_deleted": [
    "watchdog.events.LoggingEventHandler"
  ],
  "watchdog.events.FileSystemEventHandler.on_modified": [
    "watchdog.events.LoggingEventHandler"
  ],
  "watchdog.events.FileSystemEventHandler.on_moved": [
    "watchdog.events.LoggingEventHandler"
  ],
  "watchdog.events.FileSystemEventHandler.on_opened": [
    "watchdog.events.LoggingEventHandler"
  ],
  "watchdog.observers.api.BaseObserver.__init__": [
    "watchdog.observers.fsevents.FSEventsObserver",
    "watchdog.observers.fsevents2.FSEventsObserver2",
    "watchdog.observers.inotify.InotifyObserver",
    "watchdog.observers.kqueue.KqueueObserver",
    "watchdog.observers.polling.PollingObserver",
    "watchdog.observers.polling.PollingObserverVFS",
    "watchdog.observers.read_directory_changes.WindowsApiObserver"
  ],
  "watchdog.observers.api.BaseObserver.schedule": [
    "watchdog.observers.fsevents.FSEventsObserver"
  ],
  "watchdog.observers.api.EventDispatcher.__init__": [
    "watchdog.observers.api.BaseObserver"
  ],
  "watchdog.observers.api.EventDispatcher.dispatch_events": [
    "watchdog.observers.api.BaseObserver"
  ],
  "watchdog.observers.api.EventEmitter.__init__": [
    "watchdog.observers.fsevents.FSEventsEmitter",
    "watchdog.observers.fsevents2.FSEventsEmitter",
    "watchdog.observers.inotify.InotifyEmitter",
    "watchdog.observers.kqueue.KqueueEmitter",
    "watchdog.observers.polling.PollingEmitter",
    "watchdog.observers.read_directory_changes.WindowsApiEmitter"
  ],
  "watchdog.observers.api.EventEmitter.queue_event": [
    "watchdog.observers.fsevents.FSEventsEmitter",
    "watchdog.observers.kqueue.KqueueEmitter"
  ],
  "watchdog.observers.api.EventEmitter.queue_events": [
    "watchdog.observers.fsevents.FSEventsEmitter",
    "watchdog.observers.fsevents2.FSEventsEmitter",
    "watchdog.observers.inotify.InotifyEmitter",
    "watchdog.observers.kqueue.KqueueEmitter",
    "watchdog.observers.polling.PollingEmitter",
    "watchdog.observers.read_directory_changes.WindowsApiEmitter"
  ],
  "watchdog.observers.api.EventEmitter.run": [
    "watchdog.observers.fsevents.FSEventsEmitter"
  ],
  "watchdog.observers.inotify.InotifyEmitter.queue_events": [
    "watchdog.observers.inotify.InotifyFullEmitter"
  ],
  "watchdog.utils.BaseThread.__init__": [
    "watchdog.observers.api.EventDispatcher",
    "watchdog.observers.api.EventEmitter",
    "watchdog.observers.inotify_buffer.InotifyBuffer",
    "watchdog.utils.event_debouncer.EventDebouncer",
    "watchdog.utils.process_watcher.ProcessWatcher"
  ],
  "watchdog.utils.BaseThread.on_thread_start": [
    "watchdog.observers.fsevents.FSEventsEmitter",
    "watchdog.observers.inotify.InotifyEmitter",
    "watchdog.observers.polling.PollingEmitter",
    "watchdog.observers.read_directory_changes.WindowsApiEmitter"
  ],
  "watchdog.utils.BaseThread.on_thread_stop": [
    "watchdog.observers.api.BaseObserver",
    "watchdog.observers.fsevents.FSEventsEmitter",
    "watchdog.observers.fsevents2.FSEventsEmitter",
    "watchdog.observers.inotify.InotifyEmitter",
    "watchdog.observers.inotify_buffer.InotifyBuffer",
    "watchdog.observers.kqueue.KqueueEmitter",
    "watchdog.observers.read_directory_changes.WindowsApiEmitter"
  ],
  "watchdog.utils.BaseThread.start": [
    "watchdog.observers.api.BaseObserver"
  ],
  "watchdog.utils.BaseThread.stop": [
    "watchdog.observers.api.EventDispatcher",
    "watchdog.utils.event_debouncer.EventDebouncer"
  ],
  "watchdog.utils.dirsnapshot.DirectorySnapshot.__init__": [
    "watchdog.utils.dirsnapshot.EmptyDirectorySnapshot"
  ],
  "watchdog.utils.dirsnapshot.DirectorySnapshot.path": [
    "watchdog.utils.dirsnapshot.EmptyDirectorySnapshot"
  ],
  "watchdog.utils.dirsnapshot.DirectorySnapshot.paths": [
    "watchdog.utils.dirsnapshot.EmptyDirectorySnapshot"
  ],
  "weakref.ReferenceType.__call__": [
    "weakref.WeakMethod"
  ],
  "weakref.ReferenceType.__eq__": [
    "weakref.WeakMethod"
  ],
  "weakref.ReferenceType.__hash__": [
    "weakref.WeakMethod"
  ],
  "weakref.ReferenceType.__new__": [
    "weakref.KeyedRef",
    "weakref.WeakMethod"
  ],
  "webbrowser.BaseBrowser.__init__": [
    "webbrowser.GenericBrowser"
  ],
  "webbrowser.BaseBrowser.open": [
    "webbrowser.GenericBrowser",
    "webbrowser.Konqueror",
    "webbrowser.UnixBrowser"
  ],
  "websockets.asyncio.connection.Connection.__init__": [
    "websockets.asyncio.client.ClientConnection",
    "websockets.asyncio.server.ServerConnection"
  ],
  "websockets.asyncio.connection.Connection.connection_made": [
    "websockets.asyncio.server.ServerConnection"
  ],
  "websockets.asyncio.connection.Connection.process_event": [
    "websockets.asyncio.client.ClientConnection",
    "websockets.asyncio.server.ServerConnection"
  ],
  "websockets.client.ClientProtocol.__init__": [
    "websockets.client.ClientConnection"
  ],
  "websockets.exceptions.InvalidHeader.__init__": [
    "websockets.exceptions.InvalidHeaderFormat",
    "websockets.exceptions.InvalidOrigin"
  ],
  "websockets.extensions.base.ClientExtensionFactory.get_request_params": [
    "websockets.extensions.permessage_deflate.ClientPerMessageDeflateFactory"
  ],
  "websockets.extensions.base.ClientExtensionFactory.process_response_params": [
    "websockets.extensions.permessage_deflate.ClientPerMessageDeflateFactory"
  ],
  "websockets.extensions.base.Extension.decode": [
    "websockets.extensions.permessage_deflate.PerMessageDeflate"
  ],
  "websockets.extensions.base.Extension.encode": [
    "websockets.extensions.permessage_deflate.PerMessageDeflate"
  ],
  "websockets.extensions.base.ServerExtensionFactory.process_request_params": [
    "websockets.extensions.permessage_deflate.ServerPerMessageDeflateFactory"
  ],
  "websockets.legacy.protocol.WebSocketCommonProtocol.__init__": [
    "websockets.legacy.client.WebSocketClientProtocol",
    "websockets.legacy.server.WebSocketServerProtocol"
  ],
  "websockets.legacy.protocol.WebSocketCommonProtocol.connection_made": [
    "websockets.legacy.server.WebSocketServerProtocol"
  ],
  "websockets.legacy.server.WebSocketServerProtocol.__init__": [
    "websockets.legacy.auth.BasicAuthWebSocketServerProtocol"
  ],
  "websockets.legacy.server.WebSocketServerProtocol.process_request": [
    "websockets.legacy.auth.BasicAuthWebSocketServerProtocol"
  ],
  "websockets.protocol.Protocol.__init__": [
    "websockets.client.ClientProtocol",
    "websockets.server.ServerProtocol"
  ],
  "websockets.protocol.Protocol.parse": [
    "websockets.client.ClientProtocol",
    "websockets.server.ServerProtocol"
  ],
  "websockets.server.ServerProtocol.__init__": [
    "websockets.server.ServerConnection"
  ],
  "websockets.sync.connection.Connection.__init__": [
    "websockets.sync.client.ClientConnection",
    "websockets.sync.server.ServerConnection"
  ],
  "websockets.sync.connection.Connection.process_event": [
    "websockets.sync.client.ClientConnection",
    "websockets.sync.server.ServerConnection"
  ],
  "websockets.sync.connection.Connection.recv_events": [
    "websockets.sync.client.ClientConnection",
    "websockets.sync.server.ServerConnection"
  ],
  "werkzeug._internal._DictAccessorProperty.lookup": [
    "werkzeug.utils.environ_property",
    "werkzeug.utils.header_property"
  ],
  "werkzeug._reloader.ReloaderLoop.__enter__": [
    "werkzeug._reloader.StatReloaderLoop",
    "werkzeug._reloader.WatchdogReloaderLoop"
  ],
  "werkzeug._reloader.ReloaderLoop.__exit__": [
    "werkzeug._reloader.WatchdogReloaderLoop"
  ],
  "werkzeug._reloader.ReloaderLoop.__init__": [
    "werkzeug._reloader.WatchdogReloaderLoop"
  ],
  "werkzeug._reloader.ReloaderLoop.run": [
    "werkzeug._reloader.WatchdogReloaderLoop"
  ],
  "werkzeug._reloader.ReloaderLoop.run_step": [
    "werkzeug._reloader.StatReloaderLoop",
    "werkzeug._reloader.WatchdogReloaderLoop"
  ],
  "werkzeug._reloader.ReloaderLoop.trigger_reload": [
    "werkzeug._reloader.WatchdogReloaderLoop"
  ],
  "werkzeug.datastructures.accept.Accept._specificity": [
    "werkzeug.datastructures.accept.MIMEAccept"
  ],
  "werkzeug.datastructures.accept.Accept._value_matches": [
    "werkzeug.datastructures.accept.CharsetAccept",
    "werkzeug.datastructures.accept.LanguageAccept",
    "werkzeug.datastructures.accept.MIMEAccept"
  ],
  "werkzeug.datastructures.headers.Headers.__delitem__": [
    "werkzeug.datastructures.mixins.ImmutableHeadersMixin"
  ],
  "werkzeug.datastructures.headers.Headers.__getitem__": [
    "werkzeug.datastructures.headers.EnvironHeaders"
  ],
  "werkzeug.datastructures.headers.Headers.__iter__": [
    "werkzeug.datastructures.headers.EnvironHeaders"
  ],
  "werkzeug.datastructures.headers.Headers.__setitem__": [
    "werkzeug.datastructures.mixins.ImmutableHeadersMixin"
  ],
  "werkzeug.datastructures.headers.Headers.add": [
    "werkzeug.datastructures.mixins.ImmutableHeadersMixin"
  ],
  "werkzeug.datastructures.headers.Headers.add_header": [
    "werkzeug.datastructures.mixins.ImmutableHeadersMixin"
  ],
  "werkzeug.datastructures.headers.Headers.copy": [
    "werkzeug.datastructures.headers.EnvironHeaders"
  ],
  "werkzeug.datastructures.headers.Headers.extend": [
    "werkzeug.datastructures.mixins.ImmutableHeadersMixin"
  ],
  "werkzeug.datastructures.headers.Headers.pop": [
    "werkzeug.datastructures.mixins.ImmutableHeadersMixin"
  ],
  "werkzeug.datastructures.headers.Headers.popitem": [
    "werkzeug.datastructures.mixins.ImmutableHeadersMixin"
  ],
  "werkzeug.datastructures.headers.Headers.remove": [
    "werkzeug.datastructures.mixins.ImmutableHeadersMixin"
  ],
  "werkzeug.datastructures.headers.Headers.set": [
    "werkzeug.datastructures.mixins.ImmutableHeadersMixin"
  ],
  "werkzeug.datastructures.headers.Headers.setdefault": [
    "werkzeug.datastructures.mixins.ImmutableHeadersMixin"
  ],
  "werkzeug.datastructures.headers.Headers.setlist": [
    "werkzeug.datastructures.mixins.ImmutableHeadersMixin"
  ],
  "werkzeug.datastructures.headers.Headers.setlistdefault": [
    "werkzeug.datastructures.mixins.ImmutableHeadersMixin"
  ],
  "werkzeug.datastructures.headers.Headers.update": [
    "werkzeug.datastructures.mixins.ImmutableHeadersMixin"
  ],
  "werkzeug.datastructures.mixins.ImmutableDictMixin._iter_hashitems": [
    "werkzeug.datastructures.mixins.ImmutableMultiDictMixin"
  ],
  "werkzeug.datastructures.mixins.ImmutableDictMixin.fromkeys": [
    "werkzeug.datastructures.structures.CombinedMultiDict"
  ],
  "werkzeug.datastructures.mixins.ImmutableMultiDictMixin._iter_hashitems": [
    "werkzeug.datastructures.structures.ImmutableOrderedMultiDict"
  ],
  "werkzeug.datastructures.mixins.UpdateDictMixin.setdefault": [
    "flask.sessions.SecureCookieSession"
  ],
  "werkzeug.datastructures.structures.CallbackDict.__init__": [
    "flask.sessions.SecureCookieSession"
  ],
  "werkzeug.datastructures.structures.MultiDict.__copy__": [
    "werkzeug.datastructures.structures.ImmutableMultiDict",
    "werkzeug.datastructures.structures.ImmutableOrderedMultiDict"
  ],
  "werkzeug.datastructures.structures.MultiDict.__getitem__": [
    "werkzeug.datastructures.structures.CombinedMultiDict",
    "werkzeug.datastructures.structures.OrderedMultiDict"
  ],
  "werkzeug.datastructures.structures.MultiDict.__init__": [
    "werkzeug.datastructures.structures.OrderedMultiDict"
  ],
  "werkzeug.datastructures.structures.MultiDict.__setitem__": [
    "werkzeug.datastructures.structures.OrderedMultiDict"
  ],
  "werkzeug.datastructures.structures.MultiDict.add": [
    "werkzeug.datastructures.structures.OrderedMultiDict"
  ],
  "werkzeug.datastructures.structures.MultiDict.copy": [
    "werkzeug.datastructures.structures.CombinedMultiDict",
    "werkzeug.datastructures.structures.ImmutableMultiDict",
    "werkzeug.datastructures.structures.ImmutableOrderedMultiDict"
  ],
  "werkzeug.datastructures.structures.MultiDict.getlist": [
    "werkzeug.datastructures.structures.CombinedMultiDict",
    "werkzeug.datastructures.structures.OrderedMultiDict"
  ],
  "werkzeug.datastructures.structures.MultiDict.items": [
    "werkzeug.datastructures.structures.CombinedMultiDict",
    "werkzeug.datastructures.structures.OrderedMultiDict"
  ],
  "werkzeug.datastructures.structures.MultiDict.lists": [
    "werkzeug.datastructures.structures.CombinedMultiDict",
    "werkzeug.datastructures.structures.OrderedMultiDict"
  ],
  "werkzeug.datastructures.structures.MultiDict.listvalues": [
    "werkzeug.datastructures.structures.CombinedMultiDict",
    "werkzeug.datastructures.structures.OrderedMultiDict"
  ],
  "werkzeug.datastructures.structures.MultiDict.pop": [
    "werkzeug.datastructures.structures.OrderedMultiDict"
  ],
  "werkzeug.datastructures.structures.MultiDict.popitem": [
    "werkzeug.datastructures.structures.OrderedMultiDict"
  ],
  "werkzeug.datastructures.structures.MultiDict.popitemlist": [
    "werkzeug.datastructures.structures.OrderedMultiDict"
  ],
  "werkzeug.datastructures.structures.MultiDict.poplist": [
    "werkzeug.datastructures.structures.OrderedMultiDict"
  ],
  "werkzeug.datastructures.structures.MultiDict.setlist": [
    "werkzeug.datastructures.structures.OrderedMultiDict"
  ],
  "werkzeug.datastructures.structures.MultiDict.setlistdefault": [
    "werkzeug.datastructures.structures.OrderedMultiDict"
  ],
  "werkzeug.datastructures.structures.MultiDict.to_dict": [
    "werkzeug.datastructures.structures.CombinedMultiDict"
  ],
  "werkzeug.datastructures.structures.MultiDict.update": [
    "werkzeug.datastructures.structures.OrderedMultiDict"
  ],
  "werkzeug.datastructures.structures.MultiDict.values": [
    "werkzeug.datastructures.structures.CombinedMultiDict",
    "werkzeug.datastructures.structures.OrderedMultiDict"
  ],
  "werkzeug.datastructures.structures.TypeConversionDict.get": [
    "werkzeug.datastructures.structures.CombinedMultiDict"
  ],
  "werkzeug.exceptions.BadRequest.description": [
    "werkzeug.exceptions.BadRequestKeyError"
  ],
  "werkzeug.exceptions.BadRequest.description@setter": [
    "werkzeug.exceptions.BadRequestKeyError"
  ],
  "werkzeug.exceptions.HTTPException.__init__": [
    "werkzeug.exceptions.InternalServerError",
    "werkzeug.exceptions.MethodNotAllowed",
    "werkzeug.exceptions.RequestedRangeNotSatisfiable",
    "werkzeug.exceptions.Unauthorized",
    "werkzeug.exceptions._RetryAfter",
    "werkzeug.routing.exceptions.RequestRedirect"
  ],
  "werkzeug.exceptions.HTTPException.get_headers": [
    "werkzeug.exceptions.MethodNotAllowed",
    "werkzeug.exceptions.RequestedRangeNotSatisfiable",
    "werkzeug.exceptions.Unauthorized",
    "werkzeug.exceptions._RetryAfter"
  ],
  "werkzeug.exceptions.HTTPException.get_response": [
    "werkzeug.routing.exceptions.RequestRedirect"
  ],
  "werkzeug.local._ProxyLookup.__init__": [
    "werkzeug.local._ProxyIOp"
  ],
  "werkzeug.routing.converters.BaseConverter.__init__": [
    "werkzeug.routing.converters.AnyConverter",
    "werkzeug.routing.converters.NumberConverter",
    "werkzeug.routing.converters.UnicodeConverter"
  ],
  "werkzeug.routing.converters.BaseConverter.to_python": [
    "werkzeug.routing.converters.NumberConverter",
    "werkzeug.routing.converters.UUIDConverter"
  ],
  "werkzeug.routing.converters.BaseConverter.to_url": [
    "werkzeug.routing.converters.AnyConverter",
    "werkzeug.routing.converters.NumberConverter",
    "werkzeug.routing.converters.UUIDConverter"
  ],
  "werkzeug.routing.converters.NumberConverter.__init__": [
    "werkzeug.routing.converters.FloatConverter"
  ],
  "werkzeug.routing.rules.RuleFactory.get_rules": [
    "werkzeug.routing.rules.EndpointPrefix",
    "werkzeug.routing.rules.Rule",
    "werkzeug.routing.rules.RuleTemplateFactory",
    "werkzeug.routing.rules.Subdomain",
    "werkzeug.routing.rules.Submount"
  ],
  "werkzeug.sansio.request.Request.__init__": [
    "werkzeug.wrappers.request.Request"
  ],
  "werkzeug.sansio.response.Response.__init__": [
    "werkzeug.wrappers.response.Response"
  ],
  "werkzeug.sansio.response.Response.__repr__": [
    "werkzeug.wrappers.response.Response"
  ],
  "werkzeug.sansio.response.Response.max_cookie_size": [
    "flask.wrappers.Response"
  ],
  "werkzeug.test.Client.__init__": [
    "flask.testing.FlaskClient"
  ],
  "werkzeug.test.Client.open": [
    "flask.testing.FlaskClient"
  ],
  "werkzeug.test.EnvironBuilder.__init__": [
    "flask.testing.EnvironBuilder"
  ],
  "werkzeug.test.EnvironBuilder.json_dumps": [
    "flask.testing.EnvironBuilder"
  ],
  "werkzeug.urls.BaseURL.__str__": [
    "werkzeug.urls.BytesURL"
  ],
  "werkzeug.urls.BaseURL.encode_netloc": [
    "werkzeug.urls.BytesURL"
  ],
  "werkzeug.urls._URLTuple.__new__": [
    "werkzeug.urls.BaseURL"
  ],
  "werkzeug.utils.cached_property.__delete__": [
    "flask.helpers.locked_cached_property"
  ],
  "werkzeug.utils.cached_property.__get__": [
    "flask.helpers.locked_cached_property"
  ],
  "werkzeug.utils.cached_property.__init__": [
    "flask.helpers.locked_cached_property"
  ],
  "werkzeug.utils.cached_property.__set__": [
    "flask.helpers.locked_cached_property"
  ],
  "werkzeug.wrappers.request.Request._load_form_data": [
    "flask.wrappers.Request"
  ],
  "werkzeug.wrappers.request.Request.max_content_length": [
    "flask.wrappers.Request"
  ],
  "werkzeug.wrappers.request.Request.on_json_loading_failed": [
    "flask.wrappers.Request"
  ],
  "werkzeug.wrappers.response.Response.__init__": [
    "werkzeug.test.TestResponse"
  ],
  "wsgiref.handlers.BaseHandler._flush": [
    "wsgiref.handlers.SimpleHandler"
  ],
  "wsgiref.handlers.BaseHandler._write": [
    "wsgiref.handlers.SimpleHandler"
  ],
  "wsgiref.handlers.BaseHandler.add_cgi_vars": [
    "wsgiref.handlers.SimpleHandler"
  ],
  "wsgiref.handlers.BaseHandler.get_stderr": [
    "wsgiref.handlers.SimpleHandler"
  ],
  "wsgiref.handlers.BaseHandler.get_stdin": [
    "wsgiref.handlers.SimpleHandler"
  ],
  "xml.dom.expatbuilder.ExpatBuilder.__init__": [
    "xml.dom.expatbuilder.FragmentBuilder"
  ],
  "xml.dom.expatbuilder.ExpatBuilder.end_doctype_decl_handler": [
    "xml.dom.expatbuilder.InternalSubsetExtractor"
  ],
  "xml.dom.expatbuilder.ExpatBuilder.parseFile": [
    "xml.dom.expatbuilder.InternalSubsetExtractor"
  ],
  "xml.dom.expatbuilder.ExpatBuilder.parseString": [
    "xml.dom.expatbuilder.InternalSubsetExtractor"
  ],
  "xml.dom.expatbuilder.ExpatBuilder.start_doctype_decl_handler": [
    "xml.dom.expatbuilder.InternalSubsetExtractor"
  ],
  "xml.dom.expatbuilder.ExpatBuilder.start_element_handler": [
    "xml.dom.expatbuilder.InternalSubsetExtractor"
  ],
  "xml.dom.minidom.CharacterData.__init__": [
    "xml.dom.minidom.Comment"
  ],
  "xml.dom.minidom.Node.appendChild": [
    "xml.dom.minidom.Document",
    "xml.dom.minidom.Entity"
  ],
  "xml.dom.minidom.Node.cloneNode": [
    "xml.dom.minidom.Document",
    "xml.dom.minidom.DocumentType"
  ],
  "xml.dom.minidom.Node.insertBefore": [
    "xml.dom.minidom.Entity"
  ],
  "xml.dom.minidom.Node.isSupported": [
    "xml.dom.minidom.Document"
  ],
  "xml.dom.minidom.Node.removeChild": [
    "xml.dom.minidom.Document",
    "xml.dom.minidom.Entity"
  ],
  "xml.dom.minidom.Node.replaceChild": [
    "xml.dom.minidom.Entity"
  ],
  "xml.dom.minidom.Node.unlink": [
    "xml.dom.minidom.Attr",
    "xml.dom.minidom.Document",
    "xml.dom.minidom.Element"
  ],
  "xml.dom.minidom.Text.writexml": [
    "xml.dom.minidom.CDATASection"
  ],
  "xml.dom.pulldom.PullDOM.characters": [
    "xml.dom.pulldom.SAX2DOM"
  ],
  "xml.dom.pulldom.PullDOM.ignorableWhitespace": [
    "xml.dom.pulldom.SAX2DOM"
  ],
  "xml.dom.pulldom.PullDOM.processingInstruction": [
    "xml.dom.pulldom.SAX2DOM"
  ],
  "xml.dom.pulldom.PullDOM.startElement": [
    "xml.dom.pulldom.SAX2DOM"
  ],
  "xml.dom.pulldom.PullDOM.startElementNS": [
    "xml.dom.pulldom.SAX2DOM"
  ],
  "xml.sax._exceptions.SAXException.__init__": [
    "xml.sax._exceptions.SAXParseException"
  ],
  "xml.sax.handler.ContentHandler.characters": [
    "xml.dom.pulldom.PullDOM",
    "xml.sax.saxutils.XMLGenerator"
  ],
  "xml.sax.handler.ContentHandler.endDocument": [
    "xml.dom.pulldom.PullDOM",
    "xml.sax.saxutils.XMLGenerator"
  ],
  "xml.sax.handler.ContentHandler.endElement": [
    "xml.dom.pulldom.PullDOM",
    "xml.sax.saxutils.XMLGenerator"
  ],
  "xml.sax.handler.ContentHandler.endElementNS": [
    "xml.dom.pulldom.PullDOM",
    "xml.sax.saxutils.XMLGenerator"
  ],
  "xml.sax.handler.ContentHandler.endPrefixMapping": [
    "xml.dom.pulldom.PullDOM",
    "xml.sax.saxutils.XMLGenerator"
  ],
  "xml.sax.handler.ContentHandler.ignorableWhitespace": [
    "xml.dom.pulldom.PullDOM",
    "xml.sax.saxutils.XMLGenerator"
  ],
  "xml.sax.handler.ContentHandler.processingInstruction": [
    "xml.dom.pulldom.PullDOM",
    "xml.sax.saxutils.XMLGenerator"
  ],
  "xml.sax.handler.ContentHandler.setDocumentLocator": [
    "xml.dom.pulldom.PullDOM"
  ],
  "xml.sax.handler.ContentHandler.startDocument": [
    "xml.dom.pulldom.PullDOM",
    "xml.sax.saxutils.XMLGenerator"
  ],
  "xml.sax.handler.ContentHandler.startElement": [
    "xml.dom.pulldom.PullDOM",
    "xml.sax.saxutils.XMLGenerator"
  ],
  "xml.sax.handler.ContentHandler.startElementNS": [
    "xml.dom.pulldom.PullDOM",
    "xml.sax.saxutils.XMLGenerator"
  ],
  "xml.sax.handler.ContentHandler.startPrefixMapping": [
    "xml.dom.pulldom.PullDOM",
    "xml.sax.saxutils.XMLGenerator"
  ],
  "xml.sax.xmlreader.AttributesImpl.__contains__": [
    "xml.sax.xmlreader.AttributesNSImpl"
  ],
  "xml.sax.xmlreader.AttributesImpl.__getitem__": [
    "xml.sax.xmlreader.AttributesNSImpl"
  ],
  "xml.sax.xmlreader.AttributesImpl.__init__": [
    "xml.sax.xmlreader.AttributesNSImpl"
  ],
  "xml.sax.xmlreader.AttributesImpl.get": [
    "xml.sax.xmlreader.AttributesNSImpl"
  ],
  "xml.sax.xmlreader.AttributesImpl.getNameByQName": [
    "xml.sax.xmlreader.AttributesNSImpl"
  ],
  "xml.sax.xmlreader.AttributesImpl.getNames": [
    "xml.sax.xmlreader.AttributesNSImpl"
  ],
  "xml.sax.xmlreader.AttributesImpl.getQNameByName": [
    "xml.sax.xmlreader.AttributesNSImpl"
  ],
  "xml.sax.xmlreader.AttributesImpl.getType": [
    "xml.sax.xmlreader.AttributesNSImpl"
  ],
  "xml.sax.xmlreader.AttributesImpl.getValue": [
    "xml.sax.xmlreader.AttributesNSImpl"
  ],
  "xml.sax.xmlreader.AttributesImpl.items": [
    "xml.sax.xmlreader.AttributesNSImpl"
  ],
  "xml.sax.xmlreader.AttributesImpl.keys": [
    "xml.sax.xmlreader.AttributesNSImpl"
  ],
  "xml.sax.xmlreader.XMLReader.getFeature": [
    "xml.sax.saxutils.XMLFilterBase"
  ],
  "xml.sax.xmlreader.XMLReader.getProperty": [
    "xml.sax.saxutils.XMLFilterBase"
  ],
  "xml.sax.xmlreader.XMLReader.parse": [
    "xml.sax.saxutils.XMLFilterBase",
    "xml.sax.xmlreader.IncrementalParser"
  ],
  "xml.sax.xmlreader.XMLReader.setFeature": [
    "xml.sax.saxutils.XMLFilterBase"
  ],
  "xml.sax.xmlreader.XMLReader.setLocale": [
    "xml.sax.saxutils.XMLFilterBase"
  ],
  "xml.sax.xmlreader.XMLReader.setProperty": [
    "xml.sax.saxutils.XMLFilterBase"
  ],
  "xmlrpc.client.SafeTransport.__init__": [
    "pip._vendor.distlib.util.SafeTransport"
  ],
  "xmlrpc.client.SafeTransport.make_connection": [
    "pip._vendor.distlib.util.SafeTransport"
  ],
  "xmlrpc.client.ServerProxy.__init__": [
    "pip._vendor.distlib.util.ServerProxy"
  ],
  "xmlrpc.client.Transport.__init__": [
    "pip._internal.network.xmlrpc.PipXmlrpcTransport",
    "pip._vendor.distlib.util.Transport",
    "xmlrpc.client.SafeTransport"
  ],
  "xmlrpc.client.Transport.make_connection": [
    "pip._vendor.distlib.util.Transport",
    "xmlrpc.client.SafeTransport"
  ],
  "xmlrpc.client.Transport.request": [
    "pip._internal.network.xmlrpc.PipXmlrpcTransport"
  ],
  "xmlrpc.server.CGIXMLRPCRequestHandler.__init__": [
    "xmlrpc.server.DocCGIXMLRPCRequestHandler"
  ],
  "xmlrpc.server.SimpleXMLRPCDispatcher.__init__": [
    "xmlrpc.server.CGIXMLRPCRequestHandler"
  ],
  "xmlrpc.server.SimpleXMLRPCServer.__init__": [
    "xmlrpc.server.DocXMLRPCServer",
    "xmlrpc.server.MultiPathXMLRPCServer"
  ],
  "yaml._yaml.CEmitter.__init__": [
    "yaml.cyaml.CBaseDumper",
    "yaml.cyaml.CDumper"
  ],
  "yaml._yaml.CParser.__init__": [
    "yaml.cyaml.CBaseLoader",
    "yaml.cyaml.CFullLoader",
    "yaml.cyaml.CLoader",
    "yaml.cyaml.CSafeLoader",
    "yaml.cyaml.CUnsafeLoader"
  ],
  "yaml.constructor.BaseConstructor.construct_mapping": [
    "yaml.constructor.SafeConstructor"
  ],
  "yaml.constructor.BaseConstructor.construct_scalar": [
    "yaml.constructor.SafeConstructor"
  ],
  "yaml.constructor.FullConstructor.find_python_module": [
    "yaml.constructor.UnsafeConstructor"
  ],
  "yaml.constructor.FullConstructor.find_python_name": [
    "yaml.constructor.UnsafeConstructor"
  ],
  "yaml.constructor.FullConstructor.make_python_instance": [
    "yaml.constructor.UnsafeConstructor"
  ],
  "yaml.constructor.FullConstructor.set_python_instance_state": [
    "yaml.constructor.UnsafeConstructor"
  ],
  "yaml.emitter.Emitter.__init__": [
    "yaml.dumper.BaseDumper",
    "yaml.dumper.Dumper",
    "yaml.dumper.SafeDumper"
  ],
  "yaml.events.Event.__init__": [
    "yaml.events.DocumentEndEvent",
    "yaml.events.DocumentStartEvent",
    "yaml.events.NodeEvent",
    "yaml.events.StreamStartEvent"
  ],
  "yaml.events.NodeEvent.__init__": [
    "yaml.events.CollectionStartEvent",
    "yaml.events.ScalarEvent"
  ],
  "yaml.nodes.Node.__init__": [
    "yaml.nodes.CollectionNode",
    "yaml.nodes.ScalarNode"
  ],
  "yaml.reader.Reader.__init__": [
    "yaml.loader.BaseLoader",
    "yaml.loader.FullLoader",
    "yaml.loader.Loader",
    "yaml.loader.SafeLoader",
    "yaml.loader.UnsafeLoader"
  ],
  "yaml.representer.BaseRepresenter.ignore_aliases": [
    "yaml.representer.SafeRepresenter"
  ],
  "yaml.tokens.Token.__init__": [
    "yaml.tokens.AliasToken",
    "yaml.tokens.AnchorToken",
    "yaml.tokens.DirectiveToken",
    "yaml.tokens.ScalarToken",
    "yaml.tokens.StreamStartToken",
    "yaml.tokens.TagToken"
  ],
  "zipfile.ZipExtFile.__init__": [
    "pip._vendor.distlib.compat.ZipExtFile"
  ],
  "zipfile.ZipFile.__enter__": [
    "pip._vendor.distlib.compat.ZipFile"
  ],
  "zipfile.ZipFile.__exit__": [
    "pip._vendor.distlib.compat.ZipFile"
  ],
  "zipfile.ZipFile.__init__": [
    "zipfile.PyZipFile"
  ],
  "zipfile.ZipFile.open": [
    "pip._vendor.distlib.compat.ZipFile"
  ]
}